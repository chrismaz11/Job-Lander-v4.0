{
  "version": "48.0.0",
  "artifacts": {
    "JobLanderDev.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "JobLanderDev.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "JobLanderDev": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://817977749885/us-east-1",
      "properties": {
        "templateFile": "JobLanderDev.template.json",
        "terminationProtection": false,
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::817977749885:role/cdk-hnb659fds-deploy-role-817977749885-us-east-1",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::817977749885:role/cdk-hnb659fds-cfn-exec-role-817977749885-us-east-1",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-817977749885-us-east-1/7d408115a09fee8f1234f7729512c20876bef1cee7e1da6b80793f1cbf60d500.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "JobLanderDev.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::817977749885:role/cdk-hnb659fds-lookup-role-817977749885-us-east-1",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "JobLanderDev.assets"
      ],
      "metadata": {
        "/JobLanderDev/UploadsBucket/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UploadsBucket5E5E9B64"
          }
        ],
        "/JobLanderDev/UploadsBucket/Policy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UploadsBucketPolicy34A32B0B"
          }
        ],
        "/JobLanderDev/UploadsBucket/AutoDeleteObjectsCustomResource/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UploadsBucketAutoDeleteObjectsCustomResourceFFD11C72"
          }
        ],
        "/JobLanderDev/Custom::S3AutoDeleteObjectsCustomResourceProvider": [
          {
            "type": "aws:cdk:is-custom-resource-handler-customResourceProvider",
            "data": true
          }
        ],
        "/JobLanderDev/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
          }
        ],
        "/JobLanderDev/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F"
          }
        ],
        "/JobLanderDev/DBSecret/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DBSecretD58955BC"
          }
        ],
        "/JobLanderDev/DBSecret/Attachment/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DBSecretAttachmentC565A14F"
          }
        ],
        "/JobLanderDev/DBSecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DBSecurityGroupE3B245A3"
          }
        ],
        "/JobLanderDev/Database/SubnetGroup/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DatabaseSubnetGroup7D60F180"
          }
        ],
        "/JobLanderDev/Database/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DatabaseB269D8BB"
          }
        ],
        "/JobLanderDev/JobLanderCluster/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "JobLanderCluster9A38F0EB"
          }
        ],
        "/JobLanderDev/ALB/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ALBAEE750D2"
          }
        ],
        "/JobLanderDev/ALB/SecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ALBSecurityGroup8B8624F8"
          }
        ],
        "/JobLanderDev/ALB/SecurityGroup/to JobLanderDevECSSecurityGroupDE5CB21A:5000": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ALBSecurityGrouptoJobLanderDevECSSecurityGroupDE5CB21A5000B6D5D973"
          }
        ],
        "/JobLanderDev/ALB/Listener/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ALBListener3B99FF85"
          }
        ],
        "/JobLanderDev/LogGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LogGroupF5B46931"
          }
        ],
        "/JobLanderDev/TaskDef/TaskRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TaskDefTaskRole1EDB4A67"
          }
        ],
        "/JobLanderDev/TaskDef/TaskRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TaskDefTaskRoleDefaultPolicyA592CB18"
          }
        ],
        "/JobLanderDev/TaskDef/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TaskDef54694570"
          }
        ],
        "/JobLanderDev/TaskDef/ExecutionRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TaskDefExecutionRoleB4775C97"
          }
        ],
        "/JobLanderDev/TaskDef/ExecutionRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TaskDefExecutionRoleDefaultPolicy0DBB737A"
          }
        ],
        "/JobLanderDev/ECSSecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ECSSecurityGroupA14DBE7D"
          }
        ],
        "/JobLanderDev/ECSSecurityGroup/from JobLanderDevALBSecurityGroup786EAF25:5000": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ECSSecurityGroupfromJobLanderDevALBSecurityGroup786EAF255000AA01EC89"
          }
        ],
        "/JobLanderDev/Service": [
          {
            "type": "aws:cdk:warning",
            "data": "minHealthyPercent has not been configured so the default value of 50% is used. The number of running tasks will decrease below the desired count during deployments etc. See https://github.com/aws/aws-cdk/issues/31705 [ack: @aws-cdk/aws-ecs:minHealthyPercent]",
            "trace": [
              "Annotations.addMessage (/Users/christopher/Downloads/Job-Lander-V3.1/infrastructure/node_modules/aws-cdk-lib/core/lib/annotations.js:1:1978)",
              "Annotations.addWarningV2 (/Users/christopher/Downloads/Job-Lander-V3.1/infrastructure/node_modules/aws-cdk-lib/core/lib/annotations.js:1:896)",
              "new BaseService (/Users/christopher/Downloads/Job-Lander-V3.1/infrastructure/node_modules/aws-cdk-lib/aws-ecs/lib/base/base-service.js:1:8444)",
              "new FargateService2 (/Users/christopher/Downloads/Job-Lander-V3.1/infrastructure/node_modules/aws-cdk-lib/aws-ecs/lib/fargate/fargate-service.js:1:3961)",
              "new FargateService2 (/Users/christopher/Downloads/Job-Lander-V3.1/infrastructure/node_modules/aws-cdk-lib/core/lib/prop-injectable.js:1:488)",
              "new JobLanderStack (/Users/christopher/Downloads/Job-Lander-V3.1/infrastructure/lib/job-lander-stack.ts:253:21)",
              "Object.<anonymous> (/Users/christopher/Downloads/Job-Lander-V3.1/infrastructure/bin/infrastructure.ts:14:1)",
              "Module._compile (node:internal/modules/cjs/loader:1760:14)",
              "Module.m._compile (/Users/christopher/.npm/_npx/1bf7c3c15bf47d04/node_modules/ts-node/src/index.ts:1618:23)",
              "node:internal/modules/cjs/loader:1893:10",
              "Object.require.extensions.<computed> [as .ts] (/Users/christopher/.npm/_npx/1bf7c3c15bf47d04/node_modules/ts-node/src/index.ts:1621:12)",
              "Module.load (node:internal/modules/cjs/loader:1480:32)",
              "Module._load (node:internal/modules/cjs/loader:1299:12)",
              "TracingChannel.traceSync (node:diagnostics_channel:328:14)",
              "wrapModuleLoad (node:internal/modules/cjs/loader:244:24)",
              "Module.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:154:5)",
              "phase4 (/Users/christopher/.npm/_npx/1bf7c3c15bf47d04/node_modules/ts-node/src/bin.ts:649:14)",
              "bootstrap (/Users/christopher/.npm/_npx/1bf7c3c15bf47d04/node_modules/ts-node/src/bin.ts:95:10)",
              "main (/Users/christopher/.npm/_npx/1bf7c3c15bf47d04/node_modules/ts-node/src/bin.ts:55:10)",
              "Object.<anonymous> (/Users/christopher/.npm/_npx/1bf7c3c15bf47d04/node_modules/ts-node/src/bin.ts:800:3)",
              "Module._compile (node:internal/modules/cjs/loader:1760:14)",
              "Object.<anonymous> (node:internal/modules/cjs/loader:1893:10)",
              "Module.load (node:internal/modules/cjs/loader:1480:32)",
              "Module._load (node:internal/modules/cjs/loader:1299:12)",
              "TracingChannel.traceSync (node:diagnostics_channel:328:14)",
              "wrapModuleLoad (node:internal/modules/cjs/loader:244:24)",
              "Module.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:154:5)",
              "node:internal/main/run_main_module:33:47"
            ]
          }
        ],
        "/JobLanderDev/Service/Service": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ServiceD69D759B"
          }
        ],
        "/JobLanderDev/TargetGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TargetGroup3D7CD9B8"
          }
        ],
        "/JobLanderDev/Distribution/Origin2/S3Origin/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DistributionOrigin2S3OriginE484D4BF"
          }
        ],
        "/JobLanderDev/Distribution/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "Distribution830FAC52"
          }
        ],
        "/JobLanderDev/LoadBalancerDNS": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LoadBalancerDNS"
          }
        ],
        "/JobLanderDev/CloudFrontURL": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CloudFrontURL"
          }
        ],
        "/JobLanderDev/DatabaseEndpoint": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DatabaseEndpoint"
          }
        ],
        "/JobLanderDev/ECRRepositoryURI": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ECRRepositoryURI"
          }
        ],
        "/JobLanderDev/UploadsBucketName": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UploadsBucketName"
          }
        ],
        "/JobLanderDev/ClusterName": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ClusterName"
          }
        ],
        "/JobLanderDev/ServiceName": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ServiceName"
          }
        ],
        "/JobLanderDev/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/JobLanderDev/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/JobLanderDev/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "JobLanderDev"
    },
    "JobLanderStaging.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "JobLanderStaging.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "JobLanderStaging": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://817977749885/us-east-1",
      "properties": {
        "templateFile": "JobLanderStaging.template.json",
        "terminationProtection": false,
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::817977749885:role/cdk-hnb659fds-deploy-role-817977749885-us-east-1",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::817977749885:role/cdk-hnb659fds-cfn-exec-role-817977749885-us-east-1",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-817977749885-us-east-1/e8bbd68e87a4e430b49423dad31498aa6633a73659f01cb530ff9b06a2d32db0.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "JobLanderStaging.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::817977749885:role/cdk-hnb659fds-lookup-role-817977749885-us-east-1",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "JobLanderStaging.assets"
      ],
      "metadata": {
        "/JobLanderStaging/UploadsBucket/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UploadsBucket5E5E9B64"
          }
        ],
        "/JobLanderStaging/UploadsBucket/Policy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UploadsBucketPolicy34A32B0B"
          }
        ],
        "/JobLanderStaging/UploadsBucket/AutoDeleteObjectsCustomResource/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UploadsBucketAutoDeleteObjectsCustomResourceFFD11C72"
          }
        ],
        "/JobLanderStaging/Custom::S3AutoDeleteObjectsCustomResourceProvider": [
          {
            "type": "aws:cdk:is-custom-resource-handler-customResourceProvider",
            "data": true
          }
        ],
        "/JobLanderStaging/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
          }
        ],
        "/JobLanderStaging/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F"
          }
        ],
        "/JobLanderStaging/DBSecret/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DBSecretD58955BC"
          }
        ],
        "/JobLanderStaging/DBSecret/Attachment/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DBSecretAttachmentC565A14F"
          }
        ],
        "/JobLanderStaging/DBSecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DBSecurityGroupE3B245A3"
          }
        ],
        "/JobLanderStaging/Database/SubnetGroup/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DatabaseSubnetGroup7D60F180"
          }
        ],
        "/JobLanderStaging/Database/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DatabaseB269D8BB"
          }
        ],
        "/JobLanderStaging/JobLanderCluster/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "JobLanderCluster9A38F0EB"
          }
        ],
        "/JobLanderStaging/ALB/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ALBAEE750D2"
          }
        ],
        "/JobLanderStaging/ALB/SecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ALBSecurityGroup8B8624F8"
          }
        ],
        "/JobLanderStaging/ALB/SecurityGroup/to JobLanderStagingECSSecurityGroupEFA3FD2E:5000": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ALBSecurityGrouptoJobLanderStagingECSSecurityGroupEFA3FD2E50009D12A5DF"
          }
        ],
        "/JobLanderStaging/ALB/Listener/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ALBListener3B99FF85"
          }
        ],
        "/JobLanderStaging/LogGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LogGroupF5B46931"
          }
        ],
        "/JobLanderStaging/TaskDef/TaskRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TaskDefTaskRole1EDB4A67"
          }
        ],
        "/JobLanderStaging/TaskDef/TaskRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TaskDefTaskRoleDefaultPolicyA592CB18"
          }
        ],
        "/JobLanderStaging/TaskDef/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TaskDef54694570"
          }
        ],
        "/JobLanderStaging/TaskDef/ExecutionRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TaskDefExecutionRoleB4775C97"
          }
        ],
        "/JobLanderStaging/TaskDef/ExecutionRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TaskDefExecutionRoleDefaultPolicy0DBB737A"
          }
        ],
        "/JobLanderStaging/ECSSecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ECSSecurityGroupA14DBE7D"
          }
        ],
        "/JobLanderStaging/ECSSecurityGroup/from JobLanderStagingALBSecurityGroup821A78DE:5000": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ECSSecurityGroupfromJobLanderStagingALBSecurityGroup821A78DE50009DBD6631"
          }
        ],
        "/JobLanderStaging/Service": [
          {
            "type": "aws:cdk:warning",
            "data": "minHealthyPercent has not been configured so the default value of 50% is used. The number of running tasks will decrease below the desired count during deployments etc. See https://github.com/aws/aws-cdk/issues/31705 [ack: @aws-cdk/aws-ecs:minHealthyPercent]",
            "trace": [
              "Annotations.addMessage (/Users/christopher/Downloads/Job-Lander-V3.1/infrastructure/node_modules/aws-cdk-lib/core/lib/annotations.js:1:1978)",
              "Annotations.addWarningV2 (/Users/christopher/Downloads/Job-Lander-V3.1/infrastructure/node_modules/aws-cdk-lib/core/lib/annotations.js:1:896)",
              "new BaseService (/Users/christopher/Downloads/Job-Lander-V3.1/infrastructure/node_modules/aws-cdk-lib/aws-ecs/lib/base/base-service.js:1:8444)",
              "new FargateService2 (/Users/christopher/Downloads/Job-Lander-V3.1/infrastructure/node_modules/aws-cdk-lib/aws-ecs/lib/fargate/fargate-service.js:1:3961)",
              "new FargateService2 (/Users/christopher/Downloads/Job-Lander-V3.1/infrastructure/node_modules/aws-cdk-lib/core/lib/prop-injectable.js:1:488)",
              "new JobLanderStack (/Users/christopher/Downloads/Job-Lander-V3.1/infrastructure/lib/job-lander-stack.ts:253:21)",
              "Object.<anonymous> (/Users/christopher/Downloads/Job-Lander-V3.1/infrastructure/bin/infrastructure.ts:24:1)",
              "Module._compile (node:internal/modules/cjs/loader:1760:14)",
              "Module.m._compile (/Users/christopher/.npm/_npx/1bf7c3c15bf47d04/node_modules/ts-node/src/index.ts:1618:23)",
              "node:internal/modules/cjs/loader:1893:10",
              "Object.require.extensions.<computed> [as .ts] (/Users/christopher/.npm/_npx/1bf7c3c15bf47d04/node_modules/ts-node/src/index.ts:1621:12)",
              "Module.load (node:internal/modules/cjs/loader:1480:32)",
              "Module._load (node:internal/modules/cjs/loader:1299:12)",
              "TracingChannel.traceSync (node:diagnostics_channel:328:14)",
              "wrapModuleLoad (node:internal/modules/cjs/loader:244:24)",
              "Module.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:154:5)",
              "phase4 (/Users/christopher/.npm/_npx/1bf7c3c15bf47d04/node_modules/ts-node/src/bin.ts:649:14)",
              "bootstrap (/Users/christopher/.npm/_npx/1bf7c3c15bf47d04/node_modules/ts-node/src/bin.ts:95:10)",
              "main (/Users/christopher/.npm/_npx/1bf7c3c15bf47d04/node_modules/ts-node/src/bin.ts:55:10)",
              "Object.<anonymous> (/Users/christopher/.npm/_npx/1bf7c3c15bf47d04/node_modules/ts-node/src/bin.ts:800:3)",
              "Module._compile (node:internal/modules/cjs/loader:1760:14)",
              "Object.<anonymous> (node:internal/modules/cjs/loader:1893:10)",
              "Module.load (node:internal/modules/cjs/loader:1480:32)",
              "Module._load (node:internal/modules/cjs/loader:1299:12)",
              "TracingChannel.traceSync (node:diagnostics_channel:328:14)",
              "wrapModuleLoad (node:internal/modules/cjs/loader:244:24)",
              "Module.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:154:5)",
              "node:internal/main/run_main_module:33:47"
            ]
          }
        ],
        "/JobLanderStaging/Service/Service": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ServiceD69D759B"
          }
        ],
        "/JobLanderStaging/Service/TaskCount/Target/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ServiceTaskCountTarget23E25614"
          }
        ],
        "/JobLanderStaging/Service/TaskCount/Target/CpuScaling/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ServiceTaskCountTargetCpuScalingCC8A5DF6"
          }
        ],
        "/JobLanderStaging/Service/TaskCount/Target/MemoryScaling/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ServiceTaskCountTargetMemoryScalingEA4B07C8"
          }
        ],
        "/JobLanderStaging/TargetGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TargetGroup3D7CD9B8"
          }
        ],
        "/JobLanderStaging/Distribution/Origin2/S3Origin/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DistributionOrigin2S3OriginE484D4BF"
          }
        ],
        "/JobLanderStaging/Distribution/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "Distribution830FAC52"
          }
        ],
        "/JobLanderStaging/LoadBalancerDNS": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LoadBalancerDNS"
          }
        ],
        "/JobLanderStaging/CloudFrontURL": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CloudFrontURL"
          }
        ],
        "/JobLanderStaging/DatabaseEndpoint": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DatabaseEndpoint"
          }
        ],
        "/JobLanderStaging/ECRRepositoryURI": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ECRRepositoryURI"
          }
        ],
        "/JobLanderStaging/UploadsBucketName": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UploadsBucketName"
          }
        ],
        "/JobLanderStaging/ClusterName": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ClusterName"
          }
        ],
        "/JobLanderStaging/ServiceName": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ServiceName"
          }
        ],
        "/JobLanderStaging/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/JobLanderStaging/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/JobLanderStaging/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "JobLanderStaging"
    },
    "JobLanderProd.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "JobLanderProd.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "JobLanderProd": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://817977749885/us-east-1",
      "properties": {
        "templateFile": "JobLanderProd.template.json",
        "terminationProtection": false,
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::817977749885:role/cdk-hnb659fds-deploy-role-817977749885-us-east-1",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::817977749885:role/cdk-hnb659fds-cfn-exec-role-817977749885-us-east-1",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-817977749885-us-east-1/21bcc395b5c17ffe9a6b7ac1b3fef499fd93edeaca59fc184a3ad2aed8669351.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "JobLanderProd.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::817977749885:role/cdk-hnb659fds-lookup-role-817977749885-us-east-1",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "JobLanderProd.assets"
      ],
      "metadata": {
        "/JobLanderProd/UploadsBucket/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UploadsBucket5E5E9B64"
          }
        ],
        "/JobLanderProd/UploadsBucket/Policy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UploadsBucketPolicy34A32B0B"
          }
        ],
        "/JobLanderProd/DBSecret/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DBSecretD58955BC"
          }
        ],
        "/JobLanderProd/DBSecret/Attachment/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DBSecretAttachmentC565A14F"
          }
        ],
        "/JobLanderProd/DBSecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DBSecurityGroupE3B245A3"
          }
        ],
        "/JobLanderProd/Database/SubnetGroup/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DatabaseSubnetGroup7D60F180"
          }
        ],
        "/JobLanderProd/Database/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DatabaseB269D8BB"
          }
        ],
        "/JobLanderProd/JobLanderCluster/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "JobLanderCluster9A38F0EB"
          }
        ],
        "/JobLanderProd/ALB/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ALBAEE750D2"
          }
        ],
        "/JobLanderProd/ALB/SecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ALBSecurityGroup8B8624F8"
          }
        ],
        "/JobLanderProd/ALB/SecurityGroup/to JobLanderProdECSSecurityGroup36DA0B26:5000": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ALBSecurityGrouptoJobLanderProdECSSecurityGroup36DA0B265000F3ADCC75"
          }
        ],
        "/JobLanderProd/ALB/Listener/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ALBListener3B99FF85"
          }
        ],
        "/JobLanderProd/LogGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LogGroupF5B46931"
          }
        ],
        "/JobLanderProd/TaskDef/TaskRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TaskDefTaskRole1EDB4A67"
          }
        ],
        "/JobLanderProd/TaskDef/TaskRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TaskDefTaskRoleDefaultPolicyA592CB18"
          }
        ],
        "/JobLanderProd/TaskDef/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TaskDef54694570"
          }
        ],
        "/JobLanderProd/TaskDef/ExecutionRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TaskDefExecutionRoleB4775C97"
          }
        ],
        "/JobLanderProd/TaskDef/ExecutionRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TaskDefExecutionRoleDefaultPolicy0DBB737A"
          }
        ],
        "/JobLanderProd/ECSSecurityGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ECSSecurityGroupA14DBE7D"
          }
        ],
        "/JobLanderProd/ECSSecurityGroup/from JobLanderProdALBSecurityGroupBAA2A47D:5000": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ECSSecurityGroupfromJobLanderProdALBSecurityGroupBAA2A47D50000D70E0A0"
          }
        ],
        "/JobLanderProd/Service": [
          {
            "type": "aws:cdk:warning",
            "data": "minHealthyPercent has not been configured so the default value of 50% is used. The number of running tasks will decrease below the desired count during deployments etc. See https://github.com/aws/aws-cdk/issues/31705 [ack: @aws-cdk/aws-ecs:minHealthyPercent]",
            "trace": [
              "Annotations.addMessage (/Users/christopher/Downloads/Job-Lander-V3.1/infrastructure/node_modules/aws-cdk-lib/core/lib/annotations.js:1:1978)",
              "Annotations.addWarningV2 (/Users/christopher/Downloads/Job-Lander-V3.1/infrastructure/node_modules/aws-cdk-lib/core/lib/annotations.js:1:896)",
              "new BaseService (/Users/christopher/Downloads/Job-Lander-V3.1/infrastructure/node_modules/aws-cdk-lib/aws-ecs/lib/base/base-service.js:1:8444)",
              "new FargateService2 (/Users/christopher/Downloads/Job-Lander-V3.1/infrastructure/node_modules/aws-cdk-lib/aws-ecs/lib/fargate/fargate-service.js:1:3961)",
              "new FargateService2 (/Users/christopher/Downloads/Job-Lander-V3.1/infrastructure/node_modules/aws-cdk-lib/core/lib/prop-injectable.js:1:488)",
              "new JobLanderStack (/Users/christopher/Downloads/Job-Lander-V3.1/infrastructure/lib/job-lander-stack.ts:253:21)",
              "Object.<anonymous> (/Users/christopher/Downloads/Job-Lander-V3.1/infrastructure/bin/infrastructure.ts:34:1)",
              "Module._compile (node:internal/modules/cjs/loader:1760:14)",
              "Module.m._compile (/Users/christopher/.npm/_npx/1bf7c3c15bf47d04/node_modules/ts-node/src/index.ts:1618:23)",
              "node:internal/modules/cjs/loader:1893:10",
              "Object.require.extensions.<computed> [as .ts] (/Users/christopher/.npm/_npx/1bf7c3c15bf47d04/node_modules/ts-node/src/index.ts:1621:12)",
              "Module.load (node:internal/modules/cjs/loader:1480:32)",
              "Module._load (node:internal/modules/cjs/loader:1299:12)",
              "TracingChannel.traceSync (node:diagnostics_channel:328:14)",
              "wrapModuleLoad (node:internal/modules/cjs/loader:244:24)",
              "Module.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:154:5)",
              "phase4 (/Users/christopher/.npm/_npx/1bf7c3c15bf47d04/node_modules/ts-node/src/bin.ts:649:14)",
              "bootstrap (/Users/christopher/.npm/_npx/1bf7c3c15bf47d04/node_modules/ts-node/src/bin.ts:95:10)",
              "main (/Users/christopher/.npm/_npx/1bf7c3c15bf47d04/node_modules/ts-node/src/bin.ts:55:10)",
              "Object.<anonymous> (/Users/christopher/.npm/_npx/1bf7c3c15bf47d04/node_modules/ts-node/src/bin.ts:800:3)",
              "Module._compile (node:internal/modules/cjs/loader:1760:14)",
              "Object.<anonymous> (node:internal/modules/cjs/loader:1893:10)",
              "Module.load (node:internal/modules/cjs/loader:1480:32)",
              "Module._load (node:internal/modules/cjs/loader:1299:12)",
              "TracingChannel.traceSync (node:diagnostics_channel:328:14)",
              "wrapModuleLoad (node:internal/modules/cjs/loader:244:24)",
              "Module.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:154:5)",
              "node:internal/main/run_main_module:33:47"
            ]
          }
        ],
        "/JobLanderProd/Service/Service": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ServiceD69D759B"
          }
        ],
        "/JobLanderProd/Service/TaskCount/Target/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ServiceTaskCountTarget23E25614"
          }
        ],
        "/JobLanderProd/Service/TaskCount/Target/CpuScaling/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ServiceTaskCountTargetCpuScalingCC8A5DF6"
          }
        ],
        "/JobLanderProd/Service/TaskCount/Target/MemoryScaling/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ServiceTaskCountTargetMemoryScalingEA4B07C8"
          }
        ],
        "/JobLanderProd/TargetGroup/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TargetGroup3D7CD9B8"
          }
        ],
        "/JobLanderProd/Distribution/Origin2/S3Origin/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DistributionOrigin2S3OriginE484D4BF"
          }
        ],
        "/JobLanderProd/Distribution/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "Distribution830FAC52"
          }
        ],
        "/JobLanderProd/LoadBalancerDNS": [
          {
            "type": "aws:cdk:logicalId",
            "data": "LoadBalancerDNS"
          }
        ],
        "/JobLanderProd/CloudFrontURL": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CloudFrontURL"
          }
        ],
        "/JobLanderProd/DatabaseEndpoint": [
          {
            "type": "aws:cdk:logicalId",
            "data": "DatabaseEndpoint"
          }
        ],
        "/JobLanderProd/ECRRepositoryURI": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ECRRepositoryURI"
          }
        ],
        "/JobLanderProd/UploadsBucketName": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UploadsBucketName"
          }
        ],
        "/JobLanderProd/ClusterName": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ClusterName"
          }
        ],
        "/JobLanderProd/ServiceName": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ServiceName"
          }
        ],
        "/JobLanderProd/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/JobLanderProd/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/JobLanderProd/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "JobLanderProd"
    },
    "Tree": {
      "type": "cdk:tree",
      "properties": {
        "file": "tree.json"
      }
    },
    "aws-cdk-lib/feature-flag-report": {
      "type": "cdk:feature-flag-report",
      "properties": {
        "module": "aws-cdk-lib",
        "flags": {
          "@aws-cdk/aws-signer:signingProfileNamePassedToCfn": {
            "recommendedValue": true,
            "explanation": "Pass signingProfileName to CfnSigningProfile"
          },
          "@aws-cdk/core:newStyleStackSynthesis": {
            "recommendedValue": true,
            "explanation": "Switch to new stack synthesis method which enables CI/CD",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:stackRelativeExports": {
            "recommendedValue": true,
            "explanation": "Name exports based on the construct paths relative to the stack, rather than the global construct path",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-ecs-patterns:secGroupsDisablesImplicitOpenListener": {
            "recommendedValue": true,
            "explanation": "Disable implicit openListener when custom security groups are provided"
          },
          "@aws-cdk/aws-rds:lowercaseDbIdentifier": {
            "recommendedValue": true,
            "explanation": "Force lowercasing of RDS Cluster names in CDK",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-apigateway:usagePlanKeyOrderInsensitiveId": {
            "recommendedValue": true,
            "explanation": "Allow adding/removing multiple UsagePlanKeys independently",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-lambda:recognizeVersionProps": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to opt in to the updated logical id calculation for Lambda Version created using the  `fn.currentVersion`.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-lambda:recognizeLayerVersion": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to opt in to the updated logical id calculation for Lambda Version created using the `fn.currentVersion`."
          },
          "@aws-cdk/aws-cloudfront:defaultSecurityPolicyTLSv1.2_2021": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have cloudfront distributions use the security policy TLSv1.2_2021 by default.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:checkSecretUsage": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this flag to make it impossible to accidentally use SecretValues in unsafe locations"
          },
          "@aws-cdk/core:target-partitions": {
            "userValue": [
              "aws",
              "aws-cn"
            ],
            "recommendedValue": [
              "aws",
              "aws-cn"
            ],
            "explanation": "What regions to include in lookup tables of environment agnostic stacks"
          },
          "@aws-cdk-containers/ecs-service-extensions:enableDefaultLogDriver": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "ECS extensions will automatically add an `awslogs` driver if no logging is specified"
          },
          "@aws-cdk/aws-ec2:uniqueImdsv2TemplateName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have Launch Templates generated by the `InstanceRequireImdsv2Aspect` use unique names."
          },
          "@aws-cdk/aws-ecs:arnFormatIncludesClusterName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "ARN format used by ECS. In the new ARN format, the cluster name is part of the resource ID."
          },
          "@aws-cdk/aws-iam:minimizePolicies": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Minimize IAM policies by combining Statements"
          },
          "@aws-cdk/core:validateSnapshotRemovalPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Error on snapshot removal policies on resources that do not support it."
          },
          "@aws-cdk/aws-codepipeline:crossAccountKeyAliasStackSafeResourceName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Generate key aliases that include the stack name"
          },
          "@aws-cdk/aws-s3:createDefaultLoggingPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature flag to create an S3 bucket policy by default in cases where an AWS service would automatically create the Policy if one does not exist."
          },
          "@aws-cdk/aws-sns-subscriptions:restrictSqsDescryption": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Restrict KMS key policy for encrypted Queues a bit more"
          },
          "@aws-cdk/aws-apigateway:disableCloudWatchRole": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Make default CloudWatch Role behavior safe for multiple API Gateways in one environment"
          },
          "@aws-cdk/core:enablePartitionLiterals": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Make ARNs concrete if AWS partition is known"
          },
          "@aws-cdk/aws-events:eventsTargetQueueSameAccount": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Event Rules may only push to encrypted SQS queues in the same account"
          },
          "@aws-cdk/aws-ecs:disableExplicitDeploymentControllerForCircuitBreaker": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Avoid setting the \"ECS\" deployment controller when adding a circuit breaker"
          },
          "@aws-cdk/aws-iam:importedRoleStackSafeDefaultPolicyName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable this feature to by default create default policy names for imported roles that depend on the stack the role is in."
          },
          "@aws-cdk/aws-s3:serverAccessLogsUseBucketPolicy": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Use S3 Bucket Policy instead of ACLs for Server Access Logging"
          },
          "@aws-cdk/aws-route53-patters:useCertificate": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Use the official `Certificate` resource instead of `DnsValidatedCertificate`"
          },
          "@aws-cdk/customresources:installLatestAwsSdkDefault": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "Whether to install the latest SDK by default in AwsCustomResource"
          },
          "@aws-cdk/aws-rds:databaseProxyUniqueResourceName": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Use unique resource name for Database Proxy"
          },
          "@aws-cdk/aws-codedeploy:removeAlarmsFromDeploymentGroup": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Remove CloudWatch alarms from deployment group"
          },
          "@aws-cdk/aws-apigateway:authorizerChangeDeploymentLogicalId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Include authorizer configuration in the calculation of the API deployment logical ID."
          },
          "@aws-cdk/aws-ec2:launchTemplateDefaultUserData": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Define user data for a launch template by default when a machine image is provided."
          },
          "@aws-cdk/aws-secretsmanager:useAttachedSecretResourcePolicyForSecretTargetAttachments": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "SecretTargetAttachments uses the ResourcePolicy of the attached Secret."
          },
          "@aws-cdk/aws-redshift:columnId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Whether to use an ID to track Redshift column changes"
          },
          "@aws-cdk/aws-stepfunctions-tasks:enableEmrServicePolicyV2": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enable AmazonEMRServicePolicy_v2 managed policies"
          },
          "@aws-cdk/aws-ec2:restrictDefaultSecurityGroup": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Restrict access to the VPC default security group"
          },
          "@aws-cdk/aws-apigateway:requestValidatorUniqueId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Generate a unique id for each RequestValidator added to a method"
          },
          "@aws-cdk/aws-kms:aliasNameRef": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "KMS Alias name and keyArn will have implicit reference to KMS Key"
          },
          "@aws-cdk/aws-kms:applyImportedAliasPermissionsToPrincipal": {
            "recommendedValue": true,
            "explanation": "Enable grant methods on Aliases imported by name to use kms:ResourceAliases condition"
          },
          "@aws-cdk/aws-autoscaling:generateLaunchTemplateInsteadOfLaunchConfig": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Generate a launch template when creating an AutoScalingGroup"
          },
          "@aws-cdk/core:includePrefixInUniqueNameGeneration": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Include the stack prefix in the stack name generation process"
          },
          "@aws-cdk/aws-efs:denyAnonymousAccess": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "EFS denies anonymous clients accesses"
          },
          "@aws-cdk/aws-opensearchservice:enableOpensearchMultiAzWithStandby": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enables support for Multi-AZ with Standby deployment for opensearch domains"
          },
          "@aws-cdk/aws-lambda-nodejs:useLatestRuntimeVersion": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enables aws-lambda-nodejs.Function to use the latest available NodeJs runtime as the default"
          },
          "@aws-cdk/aws-efs:mountTargetOrderInsensitiveLogicalId": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, mount targets will have a stable logicalId that is linked to the associated subnet."
          },
          "@aws-cdk/aws-rds:auroraClusterChangeScopeOfInstanceParameterGroupWithEachParameters": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, a scope of InstanceParameterGroup for AuroraClusterInstance with each parameters will change."
          },
          "@aws-cdk/aws-appsync:useArnForSourceApiAssociationIdentifier": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, will always use the arn for identifiers for CfnSourceApiAssociation in the GraphqlApi construct rather than id."
          },
          "@aws-cdk/aws-rds:preventRenderingDeprecatedCredentials": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, creating an RDS database cluster from a snapshot will only render credentials for snapshot credentials."
          },
          "@aws-cdk/aws-codepipeline-actions:useNewDefaultBranchForCodeCommitSource": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the CodeCommit source action is using the default branch name 'main'."
          },
          "@aws-cdk/aws-cloudwatch-actions:changeLambdaPermissionLogicalIdForLambdaAction": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the logical ID of a Lambda permission for a Lambda action includes an alarm ID."
          },
          "@aws-cdk/aws-codepipeline:crossAccountKeysDefaultValueToFalse": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enables Pipeline to set the default value for crossAccountKeys to false."
          },
          "@aws-cdk/aws-codepipeline:defaultPipelineTypeToV2": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "Enables Pipeline to set the default pipeline type to V2."
          },
          "@aws-cdk/aws-kms:reduceCrossAccountRegionPolicyScope": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, IAM Policy created from KMS key grant will reduce the resource scope to this key only."
          },
          "@aws-cdk/pipelines:reduceAssetRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "Remove the root account principal from PipelineAssetsFileRole trust policy",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-eks:nodegroupNameAttribute": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, nodegroupName attribute of the provisioned EKS NodeGroup will not have the cluster name prefix."
          },
          "@aws-cdk/aws-ec2:ebsDefaultGp3Volume": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, the default volume type of the EBS volume will be GP3"
          },
          "@aws-cdk/aws-ecs:removeDefaultDeploymentAlarm": {
            "userValue": true,
            "recommendedValue": true,
            "explanation": "When enabled, remove default deployment alarm settings"
          },
          "@aws-cdk/custom-resources:logApiResponseDataPropertyTrueDefault": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "When enabled, the custom resource used for `AwsCustomResource` will configure the `logApiResponseData` property as true by default"
          },
          "@aws-cdk/aws-s3:keepNotificationInImportedBucket": {
            "userValue": false,
            "recommendedValue": false,
            "explanation": "When enabled, Adding notifications to a bucket in the current stack will not remove notification from imported stack."
          },
          "@aws-cdk/aws-stepfunctions-tasks:useNewS3UriParametersForBedrockInvokeModelTask": {
            "recommendedValue": true,
            "explanation": "When enabled, use new props for S3 URI field in task definition of state machine for bedrock invoke model.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:explicitStackTags": {
            "recommendedValue": true,
            "explanation": "When enabled, stack tags need to be assigned explicitly on a Stack."
          },
          "@aws-cdk/aws-ecs:enableImdsBlockingDeprecatedFeature": {
            "recommendedValue": false,
            "explanation": "When set to true along with canContainersAccessInstanceRole=false in ECS cluster, new updated commands will be added to UserData to block container accessing IMDS. **Applicable to Linux only. IMPORTANT: See [details.](#aws-cdkaws-ecsenableImdsBlockingDeprecatedFeature)**"
          },
          "@aws-cdk/aws-ecs:disableEcsImdsBlocking": {
            "recommendedValue": true,
            "explanation": "When set to true, CDK synth will throw exception if canContainersAccessInstanceRole is false. **IMPORTANT: See [details.](#aws-cdkaws-ecsdisableEcsImdsBlocking)**"
          },
          "@aws-cdk/aws-ecs:reduceEc2FargateCloudWatchPermissions": {
            "recommendedValue": true,
            "explanation": "When enabled, we will only grant the necessary permissions when users specify cloudwatch log group through logConfiguration"
          },
          "@aws-cdk/aws-dynamodb:resourcePolicyPerReplica": {
            "recommendedValue": true,
            "explanation": "When enabled will allow you to specify a resource policy per replica, and not copy the source table policy to all replicas"
          },
          "@aws-cdk/aws-ec2:ec2SumTImeoutEnabled": {
            "recommendedValue": true,
            "explanation": "When enabled, initOptions.timeout and resourceSignalTimeout values will be summed together."
          },
          "@aws-cdk/aws-appsync:appSyncGraphQLAPIScopeLambdaPermission": {
            "recommendedValue": true,
            "explanation": "When enabled, a Lambda authorizer Permission created when using GraphqlApi will be properly scoped with a SourceArn."
          },
          "@aws-cdk/aws-rds:setCorrectValueForDatabaseInstanceReadReplicaInstanceResourceId": {
            "recommendedValue": true,
            "explanation": "When enabled, the value of property `instanceResourceId` in construct `DatabaseInstanceReadReplica` will be set to the correct value which is `DbiResourceId` instead of currently `DbInstanceArn`"
          },
          "@aws-cdk/core:cfnIncludeRejectComplexResourceUpdateCreatePolicyIntrinsics": {
            "recommendedValue": true,
            "explanation": "When enabled, CFN templates added with `cfn-include` will error if the template contains Resource Update or Create policies with CFN Intrinsics that include non-primitive values."
          },
          "@aws-cdk/aws-lambda-nodejs:sdkV3ExcludeSmithyPackages": {
            "recommendedValue": true,
            "explanation": "When enabled, both `@aws-sdk` and `@smithy` packages will be excluded from the Lambda Node.js 18.x runtime to prevent version mismatches in bundled applications."
          },
          "@aws-cdk/aws-stepfunctions-tasks:fixRunEcsTaskPolicy": {
            "recommendedValue": true,
            "explanation": "When enabled, the resource of IAM Run Ecs policy generated by SFN EcsRunTask will reference the definition, instead of constructing ARN."
          },
          "@aws-cdk/aws-ec2:bastionHostUseAmazonLinux2023ByDefault": {
            "recommendedValue": true,
            "explanation": "When enabled, the BastionHost construct will use the latest Amazon Linux 2023 AMI, instead of Amazon Linux 2."
          },
          "@aws-cdk/core:aspectStabilization": {
            "recommendedValue": true,
            "explanation": "When enabled, a stabilization loop will be run when invoking Aspects during synthesis.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-route53-targets:userPoolDomainNameMethodWithoutCustomResource": {
            "recommendedValue": true,
            "explanation": "When enabled, use a new method for DNS Name of user pool domain target without creating a custom resource."
          },
          "@aws-cdk/aws-elasticloadbalancingV2:albDualstackWithoutPublicIpv4SecurityGroupRulesDefault": {
            "recommendedValue": true,
            "explanation": "When enabled, the default security group ingress rules will allow IPv6 ingress from anywhere"
          },
          "@aws-cdk/aws-iam:oidcRejectUnauthorizedConnections": {
            "recommendedValue": true,
            "explanation": "When enabled, the default behaviour of OIDC provider will reject unauthorized connections"
          },
          "@aws-cdk/core:enableAdditionalMetadataCollection": {
            "recommendedValue": true,
            "explanation": "When enabled, CDK will expand the scope of usage data collected to better inform CDK development and improve communication for security concerns and emerging issues."
          },
          "@aws-cdk/aws-lambda:createNewPoliciesWithAddToRolePolicy": {
            "recommendedValue": false,
            "explanation": "[Deprecated] When enabled, Lambda will create new inline policies with AddToRolePolicy instead of adding to the Default Policy Statement"
          },
          "@aws-cdk/aws-s3:setUniqueReplicationRoleName": {
            "recommendedValue": true,
            "explanation": "When enabled, CDK will automatically generate a unique role name that is used for s3 object replication."
          },
          "@aws-cdk/pipelines:reduceStageRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "Remove the root account principal from Stage addActions trust policy",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-events:requireEventBusPolicySid": {
            "recommendedValue": true,
            "explanation": "When enabled, grantPutEventsTo() will use resource policies with Statement IDs for service principals."
          },
          "@aws-cdk/core:aspectPrioritiesMutating": {
            "recommendedValue": true,
            "explanation": "When set to true, Aspects added by the construct library on your behalf will be given a priority of MUTATING."
          },
          "@aws-cdk/aws-dynamodb:retainTableReplica": {
            "recommendedValue": true,
            "explanation": "When enabled, table replica will be default to the removal policy of source table unless specified otherwise."
          },
          "@aws-cdk/cognito:logUserPoolClientSecretValue": {
            "recommendedValue": false,
            "explanation": "When disabled, the value of the user pool client secret will not be logged in the custom resource lambda function logs."
          },
          "@aws-cdk/pipelines:reduceCrossAccountActionRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "When enabled, scopes down the trust policy for the cross-account action role",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-stepfunctions:useDistributedMapResultWriterV2": {
            "recommendedValue": true,
            "explanation": "When enabled, the resultWriterV2 property of DistributedMap will be used insted of resultWriter"
          },
          "@aws-cdk/s3-notifications:addS3TrustKeyPolicyForSnsSubscriptions": {
            "recommendedValue": true,
            "explanation": "Add an S3 trust policy to a KMS key resource policy for SNS subscriptions."
          },
          "@aws-cdk/aws-ec2:requirePrivateSubnetsForEgressOnlyInternetGateway": {
            "recommendedValue": true,
            "explanation": "When enabled, the EgressOnlyGateway resource is only created if private subnets are defined in the dual-stack VPC."
          },
          "@aws-cdk/aws-ec2-alpha:useResourceIdForVpcV2Migration": {
            "recommendedValue": false,
            "explanation": "When enabled, use resource IDs for VPC V2 migration"
          },
          "@aws-cdk/aws-s3:publicAccessBlockedByDefault": {
            "recommendedValue": true,
            "explanation": "When enabled, setting any combination of options for BlockPublicAccess will automatically set true for any options not defined."
          },
          "@aws-cdk/aws-lambda:useCdkManagedLogGroup": {
            "recommendedValue": true,
            "explanation": "When enabled, CDK creates and manages loggroup for the lambda function"
          }
        }
      }
    }
  },
  "minimumCliVersion": "2.1030.0"
}