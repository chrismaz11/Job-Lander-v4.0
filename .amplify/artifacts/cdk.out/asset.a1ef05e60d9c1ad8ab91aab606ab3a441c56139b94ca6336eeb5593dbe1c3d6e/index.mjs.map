{
  "version": 3,
  "sources": ["../../../../node_modules/@aws-amplify/backend-function/src/lambda-shims/cjs_shim.ts", "../../../../node_modules/@smithy/types/dist-cjs/index.js", "../../../../node_modules/@smithy/protocol-http/dist-cjs/index.js", "../../../../node_modules/@aws-sdk/middleware-host-header/dist-cjs/index.js", "../../../../node_modules/@aws-sdk/middleware-logger/dist-cjs/index.js", "../../../../node_modules/@aws/lambda-invoke-store/dist/invoke-store.js", "../../../../node_modules/@aws-sdk/middleware-recursion-detection/dist-cjs/recursionDetectionMiddleware.js", "../../../../node_modules/@aws-sdk/middleware-recursion-detection/dist-cjs/index.js", "../../../../node_modules/@smithy/core/dist-es/getSmithyContext.js", "../../../../node_modules/@smithy/util-middleware/dist-cjs/index.js", "../../../../node_modules/@smithy/core/dist-es/middleware-http-auth-scheme/resolveAuthOptions.js", "../../../../node_modules/@smithy/core/dist-es/middleware-http-auth-scheme/httpAuthSchemeMiddleware.js", "../../../../node_modules/@smithy/core/dist-es/middleware-http-auth-scheme/getHttpAuthSchemeEndpointRuleSetPlugin.js", "../../../../node_modules/@smithy/middleware-serde/dist-cjs/index.js", "../../../../node_modules/@smithy/core/dist-es/middleware-http-auth-scheme/getHttpAuthSchemePlugin.js", "../../../../node_modules/@smithy/core/dist-es/middleware-http-auth-scheme/index.js", "../../../../node_modules/@smithy/core/dist-es/middleware-http-signing/httpSigningMiddleware.js", "../../../../node_modules/@smithy/core/dist-es/middleware-http-signing/getHttpSigningMiddleware.js", "../../../../node_modules/@smithy/core/dist-es/middleware-http-signing/index.js", "../../../../node_modules/@smithy/core/dist-es/normalizeProvider.js", "../../../../node_modules/@smithy/core/dist-es/pagination/createPaginator.js", "../../../../node_modules/@smithy/is-array-buffer/dist-cjs/index.js", "../../../../node_modules/@smithy/util-buffer-from/dist-cjs/index.js", "../../../../node_modules/@smithy/util-stream/node_modules/@smithy/util-base64/dist-cjs/fromBase64.js", "../../../../node_modules/@smithy/util-utf8/dist-cjs/index.js", "../../../../node_modules/@smithy/util-stream/node_modules/@smithy/util-base64/dist-cjs/toBase64.js", "../../../../node_modules/@smithy/util-stream/node_modules/@smithy/util-base64/dist-cjs/index.js", "../../../../node_modules/@smithy/util-stream/dist-cjs/checksum/ChecksumStream.js", "../../../../node_modules/@smithy/util-stream/dist-cjs/stream-type-check.js", "../../../../node_modules/@smithy/util-stream/dist-cjs/checksum/ChecksumStream.browser.js", "../../../../node_modules/@smithy/util-stream/dist-cjs/checksum/createChecksumStream.browser.js", "../../../../node_modules/@smithy/util-stream/dist-cjs/checksum/createChecksumStream.js", "../../../../node_modules/@smithy/util-stream/dist-cjs/ByteArrayCollector.js", "../../../../node_modules/@smithy/util-stream/dist-cjs/createBufferedReadableStream.js", "../../../../node_modules/@smithy/util-stream/dist-cjs/createBufferedReadable.js", "../../../../node_modules/@smithy/util-stream/dist-cjs/getAwsChunkedEncodingStream.js", "../../../../node_modules/@smithy/util-stream/dist-cjs/headStream.browser.js", "../../../../node_modules/@smithy/util-stream/dist-cjs/headStream.js", "../../../../node_modules/@smithy/node-http-handler/node_modules/@smithy/util-uri-escape/dist-cjs/index.js", "../../../../node_modules/@smithy/node-http-handler/node_modules/@smithy/querystring-builder/dist-cjs/index.js", "../../../../node_modules/@smithy/node-http-handler/dist-cjs/index.js", "../../../../node_modules/@smithy/fetch-http-handler/node_modules/@smithy/util-uri-escape/dist-cjs/index.js", "../../../../node_modules/@smithy/fetch-http-handler/node_modules/@smithy/querystring-builder/dist-cjs/index.js", "../../../../node_modules/@smithy/fetch-http-handler/node_modules/@smithy/util-base64/dist-cjs/fromBase64.js", "../../../../node_modules/@smithy/fetch-http-handler/node_modules/@smithy/util-base64/dist-cjs/toBase64.js", "../../../../node_modules/@smithy/fetch-http-handler/node_modules/@smithy/util-base64/dist-cjs/index.js", "../../../../node_modules/@smithy/fetch-http-handler/dist-cjs/index.js", "../../../../node_modules/@smithy/util-hex-encoding/dist-cjs/index.js", "../../../../node_modules/@smithy/util-stream/dist-cjs/sdk-stream-mixin.browser.js", "../../../../node_modules/@smithy/util-stream/dist-cjs/sdk-stream-mixin.js", "../../../../node_modules/@smithy/util-stream/dist-cjs/splitStream.browser.js", "../../../../node_modules/@smithy/util-stream/dist-cjs/splitStream.js", "../../../../node_modules/@smithy/util-stream/dist-cjs/index.js", "../../../../node_modules/@smithy/core/dist-es/submodules/protocols/collect-stream-body.js", "../../../../node_modules/@smithy/core/dist-es/submodules/protocols/extended-encode-uri-component.js", "../../../../node_modules/@smithy/core/dist-es/submodules/schema/deref.js", "../../../../node_modules/@smithy/core/dist-es/submodules/schema/middleware/schemaDeserializationMiddleware.js", "../../../../node_modules/@smithy/core/dist-es/submodules/schema/middleware/schemaSerializationMiddleware.js", "../../../../node_modules/@smithy/core/dist-es/submodules/schema/middleware/getSchemaSerdePlugin.js", "../../../../node_modules/@smithy/core/dist-es/submodules/schema/TypeRegistry.js", "../../../../node_modules/@smithy/core/dist-es/submodules/schema/schemas/Schema.js", "../../../../node_modules/@smithy/core/dist-es/submodules/schema/schemas/ListSchema.js", "../../../../node_modules/@smithy/core/dist-es/submodules/schema/schemas/MapSchema.js", "../../../../node_modules/@smithy/core/dist-es/submodules/schema/schemas/OperationSchema.js", "../../../../node_modules/@smithy/core/dist-es/submodules/schema/schemas/StructureSchema.js", "../../../../node_modules/@smithy/core/dist-es/submodules/schema/schemas/ErrorSchema.js", "../../../../node_modules/@smithy/core/dist-es/submodules/schema/schemas/translateTraits.js", "../../../../node_modules/@smithy/core/dist-es/submodules/schema/schemas/NormalizedSchema.js", "../../../../node_modules/@smithy/core/dist-es/submodules/schema/schemas/SimpleSchema.js", "../../../../node_modules/@smithy/core/dist-es/submodules/schema/schemas/sentinels.js", "../../../../node_modules/@smithy/core/dist-es/submodules/schema/index.js", "../../../../node_modules/@smithy/core/dist-es/submodules/serde/copyDocumentWithTransform.js", "../../../../node_modules/@smithy/core/dist-es/submodules/serde/parse-utils.js", "../../../../node_modules/@smithy/core/dist-es/submodules/serde/date-utils.js", "../../../../node_modules/tslib/tslib.es6.mjs", "../../../../node_modules/@smithy/uuid/dist-cjs/randomUUID.js", "../../../../node_modules/@smithy/uuid/dist-cjs/index.js", "../../../../node_modules/@smithy/core/dist-es/submodules/serde/generateIdempotencyToken.js", "../../../../node_modules/@smithy/core/dist-es/submodules/serde/lazy-json.js", "../../../../node_modules/@smithy/core/dist-es/submodules/serde/quote-header.js", "../../../../node_modules/@smithy/core/dist-es/submodules/serde/schema-serde-lib/schema-date-utils.js", "../../../../node_modules/@smithy/core/dist-es/submodules/serde/split-every.js", "../../../../node_modules/@smithy/core/dist-es/submodules/serde/split-header.js", "../../../../node_modules/@smithy/core/dist-es/submodules/serde/value/NumericValue.js", "../../../../node_modules/@smithy/core/dist-es/submodules/serde/index.js", "../../../../node_modules/@smithy/core/dist-es/submodules/event-streams/EventStreamSerde.js", "../../../../node_modules/@smithy/core/dist-es/submodules/event-streams/index.js", "../../../../node_modules/@smithy/core/dist-es/submodules/protocols/HttpProtocol.js", "../../../../node_modules/@smithy/core/dist-es/submodules/protocols/HttpBindingProtocol.js", "../../../../node_modules/@smithy/core/dist-es/submodules/protocols/RpcProtocol.js", "../../../../node_modules/@smithy/core/dist-es/submodules/protocols/resolve-path.js", "../../../../node_modules/@smithy/core/dist-es/submodules/protocols/requestBuilder.js", "../../../../node_modules/@smithy/core/node_modules/@smithy/util-base64/dist-cjs/fromBase64.js", "../../../../node_modules/@smithy/core/node_modules/@smithy/util-base64/dist-cjs/toBase64.js", "../../../../node_modules/@smithy/core/node_modules/@smithy/util-base64/dist-cjs/index.js", "../../../../node_modules/@smithy/core/dist-es/submodules/protocols/serde/determineTimestampFormat.js", "../../../../node_modules/@smithy/core/dist-es/submodules/protocols/serde/FromStringShapeDeserializer.js", "../../../../node_modules/@smithy/core/dist-es/submodules/protocols/serde/HttpInterceptingShapeDeserializer.js", "../../../../node_modules/@smithy/core/dist-es/submodules/protocols/serde/ToStringShapeSerializer.js", "../../../../node_modules/@smithy/core/dist-es/submodules/protocols/serde/HttpInterceptingShapeSerializer.js", "../../../../node_modules/@smithy/core/dist-es/submodules/protocols/index.js", "../../../../node_modules/@smithy/core/dist-es/protocols/requestBuilder.js", "../../../../node_modules/@smithy/core/dist-es/setFeature.js", "../../../../node_modules/@smithy/core/dist-es/util-identity-and-auth/DefaultIdentityProviderConfig.js", "../../../../node_modules/@smithy/core/dist-es/util-identity-and-auth/httpAuthSchemes/httpApiKeyAuth.js", "../../../../node_modules/@smithy/core/dist-es/util-identity-and-auth/httpAuthSchemes/httpBearerAuth.js", "../../../../node_modules/@smithy/core/dist-es/util-identity-and-auth/httpAuthSchemes/noAuth.js", "../../../../node_modules/@smithy/core/dist-es/util-identity-and-auth/httpAuthSchemes/index.js", "../../../../node_modules/@smithy/core/dist-es/util-identity-and-auth/memoizeIdentityProvider.js", "../../../../node_modules/@smithy/core/dist-es/util-identity-and-auth/index.js", "../../../../node_modules/@smithy/core/dist-es/index.js", "../../../../node_modules/@smithy/util-endpoints/dist-cjs/index.js", "../../../../node_modules/@smithy/querystring-parser/dist-cjs/index.js", "../../../../node_modules/@smithy/url-parser/dist-cjs/index.js", "../../../../node_modules/@aws-sdk/util-endpoints/dist-cjs/index.js", "../../../../node_modules/@aws-sdk/core/dist-es/submodules/client/emitWarningIfUnsupportedVersion.js", "../../../../node_modules/@aws-sdk/core/dist-es/submodules/client/setCredentialFeature.js", "../../../../node_modules/@aws-sdk/core/dist-es/submodules/client/setFeature.js", "../../../../node_modules/@aws-sdk/core/dist-es/submodules/client/setTokenFeature.js", "../../../../node_modules/@aws-sdk/core/dist-es/submodules/client/index.js", "../../../../node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getDateHeader.js", "../../../../node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getSkewCorrectedDate.js", "../../../../node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/isClockSkewed.js", "../../../../node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getUpdatedSystemClockOffset.js", "../../../../node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/index.js", "../../../../node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/AwsSdkSigV4Signer.js", "../../../../node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/AwsSdkSigV4ASigner.js", "../../../../node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getArrayForCommaSeparatedString.js", "../../../../node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/utils/getBearerTokenEnvKey.js", "../../../../node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/NODE_AUTH_SCHEME_PREFERENCE_OPTIONS.js", "../../../../node_modules/@smithy/property-provider/dist-cjs/index.js", "../../../../node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/resolveAwsSdkSigV4AConfig.js", "../../../../node_modules/@smithy/signature-v4/node_modules/@smithy/util-uri-escape/dist-cjs/index.js", "../../../../node_modules/@smithy/signature-v4/dist-cjs/index.js", "../../../../node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/resolveAwsSdkSigV4Config.js", "../../../../node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/aws_sdk/index.js", "../../../../node_modules/@aws-sdk/core/dist-es/submodules/httpAuthSchemes/index.js", "../../../../node_modules/@smithy/core/dist-es/submodules/cbor/cbor-types.js", "../../../../node_modules/@smithy/core/dist-es/submodules/cbor/cbor-decode.js", "../../../../node_modules/@smithy/core/dist-es/submodules/cbor/cbor-encode.js", "../../../../node_modules/@smithy/core/dist-es/submodules/cbor/cbor.js", "../../../../node_modules/@smithy/core/dist-es/submodules/cbor/parseCborBody.js", "../../../../node_modules/@smithy/core/dist-es/submodules/cbor/CborCodec.js", "../../../../node_modules/@smithy/core/dist-es/submodules/cbor/SmithyRpcV2CborProtocol.js", "../../../../node_modules/@smithy/core/dist-es/submodules/cbor/index.js", "../../../../node_modules/@aws-sdk/core/dist-es/submodules/protocols/ProtocolLib.js", "../../../../node_modules/@aws-sdk/core/dist-es/submodules/protocols/cbor/AwsSmithyRpcV2CborProtocol.js", "../../../../node_modules/@aws-sdk/core/dist-es/submodules/protocols/coercing-serializers.js", "../../../../node_modules/@aws-sdk/core/dist-es/submodules/protocols/ConfigurableSerdeContext.js", "../../../../node_modules/@aws-sdk/core/node_modules/@smithy/util-base64/dist-cjs/fromBase64.js", "../../../../node_modules/@aws-sdk/core/node_modules/@smithy/util-base64/dist-cjs/toBase64.js", "../../../../node_modules/@aws-sdk/core/node_modules/@smithy/util-base64/dist-cjs/index.js", "../../../../node_modules/@aws-sdk/core/dist-es/submodules/protocols/json/jsonReviver.js", "../../../../node_modules/@smithy/middleware-stack/dist-cjs/index.js", "../../../../node_modules/@smithy/smithy-client/dist-cjs/index.js", "../../../../node_modules/@aws-sdk/core/dist-es/submodules/protocols/common.js", "../../../../node_modules/@aws-sdk/core/dist-es/submodules/protocols/json/parseJsonBody.js", "../../../../node_modules/@aws-sdk/core/dist-es/submodules/protocols/json/JsonShapeDeserializer.js", "../../../../node_modules/@aws-sdk/core/dist-es/submodules/protocols/json/jsonReplacer.js", "../../../../node_modules/@aws-sdk/core/dist-es/submodules/protocols/json/JsonShapeSerializer.js", "../../../../node_modules/@aws-sdk/core/dist-es/submodules/protocols/json/JsonCodec.js", "../../../../node_modules/@aws-sdk/core/dist-es/submodules/protocols/json/AwsJsonRpcProtocol.js", "../../../../node_modules/@aws-sdk/core/dist-es/submodules/protocols/json/AwsJson1_0Protocol.js", "../../../../node_modules/@aws-sdk/core/dist-es/submodules/protocols/json/AwsJson1_1Protocol.js", "../../../../node_modules/@aws-sdk/core/dist-es/submodules/protocols/json/AwsRestJsonProtocol.js", "../../../../node_modules/@aws-sdk/core/dist-es/submodules/protocols/json/awsExpectUnion.js", "../../../../node_modules/fast-xml-parser/lib/fxp.cjs", "../../../../node_modules/@aws-sdk/xml-builder/dist-cjs/xml-parser.js", "../../../../node_modules/@aws-sdk/xml-builder/dist-cjs/index.js", "../../../../node_modules/@aws-sdk/core/dist-es/submodules/protocols/xml/XmlShapeDeserializer.js", "../../../../node_modules/@aws-sdk/core/dist-es/submodules/protocols/query/QueryShapeSerializer.js", "../../../../node_modules/@aws-sdk/core/dist-es/submodules/protocols/query/AwsQueryProtocol.js", "../../../../node_modules/@aws-sdk/core/dist-es/submodules/protocols/query/AwsEc2QueryProtocol.js", "../../../../node_modules/@aws-sdk/core/dist-es/submodules/protocols/xml/parseXmlBody.js", "../../../../node_modules/@aws-sdk/core/dist-es/submodules/protocols/xml/XmlShapeSerializer.js", "../../../../node_modules/@aws-sdk/core/dist-es/submodules/protocols/xml/XmlCodec.js", "../../../../node_modules/@aws-sdk/core/dist-es/submodules/protocols/xml/AwsRestXmlProtocol.js", "../../../../node_modules/@aws-sdk/core/dist-es/submodules/protocols/index.js", "../../../../node_modules/@aws-sdk/core/dist-es/index.js", "../../../../node_modules/@aws-sdk/middleware-user-agent/dist-cjs/index.js", "../../../../node_modules/@smithy/util-config-provider/dist-cjs/index.js", "../../../../node_modules/@smithy/config-resolver/dist-cjs/index.js", "../../../../node_modules/@smithy/middleware-content-length/dist-cjs/index.js", "../../../../node_modules/@smithy/shared-ini-file-loader/dist-cjs/getHomeDir.js", "../../../../node_modules/@smithy/shared-ini-file-loader/dist-cjs/getSSOTokenFilepath.js", "../../../../node_modules/@smithy/shared-ini-file-loader/dist-cjs/getSSOTokenFromFile.js", "../../../../node_modules/@smithy/shared-ini-file-loader/dist-cjs/slurpFile.js", "../../../../node_modules/@smithy/shared-ini-file-loader/dist-cjs/index.js", "../../../../node_modules/@smithy/node-config-provider/dist-cjs/index.js", "../../../../node_modules/@smithy/middleware-endpoint/dist-cjs/adaptors/getEndpointUrlConfig.js", "../../../../node_modules/@smithy/middleware-endpoint/dist-cjs/adaptors/getEndpointFromConfig.js", "../../../../node_modules/@smithy/middleware-endpoint/dist-cjs/index.js", "../../../../node_modules/@smithy/service-error-classification/dist-cjs/index.js", "../../../../node_modules/@smithy/util-retry/dist-cjs/index.js", "../../../../node_modules/@smithy/middleware-retry/dist-cjs/isStreamingPayload/isStreamingPayload.js", "../../../../node_modules/@smithy/middleware-retry/dist-cjs/index.js", "../../../../node_modules/@aws-sdk/client-kms/dist-cjs/auth/httpAuthSchemeProvider.js", "../../../../node_modules/@aws-sdk/client-kms/package.json", "../../../../node_modules/@aws-sdk/credential-provider-env/dist-cjs/index.js", "../../../../node_modules/@smithy/credential-provider-imds/dist-cjs/index.js", "../../../../node_modules/@aws-sdk/credential-provider-http/dist-cjs/fromHttp/checkUrl.js", "../../../../node_modules/@aws-sdk/credential-provider-http/dist-cjs/fromHttp/requestHelpers.js", "../../../../node_modules/@aws-sdk/credential-provider-http/dist-cjs/fromHttp/retry-wrapper.js", "../../../../node_modules/@aws-sdk/credential-provider-http/dist-cjs/fromHttp/fromHttp.js", "../../../../node_modules/@aws-sdk/credential-provider-http/dist-cjs/index.js", "../../../../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/auth/httpAuthSchemeProvider.js", "../../../../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/endpoint/EndpointParameters.js", "../../../../node_modules/@aws-sdk/nested-clients/package.json", "../../../../node_modules/@aws-sdk/util-user-agent-node/dist-cjs/index.js", "../../../../node_modules/@smithy/hash-node/dist-cjs/index.js", "../../../../node_modules/@smithy/util-body-length-node/dist-cjs/index.js", "../../../../node_modules/@aws-sdk/nested-clients/node_modules/@smithy/util-base64/dist-cjs/fromBase64.js", "../../../../node_modules/@aws-sdk/nested-clients/node_modules/@smithy/util-base64/dist-cjs/toBase64.js", "../../../../node_modules/@aws-sdk/nested-clients/node_modules/@smithy/util-base64/dist-cjs/index.js", "../../../../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/endpoint/ruleset.js", "../../../../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/endpoint/endpointResolver.js", "../../../../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/runtimeConfig.shared.js", "../../../../node_modules/@smithy/util-defaults-mode-node/dist-cjs/index.js", "../../../../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/runtimeConfig.js", "../../../../node_modules/@aws-sdk/region-config-resolver/dist-cjs/index.js", "../../../../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/auth/httpAuthExtensionConfiguration.js", "../../../../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/runtimeExtensions.js", "../../../../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/SSOOIDCClient.js", "../../../../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/models/SSOOIDCServiceException.js", "../../../../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/models/models_0.js", "../../../../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/protocols/Aws_restJson1.js", "../../../../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/commands/CreateTokenCommand.js", "../../../../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/SSOOIDC.js", "../../../../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/commands/index.js", "../../../../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/models/index.js", "../../../../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sso-oidc/index.js", "../../../../node_modules/@aws-sdk/token-providers/dist-cjs/index.js", "../../../../node_modules/@aws-sdk/client-sso/dist-cjs/auth/httpAuthSchemeProvider.js", "../../../../node_modules/@aws-sdk/client-sso/package.json", "../../../../node_modules/@aws-sdk/client-sso/node_modules/@smithy/util-base64/dist-cjs/fromBase64.js", "../../../../node_modules/@aws-sdk/client-sso/node_modules/@smithy/util-base64/dist-cjs/toBase64.js", "../../../../node_modules/@aws-sdk/client-sso/node_modules/@smithy/util-base64/dist-cjs/index.js", "../../../../node_modules/@aws-sdk/client-sso/dist-cjs/endpoint/ruleset.js", "../../../../node_modules/@aws-sdk/client-sso/dist-cjs/endpoint/endpointResolver.js", "../../../../node_modules/@aws-sdk/client-sso/dist-cjs/runtimeConfig.shared.js", "../../../../node_modules/@aws-sdk/client-sso/dist-cjs/runtimeConfig.js", "../../../../node_modules/@aws-sdk/client-sso/dist-cjs/index.js", "../../../../node_modules/@aws-sdk/credential-provider-sso/dist-cjs/loadSso-CVy8iqsZ.js", "../../../../node_modules/@aws-sdk/credential-provider-sso/dist-cjs/index.js", "../../../../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/auth/httpAuthSchemeProvider.js", "../../../../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/endpoint/EndpointParameters.js", "../../../../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/endpoint/ruleset.js", "../../../../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/endpoint/endpointResolver.js", "../../../../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/runtimeConfig.shared.js", "../../../../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/runtimeConfig.js", "../../../../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/auth/httpAuthExtensionConfiguration.js", "../../../../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/runtimeExtensions.js", "../../../../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/STSClient.js", "../../../../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/models/STSServiceException.js", "../../../../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/models/models_0.js", "../../../../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/protocols/Aws_query.js", "../../../../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/commands/AssumeRoleCommand.js", "../../../../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/commands/AssumeRoleWithWebIdentityCommand.js", "../../../../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/STS.js", "../../../../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/commands/index.js", "../../../../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/models/index.js", "../../../../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/defaultStsRoleAssumers.js", "../../../../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/defaultRoleAssumers.js", "../../../../node_modules/@aws-sdk/nested-clients/dist-es/submodules/sts/index.js", "../../../../node_modules/@aws-sdk/credential-provider-process/dist-cjs/index.js", "../../../../node_modules/@aws-sdk/credential-provider-web-identity/dist-cjs/fromWebToken.js", "../../../../node_modules/@aws-sdk/credential-provider-web-identity/dist-cjs/fromTokenFile.js", "../../../../node_modules/@aws-sdk/credential-provider-web-identity/dist-cjs/index.js", "../../../../node_modules/@aws-sdk/credential-provider-ini/dist-cjs/index.js", "../../../../node_modules/@aws-sdk/credential-provider-node/dist-cjs/index.js", "../../../../node_modules/@aws-sdk/client-kms/node_modules/@smithy/util-base64/dist-cjs/fromBase64.js", "../../../../node_modules/@aws-sdk/client-kms/node_modules/@smithy/util-base64/dist-cjs/toBase64.js", "../../../../node_modules/@aws-sdk/client-kms/node_modules/@smithy/util-base64/dist-cjs/index.js", "../../../../node_modules/@aws-sdk/client-kms/dist-cjs/endpoint/ruleset.js", "../../../../node_modules/@aws-sdk/client-kms/dist-cjs/endpoint/endpointResolver.js", "../../../../node_modules/@aws-sdk/client-kms/dist-cjs/runtimeConfig.shared.js", "../../../../node_modules/@aws-sdk/client-kms/dist-cjs/runtimeConfig.js", "../../../../node_modules/@aws-sdk/client-kms/dist-cjs/index.js", "../../../../node_modules/@aws-sdk/client-secrets-manager/dist-cjs/auth/httpAuthSchemeProvider.js", "../../../../node_modules/@aws-sdk/client-secrets-manager/package.json", "../../../../node_modules/@aws-sdk/client-secrets-manager/node_modules/@smithy/util-base64/dist-cjs/fromBase64.js", "../../../../node_modules/@aws-sdk/client-secrets-manager/node_modules/@smithy/util-base64/dist-cjs/toBase64.js", "../../../../node_modules/@aws-sdk/client-secrets-manager/node_modules/@smithy/util-base64/dist-cjs/index.js", "../../../../node_modules/@aws-sdk/client-secrets-manager/dist-cjs/endpoint/ruleset.js", "../../../../node_modules/@aws-sdk/client-secrets-manager/dist-cjs/endpoint/endpointResolver.js", "../../../../node_modules/@aws-sdk/client-secrets-manager/dist-cjs/runtimeConfig.shared.js", "../../../../node_modules/@aws-sdk/client-secrets-manager/dist-cjs/runtimeConfig.js", "../../../../node_modules/@aws-sdk/client-secrets-manager/dist-cjs/index.js", "../../../../node_modules/@smithy/middleware-compression/dist-cjs/index.js", "../../../../node_modules/@aws-sdk/client-cloudwatch/dist-cjs/auth/httpAuthSchemeProvider.js", "../../../../node_modules/@aws-sdk/client-cloudwatch/package.json", "../../../../node_modules/@aws-sdk/client-cloudwatch/node_modules/@smithy/util-base64/dist-cjs/fromBase64.js", "../../../../node_modules/@aws-sdk/client-cloudwatch/node_modules/@smithy/util-base64/dist-cjs/toBase64.js", "../../../../node_modules/@aws-sdk/client-cloudwatch/node_modules/@smithy/util-base64/dist-cjs/index.js", "../../../../node_modules/@aws-sdk/client-cloudwatch/dist-cjs/endpoint/ruleset.js", "../../../../node_modules/@aws-sdk/client-cloudwatch/dist-cjs/endpoint/endpointResolver.js", "../../../../node_modules/@aws-sdk/client-cloudwatch/dist-cjs/runtimeConfig.shared.js", "../../../../node_modules/@aws-sdk/client-cloudwatch/dist-cjs/runtimeConfig.js", "../../../../node_modules/@smithy/util-waiter/dist-cjs/index.js", "../../../../node_modules/@aws-sdk/client-cloudwatch/dist-cjs/index.js", "../../../../node_modules/ethers/node_modules/ws/lib/stream.js", "../../../../node_modules/ethers/node_modules/ws/lib/constants.js", "../../../../node_modules/node-gyp-build/node-gyp-build.js", "../../../../node_modules/node-gyp-build/index.js", "../../../../node_modules/bufferutil/fallback.js", "../../../../node_modules/bufferutil/index.js", "../../../../node_modules/ethers/node_modules/ws/lib/buffer-util.js", "../../../../node_modules/ethers/node_modules/ws/lib/limiter.js", "../../../../node_modules/ethers/node_modules/ws/lib/permessage-deflate.js", "../../../../node_modules/ethers/node_modules/ws/lib/validation.js", "../../../../node_modules/ethers/node_modules/ws/lib/receiver.js", "../../../../node_modules/ethers/node_modules/ws/lib/sender.js", "../../../../node_modules/ethers/node_modules/ws/lib/event-target.js", "../../../../node_modules/ethers/node_modules/ws/lib/extension.js", "../../../../node_modules/ethers/node_modules/ws/lib/websocket.js", "../../../../node_modules/ethers/node_modules/ws/lib/subprotocol.js", "../../../../node_modules/ethers/node_modules/ws/lib/websocket-server.js", "../../../../amplify/functions/blockchain-service/handler.ts", "../../../../node_modules/ethers/src.ts/index.ts", "../../../../node_modules/ethers/src.ts/ethers.ts", "../../../../node_modules/ethers/src.ts/_version.ts", "../../../../node_modules/ethers/src.ts/abi/index.ts", "../../../../node_modules/ethers/src.ts/abi/abi-coder.ts", "../../../../node_modules/ethers/src.ts/utils/index.ts", "../../../../node_modules/ethers/src.ts/utils/base58.ts", "../../../../node_modules/ethers/src.ts/utils/data.ts", "../../../../node_modules/ethers/src.ts/utils/errors.ts", "../../../../node_modules/ethers/src.ts/utils/properties.ts", "../../../../node_modules/ethers/src.ts/utils/maths.ts", "../../../../node_modules/ethers/src.ts/utils/base64.ts", "../../../../node_modules/ethers/src.ts/utils/events.ts", "../../../../node_modules/ethers/src.ts/utils/fetch.ts", "../../../../node_modules/ethers/src.ts/utils/utf8.ts", "../../../../node_modules/ethers/src.ts/utils/geturl.ts", "../../../../node_modules/ethers/src.ts/utils/fixednumber.ts", "../../../../node_modules/ethers/src.ts/utils/rlp-decode.ts", "../../../../node_modules/ethers/src.ts/utils/rlp-encode.ts", "../../../../node_modules/ethers/src.ts/utils/units.ts", "../../../../node_modules/ethers/src.ts/utils/uuid.ts", "../../../../node_modules/ethers/src.ts/abi/coders/abstract-coder.ts", "../../../../node_modules/ethers/src.ts/abi/coders/address.ts", "../../../../node_modules/ethers/src.ts/address/index.ts", "../../../../node_modules/ethers/src.ts/address/address.ts", "../../../../node_modules/ethers/src.ts/crypto/index.ts", "../../../../node_modules/ethers/src.ts/crypto/hmac.ts", "../../../../node_modules/ethers/src.ts/crypto/crypto.ts", "../../../../node_modules/ethers/src.ts/crypto/keccak.ts", "../../../../node_modules/@noble/hashes/src/sha3.ts", "../../../../node_modules/@noble/hashes/src/_assert.ts", "../../../../node_modules/@noble/hashes/src/_u64.ts", "../../../../node_modules/@noble/hashes/src/utils.ts", "../../../../node_modules/@noble/hashes/src/cryptoNode.ts", "../../../../node_modules/ethers/src.ts/crypto/ripemd160.ts", "../../../../node_modules/@noble/hashes/src/ripemd160.ts", "../../../../node_modules/@noble/hashes/src/_sha2.ts", "../../../../node_modules/ethers/src.ts/crypto/pbkdf2.ts", "../../../../node_modules/ethers/src.ts/crypto/random.ts", "../../../../node_modules/ethers/src.ts/crypto/scrypt.ts", "../../../../node_modules/@noble/hashes/src/scrypt.ts", "../../../../node_modules/@noble/hashes/src/sha256.ts", "../../../../node_modules/@noble/hashes/src/pbkdf2.ts", "../../../../node_modules/@noble/hashes/src/hmac.ts", "../../../../node_modules/ethers/src.ts/crypto/sha2.ts", "../../../../node_modules/ethers/src.ts/crypto/signing-key.ts", "../../../../node_modules/@noble/curves/src/secp256k1.ts", "../../../../node_modules/@noble/curves/src/abstract/modular.ts", "../../../../node_modules/@noble/curves/src/abstract/utils.ts", "../../../../node_modules/@noble/curves/src/abstract/weierstrass.ts", "../../../../node_modules/@noble/curves/src/abstract/curve.ts", "../../../../node_modules/@noble/curves/src/_shortw_utils.ts", "../../../../node_modules/ethers/src.ts/crypto/signature.ts", "../../../../node_modules/ethers/src.ts/constants/index.ts", "../../../../node_modules/ethers/src.ts/constants/addresses.ts", "../../../../node_modules/ethers/src.ts/constants/hashes.ts", "../../../../node_modules/ethers/src.ts/constants/numbers.ts", "../../../../node_modules/ethers/src.ts/constants/strings.ts", "../../../../node_modules/ethers/src.ts/address/contract-address.ts", "../../../../node_modules/ethers/src.ts/address/checks.ts", "../../../../node_modules/ethers/src.ts/abi/typed.ts", "../../../../node_modules/ethers/src.ts/abi/coders/array.ts", "../../../../node_modules/ethers/src.ts/abi/coders/anonymous.ts", "../../../../node_modules/ethers/src.ts/abi/coders/boolean.ts", "../../../../node_modules/ethers/src.ts/abi/coders/bytes.ts", "../../../../node_modules/ethers/src.ts/abi/coders/fixed-bytes.ts", "../../../../node_modules/ethers/src.ts/abi/coders/null.ts", "../../../../node_modules/ethers/src.ts/abi/coders/number.ts", "../../../../node_modules/ethers/src.ts/abi/coders/string.ts", "../../../../node_modules/ethers/src.ts/abi/coders/tuple.ts", "../../../../node_modules/ethers/src.ts/abi/fragments.ts", "../../../../node_modules/ethers/src.ts/hash/index.ts", "../../../../node_modules/ethers/src.ts/hash/authorization.ts", "../../../../node_modules/ethers/src.ts/transaction/index.ts", "../../../../node_modules/ethers/src.ts/transaction/accesslist.ts", "../../../../node_modules/ethers/src.ts/transaction/authorization.ts", "../../../../node_modules/ethers/src.ts/transaction/address.ts", "../../../../node_modules/ethers/src.ts/transaction/transaction.ts", "../../../../node_modules/ethers/src.ts/hash/id.ts", "../../../../node_modules/ethers/src.ts/hash/namehash.ts", "../../../../node_modules/@adraffy/ens-normalize/dist/index.mjs", "../../../../node_modules/ethers/src.ts/hash/message.ts", "../../../../node_modules/ethers/src.ts/hash/solidity.ts", "../../../../node_modules/ethers/src.ts/hash/typed-data.ts", "../../../../node_modules/ethers/src.ts/abi/bytes32.ts", "../../../../node_modules/ethers/src.ts/abi/interface.ts", "../../../../node_modules/ethers/src.ts/contract/index.ts", "../../../../node_modules/ethers/src.ts/contract/contract.ts", "../../../../node_modules/ethers/src.ts/providers/provider.ts", "../../../../node_modules/ethers/src.ts/contract/wrappers.ts", "../../../../node_modules/ethers/src.ts/contract/factory.ts", "../../../../node_modules/ethers/src.ts/providers/index.ts", "../../../../node_modules/ethers/src.ts/providers/abstract-provider.ts", "../../../../node_modules/ethers/src.ts/providers/ens-resolver.ts", "../../../../node_modules/ethers/src.ts/providers/format.ts", "../../../../node_modules/ethers/src.ts/providers/network.ts", "../../../../node_modules/ethers/src.ts/providers/plugins-network.ts", "../../../../node_modules/ethers/src.ts/providers/subscriber-polling.ts", "../../../../node_modules/ethers/src.ts/providers/abstract-signer.ts", "../../../../node_modules/ethers/src.ts/providers/community.ts", "../../../../node_modules/ethers/src.ts/providers/default-provider.ts", "../../../../node_modules/ethers/src.ts/providers/provider-ankr.ts", "../../../../node_modules/ethers/src.ts/providers/provider-jsonrpc.ts", "../../../../node_modules/ethers/src.ts/providers/subscriber-filterid.ts", "../../../../node_modules/ethers/src.ts/providers/provider-alchemy.ts", "../../../../node_modules/ethers/src.ts/providers/provider-chainstack.ts", "../../../../node_modules/ethers/src.ts/providers/provider-cloudflare.ts", "../../../../node_modules/ethers/src.ts/providers/provider-etherscan.ts", "../../../../node_modules/ethers/src.ts/providers/provider-infura.ts", "../../../../node_modules/ethers/src.ts/providers/provider-websocket.ts", "../../../../node_modules/ethers/src.ts/providers/ws.ts", "../../../../node_modules/ethers/node_modules/ws/wrapper.mjs", "../../../../node_modules/ethers/src.ts/providers/provider-socket.ts", "../../../../node_modules/ethers/src.ts/providers/provider-quicknode.ts", "../../../../node_modules/ethers/src.ts/providers/provider-fallback.ts", "../../../../node_modules/ethers/src.ts/providers/signer-noncemanager.ts", "../../../../node_modules/ethers/src.ts/providers/provider-browser.ts", "../../../../node_modules/ethers/src.ts/providers/provider-blockscout.ts", "../../../../node_modules/ethers/src.ts/providers/provider-pocket.ts", "../../../../node_modules/ethers/src.ts/providers/provider-ipcsocket.ts", "../../../../node_modules/ethers/src.ts/wallet/index.ts", "../../../../node_modules/ethers/src.ts/wallet/base-wallet.ts", "../../../../node_modules/ethers/src.ts/wallet/hdwallet.ts", "../../../../node_modules/ethers/src.ts/wordlists/lang-en.ts", "../../../../node_modules/ethers/src.ts/wordlists/wordlist-owl.ts", "../../../../node_modules/ethers/src.ts/wordlists/decode-owl.ts", "../../../../node_modules/ethers/src.ts/wordlists/wordlist.ts", "../../../../node_modules/ethers/src.ts/wallet/mnemonic.ts", "../../../../node_modules/ethers/src.ts/wallet/json-keystore.ts", "../../../../node_modules/aes-js/src.ts/index.ts", "../../../../node_modules/aes-js/src.ts/aes.ts", "../../../../node_modules/aes-js/src.ts/mode.ts", "../../../../node_modules/aes-js/src.ts/mode-cbc.ts", "../../../../node_modules/aes-js/src.ts/mode-cfb.ts", "../../../../node_modules/aes-js/src.ts/mode-ctr.ts", "../../../../node_modules/aes-js/src.ts/mode-ecb.ts", "../../../../node_modules/aes-js/src.ts/mode-ofb.ts", "../../../../node_modules/aes-js/src.ts/padding.ts", "../../../../node_modules/ethers/src.ts/wallet/utils.ts", "../../../../node_modules/ethers/src.ts/wallet/json-crowdsale.ts", "../../../../node_modules/ethers/src.ts/wallet/wallet.ts", "../../../../node_modules/ethers/src.ts/wordlists/index.ts", "../../../../node_modules/ethers/src.ts/wordlists/wordlist-owla.ts", "../../../../node_modules/ethers/src.ts/wordlists/decode-owla.ts", "../../../../node_modules/ethers/src.ts/wordlists/bit-reader.ts", "../../../../node_modules/ethers/src.ts/wordlists/wordlists.ts", "../../../../node_modules/ethers/src.ts/wordlists/lang-cz.ts", "../../../../node_modules/ethers/src.ts/wordlists/lang-es.ts", "../../../../node_modules/ethers/src.ts/wordlists/lang-fr.ts", "../../../../node_modules/ethers/src.ts/wordlists/lang-ja.ts", "../../../../node_modules/ethers/src.ts/wordlists/lang-ko.ts", "../../../../node_modules/ethers/src.ts/wordlists/lang-it.ts", "../../../../node_modules/ethers/src.ts/wordlists/lang-pt.ts", "../../../../node_modules/ethers/src.ts/wordlists/lang-zh.ts"],
  "sourcesContent": ["import { createRequire } from 'node:module';\nimport path from 'node:path';\nimport url from 'node:url';\nglobal.require = createRequire(import.meta.url);\nglobal.__filename = url.fileURLToPath(import.meta.url);\nglobal.__dirname = path.dirname(__filename);\n", "'use strict';\n\nexports.HttpAuthLocation = void 0;\n(function (HttpAuthLocation) {\n    HttpAuthLocation[\"HEADER\"] = \"header\";\n    HttpAuthLocation[\"QUERY\"] = \"query\";\n})(exports.HttpAuthLocation || (exports.HttpAuthLocation = {}));\n\nexports.HttpApiKeyAuthLocation = void 0;\n(function (HttpApiKeyAuthLocation) {\n    HttpApiKeyAuthLocation[\"HEADER\"] = \"header\";\n    HttpApiKeyAuthLocation[\"QUERY\"] = \"query\";\n})(exports.HttpApiKeyAuthLocation || (exports.HttpApiKeyAuthLocation = {}));\n\nexports.EndpointURLScheme = void 0;\n(function (EndpointURLScheme) {\n    EndpointURLScheme[\"HTTP\"] = \"http\";\n    EndpointURLScheme[\"HTTPS\"] = \"https\";\n})(exports.EndpointURLScheme || (exports.EndpointURLScheme = {}));\n\nexports.AlgorithmId = void 0;\n(function (AlgorithmId) {\n    AlgorithmId[\"MD5\"] = \"md5\";\n    AlgorithmId[\"CRC32\"] = \"crc32\";\n    AlgorithmId[\"CRC32C\"] = \"crc32c\";\n    AlgorithmId[\"SHA1\"] = \"sha1\";\n    AlgorithmId[\"SHA256\"] = \"sha256\";\n})(exports.AlgorithmId || (exports.AlgorithmId = {}));\nconst getChecksumConfiguration = (runtimeConfig) => {\n    const checksumAlgorithms = [];\n    if (runtimeConfig.sha256 !== undefined) {\n        checksumAlgorithms.push({\n            algorithmId: () => exports.AlgorithmId.SHA256,\n            checksumConstructor: () => runtimeConfig.sha256,\n        });\n    }\n    if (runtimeConfig.md5 != undefined) {\n        checksumAlgorithms.push({\n            algorithmId: () => exports.AlgorithmId.MD5,\n            checksumConstructor: () => runtimeConfig.md5,\n        });\n    }\n    return {\n        addChecksumAlgorithm(algo) {\n            checksumAlgorithms.push(algo);\n        },\n        checksumAlgorithms() {\n            return checksumAlgorithms;\n        },\n    };\n};\nconst resolveChecksumRuntimeConfig = (clientConfig) => {\n    const runtimeConfig = {};\n    clientConfig.checksumAlgorithms().forEach((checksumAlgorithm) => {\n        runtimeConfig[checksumAlgorithm.algorithmId()] = checksumAlgorithm.checksumConstructor();\n    });\n    return runtimeConfig;\n};\n\nconst getDefaultClientConfiguration = (runtimeConfig) => {\n    return getChecksumConfiguration(runtimeConfig);\n};\nconst resolveDefaultRuntimeConfig = (config) => {\n    return resolveChecksumRuntimeConfig(config);\n};\n\nexports.FieldPosition = void 0;\n(function (FieldPosition) {\n    FieldPosition[FieldPosition[\"HEADER\"] = 0] = \"HEADER\";\n    FieldPosition[FieldPosition[\"TRAILER\"] = 1] = \"TRAILER\";\n})(exports.FieldPosition || (exports.FieldPosition = {}));\n\nconst SMITHY_CONTEXT_KEY = \"__smithy_context\";\n\nexports.IniSectionType = void 0;\n(function (IniSectionType) {\n    IniSectionType[\"PROFILE\"] = \"profile\";\n    IniSectionType[\"SSO_SESSION\"] = \"sso-session\";\n    IniSectionType[\"SERVICES\"] = \"services\";\n})(exports.IniSectionType || (exports.IniSectionType = {}));\n\nexports.RequestHandlerProtocol = void 0;\n(function (RequestHandlerProtocol) {\n    RequestHandlerProtocol[\"HTTP_0_9\"] = \"http/0.9\";\n    RequestHandlerProtocol[\"HTTP_1_0\"] = \"http/1.0\";\n    RequestHandlerProtocol[\"TDS_8_0\"] = \"tds/8.0\";\n})(exports.RequestHandlerProtocol || (exports.RequestHandlerProtocol = {}));\n\nexports.SMITHY_CONTEXT_KEY = SMITHY_CONTEXT_KEY;\nexports.getDefaultClientConfiguration = getDefaultClientConfiguration;\nexports.resolveDefaultRuntimeConfig = resolveDefaultRuntimeConfig;\n", "'use strict';\n\nvar types = require('@smithy/types');\n\nconst getHttpHandlerExtensionConfiguration = (runtimeConfig) => {\n    return {\n        setHttpHandler(handler) {\n            runtimeConfig.httpHandler = handler;\n        },\n        httpHandler() {\n            return runtimeConfig.httpHandler;\n        },\n        updateHttpClientConfig(key, value) {\n            runtimeConfig.httpHandler?.updateHttpClientConfig(key, value);\n        },\n        httpHandlerConfigs() {\n            return runtimeConfig.httpHandler.httpHandlerConfigs();\n        },\n    };\n};\nconst resolveHttpHandlerRuntimeConfig = (httpHandlerExtensionConfiguration) => {\n    return {\n        httpHandler: httpHandlerExtensionConfiguration.httpHandler(),\n    };\n};\n\nclass Field {\n    name;\n    kind;\n    values;\n    constructor({ name, kind = types.FieldPosition.HEADER, values = [] }) {\n        this.name = name;\n        this.kind = kind;\n        this.values = values;\n    }\n    add(value) {\n        this.values.push(value);\n    }\n    set(values) {\n        this.values = values;\n    }\n    remove(value) {\n        this.values = this.values.filter((v) => v !== value);\n    }\n    toString() {\n        return this.values.map((v) => (v.includes(\",\") || v.includes(\" \") ? `\"${v}\"` : v)).join(\", \");\n    }\n    get() {\n        return this.values;\n    }\n}\n\nclass Fields {\n    entries = {};\n    encoding;\n    constructor({ fields = [], encoding = \"utf-8\" }) {\n        fields.forEach(this.setField.bind(this));\n        this.encoding = encoding;\n    }\n    setField(field) {\n        this.entries[field.name.toLowerCase()] = field;\n    }\n    getField(name) {\n        return this.entries[name.toLowerCase()];\n    }\n    removeField(name) {\n        delete this.entries[name.toLowerCase()];\n    }\n    getByType(kind) {\n        return Object.values(this.entries).filter((field) => field.kind === kind);\n    }\n}\n\nclass HttpRequest {\n    method;\n    protocol;\n    hostname;\n    port;\n    path;\n    query;\n    headers;\n    username;\n    password;\n    fragment;\n    body;\n    constructor(options) {\n        this.method = options.method || \"GET\";\n        this.hostname = options.hostname || \"localhost\";\n        this.port = options.port;\n        this.query = options.query || {};\n        this.headers = options.headers || {};\n        this.body = options.body;\n        this.protocol = options.protocol\n            ? options.protocol.slice(-1) !== \":\"\n                ? `${options.protocol}:`\n                : options.protocol\n            : \"https:\";\n        this.path = options.path ? (options.path.charAt(0) !== \"/\" ? `/${options.path}` : options.path) : \"/\";\n        this.username = options.username;\n        this.password = options.password;\n        this.fragment = options.fragment;\n    }\n    static clone(request) {\n        const cloned = new HttpRequest({\n            ...request,\n            headers: { ...request.headers },\n        });\n        if (cloned.query) {\n            cloned.query = cloneQuery(cloned.query);\n        }\n        return cloned;\n    }\n    static isInstance(request) {\n        if (!request) {\n            return false;\n        }\n        const req = request;\n        return (\"method\" in req &&\n            \"protocol\" in req &&\n            \"hostname\" in req &&\n            \"path\" in req &&\n            typeof req[\"query\"] === \"object\" &&\n            typeof req[\"headers\"] === \"object\");\n    }\n    clone() {\n        return HttpRequest.clone(this);\n    }\n}\nfunction cloneQuery(query) {\n    return Object.keys(query).reduce((carry, paramName) => {\n        const param = query[paramName];\n        return {\n            ...carry,\n            [paramName]: Array.isArray(param) ? [...param] : param,\n        };\n    }, {});\n}\n\nclass HttpResponse {\n    statusCode;\n    reason;\n    headers;\n    body;\n    constructor(options) {\n        this.statusCode = options.statusCode;\n        this.reason = options.reason;\n        this.headers = options.headers || {};\n        this.body = options.body;\n    }\n    static isInstance(response) {\n        if (!response)\n            return false;\n        const resp = response;\n        return typeof resp.statusCode === \"number\" && typeof resp.headers === \"object\";\n    }\n}\n\nfunction isValidHostname(hostname) {\n    const hostPattern = /^[a-z0-9][a-z0-9\\.\\-]*[a-z0-9]$/;\n    return hostPattern.test(hostname);\n}\n\nexports.Field = Field;\nexports.Fields = Fields;\nexports.HttpRequest = HttpRequest;\nexports.HttpResponse = HttpResponse;\nexports.getHttpHandlerExtensionConfiguration = getHttpHandlerExtensionConfiguration;\nexports.isValidHostname = isValidHostname;\nexports.resolveHttpHandlerRuntimeConfig = resolveHttpHandlerRuntimeConfig;\n", "\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar index_exports = {};\n__export(index_exports, {\n  getHostHeaderPlugin: () => getHostHeaderPlugin,\n  hostHeaderMiddleware: () => hostHeaderMiddleware,\n  hostHeaderMiddlewareOptions: () => hostHeaderMiddlewareOptions,\n  resolveHostHeaderConfig: () => resolveHostHeaderConfig\n});\nmodule.exports = __toCommonJS(index_exports);\nvar import_protocol_http = require(\"@smithy/protocol-http\");\nfunction resolveHostHeaderConfig(input) {\n  return input;\n}\n__name(resolveHostHeaderConfig, \"resolveHostHeaderConfig\");\nvar hostHeaderMiddleware = /* @__PURE__ */ __name((options) => (next) => async (args) => {\n  if (!import_protocol_http.HttpRequest.isInstance(args.request)) return next(args);\n  const { request } = args;\n  const { handlerProtocol = \"\" } = options.requestHandler.metadata || {};\n  if (handlerProtocol.indexOf(\"h2\") >= 0 && !request.headers[\":authority\"]) {\n    delete request.headers[\"host\"];\n    request.headers[\":authority\"] = request.hostname + (request.port ? \":\" + request.port : \"\");\n  } else if (!request.headers[\"host\"]) {\n    let host = request.hostname;\n    if (request.port != null) host += `:${request.port}`;\n    request.headers[\"host\"] = host;\n  }\n  return next(args);\n}, \"hostHeaderMiddleware\");\nvar hostHeaderMiddlewareOptions = {\n  name: \"hostHeaderMiddleware\",\n  step: \"build\",\n  priority: \"low\",\n  tags: [\"HOST\"],\n  override: true\n};\nvar getHostHeaderPlugin = /* @__PURE__ */ __name((options) => ({\n  applyToStack: /* @__PURE__ */ __name((clientStack) => {\n    clientStack.add(hostHeaderMiddleware(options), hostHeaderMiddlewareOptions);\n  }, \"applyToStack\")\n}), \"getHostHeaderPlugin\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  hostHeaderMiddleware,\n  hostHeaderMiddlewareOptions,\n  getHostHeaderPlugin,\n  resolveHostHeaderConfig\n});\n\n", "\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar index_exports = {};\n__export(index_exports, {\n  getLoggerPlugin: () => getLoggerPlugin,\n  loggerMiddleware: () => loggerMiddleware,\n  loggerMiddlewareOptions: () => loggerMiddlewareOptions\n});\nmodule.exports = __toCommonJS(index_exports);\n\n// src/loggerMiddleware.ts\nvar loggerMiddleware = /* @__PURE__ */ __name(() => (next, context) => async (args) => {\n  try {\n    const response = await next(args);\n    const { clientName, commandName, logger, dynamoDbDocumentClientOptions = {} } = context;\n    const { overrideInputFilterSensitiveLog, overrideOutputFilterSensitiveLog } = dynamoDbDocumentClientOptions;\n    const inputFilterSensitiveLog = overrideInputFilterSensitiveLog ?? context.inputFilterSensitiveLog;\n    const outputFilterSensitiveLog = overrideOutputFilterSensitiveLog ?? context.outputFilterSensitiveLog;\n    const { $metadata, ...outputWithoutMetadata } = response.output;\n    logger?.info?.({\n      clientName,\n      commandName,\n      input: inputFilterSensitiveLog(args.input),\n      output: outputFilterSensitiveLog(outputWithoutMetadata),\n      metadata: $metadata\n    });\n    return response;\n  } catch (error) {\n    const { clientName, commandName, logger, dynamoDbDocumentClientOptions = {} } = context;\n    const { overrideInputFilterSensitiveLog } = dynamoDbDocumentClientOptions;\n    const inputFilterSensitiveLog = overrideInputFilterSensitiveLog ?? context.inputFilterSensitiveLog;\n    logger?.error?.({\n      clientName,\n      commandName,\n      input: inputFilterSensitiveLog(args.input),\n      error,\n      metadata: error.$metadata\n    });\n    throw error;\n  }\n}, \"loggerMiddleware\");\nvar loggerMiddlewareOptions = {\n  name: \"loggerMiddleware\",\n  tags: [\"LOGGER\"],\n  step: \"initialize\",\n  override: true\n};\nvar getLoggerPlugin = /* @__PURE__ */ __name((options) => ({\n  applyToStack: /* @__PURE__ */ __name((clientStack) => {\n    clientStack.add(loggerMiddleware(), loggerMiddlewareOptions);\n  }, \"applyToStack\")\n}), \"getLoggerPlugin\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  loggerMiddleware,\n  loggerMiddlewareOptions,\n  getLoggerPlugin\n});\n\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InvokeStore = void 0;\nconst async_hooks_1 = require(\"async_hooks\");\n// AWS_LAMBDA_NODEJS_NO_GLOBAL_AWSLAMBDA provides an escape hatch since we're modifying the global object which may not be expected to a customer's handler.\nconst noGlobalAwsLambda = process.env[\"AWS_LAMBDA_NODEJS_NO_GLOBAL_AWSLAMBDA\"] === \"1\" ||\n    process.env[\"AWS_LAMBDA_NODEJS_NO_GLOBAL_AWSLAMBDA\"] === \"true\";\nif (!noGlobalAwsLambda) {\n    globalThis.awslambda = globalThis.awslambda || {};\n}\nconst PROTECTED_KEYS = {\n    REQUEST_ID: Symbol(\"_AWS_LAMBDA_REQUEST_ID\"),\n    X_RAY_TRACE_ID: Symbol(\"_AWS_LAMBDA_X_RAY_TRACE_ID\"),\n};\n/**\n * InvokeStore implementation class\n */\nclass InvokeStoreImpl {\n    static storage = new async_hooks_1.AsyncLocalStorage();\n    // Protected keys for Lambda context fields\n    static PROTECTED_KEYS = PROTECTED_KEYS;\n    /**\n     * Initialize and run code within an invoke context\n     */\n    static run(context, fn) {\n        return this.storage.run({ ...context }, fn);\n    }\n    /**\n     * Get the complete current context\n     */\n    static getContext() {\n        return this.storage.getStore();\n    }\n    /**\n     * Get a specific value from the context by key\n     */\n    static get(key) {\n        const context = this.storage.getStore();\n        return context?.[key];\n    }\n    /**\n     * Set a custom value in the current context\n     * Protected Lambda context fields cannot be overwritten\n     */\n    static set(key, value) {\n        if (this.isProtectedKey(key)) {\n            throw new Error(`Cannot modify protected Lambda context field`);\n        }\n        const context = this.storage.getStore();\n        if (context) {\n            context[key] = value;\n        }\n    }\n    /**\n     * Get the current request ID\n     */\n    static getRequestId() {\n        return this.get(this.PROTECTED_KEYS.REQUEST_ID) ?? \"-\";\n    }\n    /**\n     * Get the current X-ray trace ID\n     */\n    static getXRayTraceId() {\n        return this.get(this.PROTECTED_KEYS.X_RAY_TRACE_ID);\n    }\n    /**\n     * Check if we're currently within an invoke context\n     */\n    static hasContext() {\n        return this.storage.getStore() !== undefined;\n    }\n    /**\n     * Check if a key is protected (readonly Lambda context field)\n     */\n    static isProtectedKey(key) {\n        return (key === this.PROTECTED_KEYS.REQUEST_ID ||\n            key === this.PROTECTED_KEYS.X_RAY_TRACE_ID);\n    }\n}\nlet instance;\nif (!noGlobalAwsLambda && globalThis.awslambda?.InvokeStore) {\n    instance = globalThis.awslambda.InvokeStore;\n}\nelse {\n    instance = InvokeStoreImpl;\n    if (!noGlobalAwsLambda && globalThis.awslambda) {\n        globalThis.awslambda.InvokeStore = instance;\n    }\n}\nexports.InvokeStore = instance;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.recursionDetectionMiddleware = void 0;\nconst lambda_invoke_store_1 = require(\"@aws/lambda-invoke-store\");\nconst protocol_http_1 = require(\"@smithy/protocol-http\");\nconst TRACE_ID_HEADER_NAME = \"X-Amzn-Trace-Id\";\nconst ENV_LAMBDA_FUNCTION_NAME = \"AWS_LAMBDA_FUNCTION_NAME\";\nconst ENV_TRACE_ID = \"_X_AMZN_TRACE_ID\";\nconst recursionDetectionMiddleware = () => (next) => async (args) => {\n    const { request } = args;\n    if (!protocol_http_1.HttpRequest.isInstance(request)) {\n        return next(args);\n    }\n    const traceIdHeader = Object.keys(request.headers ?? {}).find((h) => h.toLowerCase() === TRACE_ID_HEADER_NAME.toLowerCase()) ??\n        TRACE_ID_HEADER_NAME;\n    if (request.headers.hasOwnProperty(traceIdHeader)) {\n        return next(args);\n    }\n    const functionName = process.env[ENV_LAMBDA_FUNCTION_NAME];\n    const traceIdFromEnv = process.env[ENV_TRACE_ID];\n    const traceIdFromInvokeStore = lambda_invoke_store_1.InvokeStore.getXRayTraceId();\n    const traceId = traceIdFromInvokeStore ?? traceIdFromEnv;\n    const nonEmptyString = (str) => typeof str === \"string\" && str.length > 0;\n    if (nonEmptyString(functionName) && nonEmptyString(traceId)) {\n        request.headers[TRACE_ID_HEADER_NAME] = traceId;\n    }\n    return next({\n        ...args,\n        request,\n    });\n};\nexports.recursionDetectionMiddleware = recursionDetectionMiddleware;\n", "\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar index_exports = {};\n__export(index_exports, {\n  getRecursionDetectionPlugin: () => getRecursionDetectionPlugin\n});\nmodule.exports = __toCommonJS(index_exports);\n\n// src/configuration.ts\nvar recursionDetectionMiddlewareOptions = {\n  step: \"build\",\n  tags: [\"RECURSION_DETECTION\"],\n  name: \"recursionDetectionMiddleware\",\n  override: true,\n  priority: \"low\"\n};\n\n// src/getRecursionDetectionPlugin.ts\nvar import_recursionDetectionMiddleware = require(\"././recursionDetectionMiddleware\");\nvar getRecursionDetectionPlugin = /* @__PURE__ */ __name((options) => ({\n  applyToStack: /* @__PURE__ */ __name((clientStack) => {\n    clientStack.add((0, import_recursionDetectionMiddleware.recursionDetectionMiddleware)(), recursionDetectionMiddlewareOptions);\n  }, \"applyToStack\")\n}), \"getRecursionDetectionPlugin\");\n\n// src/index.ts\n__reExport(index_exports, require(\"././recursionDetectionMiddleware\"), module.exports);\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  getRecursionDetectionPlugin,\n  recursionDetectionMiddleware\n});\n\n", "import { SMITHY_CONTEXT_KEY } from \"@smithy/types\";\nexport const getSmithyContext = (context) => context[SMITHY_CONTEXT_KEY] || (context[SMITHY_CONTEXT_KEY] = {});\n", "'use strict';\n\nvar types = require('@smithy/types');\n\nconst getSmithyContext = (context) => context[types.SMITHY_CONTEXT_KEY] || (context[types.SMITHY_CONTEXT_KEY] = {});\n\nconst normalizeProvider = (input) => {\n    if (typeof input === \"function\")\n        return input;\n    const promisified = Promise.resolve(input);\n    return () => promisified;\n};\n\nexports.getSmithyContext = getSmithyContext;\nexports.normalizeProvider = normalizeProvider;\n", "export const resolveAuthOptions = (candidateAuthOptions, authSchemePreference) => {\n    if (!authSchemePreference || authSchemePreference.length === 0) {\n        return candidateAuthOptions;\n    }\n    const preferredAuthOptions = [];\n    for (const preferredSchemeName of authSchemePreference) {\n        for (const candidateAuthOption of candidateAuthOptions) {\n            const candidateAuthSchemeName = candidateAuthOption.schemeId.split(\"#\")[1];\n            if (candidateAuthSchemeName === preferredSchemeName) {\n                preferredAuthOptions.push(candidateAuthOption);\n            }\n        }\n    }\n    for (const candidateAuthOption of candidateAuthOptions) {\n        if (!preferredAuthOptions.find(({ schemeId }) => schemeId === candidateAuthOption.schemeId)) {\n            preferredAuthOptions.push(candidateAuthOption);\n        }\n    }\n    return preferredAuthOptions;\n};\n", "import { getSmithyContext } from \"@smithy/util-middleware\";\nimport { resolveAuthOptions } from \"./resolveAuthOptions\";\nfunction convertHttpAuthSchemesToMap(httpAuthSchemes) {\n    const map = new Map();\n    for (const scheme of httpAuthSchemes) {\n        map.set(scheme.schemeId, scheme);\n    }\n    return map;\n}\nexport const httpAuthSchemeMiddleware = (config, mwOptions) => (next, context) => async (args) => {\n    const options = config.httpAuthSchemeProvider(await mwOptions.httpAuthSchemeParametersProvider(config, context, args.input));\n    const authSchemePreference = config.authSchemePreference ? await config.authSchemePreference() : [];\n    const resolvedOptions = resolveAuthOptions(options, authSchemePreference);\n    const authSchemes = convertHttpAuthSchemesToMap(config.httpAuthSchemes);\n    const smithyContext = getSmithyContext(context);\n    const failureReasons = [];\n    for (const option of resolvedOptions) {\n        const scheme = authSchemes.get(option.schemeId);\n        if (!scheme) {\n            failureReasons.push(`HttpAuthScheme \\`${option.schemeId}\\` was not enabled for this service.`);\n            continue;\n        }\n        const identityProvider = scheme.identityProvider(await mwOptions.identityProviderConfigProvider(config));\n        if (!identityProvider) {\n            failureReasons.push(`HttpAuthScheme \\`${option.schemeId}\\` did not have an IdentityProvider configured.`);\n            continue;\n        }\n        const { identityProperties = {}, signingProperties = {} } = option.propertiesExtractor?.(config, context) || {};\n        option.identityProperties = Object.assign(option.identityProperties || {}, identityProperties);\n        option.signingProperties = Object.assign(option.signingProperties || {}, signingProperties);\n        smithyContext.selectedHttpAuthScheme = {\n            httpAuthOption: option,\n            identity: await identityProvider(option.identityProperties),\n            signer: scheme.signer,\n        };\n        break;\n    }\n    if (!smithyContext.selectedHttpAuthScheme) {\n        throw new Error(failureReasons.join(\"\\n\"));\n    }\n    return next(args);\n};\n", "import { httpAuthSchemeMiddleware } from \"./httpAuthSchemeMiddleware\";\nexport const httpAuthSchemeEndpointRuleSetMiddlewareOptions = {\n    step: \"serialize\",\n    tags: [\"HTTP_AUTH_SCHEME\"],\n    name: \"httpAuthSchemeMiddleware\",\n    override: true,\n    relation: \"before\",\n    toMiddleware: \"endpointV2Middleware\",\n};\nexport const getHttpAuthSchemeEndpointRuleSetPlugin = (config, { httpAuthSchemeParametersProvider, identityProviderConfigProvider, }) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(httpAuthSchemeMiddleware(config, {\n            httpAuthSchemeParametersProvider,\n            identityProviderConfigProvider,\n        }), httpAuthSchemeEndpointRuleSetMiddlewareOptions);\n    },\n});\n", "'use strict';\n\nvar protocolHttp = require('@smithy/protocol-http');\n\nconst deserializerMiddleware = (options, deserializer) => (next, context) => async (args) => {\n    const { response } = await next(args);\n    try {\n        const parsed = await deserializer(response, options);\n        return {\n            response,\n            output: parsed,\n        };\n    }\n    catch (error) {\n        Object.defineProperty(error, \"$response\", {\n            value: response,\n        });\n        if (!(\"$metadata\" in error)) {\n            const hint = `Deserialization error: to see the raw response, inspect the hidden field {error}.$response on this object.`;\n            try {\n                error.message += \"\\n  \" + hint;\n            }\n            catch (e) {\n                if (!context.logger || context.logger?.constructor?.name === \"NoOpLogger\") {\n                    console.warn(hint);\n                }\n                else {\n                    context.logger?.warn?.(hint);\n                }\n            }\n            if (typeof error.$responseBodyText !== \"undefined\") {\n                if (error.$response) {\n                    error.$response.body = error.$responseBodyText;\n                }\n            }\n            try {\n                if (protocolHttp.HttpResponse.isInstance(response)) {\n                    const { headers = {} } = response;\n                    const headerEntries = Object.entries(headers);\n                    error.$metadata = {\n                        httpStatusCode: response.statusCode,\n                        requestId: findHeader(/^x-[\\w-]+-request-?id$/, headerEntries),\n                        extendedRequestId: findHeader(/^x-[\\w-]+-id-2$/, headerEntries),\n                        cfId: findHeader(/^x-[\\w-]+-cf-id$/, headerEntries),\n                    };\n                }\n            }\n            catch (e) {\n            }\n        }\n        throw error;\n    }\n};\nconst findHeader = (pattern, headers) => {\n    return (headers.find(([k]) => {\n        return k.match(pattern);\n    }) || [void 0, void 0])[1];\n};\n\nconst serializerMiddleware = (options, serializer) => (next, context) => async (args) => {\n    const endpointConfig = options;\n    const endpoint = context.endpointV2?.url && endpointConfig.urlParser\n        ? async () => endpointConfig.urlParser(context.endpointV2.url)\n        : endpointConfig.endpoint;\n    if (!endpoint) {\n        throw new Error(\"No valid endpoint provider available.\");\n    }\n    const request = await serializer(args.input, { ...options, endpoint });\n    return next({\n        ...args,\n        request,\n    });\n};\n\nconst deserializerMiddlewareOption = {\n    name: \"deserializerMiddleware\",\n    step: \"deserialize\",\n    tags: [\"DESERIALIZER\"],\n    override: true,\n};\nconst serializerMiddlewareOption = {\n    name: \"serializerMiddleware\",\n    step: \"serialize\",\n    tags: [\"SERIALIZER\"],\n    override: true,\n};\nfunction getSerdePlugin(config, serializer, deserializer) {\n    return {\n        applyToStack: (commandStack) => {\n            commandStack.add(deserializerMiddleware(config, deserializer), deserializerMiddlewareOption);\n            commandStack.add(serializerMiddleware(config, serializer), serializerMiddlewareOption);\n        },\n    };\n}\n\nexports.deserializerMiddleware = deserializerMiddleware;\nexports.deserializerMiddlewareOption = deserializerMiddlewareOption;\nexports.getSerdePlugin = getSerdePlugin;\nexports.serializerMiddleware = serializerMiddleware;\nexports.serializerMiddlewareOption = serializerMiddlewareOption;\n", "import { serializerMiddlewareOption } from \"@smithy/middleware-serde\";\nimport { httpAuthSchemeMiddleware } from \"./httpAuthSchemeMiddleware\";\nexport const httpAuthSchemeMiddlewareOptions = {\n    step: \"serialize\",\n    tags: [\"HTTP_AUTH_SCHEME\"],\n    name: \"httpAuthSchemeMiddleware\",\n    override: true,\n    relation: \"before\",\n    toMiddleware: serializerMiddlewareOption.name,\n};\nexport const getHttpAuthSchemePlugin = (config, { httpAuthSchemeParametersProvider, identityProviderConfigProvider, }) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(httpAuthSchemeMiddleware(config, {\n            httpAuthSchemeParametersProvider,\n            identityProviderConfigProvider,\n        }), httpAuthSchemeMiddlewareOptions);\n    },\n});\n", "export * from \"./httpAuthSchemeMiddleware\";\nexport * from \"./getHttpAuthSchemeEndpointRuleSetPlugin\";\nexport * from \"./getHttpAuthSchemePlugin\";\n", "import { HttpRequest } from \"@smithy/protocol-http\";\nimport { getSmithyContext } from \"@smithy/util-middleware\";\nconst defaultErrorHandler = (signingProperties) => (error) => {\n    throw error;\n};\nconst defaultSuccessHandler = (httpResponse, signingProperties) => { };\nexport const httpSigningMiddleware = (config) => (next, context) => async (args) => {\n    if (!HttpRequest.isInstance(args.request)) {\n        return next(args);\n    }\n    const smithyContext = getSmithyContext(context);\n    const scheme = smithyContext.selectedHttpAuthScheme;\n    if (!scheme) {\n        throw new Error(`No HttpAuthScheme was selected: unable to sign request`);\n    }\n    const { httpAuthOption: { signingProperties = {} }, identity, signer, } = scheme;\n    const output = await next({\n        ...args,\n        request: await signer.sign(args.request, identity, signingProperties),\n    }).catch((signer.errorHandler || defaultErrorHandler)(signingProperties));\n    (signer.successHandler || defaultSuccessHandler)(output.response, signingProperties);\n    return output;\n};\n", "import { httpSigningMiddleware } from \"./httpSigningMiddleware\";\nexport const httpSigningMiddlewareOptions = {\n    step: \"finalizeRequest\",\n    tags: [\"HTTP_SIGNING\"],\n    name: \"httpSigningMiddleware\",\n    aliases: [\"apiKeyMiddleware\", \"tokenMiddleware\", \"awsAuthMiddleware\"],\n    override: true,\n    relation: \"after\",\n    toMiddleware: \"retryMiddleware\",\n};\nexport const getHttpSigningPlugin = (config) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(httpSigningMiddleware(config), httpSigningMiddlewareOptions);\n    },\n});\n", "export * from \"./httpSigningMiddleware\";\nexport * from \"./getHttpSigningMiddleware\";\n", "export const normalizeProvider = (input) => {\n    if (typeof input === \"function\")\n        return input;\n    const promisified = Promise.resolve(input);\n    return () => promisified;\n};\n", "const makePagedClientRequest = async (CommandCtor, client, input, withCommand = (_) => _, ...args) => {\n    let command = new CommandCtor(input);\n    command = withCommand(command) ?? command;\n    return await client.send(command, ...args);\n};\nexport function createPaginator(ClientCtor, CommandCtor, inputTokenName, outputTokenName, pageSizeTokenName) {\n    return async function* paginateOperation(config, input, ...additionalArguments) {\n        const _input = input;\n        let token = config.startingToken ?? _input[inputTokenName];\n        let hasNext = true;\n        let page;\n        while (hasNext) {\n            _input[inputTokenName] = token;\n            if (pageSizeTokenName) {\n                _input[pageSizeTokenName] = _input[pageSizeTokenName] ?? config.pageSize;\n            }\n            if (config.client instanceof ClientCtor) {\n                page = await makePagedClientRequest(CommandCtor, config.client, input, config.withCommand, ...additionalArguments);\n            }\n            else {\n                throw new Error(`Invalid client, expected instance of ${ClientCtor.name}`);\n            }\n            yield page;\n            const prevToken = token;\n            token = get(page, outputTokenName);\n            hasNext = !!(token && (!config.stopOnSameToken || token !== prevToken));\n        }\n        return undefined;\n    };\n}\nconst get = (fromObject, path) => {\n    let cursor = fromObject;\n    const pathComponents = path.split(\".\");\n    for (const step of pathComponents) {\n        if (!cursor || typeof cursor !== \"object\") {\n            return undefined;\n        }\n        cursor = cursor[step];\n    }\n    return cursor;\n};\n", "'use strict';\n\nconst isArrayBuffer = (arg) => (typeof ArrayBuffer === \"function\" && arg instanceof ArrayBuffer) ||\n    Object.prototype.toString.call(arg) === \"[object ArrayBuffer]\";\n\nexports.isArrayBuffer = isArrayBuffer;\n", "'use strict';\n\nvar isArrayBuffer = require('@smithy/is-array-buffer');\nvar buffer = require('buffer');\n\nconst fromArrayBuffer = (input, offset = 0, length = input.byteLength - offset) => {\n    if (!isArrayBuffer.isArrayBuffer(input)) {\n        throw new TypeError(`The \"input\" argument must be ArrayBuffer. Received type ${typeof input} (${input})`);\n    }\n    return buffer.Buffer.from(input, offset, length);\n};\nconst fromString = (input, encoding) => {\n    if (typeof input !== \"string\") {\n        throw new TypeError(`The \"input\" argument must be of type string. Received type ${typeof input} (${input})`);\n    }\n    return encoding ? buffer.Buffer.from(input, encoding) : buffer.Buffer.from(input);\n};\n\nexports.fromArrayBuffer = fromArrayBuffer;\nexports.fromString = fromString;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromBase64 = void 0;\nconst util_buffer_from_1 = require(\"@smithy/util-buffer-from\");\nconst BASE64_REGEX = /^[A-Za-z0-9+/]*={0,2}$/;\nconst fromBase64 = (input) => {\n    if ((input.length * 3) % 4 !== 0) {\n        throw new TypeError(`Incorrect padding on base64 string.`);\n    }\n    if (!BASE64_REGEX.exec(input)) {\n        throw new TypeError(`Invalid base64 string.`);\n    }\n    const buffer = (0, util_buffer_from_1.fromString)(input, \"base64\");\n    return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n};\nexports.fromBase64 = fromBase64;\n", "'use strict';\n\nvar utilBufferFrom = require('@smithy/util-buffer-from');\n\nconst fromUtf8 = (input) => {\n    const buf = utilBufferFrom.fromString(input, \"utf8\");\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n};\n\nconst toUint8Array = (data) => {\n    if (typeof data === \"string\") {\n        return fromUtf8(data);\n    }\n    if (ArrayBuffer.isView(data)) {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n    }\n    return new Uint8Array(data);\n};\n\nconst toUtf8 = (input) => {\n    if (typeof input === \"string\") {\n        return input;\n    }\n    if (typeof input !== \"object\" || typeof input.byteOffset !== \"number\" || typeof input.byteLength !== \"number\") {\n        throw new Error(\"@smithy/util-utf8: toUtf8 encoder function only accepts string | Uint8Array.\");\n    }\n    return utilBufferFrom.fromArrayBuffer(input.buffer, input.byteOffset, input.byteLength).toString(\"utf8\");\n};\n\nexports.fromUtf8 = fromUtf8;\nexports.toUint8Array = toUint8Array;\nexports.toUtf8 = toUtf8;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toBase64 = void 0;\nconst util_buffer_from_1 = require(\"@smithy/util-buffer-from\");\nconst util_utf8_1 = require(\"@smithy/util-utf8\");\nconst toBase64 = (_input) => {\n    let input;\n    if (typeof _input === \"string\") {\n        input = (0, util_utf8_1.fromUtf8)(_input);\n    }\n    else {\n        input = _input;\n    }\n    if (typeof input !== \"object\" || typeof input.byteOffset !== \"number\" || typeof input.byteLength !== \"number\") {\n        throw new Error(\"@smithy/util-base64: toBase64 encoder function only accepts string | Uint8Array.\");\n    }\n    return (0, util_buffer_from_1.fromArrayBuffer)(input.buffer, input.byteOffset, input.byteLength).toString(\"base64\");\n};\nexports.toBase64 = toBase64;\n", "'use strict';\n\nvar fromBase64 = require('./fromBase64');\nvar toBase64 = require('./toBase64');\n\n\n\nObject.keys(fromBase64).forEach(function (k) {\n\tif (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () { return fromBase64[k]; }\n\t});\n});\nObject.keys(toBase64).forEach(function (k) {\n\tif (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () { return toBase64[k]; }\n\t});\n});\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChecksumStream = void 0;\nconst util_base64_1 = require(\"@smithy/util-base64\");\nconst stream_1 = require(\"stream\");\nclass ChecksumStream extends stream_1.Duplex {\n    expectedChecksum;\n    checksumSourceLocation;\n    checksum;\n    source;\n    base64Encoder;\n    constructor({ expectedChecksum, checksum, source, checksumSourceLocation, base64Encoder, }) {\n        super();\n        if (typeof source.pipe === \"function\") {\n            this.source = source;\n        }\n        else {\n            throw new Error(`@smithy/util-stream: unsupported source type ${source?.constructor?.name ?? source} in ChecksumStream.`);\n        }\n        this.base64Encoder = base64Encoder ?? util_base64_1.toBase64;\n        this.expectedChecksum = expectedChecksum;\n        this.checksum = checksum;\n        this.checksumSourceLocation = checksumSourceLocation;\n        this.source.pipe(this);\n    }\n    _read(size) { }\n    _write(chunk, encoding, callback) {\n        try {\n            this.checksum.update(chunk);\n            this.push(chunk);\n        }\n        catch (e) {\n            return callback(e);\n        }\n        return callback();\n    }\n    async _final(callback) {\n        try {\n            const digest = await this.checksum.digest();\n            const received = this.base64Encoder(digest);\n            if (this.expectedChecksum !== received) {\n                return callback(new Error(`Checksum mismatch: expected \"${this.expectedChecksum}\" but received \"${received}\"` +\n                    ` in response header \"${this.checksumSourceLocation}\".`));\n            }\n        }\n        catch (e) {\n            return callback(e);\n        }\n        this.push(null);\n        return callback();\n    }\n}\nexports.ChecksumStream = ChecksumStream;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isBlob = exports.isReadableStream = void 0;\nconst isReadableStream = (stream) => typeof ReadableStream === \"function\" &&\n    (stream?.constructor?.name === ReadableStream.name || stream instanceof ReadableStream);\nexports.isReadableStream = isReadableStream;\nconst isBlob = (blob) => {\n    return typeof Blob === \"function\" && (blob?.constructor?.name === Blob.name || blob instanceof Blob);\n};\nexports.isBlob = isBlob;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChecksumStream = void 0;\nconst ReadableStreamRef = typeof ReadableStream === \"function\" ? ReadableStream : function () { };\nclass ChecksumStream extends ReadableStreamRef {\n}\nexports.ChecksumStream = ChecksumStream;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createChecksumStream = void 0;\nconst util_base64_1 = require(\"@smithy/util-base64\");\nconst stream_type_check_1 = require(\"../stream-type-check\");\nconst ChecksumStream_browser_1 = require(\"./ChecksumStream.browser\");\nconst createChecksumStream = ({ expectedChecksum, checksum, source, checksumSourceLocation, base64Encoder, }) => {\n    if (!(0, stream_type_check_1.isReadableStream)(source)) {\n        throw new Error(`@smithy/util-stream: unsupported source type ${source?.constructor?.name ?? source} in ChecksumStream.`);\n    }\n    const encoder = base64Encoder ?? util_base64_1.toBase64;\n    if (typeof TransformStream !== \"function\") {\n        throw new Error(\"@smithy/util-stream: unable to instantiate ChecksumStream because API unavailable: ReadableStream/TransformStream.\");\n    }\n    const transform = new TransformStream({\n        start() { },\n        async transform(chunk, controller) {\n            checksum.update(chunk);\n            controller.enqueue(chunk);\n        },\n        async flush(controller) {\n            const digest = await checksum.digest();\n            const received = encoder(digest);\n            if (expectedChecksum !== received) {\n                const error = new Error(`Checksum mismatch: expected \"${expectedChecksum}\" but received \"${received}\"` +\n                    ` in response header \"${checksumSourceLocation}\".`);\n                controller.error(error);\n            }\n            else {\n                controller.terminate();\n            }\n        },\n    });\n    source.pipeThrough(transform);\n    const readable = transform.readable;\n    Object.setPrototypeOf(readable, ChecksumStream_browser_1.ChecksumStream.prototype);\n    return readable;\n};\nexports.createChecksumStream = createChecksumStream;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createChecksumStream = createChecksumStream;\nconst stream_type_check_1 = require(\"../stream-type-check\");\nconst ChecksumStream_1 = require(\"./ChecksumStream\");\nconst createChecksumStream_browser_1 = require(\"./createChecksumStream.browser\");\nfunction createChecksumStream(init) {\n    if (typeof ReadableStream === \"function\" && (0, stream_type_check_1.isReadableStream)(init.source)) {\n        return (0, createChecksumStream_browser_1.createChecksumStream)(init);\n    }\n    return new ChecksumStream_1.ChecksumStream(init);\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ByteArrayCollector = void 0;\nclass ByteArrayCollector {\n    allocByteArray;\n    byteLength = 0;\n    byteArrays = [];\n    constructor(allocByteArray) {\n        this.allocByteArray = allocByteArray;\n    }\n    push(byteArray) {\n        this.byteArrays.push(byteArray);\n        this.byteLength += byteArray.byteLength;\n    }\n    flush() {\n        if (this.byteArrays.length === 1) {\n            const bytes = this.byteArrays[0];\n            this.reset();\n            return bytes;\n        }\n        const aggregation = this.allocByteArray(this.byteLength);\n        let cursor = 0;\n        for (let i = 0; i < this.byteArrays.length; ++i) {\n            const bytes = this.byteArrays[i];\n            aggregation.set(bytes, cursor);\n            cursor += bytes.byteLength;\n        }\n        this.reset();\n        return aggregation;\n    }\n    reset() {\n        this.byteArrays = [];\n        this.byteLength = 0;\n    }\n}\nexports.ByteArrayCollector = ByteArrayCollector;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createBufferedReadable = void 0;\nexports.createBufferedReadableStream = createBufferedReadableStream;\nexports.merge = merge;\nexports.flush = flush;\nexports.sizeOf = sizeOf;\nexports.modeOf = modeOf;\nconst ByteArrayCollector_1 = require(\"./ByteArrayCollector\");\nfunction createBufferedReadableStream(upstream, size, logger) {\n    const reader = upstream.getReader();\n    let streamBufferingLoggedWarning = false;\n    let bytesSeen = 0;\n    const buffers = [\"\", new ByteArrayCollector_1.ByteArrayCollector((size) => new Uint8Array(size))];\n    let mode = -1;\n    const pull = async (controller) => {\n        const { value, done } = await reader.read();\n        const chunk = value;\n        if (done) {\n            if (mode !== -1) {\n                const remainder = flush(buffers, mode);\n                if (sizeOf(remainder) > 0) {\n                    controller.enqueue(remainder);\n                }\n            }\n            controller.close();\n        }\n        else {\n            const chunkMode = modeOf(chunk, false);\n            if (mode !== chunkMode) {\n                if (mode >= 0) {\n                    controller.enqueue(flush(buffers, mode));\n                }\n                mode = chunkMode;\n            }\n            if (mode === -1) {\n                controller.enqueue(chunk);\n                return;\n            }\n            const chunkSize = sizeOf(chunk);\n            bytesSeen += chunkSize;\n            const bufferSize = sizeOf(buffers[mode]);\n            if (chunkSize >= size && bufferSize === 0) {\n                controller.enqueue(chunk);\n            }\n            else {\n                const newSize = merge(buffers, mode, chunk);\n                if (!streamBufferingLoggedWarning && bytesSeen > size * 2) {\n                    streamBufferingLoggedWarning = true;\n                    logger?.warn(`@smithy/util-stream - stream chunk size ${chunkSize} is below threshold of ${size}, automatically buffering.`);\n                }\n                if (newSize >= size) {\n                    controller.enqueue(flush(buffers, mode));\n                }\n                else {\n                    await pull(controller);\n                }\n            }\n        }\n    };\n    return new ReadableStream({\n        pull,\n    });\n}\nexports.createBufferedReadable = createBufferedReadableStream;\nfunction merge(buffers, mode, chunk) {\n    switch (mode) {\n        case 0:\n            buffers[0] += chunk;\n            return sizeOf(buffers[0]);\n        case 1:\n        case 2:\n            buffers[mode].push(chunk);\n            return sizeOf(buffers[mode]);\n    }\n}\nfunction flush(buffers, mode) {\n    switch (mode) {\n        case 0:\n            const s = buffers[0];\n            buffers[0] = \"\";\n            return s;\n        case 1:\n        case 2:\n            return buffers[mode].flush();\n    }\n    throw new Error(`@smithy/util-stream - invalid index ${mode} given to flush()`);\n}\nfunction sizeOf(chunk) {\n    return chunk?.byteLength ?? chunk?.length ?? 0;\n}\nfunction modeOf(chunk, allowBuffer = true) {\n    if (allowBuffer && typeof Buffer !== \"undefined\" && chunk instanceof Buffer) {\n        return 2;\n    }\n    if (chunk instanceof Uint8Array) {\n        return 1;\n    }\n    if (typeof chunk === \"string\") {\n        return 0;\n    }\n    return -1;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createBufferedReadable = createBufferedReadable;\nconst node_stream_1 = require(\"node:stream\");\nconst ByteArrayCollector_1 = require(\"./ByteArrayCollector\");\nconst createBufferedReadableStream_1 = require(\"./createBufferedReadableStream\");\nconst stream_type_check_1 = require(\"./stream-type-check\");\nfunction createBufferedReadable(upstream, size, logger) {\n    if ((0, stream_type_check_1.isReadableStream)(upstream)) {\n        return (0, createBufferedReadableStream_1.createBufferedReadableStream)(upstream, size, logger);\n    }\n    const downstream = new node_stream_1.Readable({ read() { } });\n    let streamBufferingLoggedWarning = false;\n    let bytesSeen = 0;\n    const buffers = [\n        \"\",\n        new ByteArrayCollector_1.ByteArrayCollector((size) => new Uint8Array(size)),\n        new ByteArrayCollector_1.ByteArrayCollector((size) => Buffer.from(new Uint8Array(size))),\n    ];\n    let mode = -1;\n    upstream.on(\"data\", (chunk) => {\n        const chunkMode = (0, createBufferedReadableStream_1.modeOf)(chunk, true);\n        if (mode !== chunkMode) {\n            if (mode >= 0) {\n                downstream.push((0, createBufferedReadableStream_1.flush)(buffers, mode));\n            }\n            mode = chunkMode;\n        }\n        if (mode === -1) {\n            downstream.push(chunk);\n            return;\n        }\n        const chunkSize = (0, createBufferedReadableStream_1.sizeOf)(chunk);\n        bytesSeen += chunkSize;\n        const bufferSize = (0, createBufferedReadableStream_1.sizeOf)(buffers[mode]);\n        if (chunkSize >= size && bufferSize === 0) {\n            downstream.push(chunk);\n        }\n        else {\n            const newSize = (0, createBufferedReadableStream_1.merge)(buffers, mode, chunk);\n            if (!streamBufferingLoggedWarning && bytesSeen > size * 2) {\n                streamBufferingLoggedWarning = true;\n                logger?.warn(`@smithy/util-stream - stream chunk size ${chunkSize} is below threshold of ${size}, automatically buffering.`);\n            }\n            if (newSize >= size) {\n                downstream.push((0, createBufferedReadableStream_1.flush)(buffers, mode));\n            }\n        }\n    });\n    upstream.on(\"end\", () => {\n        if (mode !== -1) {\n            const remainder = (0, createBufferedReadableStream_1.flush)(buffers, mode);\n            if ((0, createBufferedReadableStream_1.sizeOf)(remainder) > 0) {\n                downstream.push(remainder);\n            }\n        }\n        downstream.push(null);\n    });\n    return downstream;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAwsChunkedEncodingStream = void 0;\nconst stream_1 = require(\"stream\");\nconst getAwsChunkedEncodingStream = (readableStream, options) => {\n    const { base64Encoder, bodyLengthChecker, checksumAlgorithmFn, checksumLocationName, streamHasher } = options;\n    const checksumRequired = base64Encoder !== undefined &&\n        checksumAlgorithmFn !== undefined &&\n        checksumLocationName !== undefined &&\n        streamHasher !== undefined;\n    const digest = checksumRequired ? streamHasher(checksumAlgorithmFn, readableStream) : undefined;\n    const awsChunkedEncodingStream = new stream_1.Readable({ read: () => { } });\n    readableStream.on(\"data\", (data) => {\n        const length = bodyLengthChecker(data) || 0;\n        awsChunkedEncodingStream.push(`${length.toString(16)}\\r\\n`);\n        awsChunkedEncodingStream.push(data);\n        awsChunkedEncodingStream.push(\"\\r\\n\");\n    });\n    readableStream.on(\"end\", async () => {\n        awsChunkedEncodingStream.push(`0\\r\\n`);\n        if (checksumRequired) {\n            const checksum = base64Encoder(await digest);\n            awsChunkedEncodingStream.push(`${checksumLocationName}:${checksum}\\r\\n`);\n            awsChunkedEncodingStream.push(`\\r\\n`);\n        }\n        awsChunkedEncodingStream.push(null);\n    });\n    return awsChunkedEncodingStream;\n};\nexports.getAwsChunkedEncodingStream = getAwsChunkedEncodingStream;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.headStream = headStream;\nasync function headStream(stream, bytes) {\n    let byteLengthCounter = 0;\n    const chunks = [];\n    const reader = stream.getReader();\n    let isDone = false;\n    while (!isDone) {\n        const { done, value } = await reader.read();\n        if (value) {\n            chunks.push(value);\n            byteLengthCounter += value?.byteLength ?? 0;\n        }\n        if (byteLengthCounter >= bytes) {\n            break;\n        }\n        isDone = done;\n    }\n    reader.releaseLock();\n    const collected = new Uint8Array(Math.min(bytes, byteLengthCounter));\n    let offset = 0;\n    for (const chunk of chunks) {\n        if (chunk.byteLength > collected.byteLength - offset) {\n            collected.set(chunk.subarray(0, collected.byteLength - offset), offset);\n            break;\n        }\n        else {\n            collected.set(chunk, offset);\n        }\n        offset += chunk.length;\n    }\n    return collected;\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.headStream = void 0;\nconst stream_1 = require(\"stream\");\nconst headStream_browser_1 = require(\"./headStream.browser\");\nconst stream_type_check_1 = require(\"./stream-type-check\");\nconst headStream = (stream, bytes) => {\n    if ((0, stream_type_check_1.isReadableStream)(stream)) {\n        return (0, headStream_browser_1.headStream)(stream, bytes);\n    }\n    return new Promise((resolve, reject) => {\n        const collector = new Collector();\n        collector.limit = bytes;\n        stream.pipe(collector);\n        stream.on(\"error\", (err) => {\n            collector.end();\n            reject(err);\n        });\n        collector.on(\"error\", reject);\n        collector.on(\"finish\", function () {\n            const bytes = new Uint8Array(Buffer.concat(this.buffers));\n            resolve(bytes);\n        });\n    });\n};\nexports.headStream = headStream;\nclass Collector extends stream_1.Writable {\n    buffers = [];\n    limit = Infinity;\n    bytesBuffered = 0;\n    _write(chunk, encoding, callback) {\n        this.buffers.push(chunk);\n        this.bytesBuffered += chunk.byteLength ?? 0;\n        if (this.bytesBuffered >= this.limit) {\n            const excess = this.bytesBuffered - this.limit;\n            const tailBuffer = this.buffers[this.buffers.length - 1];\n            this.buffers[this.buffers.length - 1] = tailBuffer.subarray(0, tailBuffer.byteLength - excess);\n            this.emit(\"finish\");\n        }\n        callback();\n    }\n}\n", "'use strict';\n\nconst escapeUri = (uri) => encodeURIComponent(uri).replace(/[!'()*]/g, hexEncode);\nconst hexEncode = (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`;\n\nconst escapeUriPath = (uri) => uri.split(\"/\").map(escapeUri).join(\"/\");\n\nexports.escapeUri = escapeUri;\nexports.escapeUriPath = escapeUriPath;\n", "'use strict';\n\nvar utilUriEscape = require('@smithy/util-uri-escape');\n\nfunction buildQueryString(query) {\n    const parts = [];\n    for (let key of Object.keys(query).sort()) {\n        const value = query[key];\n        key = utilUriEscape.escapeUri(key);\n        if (Array.isArray(value)) {\n            for (let i = 0, iLen = value.length; i < iLen; i++) {\n                parts.push(`${key}=${utilUriEscape.escapeUri(value[i])}`);\n            }\n        }\n        else {\n            let qsEntry = key;\n            if (value || typeof value === \"string\") {\n                qsEntry += `=${utilUriEscape.escapeUri(value)}`;\n            }\n            parts.push(qsEntry);\n        }\n    }\n    return parts.join(\"&\");\n}\n\nexports.buildQueryString = buildQueryString;\n", "'use strict';\n\nvar protocolHttp = require('@smithy/protocol-http');\nvar querystringBuilder = require('@smithy/querystring-builder');\nvar http = require('http');\nvar https = require('https');\nvar stream = require('stream');\nvar http2 = require('http2');\n\nconst NODEJS_TIMEOUT_ERROR_CODES = [\"ECONNRESET\", \"EPIPE\", \"ETIMEDOUT\"];\n\nconst getTransformedHeaders = (headers) => {\n    const transformedHeaders = {};\n    for (const name of Object.keys(headers)) {\n        const headerValues = headers[name];\n        transformedHeaders[name] = Array.isArray(headerValues) ? headerValues.join(\",\") : headerValues;\n    }\n    return transformedHeaders;\n};\n\nconst timing = {\n    setTimeout: (cb, ms) => setTimeout(cb, ms),\n    clearTimeout: (timeoutId) => clearTimeout(timeoutId),\n};\n\nconst DEFER_EVENT_LISTENER_TIME$2 = 1000;\nconst setConnectionTimeout = (request, reject, timeoutInMs = 0) => {\n    if (!timeoutInMs) {\n        return -1;\n    }\n    const registerTimeout = (offset) => {\n        const timeoutId = timing.setTimeout(() => {\n            request.destroy();\n            reject(Object.assign(new Error(`Socket timed out without establishing a connection within ${timeoutInMs} ms`), {\n                name: \"TimeoutError\",\n            }));\n        }, timeoutInMs - offset);\n        const doWithSocket = (socket) => {\n            if (socket?.connecting) {\n                socket.on(\"connect\", () => {\n                    timing.clearTimeout(timeoutId);\n                });\n            }\n            else {\n                timing.clearTimeout(timeoutId);\n            }\n        };\n        if (request.socket) {\n            doWithSocket(request.socket);\n        }\n        else {\n            request.on(\"socket\", doWithSocket);\n        }\n    };\n    if (timeoutInMs < 2000) {\n        registerTimeout(0);\n        return 0;\n    }\n    return timing.setTimeout(registerTimeout.bind(null, DEFER_EVENT_LISTENER_TIME$2), DEFER_EVENT_LISTENER_TIME$2);\n};\n\nconst DEFER_EVENT_LISTENER_TIME$1 = 3000;\nconst setSocketKeepAlive = (request, { keepAlive, keepAliveMsecs }, deferTimeMs = DEFER_EVENT_LISTENER_TIME$1) => {\n    if (keepAlive !== true) {\n        return -1;\n    }\n    const registerListener = () => {\n        if (request.socket) {\n            request.socket.setKeepAlive(keepAlive, keepAliveMsecs || 0);\n        }\n        else {\n            request.on(\"socket\", (socket) => {\n                socket.setKeepAlive(keepAlive, keepAliveMsecs || 0);\n            });\n        }\n    };\n    if (deferTimeMs === 0) {\n        registerListener();\n        return 0;\n    }\n    return timing.setTimeout(registerListener, deferTimeMs);\n};\n\nconst DEFER_EVENT_LISTENER_TIME = 3000;\nconst setSocketTimeout = (request, reject, timeoutInMs = DEFAULT_REQUEST_TIMEOUT) => {\n    const registerTimeout = (offset) => {\n        const timeout = timeoutInMs - offset;\n        const onTimeout = () => {\n            request.destroy();\n            reject(Object.assign(new Error(`Connection timed out after ${timeoutInMs} ms`), { name: \"TimeoutError\" }));\n        };\n        if (request.socket) {\n            request.socket.setTimeout(timeout, onTimeout);\n            request.on(\"close\", () => request.socket?.removeListener(\"timeout\", onTimeout));\n        }\n        else {\n            request.setTimeout(timeout, onTimeout);\n        }\n    };\n    if (0 < timeoutInMs && timeoutInMs < 6000) {\n        registerTimeout(0);\n        return 0;\n    }\n    return timing.setTimeout(registerTimeout.bind(null, timeoutInMs === 0 ? 0 : DEFER_EVENT_LISTENER_TIME), DEFER_EVENT_LISTENER_TIME);\n};\n\nconst MIN_WAIT_TIME = 6_000;\nasync function writeRequestBody(httpRequest, request, maxContinueTimeoutMs = MIN_WAIT_TIME) {\n    const headers = request.headers ?? {};\n    const expect = headers[\"Expect\"] || headers[\"expect\"];\n    let timeoutId = -1;\n    let sendBody = true;\n    if (expect === \"100-continue\") {\n        sendBody = await Promise.race([\n            new Promise((resolve) => {\n                timeoutId = Number(timing.setTimeout(() => resolve(true), Math.max(MIN_WAIT_TIME, maxContinueTimeoutMs)));\n            }),\n            new Promise((resolve) => {\n                httpRequest.on(\"continue\", () => {\n                    timing.clearTimeout(timeoutId);\n                    resolve(true);\n                });\n                httpRequest.on(\"response\", () => {\n                    timing.clearTimeout(timeoutId);\n                    resolve(false);\n                });\n                httpRequest.on(\"error\", () => {\n                    timing.clearTimeout(timeoutId);\n                    resolve(false);\n                });\n            }),\n        ]);\n    }\n    if (sendBody) {\n        writeBody(httpRequest, request.body);\n    }\n}\nfunction writeBody(httpRequest, body) {\n    if (body instanceof stream.Readable) {\n        body.pipe(httpRequest);\n        return;\n    }\n    if (body) {\n        if (Buffer.isBuffer(body) || typeof body === \"string\") {\n            httpRequest.end(body);\n            return;\n        }\n        const uint8 = body;\n        if (typeof uint8 === \"object\" &&\n            uint8.buffer &&\n            typeof uint8.byteOffset === \"number\" &&\n            typeof uint8.byteLength === \"number\") {\n            httpRequest.end(Buffer.from(uint8.buffer, uint8.byteOffset, uint8.byteLength));\n            return;\n        }\n        httpRequest.end(Buffer.from(body));\n        return;\n    }\n    httpRequest.end();\n}\n\nconst DEFAULT_REQUEST_TIMEOUT = 0;\nclass NodeHttpHandler {\n    config;\n    configProvider;\n    socketWarningTimestamp = 0;\n    metadata = { handlerProtocol: \"http/1.1\" };\n    static create(instanceOrOptions) {\n        if (typeof instanceOrOptions?.handle === \"function\") {\n            return instanceOrOptions;\n        }\n        return new NodeHttpHandler(instanceOrOptions);\n    }\n    static checkSocketUsage(agent, socketWarningTimestamp, logger = console) {\n        const { sockets, requests, maxSockets } = agent;\n        if (typeof maxSockets !== \"number\" || maxSockets === Infinity) {\n            return socketWarningTimestamp;\n        }\n        const interval = 15_000;\n        if (Date.now() - interval < socketWarningTimestamp) {\n            return socketWarningTimestamp;\n        }\n        if (sockets && requests) {\n            for (const origin in sockets) {\n                const socketsInUse = sockets[origin]?.length ?? 0;\n                const requestsEnqueued = requests[origin]?.length ?? 0;\n                if (socketsInUse >= maxSockets && requestsEnqueued >= 2 * maxSockets) {\n                    logger?.warn?.(`@smithy/node-http-handler:WARN - socket usage at capacity=${socketsInUse} and ${requestsEnqueued} additional requests are enqueued.\nSee https://docs.aws.amazon.com/sdk-for-javascript/v3/developer-guide/node-configuring-maxsockets.html\nor increase socketAcquisitionWarningTimeout=(millis) in the NodeHttpHandler config.`);\n                    return Date.now();\n                }\n            }\n        }\n        return socketWarningTimestamp;\n    }\n    constructor(options) {\n        this.configProvider = new Promise((resolve, reject) => {\n            if (typeof options === \"function\") {\n                options()\n                    .then((_options) => {\n                    resolve(this.resolveDefaultConfig(_options));\n                })\n                    .catch(reject);\n            }\n            else {\n                resolve(this.resolveDefaultConfig(options));\n            }\n        });\n    }\n    resolveDefaultConfig(options) {\n        const { requestTimeout, connectionTimeout, socketTimeout, socketAcquisitionWarningTimeout, httpAgent, httpsAgent } = options || {};\n        const keepAlive = true;\n        const maxSockets = 50;\n        return {\n            connectionTimeout,\n            requestTimeout: requestTimeout ?? socketTimeout,\n            socketAcquisitionWarningTimeout,\n            httpAgent: (() => {\n                if (httpAgent instanceof http.Agent || typeof httpAgent?.destroy === \"function\") {\n                    return httpAgent;\n                }\n                return new http.Agent({ keepAlive, maxSockets, ...httpAgent });\n            })(),\n            httpsAgent: (() => {\n                if (httpsAgent instanceof https.Agent || typeof httpsAgent?.destroy === \"function\") {\n                    return httpsAgent;\n                }\n                return new https.Agent({ keepAlive, maxSockets, ...httpsAgent });\n            })(),\n            logger: console,\n        };\n    }\n    destroy() {\n        this.config?.httpAgent?.destroy();\n        this.config?.httpsAgent?.destroy();\n    }\n    async handle(request, { abortSignal, requestTimeout } = {}) {\n        if (!this.config) {\n            this.config = await this.configProvider;\n        }\n        return new Promise((_resolve, _reject) => {\n            let writeRequestBodyPromise = undefined;\n            const timeouts = [];\n            const resolve = async (arg) => {\n                await writeRequestBodyPromise;\n                timeouts.forEach(timing.clearTimeout);\n                _resolve(arg);\n            };\n            const reject = async (arg) => {\n                await writeRequestBodyPromise;\n                timeouts.forEach(timing.clearTimeout);\n                _reject(arg);\n            };\n            if (!this.config) {\n                throw new Error(\"Node HTTP request handler config is not resolved\");\n            }\n            if (abortSignal?.aborted) {\n                const abortError = new Error(\"Request aborted\");\n                abortError.name = \"AbortError\";\n                reject(abortError);\n                return;\n            }\n            const isSSL = request.protocol === \"https:\";\n            const agent = isSSL ? this.config.httpsAgent : this.config.httpAgent;\n            timeouts.push(timing.setTimeout(() => {\n                this.socketWarningTimestamp = NodeHttpHandler.checkSocketUsage(agent, this.socketWarningTimestamp, this.config.logger);\n            }, this.config.socketAcquisitionWarningTimeout ??\n                (this.config.requestTimeout ?? 2000) + (this.config.connectionTimeout ?? 1000)));\n            const queryString = querystringBuilder.buildQueryString(request.query || {});\n            let auth = undefined;\n            if (request.username != null || request.password != null) {\n                const username = request.username ?? \"\";\n                const password = request.password ?? \"\";\n                auth = `${username}:${password}`;\n            }\n            let path = request.path;\n            if (queryString) {\n                path += `?${queryString}`;\n            }\n            if (request.fragment) {\n                path += `#${request.fragment}`;\n            }\n            let hostname = request.hostname ?? \"\";\n            if (hostname[0] === \"[\" && hostname.endsWith(\"]\")) {\n                hostname = request.hostname.slice(1, -1);\n            }\n            else {\n                hostname = request.hostname;\n            }\n            const nodeHttpsOptions = {\n                headers: request.headers,\n                host: hostname,\n                method: request.method,\n                path,\n                port: request.port,\n                agent,\n                auth,\n            };\n            const requestFunc = isSSL ? https.request : http.request;\n            const req = requestFunc(nodeHttpsOptions, (res) => {\n                const httpResponse = new protocolHttp.HttpResponse({\n                    statusCode: res.statusCode || -1,\n                    reason: res.statusMessage,\n                    headers: getTransformedHeaders(res.headers),\n                    body: res,\n                });\n                resolve({ response: httpResponse });\n            });\n            req.on(\"error\", (err) => {\n                if (NODEJS_TIMEOUT_ERROR_CODES.includes(err.code)) {\n                    reject(Object.assign(err, { name: \"TimeoutError\" }));\n                }\n                else {\n                    reject(err);\n                }\n            });\n            if (abortSignal) {\n                const onAbort = () => {\n                    req.destroy();\n                    const abortError = new Error(\"Request aborted\");\n                    abortError.name = \"AbortError\";\n                    reject(abortError);\n                };\n                if (typeof abortSignal.addEventListener === \"function\") {\n                    const signal = abortSignal;\n                    signal.addEventListener(\"abort\", onAbort, { once: true });\n                    req.once(\"close\", () => signal.removeEventListener(\"abort\", onAbort));\n                }\n                else {\n                    abortSignal.onabort = onAbort;\n                }\n            }\n            const effectiveRequestTimeout = requestTimeout ?? this.config.requestTimeout;\n            timeouts.push(setConnectionTimeout(req, reject, this.config.connectionTimeout));\n            timeouts.push(setSocketTimeout(req, reject, effectiveRequestTimeout));\n            const httpAgent = nodeHttpsOptions.agent;\n            if (typeof httpAgent === \"object\" && \"keepAlive\" in httpAgent) {\n                timeouts.push(setSocketKeepAlive(req, {\n                    keepAlive: httpAgent.keepAlive,\n                    keepAliveMsecs: httpAgent.keepAliveMsecs,\n                }));\n            }\n            writeRequestBodyPromise = writeRequestBody(req, request, effectiveRequestTimeout).catch((e) => {\n                timeouts.forEach(timing.clearTimeout);\n                return _reject(e);\n            });\n        });\n    }\n    updateHttpClientConfig(key, value) {\n        this.config = undefined;\n        this.configProvider = this.configProvider.then((config) => {\n            return {\n                ...config,\n                [key]: value,\n            };\n        });\n    }\n    httpHandlerConfigs() {\n        return this.config ?? {};\n    }\n}\n\nclass NodeHttp2ConnectionPool {\n    sessions = [];\n    constructor(sessions) {\n        this.sessions = sessions ?? [];\n    }\n    poll() {\n        if (this.sessions.length > 0) {\n            return this.sessions.shift();\n        }\n    }\n    offerLast(session) {\n        this.sessions.push(session);\n    }\n    contains(session) {\n        return this.sessions.includes(session);\n    }\n    remove(session) {\n        this.sessions = this.sessions.filter((s) => s !== session);\n    }\n    [Symbol.iterator]() {\n        return this.sessions[Symbol.iterator]();\n    }\n    destroy(connection) {\n        for (const session of this.sessions) {\n            if (session === connection) {\n                if (!session.destroyed) {\n                    session.destroy();\n                }\n            }\n        }\n    }\n}\n\nclass NodeHttp2ConnectionManager {\n    constructor(config) {\n        this.config = config;\n        if (this.config.maxConcurrency && this.config.maxConcurrency <= 0) {\n            throw new RangeError(\"maxConcurrency must be greater than zero.\");\n        }\n    }\n    config;\n    sessionCache = new Map();\n    lease(requestContext, connectionConfiguration) {\n        const url = this.getUrlString(requestContext);\n        const existingPool = this.sessionCache.get(url);\n        if (existingPool) {\n            const existingSession = existingPool.poll();\n            if (existingSession && !this.config.disableConcurrency) {\n                return existingSession;\n            }\n        }\n        const session = http2.connect(url);\n        if (this.config.maxConcurrency) {\n            session.settings({ maxConcurrentStreams: this.config.maxConcurrency }, (err) => {\n                if (err) {\n                    throw new Error(\"Fail to set maxConcurrentStreams to \" +\n                        this.config.maxConcurrency +\n                        \"when creating new session for \" +\n                        requestContext.destination.toString());\n                }\n            });\n        }\n        session.unref();\n        const destroySessionCb = () => {\n            session.destroy();\n            this.deleteSession(url, session);\n        };\n        session.on(\"goaway\", destroySessionCb);\n        session.on(\"error\", destroySessionCb);\n        session.on(\"frameError\", destroySessionCb);\n        session.on(\"close\", () => this.deleteSession(url, session));\n        if (connectionConfiguration.requestTimeout) {\n            session.setTimeout(connectionConfiguration.requestTimeout, destroySessionCb);\n        }\n        const connectionPool = this.sessionCache.get(url) || new NodeHttp2ConnectionPool();\n        connectionPool.offerLast(session);\n        this.sessionCache.set(url, connectionPool);\n        return session;\n    }\n    deleteSession(authority, session) {\n        const existingConnectionPool = this.sessionCache.get(authority);\n        if (!existingConnectionPool) {\n            return;\n        }\n        if (!existingConnectionPool.contains(session)) {\n            return;\n        }\n        existingConnectionPool.remove(session);\n        this.sessionCache.set(authority, existingConnectionPool);\n    }\n    release(requestContext, session) {\n        const cacheKey = this.getUrlString(requestContext);\n        this.sessionCache.get(cacheKey)?.offerLast(session);\n    }\n    destroy() {\n        for (const [key, connectionPool] of this.sessionCache) {\n            for (const session of connectionPool) {\n                if (!session.destroyed) {\n                    session.destroy();\n                }\n                connectionPool.remove(session);\n            }\n            this.sessionCache.delete(key);\n        }\n    }\n    setMaxConcurrentStreams(maxConcurrentStreams) {\n        if (maxConcurrentStreams && maxConcurrentStreams <= 0) {\n            throw new RangeError(\"maxConcurrentStreams must be greater than zero.\");\n        }\n        this.config.maxConcurrency = maxConcurrentStreams;\n    }\n    setDisableConcurrentStreams(disableConcurrentStreams) {\n        this.config.disableConcurrency = disableConcurrentStreams;\n    }\n    getUrlString(request) {\n        return request.destination.toString();\n    }\n}\n\nclass NodeHttp2Handler {\n    config;\n    configProvider;\n    metadata = { handlerProtocol: \"h2\" };\n    connectionManager = new NodeHttp2ConnectionManager({});\n    static create(instanceOrOptions) {\n        if (typeof instanceOrOptions?.handle === \"function\") {\n            return instanceOrOptions;\n        }\n        return new NodeHttp2Handler(instanceOrOptions);\n    }\n    constructor(options) {\n        this.configProvider = new Promise((resolve, reject) => {\n            if (typeof options === \"function\") {\n                options()\n                    .then((opts) => {\n                    resolve(opts || {});\n                })\n                    .catch(reject);\n            }\n            else {\n                resolve(options || {});\n            }\n        });\n    }\n    destroy() {\n        this.connectionManager.destroy();\n    }\n    async handle(request, { abortSignal, requestTimeout } = {}) {\n        if (!this.config) {\n            this.config = await this.configProvider;\n            this.connectionManager.setDisableConcurrentStreams(this.config.disableConcurrentStreams || false);\n            if (this.config.maxConcurrentStreams) {\n                this.connectionManager.setMaxConcurrentStreams(this.config.maxConcurrentStreams);\n            }\n        }\n        const { requestTimeout: configRequestTimeout, disableConcurrentStreams } = this.config;\n        const effectiveRequestTimeout = requestTimeout ?? configRequestTimeout;\n        return new Promise((_resolve, _reject) => {\n            let fulfilled = false;\n            let writeRequestBodyPromise = undefined;\n            const resolve = async (arg) => {\n                await writeRequestBodyPromise;\n                _resolve(arg);\n            };\n            const reject = async (arg) => {\n                await writeRequestBodyPromise;\n                _reject(arg);\n            };\n            if (abortSignal?.aborted) {\n                fulfilled = true;\n                const abortError = new Error(\"Request aborted\");\n                abortError.name = \"AbortError\";\n                reject(abortError);\n                return;\n            }\n            const { hostname, method, port, protocol, query } = request;\n            let auth = \"\";\n            if (request.username != null || request.password != null) {\n                const username = request.username ?? \"\";\n                const password = request.password ?? \"\";\n                auth = `${username}:${password}@`;\n            }\n            const authority = `${protocol}//${auth}${hostname}${port ? `:${port}` : \"\"}`;\n            const requestContext = { destination: new URL(authority) };\n            const session = this.connectionManager.lease(requestContext, {\n                requestTimeout: this.config?.sessionTimeout,\n                disableConcurrentStreams: disableConcurrentStreams || false,\n            });\n            const rejectWithDestroy = (err) => {\n                if (disableConcurrentStreams) {\n                    this.destroySession(session);\n                }\n                fulfilled = true;\n                reject(err);\n            };\n            const queryString = querystringBuilder.buildQueryString(query || {});\n            let path = request.path;\n            if (queryString) {\n                path += `?${queryString}`;\n            }\n            if (request.fragment) {\n                path += `#${request.fragment}`;\n            }\n            const req = session.request({\n                ...request.headers,\n                [http2.constants.HTTP2_HEADER_PATH]: path,\n                [http2.constants.HTTP2_HEADER_METHOD]: method,\n            });\n            session.ref();\n            req.on(\"response\", (headers) => {\n                const httpResponse = new protocolHttp.HttpResponse({\n                    statusCode: headers[\":status\"] || -1,\n                    headers: getTransformedHeaders(headers),\n                    body: req,\n                });\n                fulfilled = true;\n                resolve({ response: httpResponse });\n                if (disableConcurrentStreams) {\n                    session.close();\n                    this.connectionManager.deleteSession(authority, session);\n                }\n            });\n            if (effectiveRequestTimeout) {\n                req.setTimeout(effectiveRequestTimeout, () => {\n                    req.close();\n                    const timeoutError = new Error(`Stream timed out because of no activity for ${effectiveRequestTimeout} ms`);\n                    timeoutError.name = \"TimeoutError\";\n                    rejectWithDestroy(timeoutError);\n                });\n            }\n            if (abortSignal) {\n                const onAbort = () => {\n                    req.close();\n                    const abortError = new Error(\"Request aborted\");\n                    abortError.name = \"AbortError\";\n                    rejectWithDestroy(abortError);\n                };\n                if (typeof abortSignal.addEventListener === \"function\") {\n                    const signal = abortSignal;\n                    signal.addEventListener(\"abort\", onAbort, { once: true });\n                    req.once(\"close\", () => signal.removeEventListener(\"abort\", onAbort));\n                }\n                else {\n                    abortSignal.onabort = onAbort;\n                }\n            }\n            req.on(\"frameError\", (type, code, id) => {\n                rejectWithDestroy(new Error(`Frame type id ${type} in stream id ${id} has failed with code ${code}.`));\n            });\n            req.on(\"error\", rejectWithDestroy);\n            req.on(\"aborted\", () => {\n                rejectWithDestroy(new Error(`HTTP/2 stream is abnormally aborted in mid-communication with result code ${req.rstCode}.`));\n            });\n            req.on(\"close\", () => {\n                session.unref();\n                if (disableConcurrentStreams) {\n                    session.destroy();\n                }\n                if (!fulfilled) {\n                    rejectWithDestroy(new Error(\"Unexpected error: http2 request did not get a response\"));\n                }\n            });\n            writeRequestBodyPromise = writeRequestBody(req, request, effectiveRequestTimeout);\n        });\n    }\n    updateHttpClientConfig(key, value) {\n        this.config = undefined;\n        this.configProvider = this.configProvider.then((config) => {\n            return {\n                ...config,\n                [key]: value,\n            };\n        });\n    }\n    httpHandlerConfigs() {\n        return this.config ?? {};\n    }\n    destroySession(session) {\n        if (!session.destroyed) {\n            session.destroy();\n        }\n    }\n}\n\nclass Collector extends stream.Writable {\n    bufferedBytes = [];\n    _write(chunk, encoding, callback) {\n        this.bufferedBytes.push(chunk);\n        callback();\n    }\n}\n\nconst streamCollector = (stream) => {\n    if (isReadableStreamInstance(stream)) {\n        return collectReadableStream(stream);\n    }\n    return new Promise((resolve, reject) => {\n        const collector = new Collector();\n        stream.pipe(collector);\n        stream.on(\"error\", (err) => {\n            collector.end();\n            reject(err);\n        });\n        collector.on(\"error\", reject);\n        collector.on(\"finish\", function () {\n            const bytes = new Uint8Array(Buffer.concat(this.bufferedBytes));\n            resolve(bytes);\n        });\n    });\n};\nconst isReadableStreamInstance = (stream) => typeof ReadableStream === \"function\" && stream instanceof ReadableStream;\nasync function collectReadableStream(stream) {\n    const chunks = [];\n    const reader = stream.getReader();\n    let isDone = false;\n    let length = 0;\n    while (!isDone) {\n        const { done, value } = await reader.read();\n        if (value) {\n            chunks.push(value);\n            length += value.length;\n        }\n        isDone = done;\n    }\n    const collected = new Uint8Array(length);\n    let offset = 0;\n    for (const chunk of chunks) {\n        collected.set(chunk, offset);\n        offset += chunk.length;\n    }\n    return collected;\n}\n\nexports.DEFAULT_REQUEST_TIMEOUT = DEFAULT_REQUEST_TIMEOUT;\nexports.NodeHttp2Handler = NodeHttp2Handler;\nexports.NodeHttpHandler = NodeHttpHandler;\nexports.streamCollector = streamCollector;\n", "'use strict';\n\nconst escapeUri = (uri) => encodeURIComponent(uri).replace(/[!'()*]/g, hexEncode);\nconst hexEncode = (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`;\n\nconst escapeUriPath = (uri) => uri.split(\"/\").map(escapeUri).join(\"/\");\n\nexports.escapeUri = escapeUri;\nexports.escapeUriPath = escapeUriPath;\n", "'use strict';\n\nvar utilUriEscape = require('@smithy/util-uri-escape');\n\nfunction buildQueryString(query) {\n    const parts = [];\n    for (let key of Object.keys(query).sort()) {\n        const value = query[key];\n        key = utilUriEscape.escapeUri(key);\n        if (Array.isArray(value)) {\n            for (let i = 0, iLen = value.length; i < iLen; i++) {\n                parts.push(`${key}=${utilUriEscape.escapeUri(value[i])}`);\n            }\n        }\n        else {\n            let qsEntry = key;\n            if (value || typeof value === \"string\") {\n                qsEntry += `=${utilUriEscape.escapeUri(value)}`;\n            }\n            parts.push(qsEntry);\n        }\n    }\n    return parts.join(\"&\");\n}\n\nexports.buildQueryString = buildQueryString;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromBase64 = void 0;\nconst util_buffer_from_1 = require(\"@smithy/util-buffer-from\");\nconst BASE64_REGEX = /^[A-Za-z0-9+/]*={0,2}$/;\nconst fromBase64 = (input) => {\n    if ((input.length * 3) % 4 !== 0) {\n        throw new TypeError(`Incorrect padding on base64 string.`);\n    }\n    if (!BASE64_REGEX.exec(input)) {\n        throw new TypeError(`Invalid base64 string.`);\n    }\n    const buffer = (0, util_buffer_from_1.fromString)(input, \"base64\");\n    return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n};\nexports.fromBase64 = fromBase64;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toBase64 = void 0;\nconst util_buffer_from_1 = require(\"@smithy/util-buffer-from\");\nconst util_utf8_1 = require(\"@smithy/util-utf8\");\nconst toBase64 = (_input) => {\n    let input;\n    if (typeof _input === \"string\") {\n        input = (0, util_utf8_1.fromUtf8)(_input);\n    }\n    else {\n        input = _input;\n    }\n    if (typeof input !== \"object\" || typeof input.byteOffset !== \"number\" || typeof input.byteLength !== \"number\") {\n        throw new Error(\"@smithy/util-base64: toBase64 encoder function only accepts string | Uint8Array.\");\n    }\n    return (0, util_buffer_from_1.fromArrayBuffer)(input.buffer, input.byteOffset, input.byteLength).toString(\"base64\");\n};\nexports.toBase64 = toBase64;\n", "'use strict';\n\nvar fromBase64 = require('./fromBase64');\nvar toBase64 = require('./toBase64');\n\n\n\nObject.keys(fromBase64).forEach(function (k) {\n\tif (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () { return fromBase64[k]; }\n\t});\n});\nObject.keys(toBase64).forEach(function (k) {\n\tif (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () { return toBase64[k]; }\n\t});\n});\n", "'use strict';\n\nvar protocolHttp = require('@smithy/protocol-http');\nvar querystringBuilder = require('@smithy/querystring-builder');\nvar utilBase64 = require('@smithy/util-base64');\n\nfunction createRequest(url, requestOptions) {\n    return new Request(url, requestOptions);\n}\n\nfunction requestTimeout(timeoutInMs = 0) {\n    return new Promise((resolve, reject) => {\n        if (timeoutInMs) {\n            setTimeout(() => {\n                const timeoutError = new Error(`Request did not complete within ${timeoutInMs} ms`);\n                timeoutError.name = \"TimeoutError\";\n                reject(timeoutError);\n            }, timeoutInMs);\n        }\n    });\n}\n\nconst keepAliveSupport = {\n    supported: undefined,\n};\nclass FetchHttpHandler {\n    config;\n    configProvider;\n    static create(instanceOrOptions) {\n        if (typeof instanceOrOptions?.handle === \"function\") {\n            return instanceOrOptions;\n        }\n        return new FetchHttpHandler(instanceOrOptions);\n    }\n    constructor(options) {\n        if (typeof options === \"function\") {\n            this.configProvider = options().then((opts) => opts || {});\n        }\n        else {\n            this.config = options ?? {};\n            this.configProvider = Promise.resolve(this.config);\n        }\n        if (keepAliveSupport.supported === undefined) {\n            keepAliveSupport.supported = Boolean(typeof Request !== \"undefined\" && \"keepalive\" in createRequest(\"https://[::1]\"));\n        }\n    }\n    destroy() {\n    }\n    async handle(request, { abortSignal, requestTimeout: requestTimeout$1 } = {}) {\n        if (!this.config) {\n            this.config = await this.configProvider;\n        }\n        const requestTimeoutInMs = requestTimeout$1 ?? this.config.requestTimeout;\n        const keepAlive = this.config.keepAlive === true;\n        const credentials = this.config.credentials;\n        if (abortSignal?.aborted) {\n            const abortError = new Error(\"Request aborted\");\n            abortError.name = \"AbortError\";\n            return Promise.reject(abortError);\n        }\n        let path = request.path;\n        const queryString = querystringBuilder.buildQueryString(request.query || {});\n        if (queryString) {\n            path += `?${queryString}`;\n        }\n        if (request.fragment) {\n            path += `#${request.fragment}`;\n        }\n        let auth = \"\";\n        if (request.username != null || request.password != null) {\n            const username = request.username ?? \"\";\n            const password = request.password ?? \"\";\n            auth = `${username}:${password}@`;\n        }\n        const { port, method } = request;\n        const url = `${request.protocol}//${auth}${request.hostname}${port ? `:${port}` : \"\"}${path}`;\n        const body = method === \"GET\" || method === \"HEAD\" ? undefined : request.body;\n        const requestOptions = {\n            body,\n            headers: new Headers(request.headers),\n            method: method,\n            credentials,\n        };\n        if (this.config?.cache) {\n            requestOptions.cache = this.config.cache;\n        }\n        if (body) {\n            requestOptions.duplex = \"half\";\n        }\n        if (typeof AbortController !== \"undefined\") {\n            requestOptions.signal = abortSignal;\n        }\n        if (keepAliveSupport.supported) {\n            requestOptions.keepalive = keepAlive;\n        }\n        if (typeof this.config.requestInit === \"function\") {\n            Object.assign(requestOptions, this.config.requestInit(request));\n        }\n        let removeSignalEventListener = () => { };\n        const fetchRequest = createRequest(url, requestOptions);\n        const raceOfPromises = [\n            fetch(fetchRequest).then((response) => {\n                const fetchHeaders = response.headers;\n                const transformedHeaders = {};\n                for (const pair of fetchHeaders.entries()) {\n                    transformedHeaders[pair[0]] = pair[1];\n                }\n                const hasReadableStream = response.body != undefined;\n                if (!hasReadableStream) {\n                    return response.blob().then((body) => ({\n                        response: new protocolHttp.HttpResponse({\n                            headers: transformedHeaders,\n                            reason: response.statusText,\n                            statusCode: response.status,\n                            body,\n                        }),\n                    }));\n                }\n                return {\n                    response: new protocolHttp.HttpResponse({\n                        headers: transformedHeaders,\n                        reason: response.statusText,\n                        statusCode: response.status,\n                        body: response.body,\n                    }),\n                };\n            }),\n            requestTimeout(requestTimeoutInMs),\n        ];\n        if (abortSignal) {\n            raceOfPromises.push(new Promise((resolve, reject) => {\n                const onAbort = () => {\n                    const abortError = new Error(\"Request aborted\");\n                    abortError.name = \"AbortError\";\n                    reject(abortError);\n                };\n                if (typeof abortSignal.addEventListener === \"function\") {\n                    const signal = abortSignal;\n                    signal.addEventListener(\"abort\", onAbort, { once: true });\n                    removeSignalEventListener = () => signal.removeEventListener(\"abort\", onAbort);\n                }\n                else {\n                    abortSignal.onabort = onAbort;\n                }\n            }));\n        }\n        return Promise.race(raceOfPromises).finally(removeSignalEventListener);\n    }\n    updateHttpClientConfig(key, value) {\n        this.config = undefined;\n        this.configProvider = this.configProvider.then((config) => {\n            config[key] = value;\n            return config;\n        });\n    }\n    httpHandlerConfigs() {\n        return this.config ?? {};\n    }\n}\n\nconst streamCollector = async (stream) => {\n    if ((typeof Blob === \"function\" && stream instanceof Blob) || stream.constructor?.name === \"Blob\") {\n        if (Blob.prototype.arrayBuffer !== undefined) {\n            return new Uint8Array(await stream.arrayBuffer());\n        }\n        return collectBlob(stream);\n    }\n    return collectStream(stream);\n};\nasync function collectBlob(blob) {\n    const base64 = await readToBase64(blob);\n    const arrayBuffer = utilBase64.fromBase64(base64);\n    return new Uint8Array(arrayBuffer);\n}\nasync function collectStream(stream) {\n    const chunks = [];\n    const reader = stream.getReader();\n    let isDone = false;\n    let length = 0;\n    while (!isDone) {\n        const { done, value } = await reader.read();\n        if (value) {\n            chunks.push(value);\n            length += value.length;\n        }\n        isDone = done;\n    }\n    const collected = new Uint8Array(length);\n    let offset = 0;\n    for (const chunk of chunks) {\n        collected.set(chunk, offset);\n        offset += chunk.length;\n    }\n    return collected;\n}\nfunction readToBase64(blob) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n            if (reader.readyState !== 2) {\n                return reject(new Error(\"Reader aborted too early\"));\n            }\n            const result = (reader.result ?? \"\");\n            const commaIndex = result.indexOf(\",\");\n            const dataOffset = commaIndex > -1 ? commaIndex + 1 : result.length;\n            resolve(result.substring(dataOffset));\n        };\n        reader.onabort = () => reject(new Error(\"Read aborted\"));\n        reader.onerror = () => reject(reader.error);\n        reader.readAsDataURL(blob);\n    });\n}\n\nexports.FetchHttpHandler = FetchHttpHandler;\nexports.keepAliveSupport = keepAliveSupport;\nexports.streamCollector = streamCollector;\n", "'use strict';\n\nconst SHORT_TO_HEX = {};\nconst HEX_TO_SHORT = {};\nfor (let i = 0; i < 256; i++) {\n    let encodedByte = i.toString(16).toLowerCase();\n    if (encodedByte.length === 1) {\n        encodedByte = `0${encodedByte}`;\n    }\n    SHORT_TO_HEX[i] = encodedByte;\n    HEX_TO_SHORT[encodedByte] = i;\n}\nfunction fromHex(encoded) {\n    if (encoded.length % 2 !== 0) {\n        throw new Error(\"Hex encoded strings must have an even number length\");\n    }\n    const out = new Uint8Array(encoded.length / 2);\n    for (let i = 0; i < encoded.length; i += 2) {\n        const encodedByte = encoded.slice(i, i + 2).toLowerCase();\n        if (encodedByte in HEX_TO_SHORT) {\n            out[i / 2] = HEX_TO_SHORT[encodedByte];\n        }\n        else {\n            throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);\n        }\n    }\n    return out;\n}\nfunction toHex(bytes) {\n    let out = \"\";\n    for (let i = 0; i < bytes.byteLength; i++) {\n        out += SHORT_TO_HEX[bytes[i]];\n    }\n    return out;\n}\n\nexports.fromHex = fromHex;\nexports.toHex = toHex;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sdkStreamMixin = void 0;\nconst fetch_http_handler_1 = require(\"@smithy/fetch-http-handler\");\nconst util_base64_1 = require(\"@smithy/util-base64\");\nconst util_hex_encoding_1 = require(\"@smithy/util-hex-encoding\");\nconst util_utf8_1 = require(\"@smithy/util-utf8\");\nconst stream_type_check_1 = require(\"./stream-type-check\");\nconst ERR_MSG_STREAM_HAS_BEEN_TRANSFORMED = \"The stream has already been transformed.\";\nconst sdkStreamMixin = (stream) => {\n    if (!isBlobInstance(stream) && !(0, stream_type_check_1.isReadableStream)(stream)) {\n        const name = stream?.__proto__?.constructor?.name || stream;\n        throw new Error(`Unexpected stream implementation, expect Blob or ReadableStream, got ${name}`);\n    }\n    let transformed = false;\n    const transformToByteArray = async () => {\n        if (transformed) {\n            throw new Error(ERR_MSG_STREAM_HAS_BEEN_TRANSFORMED);\n        }\n        transformed = true;\n        return await (0, fetch_http_handler_1.streamCollector)(stream);\n    };\n    const blobToWebStream = (blob) => {\n        if (typeof blob.stream !== \"function\") {\n            throw new Error(\"Cannot transform payload Blob to web stream. Please make sure the Blob.stream() is polyfilled.\\n\" +\n                \"If you are using React Native, this API is not yet supported, see: https://react-native.canny.io/feature-requests/p/fetch-streaming-body\");\n        }\n        return blob.stream();\n    };\n    return Object.assign(stream, {\n        transformToByteArray: transformToByteArray,\n        transformToString: async (encoding) => {\n            const buf = await transformToByteArray();\n            if (encoding === \"base64\") {\n                return (0, util_base64_1.toBase64)(buf);\n            }\n            else if (encoding === \"hex\") {\n                return (0, util_hex_encoding_1.toHex)(buf);\n            }\n            else if (encoding === undefined || encoding === \"utf8\" || encoding === \"utf-8\") {\n                return (0, util_utf8_1.toUtf8)(buf);\n            }\n            else if (typeof TextDecoder === \"function\") {\n                return new TextDecoder(encoding).decode(buf);\n            }\n            else {\n                throw new Error(\"TextDecoder is not available, please make sure polyfill is provided.\");\n            }\n        },\n        transformToWebStream: () => {\n            if (transformed) {\n                throw new Error(ERR_MSG_STREAM_HAS_BEEN_TRANSFORMED);\n            }\n            transformed = true;\n            if (isBlobInstance(stream)) {\n                return blobToWebStream(stream);\n            }\n            else if ((0, stream_type_check_1.isReadableStream)(stream)) {\n                return stream;\n            }\n            else {\n                throw new Error(`Cannot transform payload to web stream, got ${stream}`);\n            }\n        },\n    });\n};\nexports.sdkStreamMixin = sdkStreamMixin;\nconst isBlobInstance = (stream) => typeof Blob === \"function\" && stream instanceof Blob;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sdkStreamMixin = void 0;\nconst node_http_handler_1 = require(\"@smithy/node-http-handler\");\nconst util_buffer_from_1 = require(\"@smithy/util-buffer-from\");\nconst stream_1 = require(\"stream\");\nconst sdk_stream_mixin_browser_1 = require(\"./sdk-stream-mixin.browser\");\nconst ERR_MSG_STREAM_HAS_BEEN_TRANSFORMED = \"The stream has already been transformed.\";\nconst sdkStreamMixin = (stream) => {\n    if (!(stream instanceof stream_1.Readable)) {\n        try {\n            return (0, sdk_stream_mixin_browser_1.sdkStreamMixin)(stream);\n        }\n        catch (e) {\n            const name = stream?.__proto__?.constructor?.name || stream;\n            throw new Error(`Unexpected stream implementation, expect Stream.Readable instance, got ${name}`);\n        }\n    }\n    let transformed = false;\n    const transformToByteArray = async () => {\n        if (transformed) {\n            throw new Error(ERR_MSG_STREAM_HAS_BEEN_TRANSFORMED);\n        }\n        transformed = true;\n        return await (0, node_http_handler_1.streamCollector)(stream);\n    };\n    return Object.assign(stream, {\n        transformToByteArray,\n        transformToString: async (encoding) => {\n            const buf = await transformToByteArray();\n            if (encoding === undefined || Buffer.isEncoding(encoding)) {\n                return (0, util_buffer_from_1.fromArrayBuffer)(buf.buffer, buf.byteOffset, buf.byteLength).toString(encoding);\n            }\n            else {\n                const decoder = new TextDecoder(encoding);\n                return decoder.decode(buf);\n            }\n        },\n        transformToWebStream: () => {\n            if (transformed) {\n                throw new Error(ERR_MSG_STREAM_HAS_BEEN_TRANSFORMED);\n            }\n            if (stream.readableFlowing !== null) {\n                throw new Error(\"The stream has been consumed by other callbacks.\");\n            }\n            if (typeof stream_1.Readable.toWeb !== \"function\") {\n                throw new Error(\"Readable.toWeb() is not supported. Please ensure a polyfill is available.\");\n            }\n            transformed = true;\n            return stream_1.Readable.toWeb(stream);\n        },\n    });\n};\nexports.sdkStreamMixin = sdkStreamMixin;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.splitStream = splitStream;\nasync function splitStream(stream) {\n    if (typeof stream.stream === \"function\") {\n        stream = stream.stream();\n    }\n    const readableStream = stream;\n    return readableStream.tee();\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.splitStream = splitStream;\nconst stream_1 = require(\"stream\");\nconst splitStream_browser_1 = require(\"./splitStream.browser\");\nconst stream_type_check_1 = require(\"./stream-type-check\");\nasync function splitStream(stream) {\n    if ((0, stream_type_check_1.isReadableStream)(stream) || (0, stream_type_check_1.isBlob)(stream)) {\n        return (0, splitStream_browser_1.splitStream)(stream);\n    }\n    const stream1 = new stream_1.PassThrough();\n    const stream2 = new stream_1.PassThrough();\n    stream.pipe(stream1);\n    stream.pipe(stream2);\n    return [stream1, stream2];\n}\n", "'use strict';\n\nvar utilBase64 = require('@smithy/util-base64');\nvar utilUtf8 = require('@smithy/util-utf8');\nvar ChecksumStream = require('./checksum/ChecksumStream');\nvar createChecksumStream = require('./checksum/createChecksumStream');\nvar createBufferedReadable = require('./createBufferedReadable');\nvar getAwsChunkedEncodingStream = require('./getAwsChunkedEncodingStream');\nvar headStream = require('./headStream');\nvar sdkStreamMixin = require('./sdk-stream-mixin');\nvar splitStream = require('./splitStream');\nvar streamTypeCheck = require('./stream-type-check');\n\nfunction transformToString(payload, encoding = \"utf-8\") {\n    if (encoding === \"base64\") {\n        return utilBase64.toBase64(payload);\n    }\n    return utilUtf8.toUtf8(payload);\n}\nfunction transformFromString(str, encoding) {\n    if (encoding === \"base64\") {\n        return Uint8ArrayBlobAdapter.mutate(utilBase64.fromBase64(str));\n    }\n    return Uint8ArrayBlobAdapter.mutate(utilUtf8.fromUtf8(str));\n}\n\nclass Uint8ArrayBlobAdapter extends Uint8Array {\n    static fromString(source, encoding = \"utf-8\") {\n        if (typeof source === \"string\") {\n            return transformFromString(source, encoding);\n        }\n        throw new Error(`Unsupported conversion from ${typeof source} to Uint8ArrayBlobAdapter.`);\n    }\n    static mutate(source) {\n        Object.setPrototypeOf(source, Uint8ArrayBlobAdapter.prototype);\n        return source;\n    }\n    transformToString(encoding = \"utf-8\") {\n        return transformToString(this, encoding);\n    }\n}\n\nexports.Uint8ArrayBlobAdapter = Uint8ArrayBlobAdapter;\nObject.keys(ChecksumStream).forEach(function (k) {\n    if (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {\n        enumerable: true,\n        get: function () { return ChecksumStream[k]; }\n    });\n});\nObject.keys(createChecksumStream).forEach(function (k) {\n    if (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {\n        enumerable: true,\n        get: function () { return createChecksumStream[k]; }\n    });\n});\nObject.keys(createBufferedReadable).forEach(function (k) {\n    if (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {\n        enumerable: true,\n        get: function () { return createBufferedReadable[k]; }\n    });\n});\nObject.keys(getAwsChunkedEncodingStream).forEach(function (k) {\n    if (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {\n        enumerable: true,\n        get: function () { return getAwsChunkedEncodingStream[k]; }\n    });\n});\nObject.keys(headStream).forEach(function (k) {\n    if (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {\n        enumerable: true,\n        get: function () { return headStream[k]; }\n    });\n});\nObject.keys(sdkStreamMixin).forEach(function (k) {\n    if (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {\n        enumerable: true,\n        get: function () { return sdkStreamMixin[k]; }\n    });\n});\nObject.keys(splitStream).forEach(function (k) {\n    if (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {\n        enumerable: true,\n        get: function () { return splitStream[k]; }\n    });\n});\nObject.keys(streamTypeCheck).forEach(function (k) {\n    if (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {\n        enumerable: true,\n        get: function () { return streamTypeCheck[k]; }\n    });\n});\n", "import { Uint8ArrayBlobAdapter } from \"@smithy/util-stream\";\nexport const collectBody = async (streamBody = new Uint8Array(), context) => {\n    if (streamBody instanceof Uint8Array) {\n        return Uint8ArrayBlobAdapter.mutate(streamBody);\n    }\n    if (!streamBody) {\n        return Uint8ArrayBlobAdapter.mutate(new Uint8Array());\n    }\n    const fromContext = context.streamCollector(streamBody);\n    return Uint8ArrayBlobAdapter.mutate(await fromContext);\n};\n", "export function extendedEncodeURIComponent(str) {\n    return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n        return \"%\" + c.charCodeAt(0).toString(16).toUpperCase();\n    });\n}\n", "export const deref = (schemaRef) => {\n    if (typeof schemaRef === \"function\") {\n        return schemaRef();\n    }\n    return schemaRef;\n};\n", "import { HttpResponse } from \"@smithy/protocol-http\";\nimport { getSmithyContext } from \"@smithy/util-middleware\";\nexport const schemaDeserializationMiddleware = (config) => (next, context) => async (args) => {\n    const { response } = await next(args);\n    const { operationSchema } = getSmithyContext(context);\n    try {\n        const parsed = await config.protocol.deserializeResponse(operationSchema, {\n            ...config,\n            ...context,\n        }, response);\n        return {\n            response,\n            output: parsed,\n        };\n    }\n    catch (error) {\n        Object.defineProperty(error, \"$response\", {\n            value: response,\n        });\n        if (!(\"$metadata\" in error)) {\n            const hint = `Deserialization error: to see the raw response, inspect the hidden field {error}.$response on this object.`;\n            try {\n                error.message += \"\\n  \" + hint;\n            }\n            catch (e) {\n                if (!context.logger || context.logger?.constructor?.name === \"NoOpLogger\") {\n                    console.warn(hint);\n                }\n                else {\n                    context.logger?.warn?.(hint);\n                }\n            }\n            if (typeof error.$responseBodyText !== \"undefined\") {\n                if (error.$response) {\n                    error.$response.body = error.$responseBodyText;\n                }\n            }\n            try {\n                if (HttpResponse.isInstance(response)) {\n                    const { headers = {} } = response;\n                    const headerEntries = Object.entries(headers);\n                    error.$metadata = {\n                        httpStatusCode: response.statusCode,\n                        requestId: findHeader(/^x-[\\w-]+-request-?id$/, headerEntries),\n                        extendedRequestId: findHeader(/^x-[\\w-]+-id-2$/, headerEntries),\n                        cfId: findHeader(/^x-[\\w-]+-cf-id$/, headerEntries),\n                    };\n                }\n            }\n            catch (e) {\n            }\n        }\n        throw error;\n    }\n};\nconst findHeader = (pattern, headers) => {\n    return (headers.find(([k]) => {\n        return k.match(pattern);\n    }) || [void 0, void 1])[1];\n};\n", "import { getSmithyContext } from \"@smithy/util-middleware\";\nexport const schemaSerializationMiddleware = (config) => (next, context) => async (args) => {\n    const { operationSchema } = getSmithyContext(context);\n    const endpoint = context.endpointV2?.url && config.urlParser\n        ? async () => config.urlParser(context.endpointV2.url)\n        : config.endpoint;\n    const request = await config.protocol.serializeRequest(operationSchema, args.input, {\n        ...config,\n        ...context,\n        endpoint,\n    });\n    return next({\n        ...args,\n        request,\n    });\n};\n", "import { schemaDeserializationMiddleware } from \"./schemaDeserializationMiddleware\";\nimport { schemaSerializationMiddleware } from \"./schemaSerializationMiddleware\";\nexport const deserializerMiddlewareOption = {\n    name: \"deserializerMiddleware\",\n    step: \"deserialize\",\n    tags: [\"DESERIALIZER\"],\n    override: true,\n};\nexport const serializerMiddlewareOption = {\n    name: \"serializerMiddleware\",\n    step: \"serialize\",\n    tags: [\"SERIALIZER\"],\n    override: true,\n};\nexport function getSchemaSerdePlugin(config) {\n    return {\n        applyToStack: (commandStack) => {\n            commandStack.add(schemaSerializationMiddleware(config), serializerMiddlewareOption);\n            commandStack.add(schemaDeserializationMiddleware(config), deserializerMiddlewareOption);\n            config.protocol.setSerdeContext(config);\n        },\n    };\n}\n", "export class TypeRegistry {\n    namespace;\n    schemas;\n    exceptions;\n    static registries = new Map();\n    constructor(namespace, schemas = new Map(), exceptions = new Map()) {\n        this.namespace = namespace;\n        this.schemas = schemas;\n        this.exceptions = exceptions;\n    }\n    static for(namespace) {\n        if (!TypeRegistry.registries.has(namespace)) {\n            TypeRegistry.registries.set(namespace, new TypeRegistry(namespace));\n        }\n        return TypeRegistry.registries.get(namespace);\n    }\n    register(shapeId, schema) {\n        const qualifiedName = this.normalizeShapeId(shapeId);\n        this.schemas.set(qualifiedName, schema);\n    }\n    getSchema(shapeId) {\n        const id = this.normalizeShapeId(shapeId);\n        if (!this.schemas.has(id)) {\n            throw new Error(`@smithy/core/schema - schema not found for ${id}`);\n        }\n        return this.schemas.get(id);\n    }\n    registerError(errorSchema, ctor) {\n        this.exceptions.set(errorSchema, ctor);\n    }\n    getErrorCtor(errorSchema) {\n        return this.exceptions.get(errorSchema);\n    }\n    getBaseException() {\n        for (const [id, schema] of this.schemas.entries()) {\n            if (id.startsWith(\"smithy.ts.sdk.synthetic.\") && id.endsWith(\"ServiceException\")) {\n                return schema;\n            }\n        }\n        return undefined;\n    }\n    find(predicate) {\n        return [...this.schemas.values()].find(predicate);\n    }\n    clear() {\n        this.schemas.clear();\n        this.exceptions.clear();\n    }\n    normalizeShapeId(shapeId) {\n        if (shapeId.includes(\"#\")) {\n            return shapeId;\n        }\n        return this.namespace + \"#\" + shapeId;\n    }\n    getNamespace(shapeId) {\n        return this.normalizeShapeId(shapeId).split(\"#\")[0];\n    }\n}\n", "import { TypeRegistry } from \"../TypeRegistry\";\nexport class Schema {\n    name;\n    namespace;\n    traits;\n    static assign(instance, values) {\n        const schema = Object.assign(instance, values);\n        TypeRegistry.for(schema.namespace).register(schema.name, schema);\n        return schema;\n    }\n    static [Symbol.hasInstance](lhs) {\n        const isPrototype = this.prototype.isPrototypeOf(lhs);\n        if (!isPrototype && typeof lhs === \"object\" && lhs !== null) {\n            const list = lhs;\n            return list.symbol === this.symbol;\n        }\n        return isPrototype;\n    }\n    getName() {\n        return this.namespace + \"#\" + this.name;\n    }\n}\n", "import { Schema } from \"./Schema\";\nexport class ListSchema extends Schema {\n    static symbol = Symbol.for(\"@smithy/lis\");\n    name;\n    traits;\n    valueSchema;\n    symbol = ListSchema.symbol;\n}\nexport const list = (namespace, name, traits, valueSchema) => Schema.assign(new ListSchema(), {\n    name,\n    namespace,\n    traits,\n    valueSchema,\n});\n", "import { Schema } from \"./Schema\";\nexport class MapSchema extends Schema {\n    static symbol = Symbol.for(\"@smithy/map\");\n    name;\n    traits;\n    keySchema;\n    valueSchema;\n    symbol = MapSchema.symbol;\n}\nexport const map = (namespace, name, traits, keySchema, valueSchema) => Schema.assign(new MapSchema(), {\n    name,\n    namespace,\n    traits,\n    keySchema,\n    valueSchema,\n});\n", "import { Schema } from \"./Schema\";\nexport class OperationSchema extends Schema {\n    static symbol = Symbol.for(\"@smithy/ope\");\n    name;\n    traits;\n    input;\n    output;\n    symbol = OperationSchema.symbol;\n}\nexport const op = (namespace, name, traits, input, output) => Schema.assign(new OperationSchema(), {\n    name,\n    namespace,\n    traits,\n    input,\n    output,\n});\n", "import { Schema } from \"./Schema\";\nexport class StructureSchema extends Schema {\n    static symbol = Symbol.for(\"@smithy/str\");\n    name;\n    traits;\n    memberNames;\n    memberList;\n    symbol = StructureSchema.symbol;\n}\nexport const struct = (namespace, name, traits, memberNames, memberList) => Schema.assign(new StructureSchema(), {\n    name,\n    namespace,\n    traits,\n    memberNames,\n    memberList,\n});\n", "import { Schema } from \"./Schema\";\nimport { StructureSchema } from \"./StructureSchema\";\nexport class ErrorSchema extends StructureSchema {\n    static symbol = Symbol.for(\"@smithy/err\");\n    ctor;\n    symbol = ErrorSchema.symbol;\n}\nexport const error = (namespace, name, traits, memberNames, memberList, ctor) => Schema.assign(new ErrorSchema(), {\n    name,\n    namespace,\n    traits,\n    memberNames,\n    memberList,\n    ctor: null,\n});\n", "export function translateTraits(indicator) {\n    if (typeof indicator === \"object\") {\n        return indicator;\n    }\n    indicator = indicator | 0;\n    const traits = {};\n    let i = 0;\n    for (const trait of [\n        \"httpLabel\",\n        \"idempotent\",\n        \"idempotencyToken\",\n        \"sensitive\",\n        \"httpPayload\",\n        \"httpResponseCode\",\n        \"httpQueryParams\",\n    ]) {\n        if (((indicator >> i++) & 1) === 1) {\n            traits[trait] = 1;\n        }\n    }\n    return traits;\n}\n", "import { deref } from \"../deref\";\nimport { ListSchema } from \"./ListSchema\";\nimport { MapSchema } from \"./MapSchema\";\nimport { Schema } from \"./Schema\";\nimport { StructureSchema } from \"./StructureSchema\";\nimport { translateTraits } from \"./translateTraits\";\nexport class NormalizedSchema {\n    ref;\n    memberName;\n    static symbol = Symbol.for(\"@smithy/nor\");\n    symbol = NormalizedSchema.symbol;\n    name;\n    schema;\n    _isMemberSchema;\n    traits;\n    memberTraits;\n    normalizedTraits;\n    constructor(ref, memberName) {\n        this.ref = ref;\n        this.memberName = memberName;\n        const traitStack = [];\n        let _ref = ref;\n        let schema = ref;\n        this._isMemberSchema = false;\n        while (Array.isArray(_ref)) {\n            traitStack.push(_ref[1]);\n            _ref = _ref[0];\n            schema = deref(_ref);\n            this._isMemberSchema = true;\n        }\n        if (traitStack.length > 0) {\n            this.memberTraits = {};\n            for (let i = traitStack.length - 1; i >= 0; --i) {\n                const traitSet = traitStack[i];\n                Object.assign(this.memberTraits, translateTraits(traitSet));\n            }\n        }\n        else {\n            this.memberTraits = 0;\n        }\n        if (schema instanceof NormalizedSchema) {\n            const computedMemberTraits = this.memberTraits;\n            Object.assign(this, schema);\n            this.memberTraits = Object.assign({}, computedMemberTraits, schema.getMemberTraits(), this.getMemberTraits());\n            this.normalizedTraits = void 0;\n            this.memberName = memberName ?? schema.memberName;\n            return;\n        }\n        this.schema = deref(schema);\n        if (this.schema && typeof this.schema === \"object\") {\n            this.traits = this.schema?.traits ?? {};\n        }\n        else {\n            this.traits = 0;\n        }\n        this.name = (this.schema instanceof Schema ? this.schema.getName?.() : void 0) ?? this.memberName ?? String(schema);\n        if (this._isMemberSchema && !memberName) {\n            throw new Error(`@smithy/core/schema - NormalizedSchema member init ${this.getName(true)} missing member name.`);\n        }\n    }\n    static [Symbol.hasInstance](lhs) {\n        return Schema[Symbol.hasInstance].bind(this)(lhs);\n    }\n    static of(ref) {\n        const sc = deref(ref);\n        if (sc instanceof NormalizedSchema) {\n            return sc;\n        }\n        if (Array.isArray(sc)) {\n            const [ns, traits] = sc;\n            if (ns instanceof NormalizedSchema) {\n                Object.assign(ns.getMergedTraits(), translateTraits(traits));\n                return ns;\n            }\n            throw new Error(`@smithy/core/schema - may not init unwrapped member schema=${JSON.stringify(ref, null, 2)}.`);\n        }\n        return new NormalizedSchema(sc);\n    }\n    getSchema() {\n        return deref(this.schema?.schemaRef ?? this.schema);\n    }\n    getName(withNamespace = false) {\n        const { name } = this;\n        const short = !withNamespace && name && name.includes(\"#\");\n        return short ? name.split(\"#\")[1] : name || undefined;\n    }\n    getMemberName() {\n        return this.memberName;\n    }\n    isMemberSchema() {\n        return this._isMemberSchema;\n    }\n    isListSchema() {\n        const sc = this.getSchema();\n        return typeof sc === \"number\"\n            ? sc >= 64 && sc < 128\n            : sc instanceof ListSchema;\n    }\n    isMapSchema() {\n        const sc = this.getSchema();\n        return typeof sc === \"number\"\n            ? sc >= 128 && sc <= 0b1111_1111\n            : sc instanceof MapSchema;\n    }\n    isStructSchema() {\n        const sc = this.getSchema();\n        return (sc !== null && typeof sc === \"object\" && \"members\" in sc) || sc instanceof StructureSchema;\n    }\n    isBlobSchema() {\n        const sc = this.getSchema();\n        return sc === 21 || sc === 42;\n    }\n    isTimestampSchema() {\n        const sc = this.getSchema();\n        return (typeof sc === \"number\" &&\n            sc >= 4 &&\n            sc <= 7);\n    }\n    isUnitSchema() {\n        return this.getSchema() === \"unit\";\n    }\n    isDocumentSchema() {\n        return this.getSchema() === 15;\n    }\n    isStringSchema() {\n        return this.getSchema() === 0;\n    }\n    isBooleanSchema() {\n        return this.getSchema() === 2;\n    }\n    isNumericSchema() {\n        return this.getSchema() === 1;\n    }\n    isBigIntegerSchema() {\n        return this.getSchema() === 17;\n    }\n    isBigDecimalSchema() {\n        return this.getSchema() === 19;\n    }\n    isStreaming() {\n        const { streaming } = this.getMergedTraits();\n        return !!streaming || this.getSchema() === 42;\n    }\n    isIdempotencyToken() {\n        const match = (traits) => (traits & 0b0100) === 0b0100 ||\n            !!traits?.idempotencyToken;\n        const { normalizedTraits, traits, memberTraits } = this;\n        return match(normalizedTraits) || match(traits) || match(memberTraits);\n    }\n    getMergedTraits() {\n        return (this.normalizedTraits ??\n            (this.normalizedTraits = {\n                ...this.getOwnTraits(),\n                ...this.getMemberTraits(),\n            }));\n    }\n    getMemberTraits() {\n        return translateTraits(this.memberTraits);\n    }\n    getOwnTraits() {\n        return translateTraits(this.traits);\n    }\n    getKeySchema() {\n        const [isDoc, isMap] = [this.isDocumentSchema(), this.isMapSchema()];\n        if (!isDoc && !isMap) {\n            throw new Error(`@smithy/core/schema - cannot get key for non-map: ${this.getName(true)}`);\n        }\n        const schema = this.getSchema();\n        const memberSchema = isDoc\n            ? 15\n            : schema?.keySchema ?? 0;\n        return member([memberSchema, 0], \"key\");\n    }\n    getValueSchema() {\n        const sc = this.getSchema();\n        const [isDoc, isMap, isList] = [this.isDocumentSchema(), this.isMapSchema(), this.isListSchema()];\n        const memberSchema = typeof sc === \"number\"\n            ? 0b0011_1111 & sc\n            : sc && typeof sc === \"object\" && (isMap || isList)\n                ? sc.valueSchema\n                : isDoc\n                    ? 15\n                    : void 0;\n        if (memberSchema != null) {\n            return member([memberSchema, 0], isMap ? \"value\" : \"member\");\n        }\n        throw new Error(`@smithy/core/schema - ${this.getName(true)} has no value member.`);\n    }\n    getMemberSchema(memberName) {\n        const struct = this.getSchema();\n        if (this.isStructSchema() && struct.memberNames.includes(memberName)) {\n            const i = struct.memberNames.indexOf(memberName);\n            const memberSchema = struct.memberList[i];\n            return member(Array.isArray(memberSchema) ? memberSchema : [memberSchema, 0], memberName);\n        }\n        if (this.isDocumentSchema()) {\n            return member([15, 0], memberName);\n        }\n        throw new Error(`@smithy/core/schema - ${this.getName(true)} has no no member=${memberName}.`);\n    }\n    getMemberSchemas() {\n        const buffer = {};\n        try {\n            for (const [k, v] of this.structIterator()) {\n                buffer[k] = v;\n            }\n        }\n        catch (ignored) { }\n        return buffer;\n    }\n    getEventStreamMember() {\n        if (this.isStructSchema()) {\n            for (const [memberName, memberSchema] of this.structIterator()) {\n                if (memberSchema.isStreaming() && memberSchema.isStructSchema()) {\n                    return memberName;\n                }\n            }\n        }\n        return \"\";\n    }\n    *structIterator() {\n        if (this.isUnitSchema()) {\n            return;\n        }\n        if (!this.isStructSchema()) {\n            throw new Error(\"@smithy/core/schema - cannot iterate non-struct schema.\");\n        }\n        const struct = this.getSchema();\n        for (let i = 0; i < struct.memberNames.length; ++i) {\n            yield [struct.memberNames[i], member([struct.memberList[i], 0], struct.memberNames[i])];\n        }\n    }\n}\nfunction member(memberSchema, memberName) {\n    if (memberSchema instanceof NormalizedSchema) {\n        return Object.assign(memberSchema, {\n            memberName,\n            _isMemberSchema: true,\n        });\n    }\n    const internalCtorAccess = NormalizedSchema;\n    return new internalCtorAccess(memberSchema, memberName);\n}\n", "import { Schema } from \"./Schema\";\nexport class SimpleSchema extends Schema {\n    static symbol = Symbol.for(\"@smithy/sim\");\n    name;\n    schemaRef;\n    traits;\n    symbol = SimpleSchema.symbol;\n}\nexport const sim = (namespace, name, schemaRef, traits) => Schema.assign(new SimpleSchema(), {\n    name,\n    namespace,\n    traits,\n    schemaRef,\n});\n", "export const SCHEMA = {\n    BLOB: 0b0001_0101,\n    STREAMING_BLOB: 0b0010_1010,\n    BOOLEAN: 0b0000_0010,\n    STRING: 0b0000_0000,\n    NUMERIC: 0b0000_0001,\n    BIG_INTEGER: 0b0001_0001,\n    BIG_DECIMAL: 0b0001_0011,\n    DOCUMENT: 0b0000_1111,\n    TIMESTAMP_DEFAULT: 0b0000_0100,\n    TIMESTAMP_DATE_TIME: 0b0000_0101,\n    TIMESTAMP_HTTP_DATE: 0b0000_0110,\n    TIMESTAMP_EPOCH_SECONDS: 0b0000_0111,\n    LIST_MODIFIER: 0b0100_0000,\n    MAP_MODIFIER: 0b1000_0000,\n};\n", "export * from \"./deref\";\nexport * from \"./middleware/getSchemaSerdePlugin\";\nexport * from \"./schemas/ListSchema\";\nexport * from \"./schemas/MapSchema\";\nexport * from \"./schemas/OperationSchema\";\nexport * from \"./schemas/ErrorSchema\";\nexport * from \"./schemas/NormalizedSchema\";\nexport * from \"./schemas/Schema\";\nexport * from \"./schemas/SimpleSchema\";\nexport * from \"./schemas/StructureSchema\";\nexport * from \"./schemas/sentinels\";\nexport * from \"./schemas/translateTraits\";\nexport * from \"./TypeRegistry\";\n", "export const copyDocumentWithTransform = (source, schemaRef, transform = (_) => _) => source;\n", "export const parseBoolean = (value) => {\n    switch (value) {\n        case \"true\":\n            return true;\n        case \"false\":\n            return false;\n        default:\n            throw new Error(`Unable to parse boolean value \"${value}\"`);\n    }\n};\nexport const expectBoolean = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"number\") {\n        if (value === 0 || value === 1) {\n            logger.warn(stackTraceWarning(`Expected boolean, got ${typeof value}: ${value}`));\n        }\n        if (value === 0) {\n            return false;\n        }\n        if (value === 1) {\n            return true;\n        }\n    }\n    if (typeof value === \"string\") {\n        const lower = value.toLowerCase();\n        if (lower === \"false\" || lower === \"true\") {\n            logger.warn(stackTraceWarning(`Expected boolean, got ${typeof value}: ${value}`));\n        }\n        if (lower === \"false\") {\n            return false;\n        }\n        if (lower === \"true\") {\n            return true;\n        }\n    }\n    if (typeof value === \"boolean\") {\n        return value;\n    }\n    throw new TypeError(`Expected boolean, got ${typeof value}: ${value}`);\n};\nexport const expectNumber = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"string\") {\n        const parsed = parseFloat(value);\n        if (!Number.isNaN(parsed)) {\n            if (String(parsed) !== String(value)) {\n                logger.warn(stackTraceWarning(`Expected number but observed string: ${value}`));\n            }\n            return parsed;\n        }\n    }\n    if (typeof value === \"number\") {\n        return value;\n    }\n    throw new TypeError(`Expected number, got ${typeof value}: ${value}`);\n};\nconst MAX_FLOAT = Math.ceil(2 ** 127 * (2 - 2 ** -23));\nexport const expectFloat32 = (value) => {\n    const expected = expectNumber(value);\n    if (expected !== undefined && !Number.isNaN(expected) && expected !== Infinity && expected !== -Infinity) {\n        if (Math.abs(expected) > MAX_FLOAT) {\n            throw new TypeError(`Expected 32-bit float, got ${value}`);\n        }\n    }\n    return expected;\n};\nexport const expectLong = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (Number.isInteger(value) && !Number.isNaN(value)) {\n        return value;\n    }\n    throw new TypeError(`Expected integer, got ${typeof value}: ${value}`);\n};\nexport const expectInt = expectLong;\nexport const expectInt32 = (value) => expectSizedInt(value, 32);\nexport const expectShort = (value) => expectSizedInt(value, 16);\nexport const expectByte = (value) => expectSizedInt(value, 8);\nconst expectSizedInt = (value, size) => {\n    const expected = expectLong(value);\n    if (expected !== undefined && castInt(expected, size) !== expected) {\n        throw new TypeError(`Expected ${size}-bit integer, got ${value}`);\n    }\n    return expected;\n};\nconst castInt = (value, size) => {\n    switch (size) {\n        case 32:\n            return Int32Array.of(value)[0];\n        case 16:\n            return Int16Array.of(value)[0];\n        case 8:\n            return Int8Array.of(value)[0];\n    }\n};\nexport const expectNonNull = (value, location) => {\n    if (value === null || value === undefined) {\n        if (location) {\n            throw new TypeError(`Expected a non-null value for ${location}`);\n        }\n        throw new TypeError(\"Expected a non-null value\");\n    }\n    return value;\n};\nexport const expectObject = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"object\" && !Array.isArray(value)) {\n        return value;\n    }\n    const receivedType = Array.isArray(value) ? \"array\" : typeof value;\n    throw new TypeError(`Expected object, got ${receivedType}: ${value}`);\n};\nexport const expectString = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"string\") {\n        return value;\n    }\n    if ([\"boolean\", \"number\", \"bigint\"].includes(typeof value)) {\n        logger.warn(stackTraceWarning(`Expected string, got ${typeof value}: ${value}`));\n        return String(value);\n    }\n    throw new TypeError(`Expected string, got ${typeof value}: ${value}`);\n};\nexport const expectUnion = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    const asObject = expectObject(value);\n    const setKeys = Object.entries(asObject)\n        .filter(([, v]) => v != null)\n        .map(([k]) => k);\n    if (setKeys.length === 0) {\n        throw new TypeError(`Unions must have exactly one non-null member. None were found.`);\n    }\n    if (setKeys.length > 1) {\n        throw new TypeError(`Unions must have exactly one non-null member. Keys ${setKeys} were not null.`);\n    }\n    return asObject;\n};\nexport const strictParseDouble = (value) => {\n    if (typeof value == \"string\") {\n        return expectNumber(parseNumber(value));\n    }\n    return expectNumber(value);\n};\nexport const strictParseFloat = strictParseDouble;\nexport const strictParseFloat32 = (value) => {\n    if (typeof value == \"string\") {\n        return expectFloat32(parseNumber(value));\n    }\n    return expectFloat32(value);\n};\nconst NUMBER_REGEX = /(-?(?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)|(-?Infinity)|(NaN)/g;\nconst parseNumber = (value) => {\n    const matches = value.match(NUMBER_REGEX);\n    if (matches === null || matches[0].length !== value.length) {\n        throw new TypeError(`Expected real number, got implicit NaN`);\n    }\n    return parseFloat(value);\n};\nexport const limitedParseDouble = (value) => {\n    if (typeof value == \"string\") {\n        return parseFloatString(value);\n    }\n    return expectNumber(value);\n};\nexport const handleFloat = limitedParseDouble;\nexport const limitedParseFloat = limitedParseDouble;\nexport const limitedParseFloat32 = (value) => {\n    if (typeof value == \"string\") {\n        return parseFloatString(value);\n    }\n    return expectFloat32(value);\n};\nconst parseFloatString = (value) => {\n    switch (value) {\n        case \"NaN\":\n            return NaN;\n        case \"Infinity\":\n            return Infinity;\n        case \"-Infinity\":\n            return -Infinity;\n        default:\n            throw new Error(`Unable to parse float value: ${value}`);\n    }\n};\nexport const strictParseLong = (value) => {\n    if (typeof value === \"string\") {\n        return expectLong(parseNumber(value));\n    }\n    return expectLong(value);\n};\nexport const strictParseInt = strictParseLong;\nexport const strictParseInt32 = (value) => {\n    if (typeof value === \"string\") {\n        return expectInt32(parseNumber(value));\n    }\n    return expectInt32(value);\n};\nexport const strictParseShort = (value) => {\n    if (typeof value === \"string\") {\n        return expectShort(parseNumber(value));\n    }\n    return expectShort(value);\n};\nexport const strictParseByte = (value) => {\n    if (typeof value === \"string\") {\n        return expectByte(parseNumber(value));\n    }\n    return expectByte(value);\n};\nconst stackTraceWarning = (message) => {\n    return String(new TypeError(message).stack || message)\n        .split(\"\\n\")\n        .slice(0, 5)\n        .filter((s) => !s.includes(\"stackTraceWarning\"))\n        .join(\"\\n\");\n};\nexport const logger = {\n    warn: console.warn,\n};\n", "import { strictParseByte, strictParseDouble, strictParseFloat32, strictParseShort } from \"./parse-utils\";\nconst DAYS = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\nconst MONTHS = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\nexport function dateToUtcString(date) {\n    const year = date.getUTCFullYear();\n    const month = date.getUTCMonth();\n    const dayOfWeek = date.getUTCDay();\n    const dayOfMonthInt = date.getUTCDate();\n    const hoursInt = date.getUTCHours();\n    const minutesInt = date.getUTCMinutes();\n    const secondsInt = date.getUTCSeconds();\n    const dayOfMonthString = dayOfMonthInt < 10 ? `0${dayOfMonthInt}` : `${dayOfMonthInt}`;\n    const hoursString = hoursInt < 10 ? `0${hoursInt}` : `${hoursInt}`;\n    const minutesString = minutesInt < 10 ? `0${minutesInt}` : `${minutesInt}`;\n    const secondsString = secondsInt < 10 ? `0${secondsInt}` : `${secondsInt}`;\n    return `${DAYS[dayOfWeek]}, ${dayOfMonthString} ${MONTHS[month]} ${year} ${hoursString}:${minutesString}:${secondsString} GMT`;\n}\nconst RFC3339 = new RegExp(/^(\\d{4})-(\\d{2})-(\\d{2})[tT](\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))?[zZ]$/);\nexport const parseRfc3339DateTime = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value !== \"string\") {\n        throw new TypeError(\"RFC-3339 date-times must be expressed as strings\");\n    }\n    const match = RFC3339.exec(value);\n    if (!match) {\n        throw new TypeError(\"Invalid RFC-3339 date-time value\");\n    }\n    const [_, yearStr, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n    const year = strictParseShort(stripLeadingZeroes(yearStr));\n    const month = parseDateValue(monthStr, \"month\", 1, 12);\n    const day = parseDateValue(dayStr, \"day\", 1, 31);\n    return buildDate(year, month, day, { hours, minutes, seconds, fractionalMilliseconds });\n};\nconst RFC3339_WITH_OFFSET = new RegExp(/^(\\d{4})-(\\d{2})-(\\d{2})[tT](\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))?(([-+]\\d{2}\\:\\d{2})|[zZ])$/);\nexport const parseRfc3339DateTimeWithOffset = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value !== \"string\") {\n        throw new TypeError(\"RFC-3339 date-times must be expressed as strings\");\n    }\n    const match = RFC3339_WITH_OFFSET.exec(value);\n    if (!match) {\n        throw new TypeError(\"Invalid RFC-3339 date-time value\");\n    }\n    const [_, yearStr, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds, offsetStr] = match;\n    const year = strictParseShort(stripLeadingZeroes(yearStr));\n    const month = parseDateValue(monthStr, \"month\", 1, 12);\n    const day = parseDateValue(dayStr, \"day\", 1, 31);\n    const date = buildDate(year, month, day, { hours, minutes, seconds, fractionalMilliseconds });\n    if (offsetStr.toUpperCase() != \"Z\") {\n        date.setTime(date.getTime() - parseOffsetToMilliseconds(offsetStr));\n    }\n    return date;\n};\nconst IMF_FIXDATE = new RegExp(/^(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\\d{2}) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\\d{4}) (\\d{1,2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? GMT$/);\nconst RFC_850_DATE = new RegExp(/^(?:Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday), (\\d{2})-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\\d{2}) (\\d{1,2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? GMT$/);\nconst ASC_TIME = new RegExp(/^(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( [1-9]|\\d{2}) (\\d{1,2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? (\\d{4})$/);\nexport const parseRfc7231DateTime = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value !== \"string\") {\n        throw new TypeError(\"RFC-7231 date-times must be expressed as strings\");\n    }\n    let match = IMF_FIXDATE.exec(value);\n    if (match) {\n        const [_, dayStr, monthStr, yearStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n        return buildDate(strictParseShort(stripLeadingZeroes(yearStr)), parseMonthByShortName(monthStr), parseDateValue(dayStr, \"day\", 1, 31), { hours, minutes, seconds, fractionalMilliseconds });\n    }\n    match = RFC_850_DATE.exec(value);\n    if (match) {\n        const [_, dayStr, monthStr, yearStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n        return adjustRfc850Year(buildDate(parseTwoDigitYear(yearStr), parseMonthByShortName(monthStr), parseDateValue(dayStr, \"day\", 1, 31), {\n            hours,\n            minutes,\n            seconds,\n            fractionalMilliseconds,\n        }));\n    }\n    match = ASC_TIME.exec(value);\n    if (match) {\n        const [_, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds, yearStr] = match;\n        return buildDate(strictParseShort(stripLeadingZeroes(yearStr)), parseMonthByShortName(monthStr), parseDateValue(dayStr.trimLeft(), \"day\", 1, 31), { hours, minutes, seconds, fractionalMilliseconds });\n    }\n    throw new TypeError(\"Invalid RFC-7231 date-time value\");\n};\nexport const parseEpochTimestamp = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    let valueAsDouble;\n    if (typeof value === \"number\") {\n        valueAsDouble = value;\n    }\n    else if (typeof value === \"string\") {\n        valueAsDouble = strictParseDouble(value);\n    }\n    else if (typeof value === \"object\" && value.tag === 1) {\n        valueAsDouble = value.value;\n    }\n    else {\n        throw new TypeError(\"Epoch timestamps must be expressed as floating point numbers or their string representation\");\n    }\n    if (Number.isNaN(valueAsDouble) || valueAsDouble === Infinity || valueAsDouble === -Infinity) {\n        throw new TypeError(\"Epoch timestamps must be valid, non-Infinite, non-NaN numerics\");\n    }\n    return new Date(Math.round(valueAsDouble * 1000));\n};\nconst buildDate = (year, month, day, time) => {\n    const adjustedMonth = month - 1;\n    validateDayOfMonth(year, adjustedMonth, day);\n    return new Date(Date.UTC(year, adjustedMonth, day, parseDateValue(time.hours, \"hour\", 0, 23), parseDateValue(time.minutes, \"minute\", 0, 59), parseDateValue(time.seconds, \"seconds\", 0, 60), parseMilliseconds(time.fractionalMilliseconds)));\n};\nconst parseTwoDigitYear = (value) => {\n    const thisYear = new Date().getUTCFullYear();\n    const valueInThisCentury = Math.floor(thisYear / 100) * 100 + strictParseShort(stripLeadingZeroes(value));\n    if (valueInThisCentury < thisYear) {\n        return valueInThisCentury + 100;\n    }\n    return valueInThisCentury;\n};\nconst FIFTY_YEARS_IN_MILLIS = 50 * 365 * 24 * 60 * 60 * 1000;\nconst adjustRfc850Year = (input) => {\n    if (input.getTime() - new Date().getTime() > FIFTY_YEARS_IN_MILLIS) {\n        return new Date(Date.UTC(input.getUTCFullYear() - 100, input.getUTCMonth(), input.getUTCDate(), input.getUTCHours(), input.getUTCMinutes(), input.getUTCSeconds(), input.getUTCMilliseconds()));\n    }\n    return input;\n};\nconst parseMonthByShortName = (value) => {\n    const monthIdx = MONTHS.indexOf(value);\n    if (monthIdx < 0) {\n        throw new TypeError(`Invalid month: ${value}`);\n    }\n    return monthIdx + 1;\n};\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst validateDayOfMonth = (year, month, day) => {\n    let maxDays = DAYS_IN_MONTH[month];\n    if (month === 1 && isLeapYear(year)) {\n        maxDays = 29;\n    }\n    if (day > maxDays) {\n        throw new TypeError(`Invalid day for ${MONTHS[month]} in ${year}: ${day}`);\n    }\n};\nconst isLeapYear = (year) => {\n    return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n};\nconst parseDateValue = (value, type, lower, upper) => {\n    const dateVal = strictParseByte(stripLeadingZeroes(value));\n    if (dateVal < lower || dateVal > upper) {\n        throw new TypeError(`${type} must be between ${lower} and ${upper}, inclusive`);\n    }\n    return dateVal;\n};\nconst parseMilliseconds = (value) => {\n    if (value === null || value === undefined) {\n        return 0;\n    }\n    return strictParseFloat32(\"0.\" + value) * 1000;\n};\nconst parseOffsetToMilliseconds = (value) => {\n    const directionStr = value[0];\n    let direction = 1;\n    if (directionStr == \"+\") {\n        direction = 1;\n    }\n    else if (directionStr == \"-\") {\n        direction = -1;\n    }\n    else {\n        throw new TypeError(`Offset direction, ${directionStr}, must be \"+\" or \"-\"`);\n    }\n    const hour = Number(value.substring(1, 3));\n    const minute = Number(value.substring(4, 6));\n    return direction * (hour * 60 + minute) * 60 * 1000;\n};\nconst stripLeadingZeroes = (value) => {\n    let idx = 0;\n    while (idx < value.length - 1 && value.charAt(idx) === \"0\") {\n        idx++;\n    }\n    if (idx === 0) {\n        return value;\n    }\n    return value.slice(idx);\n};\n", "/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.randomUUID = void 0;\nconst tslib_1 = require(\"tslib\");\nconst crypto_1 = tslib_1.__importDefault(require(\"crypto\"));\nexports.randomUUID = crypto_1.default.randomUUID.bind(crypto_1.default);\n", "'use strict';\n\nvar randomUUID = require('./randomUUID');\n\nconst decimalToHex = Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, \"0\"));\nconst v4 = () => {\n    if (randomUUID.randomUUID) {\n        return randomUUID.randomUUID();\n    }\n    const rnds = new Uint8Array(16);\n    crypto.getRandomValues(rnds);\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n    return (decimalToHex[rnds[0]] +\n        decimalToHex[rnds[1]] +\n        decimalToHex[rnds[2]] +\n        decimalToHex[rnds[3]] +\n        \"-\" +\n        decimalToHex[rnds[4]] +\n        decimalToHex[rnds[5]] +\n        \"-\" +\n        decimalToHex[rnds[6]] +\n        decimalToHex[rnds[7]] +\n        \"-\" +\n        decimalToHex[rnds[8]] +\n        decimalToHex[rnds[9]] +\n        \"-\" +\n        decimalToHex[rnds[10]] +\n        decimalToHex[rnds[11]] +\n        decimalToHex[rnds[12]] +\n        decimalToHex[rnds[13]] +\n        decimalToHex[rnds[14]] +\n        decimalToHex[rnds[15]]);\n};\n\nexports.v4 = v4;\n", "import { v4 as generateIdempotencyToken } from \"@smithy/uuid\";\nexport { generateIdempotencyToken };\n", "export const LazyJsonString = function LazyJsonString(val) {\n    const str = Object.assign(new String(val), {\n        deserializeJSON() {\n            return JSON.parse(String(val));\n        },\n        toString() {\n            return String(val);\n        },\n        toJSON() {\n            return String(val);\n        },\n    });\n    return str;\n};\nLazyJsonString.from = (object) => {\n    if (object && typeof object === \"object\" && (object instanceof LazyJsonString || \"deserializeJSON\" in object)) {\n        return object;\n    }\n    else if (typeof object === \"string\" || Object.getPrototypeOf(object) === String.prototype) {\n        return LazyJsonString(String(object));\n    }\n    return LazyJsonString(JSON.stringify(object));\n};\nLazyJsonString.fromObject = LazyJsonString.from;\n", "export function quoteHeader(part) {\n    if (part.includes(\",\") || part.includes('\"')) {\n        part = `\"${part.replace(/\"/g, '\\\\\"')}\"`;\n    }\n    return part;\n}\n", "const ddd = `(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun)(?:[ne|u?r]?s?day)?`;\nconst mmm = `(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)`;\nconst time = `(\\\\d?\\\\d):(\\\\d{2}):(\\\\d{2})(?:\\\\.(\\\\d+))?`;\nconst date = `(\\\\d?\\\\d)`;\nconst year = `(\\\\d{4})`;\nconst RFC3339_WITH_OFFSET = new RegExp(/^(\\d{4})-(\\d\\d)-(\\d\\d)[tT](\\d\\d):(\\d\\d):(\\d\\d)(\\.(\\d+))?(([-+]\\d\\d:\\d\\d)|[zZ])$/);\nconst IMF_FIXDATE = new RegExp(`^${ddd}, ${date} ${mmm} ${year} ${time} GMT$`);\nconst RFC_850_DATE = new RegExp(`^${ddd}, ${date}-${mmm}-(\\\\d\\\\d) ${time} GMT$`);\nconst ASC_TIME = new RegExp(`^${ddd} ${mmm} ( [1-9]|\\\\d\\\\d) ${time} ${year}$`);\nconst months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\nexport const _parseEpochTimestamp = (value) => {\n    if (value == null) {\n        return void 0;\n    }\n    let num = NaN;\n    if (typeof value === \"number\") {\n        num = value;\n    }\n    else if (typeof value === \"string\") {\n        if (!/^-?\\d*\\.?\\d+$/.test(value)) {\n            throw new TypeError(`parseEpochTimestamp - numeric string invalid.`);\n        }\n        num = Number.parseFloat(value);\n    }\n    else if (typeof value === \"object\" && value.tag === 1) {\n        num = value.value;\n    }\n    if (isNaN(num) || Math.abs(num) === Infinity) {\n        throw new TypeError(\"Epoch timestamps must be valid finite numbers.\");\n    }\n    return new Date(Math.round(num * 1000));\n};\nexport const _parseRfc3339DateTimeWithOffset = (value) => {\n    if (value == null) {\n        return void 0;\n    }\n    if (typeof value !== \"string\") {\n        throw new TypeError(\"RFC3339 timestamps must be strings\");\n    }\n    const matches = RFC3339_WITH_OFFSET.exec(value);\n    if (!matches) {\n        throw new TypeError(`Invalid RFC3339 timestamp format ${value}`);\n    }\n    const [, yearStr, monthStr, dayStr, hours, minutes, seconds, , ms, offsetStr] = matches;\n    range(monthStr, 1, 12);\n    range(dayStr, 1, 31);\n    range(hours, 0, 23);\n    range(minutes, 0, 59);\n    range(seconds, 0, 60);\n    const date = new Date();\n    date.setUTCFullYear(Number(yearStr), Number(monthStr) - 1, Number(dayStr));\n    date.setUTCHours(Number(hours));\n    date.setUTCMinutes(Number(minutes));\n    date.setUTCSeconds(Number(seconds));\n    date.setUTCMilliseconds(Number(ms) ? Math.round(parseFloat(`0.${ms}`) * 1000) : 0);\n    if (offsetStr.toUpperCase() != \"Z\") {\n        const [, sign, offsetH, offsetM] = /([+-])(\\d\\d):(\\d\\d)/.exec(offsetStr) || [void 0, \"+\", 0, 0];\n        const scalar = sign === \"-\" ? 1 : -1;\n        date.setTime(date.getTime() + scalar * (Number(offsetH) * 60 * 60 * 1000 + Number(offsetM) * 60 * 1000));\n    }\n    return date;\n};\nexport const _parseRfc7231DateTime = (value) => {\n    if (value == null) {\n        return void 0;\n    }\n    if (typeof value !== \"string\") {\n        throw new TypeError(\"RFC7231 timestamps must be strings.\");\n    }\n    let day;\n    let month;\n    let year;\n    let hour;\n    let minute;\n    let second;\n    let fraction;\n    let matches;\n    if ((matches = IMF_FIXDATE.exec(value))) {\n        [, day, month, year, hour, minute, second, fraction] = matches;\n    }\n    else if ((matches = RFC_850_DATE.exec(value))) {\n        [, day, month, year, hour, minute, second, fraction] = matches;\n        year = (Number(year) + 1900).toString();\n    }\n    else if ((matches = ASC_TIME.exec(value))) {\n        [, month, day, hour, minute, second, fraction, year] = matches;\n    }\n    if (year && second) {\n        const date = new Date();\n        date.setUTCFullYear(Number(year));\n        date.setUTCMonth(months.indexOf(month));\n        range(day, 1, 31);\n        date.setUTCDate(Number(day));\n        range(hour, 0, 23);\n        date.setUTCHours(Number(hour));\n        range(minute, 0, 59);\n        date.setUTCMinutes(Number(minute));\n        range(second, 0, 60);\n        date.setUTCSeconds(Number(second));\n        date.setUTCMilliseconds(fraction ? Math.round(parseFloat(`0.${fraction}`) * 1000) : 0);\n        return date;\n    }\n    throw new TypeError(`Invalid RFC7231 date-time value ${value}.`);\n};\nfunction range(v, min, max) {\n    const _v = Number(v);\n    if (_v < min || _v > max) {\n        throw new Error(`Value ${_v} out of range [${min}, ${max}]`);\n    }\n}\n", "export function splitEvery(value, delimiter, numDelimiters) {\n    if (numDelimiters <= 0 || !Number.isInteger(numDelimiters)) {\n        throw new Error(\"Invalid number of delimiters (\" + numDelimiters + \") for splitEvery.\");\n    }\n    const segments = value.split(delimiter);\n    if (numDelimiters === 1) {\n        return segments;\n    }\n    const compoundSegments = [];\n    let currentSegment = \"\";\n    for (let i = 0; i < segments.length; i++) {\n        if (currentSegment === \"\") {\n            currentSegment = segments[i];\n        }\n        else {\n            currentSegment += delimiter + segments[i];\n        }\n        if ((i + 1) % numDelimiters === 0) {\n            compoundSegments.push(currentSegment);\n            currentSegment = \"\";\n        }\n    }\n    if (currentSegment !== \"\") {\n        compoundSegments.push(currentSegment);\n    }\n    return compoundSegments;\n}\n", "export const splitHeader = (value) => {\n    const z = value.length;\n    const values = [];\n    let withinQuotes = false;\n    let prevChar = undefined;\n    let anchor = 0;\n    for (let i = 0; i < z; ++i) {\n        const char = value[i];\n        switch (char) {\n            case `\"`:\n                if (prevChar !== \"\\\\\") {\n                    withinQuotes = !withinQuotes;\n                }\n                break;\n            case \",\":\n                if (!withinQuotes) {\n                    values.push(value.slice(anchor, i));\n                    anchor = i + 1;\n                }\n                break;\n            default:\n        }\n        prevChar = char;\n    }\n    values.push(value.slice(anchor));\n    return values.map((v) => {\n        v = v.trim();\n        const z = v.length;\n        if (z < 2) {\n            return v;\n        }\n        if (v[0] === `\"` && v[z - 1] === `\"`) {\n            v = v.slice(1, z - 1);\n        }\n        return v.replace(/\\\\\"/g, '\"');\n    });\n};\n", "const format = /^-?\\d*(\\.\\d+)?$/;\nexport class NumericValue {\n    string;\n    type;\n    constructor(string, type) {\n        this.string = string;\n        this.type = type;\n        if (!format.test(string)) {\n            throw new Error(`@smithy/core/serde - NumericValue must only contain [0-9], at most one decimal point \".\", and an optional negation prefix \"-\".`);\n        }\n    }\n    toString() {\n        return this.string;\n    }\n    static [Symbol.hasInstance](object) {\n        if (!object || typeof object !== \"object\") {\n            return false;\n        }\n        const _nv = object;\n        return NumericValue.prototype.isPrototypeOf(object) || (_nv.type === \"bigDecimal\" && format.test(_nv.string));\n    }\n}\nexport function nv(input) {\n    return new NumericValue(String(input), \"bigDecimal\");\n}\n", "export * from \"./copyDocumentWithTransform\";\nexport * from \"./date-utils\";\nexport * from \"./generateIdempotencyToken\";\nexport * from \"./lazy-json\";\nexport * from \"./parse-utils\";\nexport * from \"./quote-header\";\nexport * from \"./schema-serde-lib/schema-date-utils\";\nexport * from \"./split-every\";\nexport * from \"./split-header\";\nexport * from \"./value/NumericValue\";\n", "import { fromUtf8 } from \"@smithy/util-utf8\";\nexport class EventStreamSerde {\n    marshaller;\n    serializer;\n    deserializer;\n    serdeContext;\n    defaultContentType;\n    constructor({ marshaller, serializer, deserializer, serdeContext, defaultContentType, }) {\n        this.marshaller = marshaller;\n        this.serializer = serializer;\n        this.deserializer = deserializer;\n        this.serdeContext = serdeContext;\n        this.defaultContentType = defaultContentType;\n    }\n    async serializeEventStream({ eventStream, requestSchema, initialRequest, }) {\n        const marshaller = this.marshaller;\n        const eventStreamMember = requestSchema.getEventStreamMember();\n        const unionSchema = requestSchema.getMemberSchema(eventStreamMember);\n        const memberSchemas = unionSchema.getMemberSchemas();\n        const serializer = this.serializer;\n        const defaultContentType = this.defaultContentType;\n        const initialRequestMarker = Symbol(\"initialRequestMarker\");\n        const eventStreamIterable = {\n            async *[Symbol.asyncIterator]() {\n                if (initialRequest) {\n                    const headers = {\n                        \":event-type\": { type: \"string\", value: \"initial-request\" },\n                        \":message-type\": { type: \"string\", value: \"event\" },\n                        \":content-type\": { type: \"string\", value: defaultContentType },\n                    };\n                    serializer.write(requestSchema, initialRequest);\n                    const body = serializer.flush();\n                    yield {\n                        [initialRequestMarker]: true,\n                        headers,\n                        body,\n                    };\n                }\n                for await (const page of eventStream) {\n                    yield page;\n                }\n            },\n        };\n        return marshaller.serialize(eventStreamIterable, (event) => {\n            if (event[initialRequestMarker]) {\n                return {\n                    headers: event.headers,\n                    body: event.body,\n                };\n            }\n            const unionMember = Object.keys(event).find((key) => {\n                return key !== \"__type\";\n            }) ?? \"\";\n            const { additionalHeaders, body, eventType, explicitPayloadContentType } = this.writeEventBody(unionMember, unionSchema, event);\n            const headers = {\n                \":event-type\": { type: \"string\", value: eventType },\n                \":message-type\": { type: \"string\", value: \"event\" },\n                \":content-type\": { type: \"string\", value: explicitPayloadContentType ?? defaultContentType },\n                ...additionalHeaders,\n            };\n            return {\n                headers,\n                body,\n            };\n        });\n    }\n    async deserializeEventStream({ response, responseSchema, initialResponseContainer, }) {\n        const marshaller = this.marshaller;\n        const eventStreamMember = responseSchema.getEventStreamMember();\n        const unionSchema = responseSchema.getMemberSchema(eventStreamMember);\n        const memberSchemas = unionSchema.getMemberSchemas();\n        const initialResponseMarker = Symbol(\"initialResponseMarker\");\n        const asyncIterable = marshaller.deserialize(response.body, async (event) => {\n            const unionMember = Object.keys(event).find((key) => {\n                return key !== \"__type\";\n            }) ?? \"\";\n            if (unionMember === \"initial-response\") {\n                const dataObject = await this.deserializer.read(responseSchema, event[unionMember].body);\n                delete dataObject[eventStreamMember];\n                return {\n                    [initialResponseMarker]: true,\n                    ...dataObject,\n                };\n            }\n            else if (unionMember in memberSchemas) {\n                const eventStreamSchema = memberSchemas[unionMember];\n                return {\n                    [unionMember]: await this.deserializer.read(eventStreamSchema, event[unionMember].body),\n                };\n            }\n            else {\n                return {\n                    $unknown: event,\n                };\n            }\n        });\n        const asyncIterator = asyncIterable[Symbol.asyncIterator]();\n        const firstEvent = await asyncIterator.next();\n        if (firstEvent.done) {\n            return asyncIterable;\n        }\n        if (firstEvent.value?.[initialResponseMarker]) {\n            if (!responseSchema) {\n                throw new Error(\"@smithy::core/protocols - initial-response event encountered in event stream but no response schema given.\");\n            }\n            for (const [key, value] of Object.entries(firstEvent.value)) {\n                initialResponseContainer[key] = value;\n            }\n        }\n        return {\n            async *[Symbol.asyncIterator]() {\n                if (!firstEvent?.value?.[initialResponseMarker]) {\n                    yield firstEvent.value;\n                }\n                while (true) {\n                    const { done, value } = await asyncIterator.next();\n                    if (done) {\n                        break;\n                    }\n                    yield value;\n                }\n            },\n        };\n    }\n    writeEventBody(unionMember, unionSchema, event) {\n        const serializer = this.serializer;\n        let eventType = unionMember;\n        let explicitPayloadMember = null;\n        let explicitPayloadContentType;\n        const isKnownSchema = (() => {\n            const struct = unionSchema.getSchema();\n            return struct.memberNames.includes(unionMember);\n        })();\n        const additionalHeaders = {};\n        if (!isKnownSchema) {\n            const [type, value] = event[unionMember];\n            eventType = type;\n            serializer.write(15, value);\n        }\n        else {\n            const eventSchema = unionSchema.getMemberSchema(unionMember);\n            if (eventSchema.isStructSchema()) {\n                for (const [memberName, memberSchema] of eventSchema.structIterator()) {\n                    const { eventHeader, eventPayload } = memberSchema.getMergedTraits();\n                    if (eventPayload) {\n                        explicitPayloadMember = memberName;\n                        break;\n                    }\n                    else if (eventHeader) {\n                        const value = event[unionMember][memberName];\n                        let type = \"binary\";\n                        if (memberSchema.isNumericSchema()) {\n                            if ((-2) ** 31 <= value && value <= 2 ** 31 - 1) {\n                                type = \"integer\";\n                            }\n                            else {\n                                type = \"long\";\n                            }\n                        }\n                        else if (memberSchema.isTimestampSchema()) {\n                            type = \"timestamp\";\n                        }\n                        else if (memberSchema.isStringSchema()) {\n                            type = \"string\";\n                        }\n                        else if (memberSchema.isBooleanSchema()) {\n                            type = \"boolean\";\n                        }\n                        if (value != null) {\n                            additionalHeaders[memberName] = {\n                                type,\n                                value,\n                            };\n                            delete event[unionMember][memberName];\n                        }\n                    }\n                }\n                if (explicitPayloadMember !== null) {\n                    const payloadSchema = eventSchema.getMemberSchema(explicitPayloadMember);\n                    if (payloadSchema.isBlobSchema()) {\n                        explicitPayloadContentType = \"application/octet-stream\";\n                    }\n                    else if (payloadSchema.isStringSchema()) {\n                        explicitPayloadContentType = \"text/plain\";\n                    }\n                    serializer.write(payloadSchema, event[unionMember][explicitPayloadMember]);\n                }\n                else {\n                    serializer.write(eventSchema, event[unionMember]);\n                }\n            }\n            else {\n                throw new Error(\"@smithy/core/event-streams - non-struct member not supported in event stream union.\");\n            }\n        }\n        const messageSerialization = serializer.flush();\n        const body = typeof messageSerialization === \"string\"\n            ? (this.serdeContext?.utf8Decoder ?? fromUtf8)(messageSerialization)\n            : messageSerialization;\n        return {\n            body,\n            eventType,\n            explicitPayloadContentType,\n            additionalHeaders,\n        };\n    }\n}\n", "export * from \"./EventStreamSerde\";\n", "import { NormalizedSchema } from \"@smithy/core/schema\";\nimport { HttpRequest, HttpResponse } from \"@smithy/protocol-http\";\nexport class HttpProtocol {\n    options;\n    serdeContext;\n    constructor(options) {\n        this.options = options;\n    }\n    getRequestType() {\n        return HttpRequest;\n    }\n    getResponseType() {\n        return HttpResponse;\n    }\n    setSerdeContext(serdeContext) {\n        this.serdeContext = serdeContext;\n        this.serializer.setSerdeContext(serdeContext);\n        this.deserializer.setSerdeContext(serdeContext);\n        if (this.getPayloadCodec()) {\n            this.getPayloadCodec().setSerdeContext(serdeContext);\n        }\n    }\n    updateServiceEndpoint(request, endpoint) {\n        if (\"url\" in endpoint) {\n            request.protocol = endpoint.url.protocol;\n            request.hostname = endpoint.url.hostname;\n            request.port = endpoint.url.port ? Number(endpoint.url.port) : undefined;\n            request.path = endpoint.url.pathname;\n            request.fragment = endpoint.url.hash || void 0;\n            request.username = endpoint.url.username || void 0;\n            request.password = endpoint.url.password || void 0;\n            if (!request.query) {\n                request.query = {};\n            }\n            for (const [k, v] of endpoint.url.searchParams.entries()) {\n                request.query[k] = v;\n            }\n            return request;\n        }\n        else {\n            request.protocol = endpoint.protocol;\n            request.hostname = endpoint.hostname;\n            request.port = endpoint.port ? Number(endpoint.port) : undefined;\n            request.path = endpoint.path;\n            request.query = {\n                ...endpoint.query,\n            };\n            return request;\n        }\n    }\n    setHostPrefix(request, operationSchema, input) {\n        const operationNs = NormalizedSchema.of(operationSchema);\n        const inputNs = NormalizedSchema.of(operationSchema.input);\n        if (operationNs.getMergedTraits().endpoint) {\n            let hostPrefix = operationNs.getMergedTraits().endpoint?.[0];\n            if (typeof hostPrefix === \"string\") {\n                const hostLabelInputs = [...inputNs.structIterator()].filter(([, member]) => member.getMergedTraits().hostLabel);\n                for (const [name] of hostLabelInputs) {\n                    const replacement = input[name];\n                    if (typeof replacement !== \"string\") {\n                        throw new Error(`@smithy/core/schema - ${name} in input must be a string as hostLabel.`);\n                    }\n                    hostPrefix = hostPrefix.replace(`{${name}}`, replacement);\n                }\n                request.hostname = hostPrefix + request.hostname;\n            }\n        }\n    }\n    deserializeMetadata(output) {\n        return {\n            httpStatusCode: output.statusCode,\n            requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n            extendedRequestId: output.headers[\"x-amz-id-2\"],\n            cfId: output.headers[\"x-amz-cf-id\"],\n        };\n    }\n    async serializeEventStream({ eventStream, requestSchema, initialRequest, }) {\n        const eventStreamSerde = await this.loadEventStreamCapability();\n        return eventStreamSerde.serializeEventStream({\n            eventStream,\n            requestSchema,\n            initialRequest,\n        });\n    }\n    async deserializeEventStream({ response, responseSchema, initialResponseContainer, }) {\n        const eventStreamSerde = await this.loadEventStreamCapability();\n        return eventStreamSerde.deserializeEventStream({\n            response,\n            responseSchema,\n            initialResponseContainer,\n        });\n    }\n    async loadEventStreamCapability() {\n        const { EventStreamSerde } = await import(\"@smithy/core/event-streams\");\n        return new EventStreamSerde({\n            marshaller: this.getEventStreamMarshaller(),\n            serializer: this.serializer,\n            deserializer: this.deserializer,\n            serdeContext: this.serdeContext,\n            defaultContentType: this.getDefaultContentType(),\n        });\n    }\n    getDefaultContentType() {\n        throw new Error(`@smithy/core/protocols - ${this.constructor.name} getDefaultContentType() implementation missing.`);\n    }\n    async deserializeHttpMessage(schema, context, response, arg4, arg5) {\n        void schema;\n        void context;\n        void response;\n        void arg4;\n        void arg5;\n        return [];\n    }\n    getEventStreamMarshaller() {\n        const context = this.serdeContext;\n        if (!context.eventStreamMarshaller) {\n            throw new Error(\"@smithy/core - HttpProtocol: eventStreamMarshaller missing in serdeContext.\");\n        }\n        return context.eventStreamMarshaller;\n    }\n}\n", "import { NormalizedSchema, translateTraits } from \"@smithy/core/schema\";\nimport { splitEvery, splitHeader } from \"@smithy/core/serde\";\nimport { HttpRequest } from \"@smithy/protocol-http\";\nimport { sdkStreamMixin } from \"@smithy/util-stream\";\nimport { collectBody } from \"./collect-stream-body\";\nimport { extendedEncodeURIComponent } from \"./extended-encode-uri-component\";\nimport { HttpProtocol } from \"./HttpProtocol\";\nexport class HttpBindingProtocol extends HttpProtocol {\n    async serializeRequest(operationSchema, _input, context) {\n        const input = {\n            ...(_input ?? {}),\n        };\n        const serializer = this.serializer;\n        const query = {};\n        const headers = {};\n        const endpoint = await context.endpoint();\n        const ns = NormalizedSchema.of(operationSchema?.input);\n        const schema = ns.getSchema();\n        let hasNonHttpBindingMember = false;\n        let payload;\n        const request = new HttpRequest({\n            protocol: \"\",\n            hostname: \"\",\n            port: undefined,\n            path: \"\",\n            fragment: undefined,\n            query: query,\n            headers: headers,\n            body: undefined,\n        });\n        if (endpoint) {\n            this.updateServiceEndpoint(request, endpoint);\n            this.setHostPrefix(request, operationSchema, input);\n            const opTraits = translateTraits(operationSchema.traits);\n            if (opTraits.http) {\n                request.method = opTraits.http[0];\n                const [path, search] = opTraits.http[1].split(\"?\");\n                if (request.path == \"/\") {\n                    request.path = path;\n                }\n                else {\n                    request.path += path;\n                }\n                const traitSearchParams = new URLSearchParams(search ?? \"\");\n                Object.assign(query, Object.fromEntries(traitSearchParams));\n            }\n        }\n        for (const [memberName, memberNs] of ns.structIterator()) {\n            const memberTraits = memberNs.getMergedTraits() ?? {};\n            const inputMemberValue = input[memberName];\n            if (inputMemberValue == null) {\n                continue;\n            }\n            if (memberTraits.httpPayload) {\n                const isStreaming = memberNs.isStreaming();\n                if (isStreaming) {\n                    const isEventStream = memberNs.isStructSchema();\n                    if (isEventStream) {\n                        if (input[memberName]) {\n                            payload = await this.serializeEventStream({\n                                eventStream: input[memberName],\n                                requestSchema: ns,\n                            });\n                        }\n                    }\n                    else {\n                        payload = inputMemberValue;\n                    }\n                }\n                else {\n                    serializer.write(memberNs, inputMemberValue);\n                    payload = serializer.flush();\n                }\n                delete input[memberName];\n            }\n            else if (memberTraits.httpLabel) {\n                serializer.write(memberNs, inputMemberValue);\n                const replacement = serializer.flush();\n                if (request.path.includes(`{${memberName}+}`)) {\n                    request.path = request.path.replace(`{${memberName}+}`, replacement.split(\"/\").map(extendedEncodeURIComponent).join(\"/\"));\n                }\n                else if (request.path.includes(`{${memberName}}`)) {\n                    request.path = request.path.replace(`{${memberName}}`, extendedEncodeURIComponent(replacement));\n                }\n                delete input[memberName];\n            }\n            else if (memberTraits.httpHeader) {\n                serializer.write(memberNs, inputMemberValue);\n                headers[memberTraits.httpHeader.toLowerCase()] = String(serializer.flush());\n                delete input[memberName];\n            }\n            else if (typeof memberTraits.httpPrefixHeaders === \"string\") {\n                for (const [key, val] of Object.entries(inputMemberValue)) {\n                    const amalgam = memberTraits.httpPrefixHeaders + key;\n                    serializer.write([memberNs.getValueSchema(), { httpHeader: amalgam }], val);\n                    headers[amalgam.toLowerCase()] = serializer.flush();\n                }\n                delete input[memberName];\n            }\n            else if (memberTraits.httpQuery || memberTraits.httpQueryParams) {\n                this.serializeQuery(memberNs, inputMemberValue, query);\n                delete input[memberName];\n            }\n            else {\n                hasNonHttpBindingMember = true;\n            }\n        }\n        if (hasNonHttpBindingMember && input) {\n            serializer.write(schema, input);\n            payload = serializer.flush();\n        }\n        request.headers = headers;\n        request.query = query;\n        request.body = payload;\n        return request;\n    }\n    serializeQuery(ns, data, query) {\n        const serializer = this.serializer;\n        const traits = ns.getMergedTraits();\n        if (traits.httpQueryParams) {\n            for (const [key, val] of Object.entries(data)) {\n                if (!(key in query)) {\n                    const valueSchema = ns.getValueSchema();\n                    Object.assign(valueSchema.getMergedTraits(), {\n                        ...traits,\n                        httpQuery: key,\n                        httpQueryParams: undefined,\n                    });\n                    this.serializeQuery(valueSchema, val, query);\n                }\n            }\n            return;\n        }\n        if (ns.isListSchema()) {\n            const sparse = !!ns.getMergedTraits().sparse;\n            const buffer = [];\n            for (const item of data) {\n                serializer.write([ns.getValueSchema(), traits], item);\n                const serializable = serializer.flush();\n                if (sparse || serializable !== undefined) {\n                    buffer.push(serializable);\n                }\n            }\n            query[traits.httpQuery] = buffer;\n        }\n        else {\n            serializer.write([ns, traits], data);\n            query[traits.httpQuery] = serializer.flush();\n        }\n    }\n    async deserializeResponse(operationSchema, context, response) {\n        const deserializer = this.deserializer;\n        const ns = NormalizedSchema.of(operationSchema.output);\n        const dataObject = {};\n        if (response.statusCode >= 300) {\n            const bytes = await collectBody(response.body, context);\n            if (bytes.byteLength > 0) {\n                Object.assign(dataObject, await deserializer.read(15, bytes));\n            }\n            await this.handleError(operationSchema, context, response, dataObject, this.deserializeMetadata(response));\n            throw new Error(\"@smithy/core/protocols - HTTP Protocol error handler failed to throw.\");\n        }\n        for (const header in response.headers) {\n            const value = response.headers[header];\n            delete response.headers[header];\n            response.headers[header.toLowerCase()] = value;\n        }\n        const nonHttpBindingMembers = await this.deserializeHttpMessage(ns, context, response, dataObject);\n        if (nonHttpBindingMembers.length) {\n            const bytes = await collectBody(response.body, context);\n            if (bytes.byteLength > 0) {\n                const dataFromBody = await deserializer.read(ns, bytes);\n                for (const member of nonHttpBindingMembers) {\n                    dataObject[member] = dataFromBody[member];\n                }\n            }\n        }\n        dataObject.$metadata = this.deserializeMetadata(response);\n        return dataObject;\n    }\n    async deserializeHttpMessage(schema, context, response, arg4, arg5) {\n        let dataObject;\n        if (arg4 instanceof Set) {\n            dataObject = arg5;\n        }\n        else {\n            dataObject = arg4;\n        }\n        const deserializer = this.deserializer;\n        const ns = NormalizedSchema.of(schema);\n        const nonHttpBindingMembers = [];\n        for (const [memberName, memberSchema] of ns.structIterator()) {\n            const memberTraits = memberSchema.getMemberTraits();\n            if (memberTraits.httpPayload) {\n                const isStreaming = memberSchema.isStreaming();\n                if (isStreaming) {\n                    const isEventStream = memberSchema.isStructSchema();\n                    if (isEventStream) {\n                        dataObject[memberName] = await this.deserializeEventStream({\n                            response,\n                            responseSchema: ns,\n                        });\n                    }\n                    else {\n                        dataObject[memberName] = sdkStreamMixin(response.body);\n                    }\n                }\n                else if (response.body) {\n                    const bytes = await collectBody(response.body, context);\n                    if (bytes.byteLength > 0) {\n                        dataObject[memberName] = await deserializer.read(memberSchema, bytes);\n                    }\n                }\n            }\n            else if (memberTraits.httpHeader) {\n                const key = String(memberTraits.httpHeader).toLowerCase();\n                const value = response.headers[key];\n                if (null != value) {\n                    if (memberSchema.isListSchema()) {\n                        const headerListValueSchema = memberSchema.getValueSchema();\n                        headerListValueSchema.getMergedTraits().httpHeader = key;\n                        let sections;\n                        if (headerListValueSchema.isTimestampSchema() &&\n                            headerListValueSchema.getSchema() === 4) {\n                            sections = splitEvery(value, \",\", 2);\n                        }\n                        else {\n                            sections = splitHeader(value);\n                        }\n                        const list = [];\n                        for (const section of sections) {\n                            list.push(await deserializer.read(headerListValueSchema, section.trim()));\n                        }\n                        dataObject[memberName] = list;\n                    }\n                    else {\n                        dataObject[memberName] = await deserializer.read(memberSchema, value);\n                    }\n                }\n            }\n            else if (memberTraits.httpPrefixHeaders !== undefined) {\n                dataObject[memberName] = {};\n                for (const [header, value] of Object.entries(response.headers)) {\n                    if (header.startsWith(memberTraits.httpPrefixHeaders)) {\n                        const valueSchema = memberSchema.getValueSchema();\n                        valueSchema.getMergedTraits().httpHeader = header;\n                        dataObject[memberName][header.slice(memberTraits.httpPrefixHeaders.length)] = await deserializer.read(valueSchema, value);\n                    }\n                }\n            }\n            else if (memberTraits.httpResponseCode) {\n                dataObject[memberName] = response.statusCode;\n            }\n            else {\n                nonHttpBindingMembers.push(memberName);\n            }\n        }\n        return nonHttpBindingMembers;\n    }\n}\n", "import { NormalizedSchema } from \"@smithy/core/schema\";\nimport { HttpRequest } from \"@smithy/protocol-http\";\nimport { collectBody } from \"./collect-stream-body\";\nimport { HttpProtocol } from \"./HttpProtocol\";\nexport class RpcProtocol extends HttpProtocol {\n    async serializeRequest(operationSchema, input, context) {\n        const serializer = this.serializer;\n        const query = {};\n        const headers = {};\n        const endpoint = await context.endpoint();\n        const ns = NormalizedSchema.of(operationSchema?.input);\n        const schema = ns.getSchema();\n        let payload;\n        const request = new HttpRequest({\n            protocol: \"\",\n            hostname: \"\",\n            port: undefined,\n            path: \"/\",\n            fragment: undefined,\n            query: query,\n            headers: headers,\n            body: undefined,\n        });\n        if (endpoint) {\n            this.updateServiceEndpoint(request, endpoint);\n            this.setHostPrefix(request, operationSchema, input);\n        }\n        const _input = {\n            ...input,\n        };\n        if (input) {\n            const eventStreamMember = ns.getEventStreamMember();\n            if (eventStreamMember) {\n                if (_input[eventStreamMember]) {\n                    const initialRequest = {};\n                    for (const [memberName, memberSchema] of ns.structIterator()) {\n                        if (memberName !== eventStreamMember && _input[memberName]) {\n                            serializer.write(memberSchema, _input[memberName]);\n                            initialRequest[memberName] = serializer.flush();\n                        }\n                    }\n                    payload = await this.serializeEventStream({\n                        eventStream: _input[eventStreamMember],\n                        requestSchema: ns,\n                        initialRequest,\n                    });\n                }\n            }\n            else {\n                serializer.write(schema, _input);\n                payload = serializer.flush();\n            }\n        }\n        request.headers = headers;\n        request.query = query;\n        request.body = payload;\n        request.method = \"POST\";\n        return request;\n    }\n    async deserializeResponse(operationSchema, context, response) {\n        const deserializer = this.deserializer;\n        const ns = NormalizedSchema.of(operationSchema.output);\n        const dataObject = {};\n        if (response.statusCode >= 300) {\n            const bytes = await collectBody(response.body, context);\n            if (bytes.byteLength > 0) {\n                Object.assign(dataObject, await deserializer.read(15, bytes));\n            }\n            await this.handleError(operationSchema, context, response, dataObject, this.deserializeMetadata(response));\n            throw new Error(\"@smithy/core/protocols - RPC Protocol error handler failed to throw.\");\n        }\n        for (const header in response.headers) {\n            const value = response.headers[header];\n            delete response.headers[header];\n            response.headers[header.toLowerCase()] = value;\n        }\n        const eventStreamMember = ns.getEventStreamMember();\n        if (eventStreamMember) {\n            dataObject[eventStreamMember] = await this.deserializeEventStream({\n                response,\n                responseSchema: ns,\n                initialResponseContainer: dataObject,\n            });\n        }\n        else {\n            const bytes = await collectBody(response.body, context);\n            if (bytes.byteLength > 0) {\n                Object.assign(dataObject, await deserializer.read(ns, bytes));\n            }\n        }\n        dataObject.$metadata = this.deserializeMetadata(response);\n        return dataObject;\n    }\n}\n", "import { extendedEncodeURIComponent } from \"./extended-encode-uri-component\";\nexport const resolvedPath = (resolvedPath, input, memberName, labelValueProvider, uriLabel, isGreedyLabel) => {\n    if (input != null && input[memberName] !== undefined) {\n        const labelValue = labelValueProvider();\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: \" + memberName + \".\");\n        }\n        resolvedPath = resolvedPath.replace(uriLabel, isGreedyLabel\n            ? labelValue\n                .split(\"/\")\n                .map((segment) => extendedEncodeURIComponent(segment))\n                .join(\"/\")\n            : extendedEncodeURIComponent(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: \" + memberName + \".\");\n    }\n    return resolvedPath;\n};\n", "import { HttpRequest } from \"@smithy/protocol-http\";\nimport { resolvedPath } from \"./resolve-path\";\nexport function requestBuilder(input, context) {\n    return new RequestBuilder(input, context);\n}\nexport class RequestBuilder {\n    input;\n    context;\n    query = {};\n    method = \"\";\n    headers = {};\n    path = \"\";\n    body = null;\n    hostname = \"\";\n    resolvePathStack = [];\n    constructor(input, context) {\n        this.input = input;\n        this.context = context;\n    }\n    async build() {\n        const { hostname, protocol = \"https\", port, path: basePath } = await this.context.endpoint();\n        this.path = basePath;\n        for (const resolvePath of this.resolvePathStack) {\n            resolvePath(this.path);\n        }\n        return new HttpRequest({\n            protocol,\n            hostname: this.hostname || hostname,\n            port,\n            method: this.method,\n            path: this.path,\n            query: this.query,\n            body: this.body,\n            headers: this.headers,\n        });\n    }\n    hn(hostname) {\n        this.hostname = hostname;\n        return this;\n    }\n    bp(uriLabel) {\n        this.resolvePathStack.push((basePath) => {\n            this.path = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + uriLabel;\n        });\n        return this;\n    }\n    p(memberName, labelValueProvider, uriLabel, isGreedyLabel) {\n        this.resolvePathStack.push((path) => {\n            this.path = resolvedPath(path, this.input, memberName, labelValueProvider, uriLabel, isGreedyLabel);\n        });\n        return this;\n    }\n    h(headers) {\n        this.headers = headers;\n        return this;\n    }\n    q(query) {\n        this.query = query;\n        return this;\n    }\n    b(body) {\n        this.body = body;\n        return this;\n    }\n    m(method) {\n        this.method = method;\n        return this;\n    }\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromBase64 = void 0;\nconst util_buffer_from_1 = require(\"@smithy/util-buffer-from\");\nconst BASE64_REGEX = /^[A-Za-z0-9+/]*={0,2}$/;\nconst fromBase64 = (input) => {\n    if ((input.length * 3) % 4 !== 0) {\n        throw new TypeError(`Incorrect padding on base64 string.`);\n    }\n    if (!BASE64_REGEX.exec(input)) {\n        throw new TypeError(`Invalid base64 string.`);\n    }\n    const buffer = (0, util_buffer_from_1.fromString)(input, \"base64\");\n    return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n};\nexports.fromBase64 = fromBase64;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toBase64 = void 0;\nconst util_buffer_from_1 = require(\"@smithy/util-buffer-from\");\nconst util_utf8_1 = require(\"@smithy/util-utf8\");\nconst toBase64 = (_input) => {\n    let input;\n    if (typeof _input === \"string\") {\n        input = (0, util_utf8_1.fromUtf8)(_input);\n    }\n    else {\n        input = _input;\n    }\n    if (typeof input !== \"object\" || typeof input.byteOffset !== \"number\" || typeof input.byteLength !== \"number\") {\n        throw new Error(\"@smithy/util-base64: toBase64 encoder function only accepts string | Uint8Array.\");\n    }\n    return (0, util_buffer_from_1.fromArrayBuffer)(input.buffer, input.byteOffset, input.byteLength).toString(\"base64\");\n};\nexports.toBase64 = toBase64;\n", "'use strict';\n\nvar fromBase64 = require('./fromBase64');\nvar toBase64 = require('./toBase64');\n\n\n\nObject.keys(fromBase64).forEach(function (k) {\n\tif (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () { return fromBase64[k]; }\n\t});\n});\nObject.keys(toBase64).forEach(function (k) {\n\tif (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () { return toBase64[k]; }\n\t});\n});\n", "export function determineTimestampFormat(ns, settings) {\n    if (settings.timestampFormat.useTrait) {\n        if (ns.isTimestampSchema() &&\n            (ns.getSchema() === 5 ||\n                ns.getSchema() === 6 ||\n                ns.getSchema() === 7)) {\n            return ns.getSchema();\n        }\n    }\n    const { httpLabel, httpPrefixHeaders, httpHeader, httpQuery } = ns.getMergedTraits();\n    const bindingFormat = settings.httpBindings\n        ? typeof httpPrefixHeaders === \"string\" || Boolean(httpHeader)\n            ? 6\n            : Boolean(httpQuery) || Boolean(httpLabel)\n                ? 5\n                : undefined\n        : undefined;\n    return bindingFormat ?? settings.timestampFormat.default;\n}\n", "import { NormalizedSchema } from \"@smithy/core/schema\";\nimport { _parseEpochTimestamp, _parseRfc3339DateTimeWithOffset, _parseRfc7231DateTime, LazyJsonString, NumericValue, splitHeader, } from \"@smithy/core/serde\";\nimport { fromBase64 } from \"@smithy/util-base64\";\nimport { toUtf8 } from \"@smithy/util-utf8\";\nimport { determineTimestampFormat } from \"./determineTimestampFormat\";\nexport class FromStringShapeDeserializer {\n    settings;\n    serdeContext;\n    constructor(settings) {\n        this.settings = settings;\n    }\n    setSerdeContext(serdeContext) {\n        this.serdeContext = serdeContext;\n    }\n    read(_schema, data) {\n        const ns = NormalizedSchema.of(_schema);\n        if (ns.isListSchema()) {\n            return splitHeader(data).map((item) => this.read(ns.getValueSchema(), item));\n        }\n        if (ns.isBlobSchema()) {\n            return (this.serdeContext?.base64Decoder ?? fromBase64)(data);\n        }\n        if (ns.isTimestampSchema()) {\n            const format = determineTimestampFormat(ns, this.settings);\n            switch (format) {\n                case 5:\n                    return _parseRfc3339DateTimeWithOffset(data);\n                case 6:\n                    return _parseRfc7231DateTime(data);\n                case 7:\n                    return _parseEpochTimestamp(data);\n                default:\n                    console.warn(\"Missing timestamp format, parsing value with Date constructor:\", data);\n                    return new Date(data);\n            }\n        }\n        if (ns.isStringSchema()) {\n            const mediaType = ns.getMergedTraits().mediaType;\n            let intermediateValue = data;\n            if (mediaType) {\n                if (ns.getMergedTraits().httpHeader) {\n                    intermediateValue = this.base64ToUtf8(intermediateValue);\n                }\n                const isJson = mediaType === \"application/json\" || mediaType.endsWith(\"+json\");\n                if (isJson) {\n                    intermediateValue = LazyJsonString.from(intermediateValue);\n                }\n                return intermediateValue;\n            }\n        }\n        if (ns.isNumericSchema()) {\n            return Number(data);\n        }\n        if (ns.isBigIntegerSchema()) {\n            return BigInt(data);\n        }\n        if (ns.isBigDecimalSchema()) {\n            return new NumericValue(data, \"bigDecimal\");\n        }\n        if (ns.isBooleanSchema()) {\n            return String(data).toLowerCase() === \"true\";\n        }\n        return data;\n    }\n    base64ToUtf8(base64String) {\n        return (this.serdeContext?.utf8Encoder ?? toUtf8)((this.serdeContext?.base64Decoder ?? fromBase64)(base64String));\n    }\n}\n", "import { NormalizedSchema } from \"@smithy/core/schema\";\nimport { fromUtf8, toUtf8 } from \"@smithy/util-utf8\";\nimport { FromStringShapeDeserializer } from \"./FromStringShapeDeserializer\";\nexport class HttpInterceptingShapeDeserializer {\n    codecDeserializer;\n    stringDeserializer;\n    serdeContext;\n    constructor(codecDeserializer, codecSettings) {\n        this.codecDeserializer = codecDeserializer;\n        this.stringDeserializer = new FromStringShapeDeserializer(codecSettings);\n    }\n    setSerdeContext(serdeContext) {\n        this.stringDeserializer.setSerdeContext(serdeContext);\n        this.codecDeserializer.setSerdeContext(serdeContext);\n        this.serdeContext = serdeContext;\n    }\n    read(schema, data) {\n        const ns = NormalizedSchema.of(schema);\n        const traits = ns.getMergedTraits();\n        const toString = this.serdeContext?.utf8Encoder ?? toUtf8;\n        if (traits.httpHeader || traits.httpResponseCode) {\n            return this.stringDeserializer.read(ns, toString(data));\n        }\n        if (traits.httpPayload) {\n            if (ns.isBlobSchema()) {\n                const toBytes = this.serdeContext?.utf8Decoder ?? fromUtf8;\n                if (typeof data === \"string\") {\n                    return toBytes(data);\n                }\n                return data;\n            }\n            else if (ns.isStringSchema()) {\n                if (\"byteLength\" in data) {\n                    return toString(data);\n                }\n                return data;\n            }\n        }\n        return this.codecDeserializer.read(ns, data);\n    }\n}\n", "import { NormalizedSchema } from \"@smithy/core/schema\";\nimport { dateToUtcString, LazyJsonString, quoteHeader } from \"@smithy/core/serde\";\nimport { toBase64 } from \"@smithy/util-base64\";\nimport { determineTimestampFormat } from \"./determineTimestampFormat\";\nexport class ToStringShapeSerializer {\n    settings;\n    stringBuffer = \"\";\n    serdeContext = undefined;\n    constructor(settings) {\n        this.settings = settings;\n    }\n    setSerdeContext(serdeContext) {\n        this.serdeContext = serdeContext;\n    }\n    write(schema, value) {\n        const ns = NormalizedSchema.of(schema);\n        switch (typeof value) {\n            case \"object\":\n                if (value === null) {\n                    this.stringBuffer = \"null\";\n                    return;\n                }\n                if (ns.isTimestampSchema()) {\n                    if (!(value instanceof Date)) {\n                        throw new Error(`@smithy/core/protocols - received non-Date value ${value} when schema expected Date in ${ns.getName(true)}`);\n                    }\n                    const format = determineTimestampFormat(ns, this.settings);\n                    switch (format) {\n                        case 5:\n                            this.stringBuffer = value.toISOString().replace(\".000Z\", \"Z\");\n                            break;\n                        case 6:\n                            this.stringBuffer = dateToUtcString(value);\n                            break;\n                        case 7:\n                            this.stringBuffer = String(value.getTime() / 1000);\n                            break;\n                        default:\n                            console.warn(\"Missing timestamp format, using epoch seconds\", value);\n                            this.stringBuffer = String(value.getTime() / 1000);\n                    }\n                    return;\n                }\n                if (ns.isBlobSchema() && \"byteLength\" in value) {\n                    this.stringBuffer = (this.serdeContext?.base64Encoder ?? toBase64)(value);\n                    return;\n                }\n                if (ns.isListSchema() && Array.isArray(value)) {\n                    let buffer = \"\";\n                    for (const item of value) {\n                        this.write([ns.getValueSchema(), ns.getMergedTraits()], item);\n                        const headerItem = this.flush();\n                        const serialized = ns.getValueSchema().isTimestampSchema() ? headerItem : quoteHeader(headerItem);\n                        if (buffer !== \"\") {\n                            buffer += \", \";\n                        }\n                        buffer += serialized;\n                    }\n                    this.stringBuffer = buffer;\n                    return;\n                }\n                this.stringBuffer = JSON.stringify(value, null, 2);\n                break;\n            case \"string\":\n                const mediaType = ns.getMergedTraits().mediaType;\n                let intermediateValue = value;\n                if (mediaType) {\n                    const isJson = mediaType === \"application/json\" || mediaType.endsWith(\"+json\");\n                    if (isJson) {\n                        intermediateValue = LazyJsonString.from(intermediateValue);\n                    }\n                    if (ns.getMergedTraits().httpHeader) {\n                        this.stringBuffer = (this.serdeContext?.base64Encoder ?? toBase64)(intermediateValue.toString());\n                        return;\n                    }\n                }\n                this.stringBuffer = value;\n                break;\n            default:\n                this.stringBuffer = String(value);\n        }\n    }\n    flush() {\n        const buffer = this.stringBuffer;\n        this.stringBuffer = \"\";\n        return buffer;\n    }\n}\n", "import { NormalizedSchema } from \"@smithy/core/schema\";\nimport { ToStringShapeSerializer } from \"./ToStringShapeSerializer\";\nexport class HttpInterceptingShapeSerializer {\n    codecSerializer;\n    stringSerializer;\n    buffer;\n    constructor(codecSerializer, codecSettings, stringSerializer = new ToStringShapeSerializer(codecSettings)) {\n        this.codecSerializer = codecSerializer;\n        this.stringSerializer = stringSerializer;\n    }\n    setSerdeContext(serdeContext) {\n        this.codecSerializer.setSerdeContext(serdeContext);\n        this.stringSerializer.setSerdeContext(serdeContext);\n    }\n    write(schema, value) {\n        const ns = NormalizedSchema.of(schema);\n        const traits = ns.getMergedTraits();\n        if (traits.httpHeader || traits.httpLabel || traits.httpQuery) {\n            this.stringSerializer.write(ns, value);\n            this.buffer = this.stringSerializer.flush();\n            return;\n        }\n        return this.codecSerializer.write(ns, value);\n    }\n    flush() {\n        if (this.buffer !== undefined) {\n            const buffer = this.buffer;\n            this.buffer = undefined;\n            return buffer;\n        }\n        return this.codecSerializer.flush();\n    }\n}\n", "export * from \"./collect-stream-body\";\nexport * from \"./extended-encode-uri-component\";\nexport * from \"./HttpBindingProtocol\";\nexport * from \"./HttpProtocol\";\nexport * from \"./RpcProtocol\";\nexport * from \"./requestBuilder\";\nexport * from \"./resolve-path\";\nexport * from \"./serde/FromStringShapeDeserializer\";\nexport * from \"./serde/HttpInterceptingShapeDeserializer\";\nexport * from \"./serde/HttpInterceptingShapeSerializer\";\nexport * from \"./serde/ToStringShapeSerializer\";\nexport * from \"./serde/determineTimestampFormat\";\n", "export { requestBuilder } from \"@smithy/core/protocols\";\n", "export function setFeature(context, feature, value) {\n    if (!context.__smithy_context) {\n        context.__smithy_context = {\n            features: {},\n        };\n    }\n    else if (!context.__smithy_context.features) {\n        context.__smithy_context.features = {};\n    }\n    context.__smithy_context.features[feature] = value;\n}\n", "export class DefaultIdentityProviderConfig {\n    authSchemes = new Map();\n    constructor(config) {\n        for (const [key, value] of Object.entries(config)) {\n            if (value !== undefined) {\n                this.authSchemes.set(key, value);\n            }\n        }\n    }\n    getIdentityProvider(schemeId) {\n        return this.authSchemes.get(schemeId);\n    }\n}\n", "import { HttpRequest } from \"@smithy/protocol-http\";\nimport { HttpApiKeyAuthLocation } from \"@smithy/types\";\nexport class HttpApiKeyAuthSigner {\n    async sign(httpRequest, identity, signingProperties) {\n        if (!signingProperties) {\n            throw new Error(\"request could not be signed with `apiKey` since the `name` and `in` signer properties are missing\");\n        }\n        if (!signingProperties.name) {\n            throw new Error(\"request could not be signed with `apiKey` since the `name` signer property is missing\");\n        }\n        if (!signingProperties.in) {\n            throw new Error(\"request could not be signed with `apiKey` since the `in` signer property is missing\");\n        }\n        if (!identity.apiKey) {\n            throw new Error(\"request could not be signed with `apiKey` since the `apiKey` is not defined\");\n        }\n        const clonedRequest = HttpRequest.clone(httpRequest);\n        if (signingProperties.in === HttpApiKeyAuthLocation.QUERY) {\n            clonedRequest.query[signingProperties.name] = identity.apiKey;\n        }\n        else if (signingProperties.in === HttpApiKeyAuthLocation.HEADER) {\n            clonedRequest.headers[signingProperties.name] = signingProperties.scheme\n                ? `${signingProperties.scheme} ${identity.apiKey}`\n                : identity.apiKey;\n        }\n        else {\n            throw new Error(\"request can only be signed with `apiKey` locations `query` or `header`, \" +\n                \"but found: `\" +\n                signingProperties.in +\n                \"`\");\n        }\n        return clonedRequest;\n    }\n}\n", "import { HttpRequest } from \"@smithy/protocol-http\";\nexport class HttpBearerAuthSigner {\n    async sign(httpRequest, identity, signingProperties) {\n        const clonedRequest = HttpRequest.clone(httpRequest);\n        if (!identity.token) {\n            throw new Error(\"request could not be signed with `token` since the `token` is not defined\");\n        }\n        clonedRequest.headers[\"Authorization\"] = `Bearer ${identity.token}`;\n        return clonedRequest;\n    }\n}\n", "export class NoAuthSigner {\n    async sign(httpRequest, identity, signingProperties) {\n        return httpRequest;\n    }\n}\n", "export * from \"./httpApiKeyAuth\";\nexport * from \"./httpBearerAuth\";\nexport * from \"./noAuth\";\n", "export const createIsIdentityExpiredFunction = (expirationMs) => function isIdentityExpired(identity) {\n    return doesIdentityRequireRefresh(identity) && identity.expiration.getTime() - Date.now() < expirationMs;\n};\nexport const EXPIRATION_MS = 300_000;\nexport const isIdentityExpired = createIsIdentityExpiredFunction(EXPIRATION_MS);\nexport const doesIdentityRequireRefresh = (identity) => identity.expiration !== undefined;\nexport const memoizeIdentityProvider = (provider, isExpired, requiresRefresh) => {\n    if (provider === undefined) {\n        return undefined;\n    }\n    const normalizedProvider = typeof provider !== \"function\" ? async () => Promise.resolve(provider) : provider;\n    let resolved;\n    let pending;\n    let hasResult;\n    let isConstant = false;\n    const coalesceProvider = async (options) => {\n        if (!pending) {\n            pending = normalizedProvider(options);\n        }\n        try {\n            resolved = await pending;\n            hasResult = true;\n            isConstant = false;\n        }\n        finally {\n            pending = undefined;\n        }\n        return resolved;\n    };\n    if (isExpired === undefined) {\n        return async (options) => {\n            if (!hasResult || options?.forceRefresh) {\n                resolved = await coalesceProvider(options);\n            }\n            return resolved;\n        };\n    }\n    return async (options) => {\n        if (!hasResult || options?.forceRefresh) {\n            resolved = await coalesceProvider(options);\n        }\n        if (isConstant) {\n            return resolved;\n        }\n        if (!requiresRefresh(resolved)) {\n            isConstant = true;\n            return resolved;\n        }\n        if (isExpired(resolved)) {\n            await coalesceProvider(options);\n            return resolved;\n        }\n        return resolved;\n    };\n};\n", "export * from \"./DefaultIdentityProviderConfig\";\nexport * from \"./httpAuthSchemes\";\nexport * from \"./memoizeIdentityProvider\";\n", "export * from \"./getSmithyContext\";\nexport * from \"./middleware-http-auth-scheme\";\nexport * from \"./middleware-http-signing\";\nexport * from \"./normalizeProvider\";\nexport { createPaginator } from \"./pagination/createPaginator\";\nexport * from \"./protocols/requestBuilder\";\nexport * from \"./setFeature\";\nexport * from \"./util-identity-and-auth\";\n", "'use strict';\n\nvar types = require('@smithy/types');\n\nclass EndpointCache {\n    capacity;\n    data = new Map();\n    parameters = [];\n    constructor({ size, params }) {\n        this.capacity = size ?? 50;\n        if (params) {\n            this.parameters = params;\n        }\n    }\n    get(endpointParams, resolver) {\n        const key = this.hash(endpointParams);\n        if (key === false) {\n            return resolver();\n        }\n        if (!this.data.has(key)) {\n            if (this.data.size > this.capacity + 10) {\n                const keys = this.data.keys();\n                let i = 0;\n                while (true) {\n                    const { value, done } = keys.next();\n                    this.data.delete(value);\n                    if (done || ++i > 10) {\n                        break;\n                    }\n                }\n            }\n            this.data.set(key, resolver());\n        }\n        return this.data.get(key);\n    }\n    size() {\n        return this.data.size;\n    }\n    hash(endpointParams) {\n        let buffer = \"\";\n        const { parameters } = this;\n        if (parameters.length === 0) {\n            return false;\n        }\n        for (const param of parameters) {\n            const val = String(endpointParams[param] ?? \"\");\n            if (val.includes(\"|;\")) {\n                return false;\n            }\n            buffer += val + \"|;\";\n        }\n        return buffer;\n    }\n}\n\nconst IP_V4_REGEX = new RegExp(`^(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}$`);\nconst isIpAddress = (value) => IP_V4_REGEX.test(value) || (value.startsWith(\"[\") && value.endsWith(\"]\"));\n\nconst VALID_HOST_LABEL_REGEX = new RegExp(`^(?!.*-$)(?!-)[a-zA-Z0-9-]{1,63}$`);\nconst isValidHostLabel = (value, allowSubDomains = false) => {\n    if (!allowSubDomains) {\n        return VALID_HOST_LABEL_REGEX.test(value);\n    }\n    const labels = value.split(\".\");\n    for (const label of labels) {\n        if (!isValidHostLabel(label)) {\n            return false;\n        }\n    }\n    return true;\n};\n\nconst customEndpointFunctions = {};\n\nconst debugId = \"endpoints\";\n\nfunction toDebugString(input) {\n    if (typeof input !== \"object\" || input == null) {\n        return input;\n    }\n    if (\"ref\" in input) {\n        return `$${toDebugString(input.ref)}`;\n    }\n    if (\"fn\" in input) {\n        return `${input.fn}(${(input.argv || []).map(toDebugString).join(\", \")})`;\n    }\n    return JSON.stringify(input, null, 2);\n}\n\nclass EndpointError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"EndpointError\";\n    }\n}\n\nconst booleanEquals = (value1, value2) => value1 === value2;\n\nconst getAttrPathList = (path) => {\n    const parts = path.split(\".\");\n    const pathList = [];\n    for (const part of parts) {\n        const squareBracketIndex = part.indexOf(\"[\");\n        if (squareBracketIndex !== -1) {\n            if (part.indexOf(\"]\") !== part.length - 1) {\n                throw new EndpointError(`Path: '${path}' does not end with ']'`);\n            }\n            const arrayIndex = part.slice(squareBracketIndex + 1, -1);\n            if (Number.isNaN(parseInt(arrayIndex))) {\n                throw new EndpointError(`Invalid array index: '${arrayIndex}' in path: '${path}'`);\n            }\n            if (squareBracketIndex !== 0) {\n                pathList.push(part.slice(0, squareBracketIndex));\n            }\n            pathList.push(arrayIndex);\n        }\n        else {\n            pathList.push(part);\n        }\n    }\n    return pathList;\n};\n\nconst getAttr = (value, path) => getAttrPathList(path).reduce((acc, index) => {\n    if (typeof acc !== \"object\") {\n        throw new EndpointError(`Index '${index}' in '${path}' not found in '${JSON.stringify(value)}'`);\n    }\n    else if (Array.isArray(acc)) {\n        return acc[parseInt(index)];\n    }\n    return acc[index];\n}, value);\n\nconst isSet = (value) => value != null;\n\nconst not = (value) => !value;\n\nconst DEFAULT_PORTS = {\n    [types.EndpointURLScheme.HTTP]: 80,\n    [types.EndpointURLScheme.HTTPS]: 443,\n};\nconst parseURL = (value) => {\n    const whatwgURL = (() => {\n        try {\n            if (value instanceof URL) {\n                return value;\n            }\n            if (typeof value === \"object\" && \"hostname\" in value) {\n                const { hostname, port, protocol = \"\", path = \"\", query = {} } = value;\n                const url = new URL(`${protocol}//${hostname}${port ? `:${port}` : \"\"}${path}`);\n                url.search = Object.entries(query)\n                    .map(([k, v]) => `${k}=${v}`)\n                    .join(\"&\");\n                return url;\n            }\n            return new URL(value);\n        }\n        catch (error) {\n            return null;\n        }\n    })();\n    if (!whatwgURL) {\n        console.error(`Unable to parse ${JSON.stringify(value)} as a whatwg URL.`);\n        return null;\n    }\n    const urlString = whatwgURL.href;\n    const { host, hostname, pathname, protocol, search } = whatwgURL;\n    if (search) {\n        return null;\n    }\n    const scheme = protocol.slice(0, -1);\n    if (!Object.values(types.EndpointURLScheme).includes(scheme)) {\n        return null;\n    }\n    const isIp = isIpAddress(hostname);\n    const inputContainsDefaultPort = urlString.includes(`${host}:${DEFAULT_PORTS[scheme]}`) ||\n        (typeof value === \"string\" && value.includes(`${host}:${DEFAULT_PORTS[scheme]}`));\n    const authority = `${host}${inputContainsDefaultPort ? `:${DEFAULT_PORTS[scheme]}` : ``}`;\n    return {\n        scheme,\n        authority,\n        path: pathname,\n        normalizedPath: pathname.endsWith(\"/\") ? pathname : `${pathname}/`,\n        isIp,\n    };\n};\n\nconst stringEquals = (value1, value2) => value1 === value2;\n\nconst substring = (input, start, stop, reverse) => {\n    if (start >= stop || input.length < stop) {\n        return null;\n    }\n    if (!reverse) {\n        return input.substring(start, stop);\n    }\n    return input.substring(input.length - stop, input.length - start);\n};\n\nconst uriEncode = (value) => encodeURIComponent(value).replace(/[!*'()]/g, (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`);\n\nconst endpointFunctions = {\n    booleanEquals,\n    getAttr,\n    isSet,\n    isValidHostLabel,\n    not,\n    parseURL,\n    stringEquals,\n    substring,\n    uriEncode,\n};\n\nconst evaluateTemplate = (template, options) => {\n    const evaluatedTemplateArr = [];\n    const templateContext = {\n        ...options.endpointParams,\n        ...options.referenceRecord,\n    };\n    let currentIndex = 0;\n    while (currentIndex < template.length) {\n        const openingBraceIndex = template.indexOf(\"{\", currentIndex);\n        if (openingBraceIndex === -1) {\n            evaluatedTemplateArr.push(template.slice(currentIndex));\n            break;\n        }\n        evaluatedTemplateArr.push(template.slice(currentIndex, openingBraceIndex));\n        const closingBraceIndex = template.indexOf(\"}\", openingBraceIndex);\n        if (closingBraceIndex === -1) {\n            evaluatedTemplateArr.push(template.slice(openingBraceIndex));\n            break;\n        }\n        if (template[openingBraceIndex + 1] === \"{\" && template[closingBraceIndex + 1] === \"}\") {\n            evaluatedTemplateArr.push(template.slice(openingBraceIndex + 1, closingBraceIndex));\n            currentIndex = closingBraceIndex + 2;\n        }\n        const parameterName = template.substring(openingBraceIndex + 1, closingBraceIndex);\n        if (parameterName.includes(\"#\")) {\n            const [refName, attrName] = parameterName.split(\"#\");\n            evaluatedTemplateArr.push(getAttr(templateContext[refName], attrName));\n        }\n        else {\n            evaluatedTemplateArr.push(templateContext[parameterName]);\n        }\n        currentIndex = closingBraceIndex + 1;\n    }\n    return evaluatedTemplateArr.join(\"\");\n};\n\nconst getReferenceValue = ({ ref }, options) => {\n    const referenceRecord = {\n        ...options.endpointParams,\n        ...options.referenceRecord,\n    };\n    return referenceRecord[ref];\n};\n\nconst evaluateExpression = (obj, keyName, options) => {\n    if (typeof obj === \"string\") {\n        return evaluateTemplate(obj, options);\n    }\n    else if (obj[\"fn\"]) {\n        return callFunction(obj, options);\n    }\n    else if (obj[\"ref\"]) {\n        return getReferenceValue(obj, options);\n    }\n    throw new EndpointError(`'${keyName}': ${String(obj)} is not a string, function or reference.`);\n};\n\nconst callFunction = ({ fn, argv }, options) => {\n    const evaluatedArgs = argv.map((arg) => [\"boolean\", \"number\"].includes(typeof arg) ? arg : evaluateExpression(arg, \"arg\", options));\n    const fnSegments = fn.split(\".\");\n    if (fnSegments[0] in customEndpointFunctions && fnSegments[1] != null) {\n        return customEndpointFunctions[fnSegments[0]][fnSegments[1]](...evaluatedArgs);\n    }\n    return endpointFunctions[fn](...evaluatedArgs);\n};\n\nconst evaluateCondition = ({ assign, ...fnArgs }, options) => {\n    if (assign && assign in options.referenceRecord) {\n        throw new EndpointError(`'${assign}' is already defined in Reference Record.`);\n    }\n    const value = callFunction(fnArgs, options);\n    options.logger?.debug?.(`${debugId} evaluateCondition: ${toDebugString(fnArgs)} = ${toDebugString(value)}`);\n    return {\n        result: value === \"\" ? true : !!value,\n        ...(assign != null && { toAssign: { name: assign, value } }),\n    };\n};\n\nconst evaluateConditions = (conditions = [], options) => {\n    const conditionsReferenceRecord = {};\n    for (const condition of conditions) {\n        const { result, toAssign } = evaluateCondition(condition, {\n            ...options,\n            referenceRecord: {\n                ...options.referenceRecord,\n                ...conditionsReferenceRecord,\n            },\n        });\n        if (!result) {\n            return { result };\n        }\n        if (toAssign) {\n            conditionsReferenceRecord[toAssign.name] = toAssign.value;\n            options.logger?.debug?.(`${debugId} assign: ${toAssign.name} := ${toDebugString(toAssign.value)}`);\n        }\n    }\n    return { result: true, referenceRecord: conditionsReferenceRecord };\n};\n\nconst getEndpointHeaders = (headers, options) => Object.entries(headers).reduce((acc, [headerKey, headerVal]) => ({\n    ...acc,\n    [headerKey]: headerVal.map((headerValEntry) => {\n        const processedExpr = evaluateExpression(headerValEntry, \"Header value entry\", options);\n        if (typeof processedExpr !== \"string\") {\n            throw new EndpointError(`Header '${headerKey}' value '${processedExpr}' is not a string`);\n        }\n        return processedExpr;\n    }),\n}), {});\n\nconst getEndpointProperty = (property, options) => {\n    if (Array.isArray(property)) {\n        return property.map((propertyEntry) => getEndpointProperty(propertyEntry, options));\n    }\n    switch (typeof property) {\n        case \"string\":\n            return evaluateTemplate(property, options);\n        case \"object\":\n            if (property === null) {\n                throw new EndpointError(`Unexpected endpoint property: ${property}`);\n            }\n            return getEndpointProperties(property, options);\n        case \"boolean\":\n            return property;\n        default:\n            throw new EndpointError(`Unexpected endpoint property type: ${typeof property}`);\n    }\n};\n\nconst getEndpointProperties = (properties, options) => Object.entries(properties).reduce((acc, [propertyKey, propertyVal]) => ({\n    ...acc,\n    [propertyKey]: getEndpointProperty(propertyVal, options),\n}), {});\n\nconst getEndpointUrl = (endpointUrl, options) => {\n    const expression = evaluateExpression(endpointUrl, \"Endpoint URL\", options);\n    if (typeof expression === \"string\") {\n        try {\n            return new URL(expression);\n        }\n        catch (error) {\n            console.error(`Failed to construct URL with ${expression}`, error);\n            throw error;\n        }\n    }\n    throw new EndpointError(`Endpoint URL must be a string, got ${typeof expression}`);\n};\n\nconst evaluateEndpointRule = (endpointRule, options) => {\n    const { conditions, endpoint } = endpointRule;\n    const { result, referenceRecord } = evaluateConditions(conditions, options);\n    if (!result) {\n        return;\n    }\n    const endpointRuleOptions = {\n        ...options,\n        referenceRecord: { ...options.referenceRecord, ...referenceRecord },\n    };\n    const { url, properties, headers } = endpoint;\n    options.logger?.debug?.(`${debugId} Resolving endpoint from template: ${toDebugString(endpoint)}`);\n    return {\n        ...(headers != undefined && {\n            headers: getEndpointHeaders(headers, endpointRuleOptions),\n        }),\n        ...(properties != undefined && {\n            properties: getEndpointProperties(properties, endpointRuleOptions),\n        }),\n        url: getEndpointUrl(url, endpointRuleOptions),\n    };\n};\n\nconst evaluateErrorRule = (errorRule, options) => {\n    const { conditions, error } = errorRule;\n    const { result, referenceRecord } = evaluateConditions(conditions, options);\n    if (!result) {\n        return;\n    }\n    throw new EndpointError(evaluateExpression(error, \"Error\", {\n        ...options,\n        referenceRecord: { ...options.referenceRecord, ...referenceRecord },\n    }));\n};\n\nconst evaluateTreeRule = (treeRule, options) => {\n    const { conditions, rules } = treeRule;\n    const { result, referenceRecord } = evaluateConditions(conditions, options);\n    if (!result) {\n        return;\n    }\n    return evaluateRules(rules, {\n        ...options,\n        referenceRecord: { ...options.referenceRecord, ...referenceRecord },\n    });\n};\n\nconst evaluateRules = (rules, options) => {\n    for (const rule of rules) {\n        if (rule.type === \"endpoint\") {\n            const endpointOrUndefined = evaluateEndpointRule(rule, options);\n            if (endpointOrUndefined) {\n                return endpointOrUndefined;\n            }\n        }\n        else if (rule.type === \"error\") {\n            evaluateErrorRule(rule, options);\n        }\n        else if (rule.type === \"tree\") {\n            const endpointOrUndefined = evaluateTreeRule(rule, options);\n            if (endpointOrUndefined) {\n                return endpointOrUndefined;\n            }\n        }\n        else {\n            throw new EndpointError(`Unknown endpoint rule: ${rule}`);\n        }\n    }\n    throw new EndpointError(`Rules evaluation failed`);\n};\n\nconst resolveEndpoint = (ruleSetObject, options) => {\n    const { endpointParams, logger } = options;\n    const { parameters, rules } = ruleSetObject;\n    options.logger?.debug?.(`${debugId} Initial EndpointParams: ${toDebugString(endpointParams)}`);\n    const paramsWithDefault = Object.entries(parameters)\n        .filter(([, v]) => v.default != null)\n        .map(([k, v]) => [k, v.default]);\n    if (paramsWithDefault.length > 0) {\n        for (const [paramKey, paramDefaultValue] of paramsWithDefault) {\n            endpointParams[paramKey] = endpointParams[paramKey] ?? paramDefaultValue;\n        }\n    }\n    const requiredParams = Object.entries(parameters)\n        .filter(([, v]) => v.required)\n        .map(([k]) => k);\n    for (const requiredParam of requiredParams) {\n        if (endpointParams[requiredParam] == null) {\n            throw new EndpointError(`Missing required parameter: '${requiredParam}'`);\n        }\n    }\n    const endpoint = evaluateRules(rules, { endpointParams, logger, referenceRecord: {} });\n    options.logger?.debug?.(`${debugId} Resolved endpoint: ${toDebugString(endpoint)}`);\n    return endpoint;\n};\n\nexports.EndpointCache = EndpointCache;\nexports.EndpointError = EndpointError;\nexports.customEndpointFunctions = customEndpointFunctions;\nexports.isIpAddress = isIpAddress;\nexports.isValidHostLabel = isValidHostLabel;\nexports.resolveEndpoint = resolveEndpoint;\n", "'use strict';\n\nfunction parseQueryString(querystring) {\n    const query = {};\n    querystring = querystring.replace(/^\\?/, \"\");\n    if (querystring) {\n        for (const pair of querystring.split(\"&\")) {\n            let [key, value = null] = pair.split(\"=\");\n            key = decodeURIComponent(key);\n            if (value) {\n                value = decodeURIComponent(value);\n            }\n            if (!(key in query)) {\n                query[key] = value;\n            }\n            else if (Array.isArray(query[key])) {\n                query[key].push(value);\n            }\n            else {\n                query[key] = [query[key], value];\n            }\n        }\n    }\n    return query;\n}\n\nexports.parseQueryString = parseQueryString;\n", "'use strict';\n\nvar querystringParser = require('@smithy/querystring-parser');\n\nconst parseUrl = (url) => {\n    if (typeof url === \"string\") {\n        return parseUrl(new URL(url));\n    }\n    const { hostname, pathname, port, protocol, search } = url;\n    let query;\n    if (search) {\n        query = querystringParser.parseQueryString(search);\n    }\n    return {\n        hostname,\n        port: port ? parseInt(port) : undefined,\n        protocol,\n        path: pathname,\n        query,\n    };\n};\n\nexports.parseUrl = parseUrl;\n", "\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar index_exports = {};\n__export(index_exports, {\n  ConditionObject: () => import_util_endpoints.ConditionObject,\n  DeprecatedObject: () => import_util_endpoints.DeprecatedObject,\n  EndpointError: () => import_util_endpoints.EndpointError,\n  EndpointObject: () => import_util_endpoints.EndpointObject,\n  EndpointObjectHeaders: () => import_util_endpoints.EndpointObjectHeaders,\n  EndpointObjectProperties: () => import_util_endpoints.EndpointObjectProperties,\n  EndpointParams: () => import_util_endpoints.EndpointParams,\n  EndpointResolverOptions: () => import_util_endpoints.EndpointResolverOptions,\n  EndpointRuleObject: () => import_util_endpoints.EndpointRuleObject,\n  ErrorRuleObject: () => import_util_endpoints.ErrorRuleObject,\n  EvaluateOptions: () => import_util_endpoints.EvaluateOptions,\n  Expression: () => import_util_endpoints.Expression,\n  FunctionArgv: () => import_util_endpoints.FunctionArgv,\n  FunctionObject: () => import_util_endpoints.FunctionObject,\n  FunctionReturn: () => import_util_endpoints.FunctionReturn,\n  ParameterObject: () => import_util_endpoints.ParameterObject,\n  ReferenceObject: () => import_util_endpoints.ReferenceObject,\n  ReferenceRecord: () => import_util_endpoints.ReferenceRecord,\n  RuleSetObject: () => import_util_endpoints.RuleSetObject,\n  RuleSetRules: () => import_util_endpoints.RuleSetRules,\n  TreeRuleObject: () => import_util_endpoints.TreeRuleObject,\n  awsEndpointFunctions: () => awsEndpointFunctions,\n  getUserAgentPrefix: () => getUserAgentPrefix,\n  isIpAddress: () => import_util_endpoints.isIpAddress,\n  partition: () => partition,\n  resolveDefaultAwsRegionalEndpointsConfig: () => resolveDefaultAwsRegionalEndpointsConfig,\n  resolveEndpoint: () => import_util_endpoints.resolveEndpoint,\n  setPartitionInfo: () => setPartitionInfo,\n  toEndpointV1: () => toEndpointV1,\n  useDefaultPartitionInfo: () => useDefaultPartitionInfo\n});\nmodule.exports = __toCommonJS(index_exports);\n\n// src/aws.ts\n\n\n// src/lib/aws/isVirtualHostableS3Bucket.ts\n\n\n// src/lib/isIpAddress.ts\nvar import_util_endpoints = require(\"@smithy/util-endpoints\");\n\n// src/lib/aws/isVirtualHostableS3Bucket.ts\nvar isVirtualHostableS3Bucket = /* @__PURE__ */ __name((value, allowSubDomains = false) => {\n  if (allowSubDomains) {\n    for (const label of value.split(\".\")) {\n      if (!isVirtualHostableS3Bucket(label)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  if (!(0, import_util_endpoints.isValidHostLabel)(value)) {\n    return false;\n  }\n  if (value.length < 3 || value.length > 63) {\n    return false;\n  }\n  if (value !== value.toLowerCase()) {\n    return false;\n  }\n  if ((0, import_util_endpoints.isIpAddress)(value)) {\n    return false;\n  }\n  return true;\n}, \"isVirtualHostableS3Bucket\");\n\n// src/lib/aws/parseArn.ts\nvar ARN_DELIMITER = \":\";\nvar RESOURCE_DELIMITER = \"/\";\nvar parseArn = /* @__PURE__ */ __name((value) => {\n  const segments = value.split(ARN_DELIMITER);\n  if (segments.length < 6) return null;\n  const [arn, partition2, service, region, accountId, ...resourcePath] = segments;\n  if (arn !== \"arn\" || partition2 === \"\" || service === \"\" || resourcePath.join(ARN_DELIMITER) === \"\") return null;\n  const resourceId = resourcePath.map((resource) => resource.split(RESOURCE_DELIMITER)).flat();\n  return {\n    partition: partition2,\n    service,\n    region,\n    accountId,\n    resourceId\n  };\n}, \"parseArn\");\n\n// src/lib/aws/partitions.json\nvar partitions_default = {\n  partitions: [{\n    id: \"aws\",\n    outputs: {\n      dnsSuffix: \"amazonaws.com\",\n      dualStackDnsSuffix: \"api.aws\",\n      implicitGlobalRegion: \"us-east-1\",\n      name: \"aws\",\n      supportsDualStack: true,\n      supportsFIPS: true\n    },\n    regionRegex: \"^(us|eu|ap|sa|ca|me|af|il|mx)\\\\-\\\\w+\\\\-\\\\d+$\",\n    regions: {\n      \"af-south-1\": {\n        description: \"Africa (Cape Town)\"\n      },\n      \"ap-east-1\": {\n        description: \"Asia Pacific (Hong Kong)\"\n      },\n      \"ap-east-2\": {\n        description: \"Asia Pacific (Taipei)\"\n      },\n      \"ap-northeast-1\": {\n        description: \"Asia Pacific (Tokyo)\"\n      },\n      \"ap-northeast-2\": {\n        description: \"Asia Pacific (Seoul)\"\n      },\n      \"ap-northeast-3\": {\n        description: \"Asia Pacific (Osaka)\"\n      },\n      \"ap-south-1\": {\n        description: \"Asia Pacific (Mumbai)\"\n      },\n      \"ap-south-2\": {\n        description: \"Asia Pacific (Hyderabad)\"\n      },\n      \"ap-southeast-1\": {\n        description: \"Asia Pacific (Singapore)\"\n      },\n      \"ap-southeast-2\": {\n        description: \"Asia Pacific (Sydney)\"\n      },\n      \"ap-southeast-3\": {\n        description: \"Asia Pacific (Jakarta)\"\n      },\n      \"ap-southeast-4\": {\n        description: \"Asia Pacific (Melbourne)\"\n      },\n      \"ap-southeast-5\": {\n        description: \"Asia Pacific (Malaysia)\"\n      },\n      \"ap-southeast-6\": {\n        description: \"Asia Pacific (New Zealand)\"\n      },\n      \"ap-southeast-7\": {\n        description: \"Asia Pacific (Thailand)\"\n      },\n      \"aws-global\": {\n        description: \"aws global region\"\n      },\n      \"ca-central-1\": {\n        description: \"Canada (Central)\"\n      },\n      \"ca-west-1\": {\n        description: \"Canada West (Calgary)\"\n      },\n      \"eu-central-1\": {\n        description: \"Europe (Frankfurt)\"\n      },\n      \"eu-central-2\": {\n        description: \"Europe (Zurich)\"\n      },\n      \"eu-north-1\": {\n        description: \"Europe (Stockholm)\"\n      },\n      \"eu-south-1\": {\n        description: \"Europe (Milan)\"\n      },\n      \"eu-south-2\": {\n        description: \"Europe (Spain)\"\n      },\n      \"eu-west-1\": {\n        description: \"Europe (Ireland)\"\n      },\n      \"eu-west-2\": {\n        description: \"Europe (London)\"\n      },\n      \"eu-west-3\": {\n        description: \"Europe (Paris)\"\n      },\n      \"il-central-1\": {\n        description: \"Israel (Tel Aviv)\"\n      },\n      \"me-central-1\": {\n        description: \"Middle East (UAE)\"\n      },\n      \"me-south-1\": {\n        description: \"Middle East (Bahrain)\"\n      },\n      \"mx-central-1\": {\n        description: \"Mexico (Central)\"\n      },\n      \"sa-east-1\": {\n        description: \"South America (Sao Paulo)\"\n      },\n      \"us-east-1\": {\n        description: \"US East (N. Virginia)\"\n      },\n      \"us-east-2\": {\n        description: \"US East (Ohio)\"\n      },\n      \"us-west-1\": {\n        description: \"US West (N. California)\"\n      },\n      \"us-west-2\": {\n        description: \"US West (Oregon)\"\n      }\n    }\n  }, {\n    id: \"aws-cn\",\n    outputs: {\n      dnsSuffix: \"amazonaws.com.cn\",\n      dualStackDnsSuffix: \"api.amazonwebservices.com.cn\",\n      implicitGlobalRegion: \"cn-northwest-1\",\n      name: \"aws-cn\",\n      supportsDualStack: true,\n      supportsFIPS: true\n    },\n    regionRegex: \"^cn\\\\-\\\\w+\\\\-\\\\d+$\",\n    regions: {\n      \"aws-cn-global\": {\n        description: \"aws-cn global region\"\n      },\n      \"cn-north-1\": {\n        description: \"China (Beijing)\"\n      },\n      \"cn-northwest-1\": {\n        description: \"China (Ningxia)\"\n      }\n    }\n  }, {\n    id: \"aws-eusc\",\n    outputs: {\n      dnsSuffix: \"amazonaws.eu\",\n      dualStackDnsSuffix: \"api.amazonwebservices.eu\",\n      implicitGlobalRegion: \"eusc-de-east-1\",\n      name: \"aws-eusc\",\n      supportsDualStack: true,\n      supportsFIPS: true\n    },\n    regionRegex: \"^eusc\\\\-(de)\\\\-\\\\w+\\\\-\\\\d+$\",\n    regions: {\n      \"eusc-de-east-1\": {\n        description: \"EU (Germany)\"\n      }\n    }\n  }, {\n    id: \"aws-iso\",\n    outputs: {\n      dnsSuffix: \"c2s.ic.gov\",\n      dualStackDnsSuffix: \"api.aws.ic.gov\",\n      implicitGlobalRegion: \"us-iso-east-1\",\n      name: \"aws-iso\",\n      supportsDualStack: true,\n      supportsFIPS: true\n    },\n    regionRegex: \"^us\\\\-iso\\\\-\\\\w+\\\\-\\\\d+$\",\n    regions: {\n      \"aws-iso-global\": {\n        description: \"aws-iso global region\"\n      },\n      \"us-iso-east-1\": {\n        description: \"US ISO East\"\n      },\n      \"us-iso-west-1\": {\n        description: \"US ISO WEST\"\n      }\n    }\n  }, {\n    id: \"aws-iso-b\",\n    outputs: {\n      dnsSuffix: \"sc2s.sgov.gov\",\n      dualStackDnsSuffix: \"api.aws.scloud\",\n      implicitGlobalRegion: \"us-isob-east-1\",\n      name: \"aws-iso-b\",\n      supportsDualStack: true,\n      supportsFIPS: true\n    },\n    regionRegex: \"^us\\\\-isob\\\\-\\\\w+\\\\-\\\\d+$\",\n    regions: {\n      \"aws-iso-b-global\": {\n        description: \"aws-iso-b global region\"\n      },\n      \"us-isob-east-1\": {\n        description: \"US ISOB East (Ohio)\"\n      }\n    }\n  }, {\n    id: \"aws-iso-e\",\n    outputs: {\n      dnsSuffix: \"cloud.adc-e.uk\",\n      dualStackDnsSuffix: \"api.cloud-aws.adc-e.uk\",\n      implicitGlobalRegion: \"eu-isoe-west-1\",\n      name: \"aws-iso-e\",\n      supportsDualStack: true,\n      supportsFIPS: true\n    },\n    regionRegex: \"^eu\\\\-isoe\\\\-\\\\w+\\\\-\\\\d+$\",\n    regions: {\n      \"aws-iso-e-global\": {\n        description: \"aws-iso-e global region\"\n      },\n      \"eu-isoe-west-1\": {\n        description: \"EU ISOE West\"\n      }\n    }\n  }, {\n    id: \"aws-iso-f\",\n    outputs: {\n      dnsSuffix: \"csp.hci.ic.gov\",\n      dualStackDnsSuffix: \"api.aws.hci.ic.gov\",\n      implicitGlobalRegion: \"us-isof-south-1\",\n      name: \"aws-iso-f\",\n      supportsDualStack: true,\n      supportsFIPS: true\n    },\n    regionRegex: \"^us\\\\-isof\\\\-\\\\w+\\\\-\\\\d+$\",\n    regions: {\n      \"aws-iso-f-global\": {\n        description: \"aws-iso-f global region\"\n      },\n      \"us-isof-east-1\": {\n        description: \"US ISOF EAST\"\n      },\n      \"us-isof-south-1\": {\n        description: \"US ISOF SOUTH\"\n      }\n    }\n  }, {\n    id: \"aws-us-gov\",\n    outputs: {\n      dnsSuffix: \"amazonaws.com\",\n      dualStackDnsSuffix: \"api.aws\",\n      implicitGlobalRegion: \"us-gov-west-1\",\n      name: \"aws-us-gov\",\n      supportsDualStack: true,\n      supportsFIPS: true\n    },\n    regionRegex: \"^us\\\\-gov\\\\-\\\\w+\\\\-\\\\d+$\",\n    regions: {\n      \"aws-us-gov-global\": {\n        description: \"aws-us-gov global region\"\n      },\n      \"us-gov-east-1\": {\n        description: \"AWS GovCloud (US-East)\"\n      },\n      \"us-gov-west-1\": {\n        description: \"AWS GovCloud (US-West)\"\n      }\n    }\n  }],\n  version: \"1.1\"\n};\n\n// src/lib/aws/partition.ts\nvar selectedPartitionsInfo = partitions_default;\nvar selectedUserAgentPrefix = \"\";\nvar partition = /* @__PURE__ */ __name((value) => {\n  const { partitions } = selectedPartitionsInfo;\n  for (const partition2 of partitions) {\n    const { regions, outputs } = partition2;\n    for (const [region, regionData] of Object.entries(regions)) {\n      if (region === value) {\n        return {\n          ...outputs,\n          ...regionData\n        };\n      }\n    }\n  }\n  for (const partition2 of partitions) {\n    const { regionRegex, outputs } = partition2;\n    if (new RegExp(regionRegex).test(value)) {\n      return {\n        ...outputs\n      };\n    }\n  }\n  const DEFAULT_PARTITION = partitions.find((partition2) => partition2.id === \"aws\");\n  if (!DEFAULT_PARTITION) {\n    throw new Error(\n      \"Provided region was not found in the partition array or regex, and default partition with id 'aws' doesn't exist.\"\n    );\n  }\n  return {\n    ...DEFAULT_PARTITION.outputs\n  };\n}, \"partition\");\nvar setPartitionInfo = /* @__PURE__ */ __name((partitionsInfo, userAgentPrefix = \"\") => {\n  selectedPartitionsInfo = partitionsInfo;\n  selectedUserAgentPrefix = userAgentPrefix;\n}, \"setPartitionInfo\");\nvar useDefaultPartitionInfo = /* @__PURE__ */ __name(() => {\n  setPartitionInfo(partitions_default, \"\");\n}, \"useDefaultPartitionInfo\");\nvar getUserAgentPrefix = /* @__PURE__ */ __name(() => selectedUserAgentPrefix, \"getUserAgentPrefix\");\n\n// src/aws.ts\nvar awsEndpointFunctions = {\n  isVirtualHostableS3Bucket,\n  parseArn,\n  partition\n};\nimport_util_endpoints.customEndpointFunctions.aws = awsEndpointFunctions;\n\n// src/resolveDefaultAwsRegionalEndpointsConfig.ts\nvar import_url_parser = require(\"@smithy/url-parser\");\nvar resolveDefaultAwsRegionalEndpointsConfig = /* @__PURE__ */ __name((input) => {\n  if (typeof input.endpointProvider !== \"function\") {\n    throw new Error(\"@aws-sdk/util-endpoint - endpointProvider and endpoint missing in config for this client.\");\n  }\n  const { endpoint } = input;\n  if (endpoint === void 0) {\n    input.endpoint = async () => {\n      return toEndpointV1(\n        input.endpointProvider(\n          {\n            Region: typeof input.region === \"function\" ? await input.region() : input.region,\n            UseDualStack: typeof input.useDualstackEndpoint === \"function\" ? await input.useDualstackEndpoint() : input.useDualstackEndpoint,\n            UseFIPS: typeof input.useFipsEndpoint === \"function\" ? await input.useFipsEndpoint() : input.useFipsEndpoint,\n            Endpoint: void 0\n          },\n          { logger: input.logger }\n        )\n      );\n    };\n  }\n  return input;\n}, \"resolveDefaultAwsRegionalEndpointsConfig\");\nvar toEndpointV1 = /* @__PURE__ */ __name((endpoint) => (0, import_url_parser.parseUrl)(endpoint.url), \"toEndpointV1\");\n\n// src/resolveEndpoint.ts\n\n\n// src/types/EndpointError.ts\n\n\n// src/types/EndpointRuleObject.ts\n\n\n// src/types/ErrorRuleObject.ts\n\n\n// src/types/RuleSetObject.ts\n\n\n// src/types/TreeRuleObject.ts\n\n\n// src/types/shared.ts\n\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  awsEndpointFunctions,\n  partition,\n  setPartitionInfo,\n  useDefaultPartitionInfo,\n  getUserAgentPrefix,\n  isIpAddress,\n  resolveDefaultAwsRegionalEndpointsConfig,\n  toEndpointV1,\n  resolveEndpoint,\n  EndpointError\n});\n\n", "export const state = {\n    warningEmitted: false,\n};\nexport const emitWarningIfUnsupportedVersion = (version) => {\n    if (version && !state.warningEmitted && parseInt(version.substring(1, version.indexOf(\".\"))) < 18) {\n        state.warningEmitted = true;\n        process.emitWarning(`NodeDeprecationWarning: The AWS SDK for JavaScript (v3) will\nno longer support Node.js 16.x on January 6, 2025.\n\nTo continue receiving updates to AWS services, bug fixes, and security\nupdates please upgrade to a supported Node.js LTS version.\n\nMore information can be found at: https://a.co/74kJMmI`);\n    }\n};\n", "export function setCredentialFeature(credentials, feature, value) {\n    if (!credentials.$source) {\n        credentials.$source = {};\n    }\n    credentials.$source[feature] = value;\n    return credentials;\n}\n", "export function setFeature(context, feature, value) {\n    if (!context.__aws_sdk_context) {\n        context.__aws_sdk_context = {\n            features: {},\n        };\n    }\n    else if (!context.__aws_sdk_context.features) {\n        context.__aws_sdk_context.features = {};\n    }\n    context.__aws_sdk_context.features[feature] = value;\n}\n", "export function setTokenFeature(token, feature, value) {\n    if (!token.$source) {\n        token.$source = {};\n    }\n    token.$source[feature] = value;\n    return token;\n}\n", "export * from \"./emitWarningIfUnsupportedVersion\";\nexport * from \"./setCredentialFeature\";\nexport * from \"./setFeature\";\nexport * from \"./setTokenFeature\";\n", "import { HttpResponse } from \"@smithy/protocol-http\";\nexport const getDateHeader = (response) => HttpResponse.isInstance(response) ? response.headers?.date ?? response.headers?.Date : undefined;\n", "export const getSkewCorrectedDate = (systemClockOffset) => new Date(Date.now() + systemClockOffset);\n", "import { getSkewCorrectedDate } from \"./getSkewCorrectedDate\";\nexport const isClockSkewed = (clockTime, systemClockOffset) => Math.abs(getSkewCorrectedDate(systemClockOffset).getTime() - clockTime) >= 300000;\n", "import { isClockSkewed } from \"./isClockSkewed\";\nexport const getUpdatedSystemClockOffset = (clockTime, currentSystemClockOffset) => {\n    const clockTimeInMs = Date.parse(clockTime);\n    if (isClockSkewed(clockTimeInMs, currentSystemClockOffset)) {\n        return clockTimeInMs - Date.now();\n    }\n    return currentSystemClockOffset;\n};\n", "export * from \"./getDateHeader\";\nexport * from \"./getSkewCorrectedDate\";\nexport * from \"./getUpdatedSystemClockOffset\";\n", "import { HttpRequest } from \"@smithy/protocol-http\";\nimport { getDateHeader, getSkewCorrectedDate, getUpdatedSystemClockOffset } from \"../utils\";\nconst throwSigningPropertyError = (name, property) => {\n    if (!property) {\n        throw new Error(`Property \\`${name}\\` is not resolved for AWS SDK SigV4Auth`);\n    }\n    return property;\n};\nexport const validateSigningProperties = async (signingProperties) => {\n    const context = throwSigningPropertyError(\"context\", signingProperties.context);\n    const config = throwSigningPropertyError(\"config\", signingProperties.config);\n    const authScheme = context.endpointV2?.properties?.authSchemes?.[0];\n    const signerFunction = throwSigningPropertyError(\"signer\", config.signer);\n    const signer = await signerFunction(authScheme);\n    const signingRegion = signingProperties?.signingRegion;\n    const signingRegionSet = signingProperties?.signingRegionSet;\n    const signingName = signingProperties?.signingName;\n    return {\n        config,\n        signer,\n        signingRegion,\n        signingRegionSet,\n        signingName,\n    };\n};\nexport class AwsSdkSigV4Signer {\n    async sign(httpRequest, identity, signingProperties) {\n        if (!HttpRequest.isInstance(httpRequest)) {\n            throw new Error(\"The request is not an instance of `HttpRequest` and cannot be signed\");\n        }\n        const validatedProps = await validateSigningProperties(signingProperties);\n        const { config, signer } = validatedProps;\n        let { signingRegion, signingName } = validatedProps;\n        const handlerExecutionContext = signingProperties.context;\n        if (handlerExecutionContext?.authSchemes?.length ?? 0 > 1) {\n            const [first, second] = handlerExecutionContext.authSchemes;\n            if (first?.name === \"sigv4a\" && second?.name === \"sigv4\") {\n                signingRegion = second?.signingRegion ?? signingRegion;\n                signingName = second?.signingName ?? signingName;\n            }\n        }\n        const signedRequest = await signer.sign(httpRequest, {\n            signingDate: getSkewCorrectedDate(config.systemClockOffset),\n            signingRegion: signingRegion,\n            signingService: signingName,\n        });\n        return signedRequest;\n    }\n    errorHandler(signingProperties) {\n        return (error) => {\n            const serverTime = error.ServerTime ?? getDateHeader(error.$response);\n            if (serverTime) {\n                const config = throwSigningPropertyError(\"config\", signingProperties.config);\n                const initialSystemClockOffset = config.systemClockOffset;\n                config.systemClockOffset = getUpdatedSystemClockOffset(serverTime, config.systemClockOffset);\n                const clockSkewCorrected = config.systemClockOffset !== initialSystemClockOffset;\n                if (clockSkewCorrected && error.$metadata) {\n                    error.$metadata.clockSkewCorrected = true;\n                }\n            }\n            throw error;\n        };\n    }\n    successHandler(httpResponse, signingProperties) {\n        const dateHeader = getDateHeader(httpResponse);\n        if (dateHeader) {\n            const config = throwSigningPropertyError(\"config\", signingProperties.config);\n            config.systemClockOffset = getUpdatedSystemClockOffset(dateHeader, config.systemClockOffset);\n        }\n    }\n}\nexport const AWSSDKSigV4Signer = AwsSdkSigV4Signer;\n", "import { HttpRequest } from \"@smithy/protocol-http\";\nimport { getSkewCorrectedDate } from \"../utils\";\nimport { AwsSdkSigV4Signer, validateSigningProperties } from \"./AwsSdkSigV4Signer\";\nexport class AwsSdkSigV4ASigner extends AwsSdkSigV4Signer {\n    async sign(httpRequest, identity, signingProperties) {\n        if (!HttpRequest.isInstance(httpRequest)) {\n            throw new Error(\"The request is not an instance of `HttpRequest` and cannot be signed\");\n        }\n        const { config, signer, signingRegion, signingRegionSet, signingName } = await validateSigningProperties(signingProperties);\n        const configResolvedSigningRegionSet = await config.sigv4aSigningRegionSet?.();\n        const multiRegionOverride = (configResolvedSigningRegionSet ??\n            signingRegionSet ?? [signingRegion]).join(\",\");\n        const signedRequest = await signer.sign(httpRequest, {\n            signingDate: getSkewCorrectedDate(config.systemClockOffset),\n            signingRegion: multiRegionOverride,\n            signingService: signingName,\n        });\n        return signedRequest;\n    }\n}\n", "export const getArrayForCommaSeparatedString = (str) => typeof str === \"string\" && str.length > 0 ? str.split(\",\").map((item) => item.trim()) : [];\n", "export const getBearerTokenEnvKey = (signingName) => `AWS_BEARER_TOKEN_${signingName.replace(/[\\s-]/g, \"_\").toUpperCase()}`;\n", "import { getArrayForCommaSeparatedString } from \"../utils/getArrayForCommaSeparatedString\";\nimport { getBearerTokenEnvKey } from \"../utils/getBearerTokenEnvKey\";\nconst NODE_AUTH_SCHEME_PREFERENCE_ENV_KEY = \"AWS_AUTH_SCHEME_PREFERENCE\";\nconst NODE_AUTH_SCHEME_PREFERENCE_CONFIG_KEY = \"auth_scheme_preference\";\nexport const NODE_AUTH_SCHEME_PREFERENCE_OPTIONS = {\n    environmentVariableSelector: (env, options) => {\n        if (options?.signingName) {\n            const bearerTokenKey = getBearerTokenEnvKey(options.signingName);\n            if (bearerTokenKey in env)\n                return [\"httpBearerAuth\"];\n        }\n        if (!(NODE_AUTH_SCHEME_PREFERENCE_ENV_KEY in env))\n            return undefined;\n        return getArrayForCommaSeparatedString(env[NODE_AUTH_SCHEME_PREFERENCE_ENV_KEY]);\n    },\n    configFileSelector: (profile) => {\n        if (!(NODE_AUTH_SCHEME_PREFERENCE_CONFIG_KEY in profile))\n            return undefined;\n        return getArrayForCommaSeparatedString(profile[NODE_AUTH_SCHEME_PREFERENCE_CONFIG_KEY]);\n    },\n    default: [],\n};\n", "'use strict';\n\nclass ProviderError extends Error {\n    name = \"ProviderError\";\n    tryNextLink;\n    constructor(message, options = true) {\n        let logger;\n        let tryNextLink = true;\n        if (typeof options === \"boolean\") {\n            logger = undefined;\n            tryNextLink = options;\n        }\n        else if (options != null && typeof options === \"object\") {\n            logger = options.logger;\n            tryNextLink = options.tryNextLink ?? true;\n        }\n        super(message);\n        this.tryNextLink = tryNextLink;\n        Object.setPrototypeOf(this, ProviderError.prototype);\n        logger?.debug?.(`@smithy/property-provider ${tryNextLink ? \"->\" : \"(!)\"} ${message}`);\n    }\n    static from(error, options = true) {\n        return Object.assign(new this(error.message, options), error);\n    }\n}\n\nclass CredentialsProviderError extends ProviderError {\n    name = \"CredentialsProviderError\";\n    constructor(message, options = true) {\n        super(message, options);\n        Object.setPrototypeOf(this, CredentialsProviderError.prototype);\n    }\n}\n\nclass TokenProviderError extends ProviderError {\n    name = \"TokenProviderError\";\n    constructor(message, options = true) {\n        super(message, options);\n        Object.setPrototypeOf(this, TokenProviderError.prototype);\n    }\n}\n\nconst chain = (...providers) => async () => {\n    if (providers.length === 0) {\n        throw new ProviderError(\"No providers in chain\");\n    }\n    let lastProviderError;\n    for (const provider of providers) {\n        try {\n            const credentials = await provider();\n            return credentials;\n        }\n        catch (err) {\n            lastProviderError = err;\n            if (err?.tryNextLink) {\n                continue;\n            }\n            throw err;\n        }\n    }\n    throw lastProviderError;\n};\n\nconst fromStatic = (staticValue) => () => Promise.resolve(staticValue);\n\nconst memoize = (provider, isExpired, requiresRefresh) => {\n    let resolved;\n    let pending;\n    let hasResult;\n    let isConstant = false;\n    const coalesceProvider = async () => {\n        if (!pending) {\n            pending = provider();\n        }\n        try {\n            resolved = await pending;\n            hasResult = true;\n            isConstant = false;\n        }\n        finally {\n            pending = undefined;\n        }\n        return resolved;\n    };\n    if (isExpired === undefined) {\n        return async (options) => {\n            if (!hasResult || options?.forceRefresh) {\n                resolved = await coalesceProvider();\n            }\n            return resolved;\n        };\n    }\n    return async (options) => {\n        if (!hasResult || options?.forceRefresh) {\n            resolved = await coalesceProvider();\n        }\n        if (isConstant) {\n            return resolved;\n        }\n        if (requiresRefresh && !requiresRefresh(resolved)) {\n            isConstant = true;\n            return resolved;\n        }\n        if (isExpired(resolved)) {\n            await coalesceProvider();\n            return resolved;\n        }\n        return resolved;\n    };\n};\n\nexports.CredentialsProviderError = CredentialsProviderError;\nexports.ProviderError = ProviderError;\nexports.TokenProviderError = TokenProviderError;\nexports.chain = chain;\nexports.fromStatic = fromStatic;\nexports.memoize = memoize;\n", "import { normalizeProvider } from \"@smithy/core\";\nimport { ProviderError } from \"@smithy/property-provider\";\nexport const resolveAwsSdkSigV4AConfig = (config) => {\n    config.sigv4aSigningRegionSet = normalizeProvider(config.sigv4aSigningRegionSet);\n    return config;\n};\nexport const NODE_SIGV4A_CONFIG_OPTIONS = {\n    environmentVariableSelector(env) {\n        if (env.AWS_SIGV4A_SIGNING_REGION_SET) {\n            return env.AWS_SIGV4A_SIGNING_REGION_SET.split(\",\").map((_) => _.trim());\n        }\n        throw new ProviderError(\"AWS_SIGV4A_SIGNING_REGION_SET not set in env.\", {\n            tryNextLink: true,\n        });\n    },\n    configFileSelector(profile) {\n        if (profile.sigv4a_signing_region_set) {\n            return (profile.sigv4a_signing_region_set ?? \"\").split(\",\").map((_) => _.trim());\n        }\n        throw new ProviderError(\"sigv4a_signing_region_set not set in profile.\", {\n            tryNextLink: true,\n        });\n    },\n    default: undefined,\n};\n", "'use strict';\n\nconst escapeUri = (uri) => encodeURIComponent(uri).replace(/[!'()*]/g, hexEncode);\nconst hexEncode = (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`;\n\nconst escapeUriPath = (uri) => uri.split(\"/\").map(escapeUri).join(\"/\");\n\nexports.escapeUri = escapeUri;\nexports.escapeUriPath = escapeUriPath;\n", "'use strict';\n\nvar utilHexEncoding = require('@smithy/util-hex-encoding');\nvar utilUtf8 = require('@smithy/util-utf8');\nvar isArrayBuffer = require('@smithy/is-array-buffer');\nvar protocolHttp = require('@smithy/protocol-http');\nvar utilMiddleware = require('@smithy/util-middleware');\nvar utilUriEscape = require('@smithy/util-uri-escape');\n\nconst ALGORITHM_QUERY_PARAM = \"X-Amz-Algorithm\";\nconst CREDENTIAL_QUERY_PARAM = \"X-Amz-Credential\";\nconst AMZ_DATE_QUERY_PARAM = \"X-Amz-Date\";\nconst SIGNED_HEADERS_QUERY_PARAM = \"X-Amz-SignedHeaders\";\nconst EXPIRES_QUERY_PARAM = \"X-Amz-Expires\";\nconst SIGNATURE_QUERY_PARAM = \"X-Amz-Signature\";\nconst TOKEN_QUERY_PARAM = \"X-Amz-Security-Token\";\nconst REGION_SET_PARAM = \"X-Amz-Region-Set\";\nconst AUTH_HEADER = \"authorization\";\nconst AMZ_DATE_HEADER = AMZ_DATE_QUERY_PARAM.toLowerCase();\nconst DATE_HEADER = \"date\";\nconst GENERATED_HEADERS = [AUTH_HEADER, AMZ_DATE_HEADER, DATE_HEADER];\nconst SIGNATURE_HEADER = SIGNATURE_QUERY_PARAM.toLowerCase();\nconst SHA256_HEADER = \"x-amz-content-sha256\";\nconst TOKEN_HEADER = TOKEN_QUERY_PARAM.toLowerCase();\nconst HOST_HEADER = \"host\";\nconst ALWAYS_UNSIGNABLE_HEADERS = {\n    authorization: true,\n    \"cache-control\": true,\n    connection: true,\n    expect: true,\n    from: true,\n    \"keep-alive\": true,\n    \"max-forwards\": true,\n    pragma: true,\n    referer: true,\n    te: true,\n    trailer: true,\n    \"transfer-encoding\": true,\n    upgrade: true,\n    \"user-agent\": true,\n    \"x-amzn-trace-id\": true,\n};\nconst PROXY_HEADER_PATTERN = /^proxy-/;\nconst SEC_HEADER_PATTERN = /^sec-/;\nconst UNSIGNABLE_PATTERNS = [/^proxy-/i, /^sec-/i];\nconst ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256\";\nconst ALGORITHM_IDENTIFIER_V4A = \"AWS4-ECDSA-P256-SHA256\";\nconst EVENT_ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256-PAYLOAD\";\nconst UNSIGNED_PAYLOAD = \"UNSIGNED-PAYLOAD\";\nconst MAX_CACHE_SIZE = 50;\nconst KEY_TYPE_IDENTIFIER = \"aws4_request\";\nconst MAX_PRESIGNED_TTL = 60 * 60 * 24 * 7;\n\nconst signingKeyCache = {};\nconst cacheQueue = [];\nconst createScope = (shortDate, region, service) => `${shortDate}/${region}/${service}/${KEY_TYPE_IDENTIFIER}`;\nconst getSigningKey = async (sha256Constructor, credentials, shortDate, region, service) => {\n    const credsHash = await hmac(sha256Constructor, credentials.secretAccessKey, credentials.accessKeyId);\n    const cacheKey = `${shortDate}:${region}:${service}:${utilHexEncoding.toHex(credsHash)}:${credentials.sessionToken}`;\n    if (cacheKey in signingKeyCache) {\n        return signingKeyCache[cacheKey];\n    }\n    cacheQueue.push(cacheKey);\n    while (cacheQueue.length > MAX_CACHE_SIZE) {\n        delete signingKeyCache[cacheQueue.shift()];\n    }\n    let key = `AWS4${credentials.secretAccessKey}`;\n    for (const signable of [shortDate, region, service, KEY_TYPE_IDENTIFIER]) {\n        key = await hmac(sha256Constructor, key, signable);\n    }\n    return (signingKeyCache[cacheKey] = key);\n};\nconst clearCredentialCache = () => {\n    cacheQueue.length = 0;\n    Object.keys(signingKeyCache).forEach((cacheKey) => {\n        delete signingKeyCache[cacheKey];\n    });\n};\nconst hmac = (ctor, secret, data) => {\n    const hash = new ctor(secret);\n    hash.update(utilUtf8.toUint8Array(data));\n    return hash.digest();\n};\n\nconst getCanonicalHeaders = ({ headers }, unsignableHeaders, signableHeaders) => {\n    const canonical = {};\n    for (const headerName of Object.keys(headers).sort()) {\n        if (headers[headerName] == undefined) {\n            continue;\n        }\n        const canonicalHeaderName = headerName.toLowerCase();\n        if (canonicalHeaderName in ALWAYS_UNSIGNABLE_HEADERS ||\n            unsignableHeaders?.has(canonicalHeaderName) ||\n            PROXY_HEADER_PATTERN.test(canonicalHeaderName) ||\n            SEC_HEADER_PATTERN.test(canonicalHeaderName)) {\n            if (!signableHeaders || (signableHeaders && !signableHeaders.has(canonicalHeaderName))) {\n                continue;\n            }\n        }\n        canonical[canonicalHeaderName] = headers[headerName].trim().replace(/\\s+/g, \" \");\n    }\n    return canonical;\n};\n\nconst getPayloadHash = async ({ headers, body }, hashConstructor) => {\n    for (const headerName of Object.keys(headers)) {\n        if (headerName.toLowerCase() === SHA256_HEADER) {\n            return headers[headerName];\n        }\n    }\n    if (body == undefined) {\n        return \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\";\n    }\n    else if (typeof body === \"string\" || ArrayBuffer.isView(body) || isArrayBuffer.isArrayBuffer(body)) {\n        const hashCtor = new hashConstructor();\n        hashCtor.update(utilUtf8.toUint8Array(body));\n        return utilHexEncoding.toHex(await hashCtor.digest());\n    }\n    return UNSIGNED_PAYLOAD;\n};\n\nclass HeaderFormatter {\n    format(headers) {\n        const chunks = [];\n        for (const headerName of Object.keys(headers)) {\n            const bytes = utilUtf8.fromUtf8(headerName);\n            chunks.push(Uint8Array.from([bytes.byteLength]), bytes, this.formatHeaderValue(headers[headerName]));\n        }\n        const out = new Uint8Array(chunks.reduce((carry, bytes) => carry + bytes.byteLength, 0));\n        let position = 0;\n        for (const chunk of chunks) {\n            out.set(chunk, position);\n            position += chunk.byteLength;\n        }\n        return out;\n    }\n    formatHeaderValue(header) {\n        switch (header.type) {\n            case \"boolean\":\n                return Uint8Array.from([header.value ? 0 : 1]);\n            case \"byte\":\n                return Uint8Array.from([2, header.value]);\n            case \"short\":\n                const shortView = new DataView(new ArrayBuffer(3));\n                shortView.setUint8(0, 3);\n                shortView.setInt16(1, header.value, false);\n                return new Uint8Array(shortView.buffer);\n            case \"integer\":\n                const intView = new DataView(new ArrayBuffer(5));\n                intView.setUint8(0, 4);\n                intView.setInt32(1, header.value, false);\n                return new Uint8Array(intView.buffer);\n            case \"long\":\n                const longBytes = new Uint8Array(9);\n                longBytes[0] = 5;\n                longBytes.set(header.value.bytes, 1);\n                return longBytes;\n            case \"binary\":\n                const binView = new DataView(new ArrayBuffer(3 + header.value.byteLength));\n                binView.setUint8(0, 6);\n                binView.setUint16(1, header.value.byteLength, false);\n                const binBytes = new Uint8Array(binView.buffer);\n                binBytes.set(header.value, 3);\n                return binBytes;\n            case \"string\":\n                const utf8Bytes = utilUtf8.fromUtf8(header.value);\n                const strView = new DataView(new ArrayBuffer(3 + utf8Bytes.byteLength));\n                strView.setUint8(0, 7);\n                strView.setUint16(1, utf8Bytes.byteLength, false);\n                const strBytes = new Uint8Array(strView.buffer);\n                strBytes.set(utf8Bytes, 3);\n                return strBytes;\n            case \"timestamp\":\n                const tsBytes = new Uint8Array(9);\n                tsBytes[0] = 8;\n                tsBytes.set(Int64.fromNumber(header.value.valueOf()).bytes, 1);\n                return tsBytes;\n            case \"uuid\":\n                if (!UUID_PATTERN.test(header.value)) {\n                    throw new Error(`Invalid UUID received: ${header.value}`);\n                }\n                const uuidBytes = new Uint8Array(17);\n                uuidBytes[0] = 9;\n                uuidBytes.set(utilHexEncoding.fromHex(header.value.replace(/\\-/g, \"\")), 1);\n                return uuidBytes;\n        }\n    }\n}\nconst UUID_PATTERN = /^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$/;\nclass Int64 {\n    bytes;\n    constructor(bytes) {\n        this.bytes = bytes;\n        if (bytes.byteLength !== 8) {\n            throw new Error(\"Int64 buffers must be exactly 8 bytes\");\n        }\n    }\n    static fromNumber(number) {\n        if (number > 9_223_372_036_854_775_807 || number < -9223372036854776e3) {\n            throw new Error(`${number} is too large (or, if negative, too small) to represent as an Int64`);\n        }\n        const bytes = new Uint8Array(8);\n        for (let i = 7, remaining = Math.abs(Math.round(number)); i > -1 && remaining > 0; i--, remaining /= 256) {\n            bytes[i] = remaining;\n        }\n        if (number < 0) {\n            negate(bytes);\n        }\n        return new Int64(bytes);\n    }\n    valueOf() {\n        const bytes = this.bytes.slice(0);\n        const negative = bytes[0] & 0b10000000;\n        if (negative) {\n            negate(bytes);\n        }\n        return parseInt(utilHexEncoding.toHex(bytes), 16) * (negative ? -1 : 1);\n    }\n    toString() {\n        return String(this.valueOf());\n    }\n}\nfunction negate(bytes) {\n    for (let i = 0; i < 8; i++) {\n        bytes[i] ^= 0xff;\n    }\n    for (let i = 7; i > -1; i--) {\n        bytes[i]++;\n        if (bytes[i] !== 0)\n            break;\n    }\n}\n\nconst hasHeader = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            return true;\n        }\n    }\n    return false;\n};\n\nconst moveHeadersToQuery = (request, options = {}) => {\n    const { headers, query = {} } = protocolHttp.HttpRequest.clone(request);\n    for (const name of Object.keys(headers)) {\n        const lname = name.toLowerCase();\n        if ((lname.slice(0, 6) === \"x-amz-\" && !options.unhoistableHeaders?.has(lname)) ||\n            options.hoistableHeaders?.has(lname)) {\n            query[name] = headers[name];\n            delete headers[name];\n        }\n    }\n    return {\n        ...request,\n        headers,\n        query,\n    };\n};\n\nconst prepareRequest = (request) => {\n    request = protocolHttp.HttpRequest.clone(request);\n    for (const headerName of Object.keys(request.headers)) {\n        if (GENERATED_HEADERS.indexOf(headerName.toLowerCase()) > -1) {\n            delete request.headers[headerName];\n        }\n    }\n    return request;\n};\n\nconst getCanonicalQuery = ({ query = {} }) => {\n    const keys = [];\n    const serialized = {};\n    for (const key of Object.keys(query)) {\n        if (key.toLowerCase() === SIGNATURE_HEADER) {\n            continue;\n        }\n        const encodedKey = utilUriEscape.escapeUri(key);\n        keys.push(encodedKey);\n        const value = query[key];\n        if (typeof value === \"string\") {\n            serialized[encodedKey] = `${encodedKey}=${utilUriEscape.escapeUri(value)}`;\n        }\n        else if (Array.isArray(value)) {\n            serialized[encodedKey] = value\n                .slice(0)\n                .reduce((encoded, value) => encoded.concat([`${encodedKey}=${utilUriEscape.escapeUri(value)}`]), [])\n                .sort()\n                .join(\"&\");\n        }\n    }\n    return keys\n        .sort()\n        .map((key) => serialized[key])\n        .filter((serialized) => serialized)\n        .join(\"&\");\n};\n\nconst iso8601 = (time) => toDate(time)\n    .toISOString()\n    .replace(/\\.\\d{3}Z$/, \"Z\");\nconst toDate = (time) => {\n    if (typeof time === \"number\") {\n        return new Date(time * 1000);\n    }\n    if (typeof time === \"string\") {\n        if (Number(time)) {\n            return new Date(Number(time) * 1000);\n        }\n        return new Date(time);\n    }\n    return time;\n};\n\nclass SignatureV4Base {\n    service;\n    regionProvider;\n    credentialProvider;\n    sha256;\n    uriEscapePath;\n    applyChecksum;\n    constructor({ applyChecksum, credentials, region, service, sha256, uriEscapePath = true, }) {\n        this.service = service;\n        this.sha256 = sha256;\n        this.uriEscapePath = uriEscapePath;\n        this.applyChecksum = typeof applyChecksum === \"boolean\" ? applyChecksum : true;\n        this.regionProvider = utilMiddleware.normalizeProvider(region);\n        this.credentialProvider = utilMiddleware.normalizeProvider(credentials);\n    }\n    createCanonicalRequest(request, canonicalHeaders, payloadHash) {\n        const sortedHeaders = Object.keys(canonicalHeaders).sort();\n        return `${request.method}\n${this.getCanonicalPath(request)}\n${getCanonicalQuery(request)}\n${sortedHeaders.map((name) => `${name}:${canonicalHeaders[name]}`).join(\"\\n\")}\n\n${sortedHeaders.join(\";\")}\n${payloadHash}`;\n    }\n    async createStringToSign(longDate, credentialScope, canonicalRequest, algorithmIdentifier) {\n        const hash = new this.sha256();\n        hash.update(utilUtf8.toUint8Array(canonicalRequest));\n        const hashedRequest = await hash.digest();\n        return `${algorithmIdentifier}\n${longDate}\n${credentialScope}\n${utilHexEncoding.toHex(hashedRequest)}`;\n    }\n    getCanonicalPath({ path }) {\n        if (this.uriEscapePath) {\n            const normalizedPathSegments = [];\n            for (const pathSegment of path.split(\"/\")) {\n                if (pathSegment?.length === 0)\n                    continue;\n                if (pathSegment === \".\")\n                    continue;\n                if (pathSegment === \"..\") {\n                    normalizedPathSegments.pop();\n                }\n                else {\n                    normalizedPathSegments.push(pathSegment);\n                }\n            }\n            const normalizedPath = `${path?.startsWith(\"/\") ? \"/\" : \"\"}${normalizedPathSegments.join(\"/\")}${normalizedPathSegments.length > 0 && path?.endsWith(\"/\") ? \"/\" : \"\"}`;\n            const doubleEncoded = utilUriEscape.escapeUri(normalizedPath);\n            return doubleEncoded.replace(/%2F/g, \"/\");\n        }\n        return path;\n    }\n    validateResolvedCredentials(credentials) {\n        if (typeof credentials !== \"object\" ||\n            typeof credentials.accessKeyId !== \"string\" ||\n            typeof credentials.secretAccessKey !== \"string\") {\n            throw new Error(\"Resolved credential object is not valid\");\n        }\n    }\n    formatDate(now) {\n        const longDate = iso8601(now).replace(/[\\-:]/g, \"\");\n        return {\n            longDate,\n            shortDate: longDate.slice(0, 8),\n        };\n    }\n    getCanonicalHeaderList(headers) {\n        return Object.keys(headers).sort().join(\";\");\n    }\n}\n\nclass SignatureV4 extends SignatureV4Base {\n    headerFormatter = new HeaderFormatter();\n    constructor({ applyChecksum, credentials, region, service, sha256, uriEscapePath = true, }) {\n        super({\n            applyChecksum,\n            credentials,\n            region,\n            service,\n            sha256,\n            uriEscapePath,\n        });\n    }\n    async presign(originalRequest, options = {}) {\n        const { signingDate = new Date(), expiresIn = 3600, unsignableHeaders, unhoistableHeaders, signableHeaders, hoistableHeaders, signingRegion, signingService, } = options;\n        const credentials = await this.credentialProvider();\n        this.validateResolvedCredentials(credentials);\n        const region = signingRegion ?? (await this.regionProvider());\n        const { longDate, shortDate } = this.formatDate(signingDate);\n        if (expiresIn > MAX_PRESIGNED_TTL) {\n            return Promise.reject(\"Signature version 4 presigned URLs\" + \" must have an expiration date less than one week in\" + \" the future\");\n        }\n        const scope = createScope(shortDate, region, signingService ?? this.service);\n        const request = moveHeadersToQuery(prepareRequest(originalRequest), { unhoistableHeaders, hoistableHeaders });\n        if (credentials.sessionToken) {\n            request.query[TOKEN_QUERY_PARAM] = credentials.sessionToken;\n        }\n        request.query[ALGORITHM_QUERY_PARAM] = ALGORITHM_IDENTIFIER;\n        request.query[CREDENTIAL_QUERY_PARAM] = `${credentials.accessKeyId}/${scope}`;\n        request.query[AMZ_DATE_QUERY_PARAM] = longDate;\n        request.query[EXPIRES_QUERY_PARAM] = expiresIn.toString(10);\n        const canonicalHeaders = getCanonicalHeaders(request, unsignableHeaders, signableHeaders);\n        request.query[SIGNED_HEADERS_QUERY_PARAM] = this.getCanonicalHeaderList(canonicalHeaders);\n        request.query[SIGNATURE_QUERY_PARAM] = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, await getPayloadHash(originalRequest, this.sha256)));\n        return request;\n    }\n    async sign(toSign, options) {\n        if (typeof toSign === \"string\") {\n            return this.signString(toSign, options);\n        }\n        else if (toSign.headers && toSign.payload) {\n            return this.signEvent(toSign, options);\n        }\n        else if (toSign.message) {\n            return this.signMessage(toSign, options);\n        }\n        else {\n            return this.signRequest(toSign, options);\n        }\n    }\n    async signEvent({ headers, payload }, { signingDate = new Date(), priorSignature, signingRegion, signingService }) {\n        const region = signingRegion ?? (await this.regionProvider());\n        const { shortDate, longDate } = this.formatDate(signingDate);\n        const scope = createScope(shortDate, region, signingService ?? this.service);\n        const hashedPayload = await getPayloadHash({ headers: {}, body: payload }, this.sha256);\n        const hash = new this.sha256();\n        hash.update(headers);\n        const hashedHeaders = utilHexEncoding.toHex(await hash.digest());\n        const stringToSign = [\n            EVENT_ALGORITHM_IDENTIFIER,\n            longDate,\n            scope,\n            priorSignature,\n            hashedHeaders,\n            hashedPayload,\n        ].join(\"\\n\");\n        return this.signString(stringToSign, { signingDate, signingRegion: region, signingService });\n    }\n    async signMessage(signableMessage, { signingDate = new Date(), signingRegion, signingService }) {\n        const promise = this.signEvent({\n            headers: this.headerFormatter.format(signableMessage.message.headers),\n            payload: signableMessage.message.body,\n        }, {\n            signingDate,\n            signingRegion,\n            signingService,\n            priorSignature: signableMessage.priorSignature,\n        });\n        return promise.then((signature) => {\n            return { message: signableMessage.message, signature };\n        });\n    }\n    async signString(stringToSign, { signingDate = new Date(), signingRegion, signingService } = {}) {\n        const credentials = await this.credentialProvider();\n        this.validateResolvedCredentials(credentials);\n        const region = signingRegion ?? (await this.regionProvider());\n        const { shortDate } = this.formatDate(signingDate);\n        const hash = new this.sha256(await this.getSigningKey(credentials, region, shortDate, signingService));\n        hash.update(utilUtf8.toUint8Array(stringToSign));\n        return utilHexEncoding.toHex(await hash.digest());\n    }\n    async signRequest(requestToSign, { signingDate = new Date(), signableHeaders, unsignableHeaders, signingRegion, signingService, } = {}) {\n        const credentials = await this.credentialProvider();\n        this.validateResolvedCredentials(credentials);\n        const region = signingRegion ?? (await this.regionProvider());\n        const request = prepareRequest(requestToSign);\n        const { longDate, shortDate } = this.formatDate(signingDate);\n        const scope = createScope(shortDate, region, signingService ?? this.service);\n        request.headers[AMZ_DATE_HEADER] = longDate;\n        if (credentials.sessionToken) {\n            request.headers[TOKEN_HEADER] = credentials.sessionToken;\n        }\n        const payloadHash = await getPayloadHash(request, this.sha256);\n        if (!hasHeader(SHA256_HEADER, request.headers) && this.applyChecksum) {\n            request.headers[SHA256_HEADER] = payloadHash;\n        }\n        const canonicalHeaders = getCanonicalHeaders(request, unsignableHeaders, signableHeaders);\n        const signature = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, payloadHash));\n        request.headers[AUTH_HEADER] =\n            `${ALGORITHM_IDENTIFIER} ` +\n                `Credential=${credentials.accessKeyId}/${scope}, ` +\n                `SignedHeaders=${this.getCanonicalHeaderList(canonicalHeaders)}, ` +\n                `Signature=${signature}`;\n        return request;\n    }\n    async getSignature(longDate, credentialScope, keyPromise, canonicalRequest) {\n        const stringToSign = await this.createStringToSign(longDate, credentialScope, canonicalRequest, ALGORITHM_IDENTIFIER);\n        const hash = new this.sha256(await keyPromise);\n        hash.update(utilUtf8.toUint8Array(stringToSign));\n        return utilHexEncoding.toHex(await hash.digest());\n    }\n    getSigningKey(credentials, region, shortDate, service) {\n        return getSigningKey(this.sha256, credentials, shortDate, region, service || this.service);\n    }\n}\n\nconst signatureV4aContainer = {\n    SignatureV4a: null,\n};\n\nexports.ALGORITHM_IDENTIFIER = ALGORITHM_IDENTIFIER;\nexports.ALGORITHM_IDENTIFIER_V4A = ALGORITHM_IDENTIFIER_V4A;\nexports.ALGORITHM_QUERY_PARAM = ALGORITHM_QUERY_PARAM;\nexports.ALWAYS_UNSIGNABLE_HEADERS = ALWAYS_UNSIGNABLE_HEADERS;\nexports.AMZ_DATE_HEADER = AMZ_DATE_HEADER;\nexports.AMZ_DATE_QUERY_PARAM = AMZ_DATE_QUERY_PARAM;\nexports.AUTH_HEADER = AUTH_HEADER;\nexports.CREDENTIAL_QUERY_PARAM = CREDENTIAL_QUERY_PARAM;\nexports.DATE_HEADER = DATE_HEADER;\nexports.EVENT_ALGORITHM_IDENTIFIER = EVENT_ALGORITHM_IDENTIFIER;\nexports.EXPIRES_QUERY_PARAM = EXPIRES_QUERY_PARAM;\nexports.GENERATED_HEADERS = GENERATED_HEADERS;\nexports.HOST_HEADER = HOST_HEADER;\nexports.KEY_TYPE_IDENTIFIER = KEY_TYPE_IDENTIFIER;\nexports.MAX_CACHE_SIZE = MAX_CACHE_SIZE;\nexports.MAX_PRESIGNED_TTL = MAX_PRESIGNED_TTL;\nexports.PROXY_HEADER_PATTERN = PROXY_HEADER_PATTERN;\nexports.REGION_SET_PARAM = REGION_SET_PARAM;\nexports.SEC_HEADER_PATTERN = SEC_HEADER_PATTERN;\nexports.SHA256_HEADER = SHA256_HEADER;\nexports.SIGNATURE_HEADER = SIGNATURE_HEADER;\nexports.SIGNATURE_QUERY_PARAM = SIGNATURE_QUERY_PARAM;\nexports.SIGNED_HEADERS_QUERY_PARAM = SIGNED_HEADERS_QUERY_PARAM;\nexports.SignatureV4 = SignatureV4;\nexports.SignatureV4Base = SignatureV4Base;\nexports.TOKEN_HEADER = TOKEN_HEADER;\nexports.TOKEN_QUERY_PARAM = TOKEN_QUERY_PARAM;\nexports.UNSIGNABLE_PATTERNS = UNSIGNABLE_PATTERNS;\nexports.UNSIGNED_PAYLOAD = UNSIGNED_PAYLOAD;\nexports.clearCredentialCache = clearCredentialCache;\nexports.createScope = createScope;\nexports.getCanonicalHeaders = getCanonicalHeaders;\nexports.getCanonicalQuery = getCanonicalQuery;\nexports.getPayloadHash = getPayloadHash;\nexports.getSigningKey = getSigningKey;\nexports.hasHeader = hasHeader;\nexports.moveHeadersToQuery = moveHeadersToQuery;\nexports.prepareRequest = prepareRequest;\nexports.signatureV4aContainer = signatureV4aContainer;\n", "import { setCredentialFeature } from \"@aws-sdk/core/client\";\nimport { doesIdentityRequireRefresh, isIdentityExpired, memoizeIdentityProvider, normalizeProvider, } from \"@smithy/core\";\nimport { SignatureV4 } from \"@smithy/signature-v4\";\nexport const resolveAwsSdkSigV4Config = (config) => {\n    let inputCredentials = config.credentials;\n    let isUserSupplied = !!config.credentials;\n    let resolvedCredentials = undefined;\n    Object.defineProperty(config, \"credentials\", {\n        set(credentials) {\n            if (credentials && credentials !== inputCredentials && credentials !== resolvedCredentials) {\n                isUserSupplied = true;\n            }\n            inputCredentials = credentials;\n            const memoizedProvider = normalizeCredentialProvider(config, {\n                credentials: inputCredentials,\n                credentialDefaultProvider: config.credentialDefaultProvider,\n            });\n            const boundProvider = bindCallerConfig(config, memoizedProvider);\n            if (isUserSupplied && !boundProvider.attributed) {\n                resolvedCredentials = async (options) => boundProvider(options).then((creds) => setCredentialFeature(creds, \"CREDENTIALS_CODE\", \"e\"));\n                resolvedCredentials.memoized = boundProvider.memoized;\n                resolvedCredentials.configBound = boundProvider.configBound;\n                resolvedCredentials.attributed = true;\n            }\n            else {\n                resolvedCredentials = boundProvider;\n            }\n        },\n        get() {\n            return resolvedCredentials;\n        },\n        enumerable: true,\n        configurable: true,\n    });\n    config.credentials = inputCredentials;\n    const { signingEscapePath = true, systemClockOffset = config.systemClockOffset || 0, sha256, } = config;\n    let signer;\n    if (config.signer) {\n        signer = normalizeProvider(config.signer);\n    }\n    else if (config.regionInfoProvider) {\n        signer = () => normalizeProvider(config.region)()\n            .then(async (region) => [\n            (await config.regionInfoProvider(region, {\n                useFipsEndpoint: await config.useFipsEndpoint(),\n                useDualstackEndpoint: await config.useDualstackEndpoint(),\n            })) || {},\n            region,\n        ])\n            .then(([regionInfo, region]) => {\n            const { signingRegion, signingService } = regionInfo;\n            config.signingRegion = config.signingRegion || signingRegion || region;\n            config.signingName = config.signingName || signingService || config.serviceId;\n            const params = {\n                ...config,\n                credentials: config.credentials,\n                region: config.signingRegion,\n                service: config.signingName,\n                sha256,\n                uriEscapePath: signingEscapePath,\n            };\n            const SignerCtor = config.signerConstructor || SignatureV4;\n            return new SignerCtor(params);\n        });\n    }\n    else {\n        signer = async (authScheme) => {\n            authScheme = Object.assign({}, {\n                name: \"sigv4\",\n                signingName: config.signingName || config.defaultSigningName,\n                signingRegion: await normalizeProvider(config.region)(),\n                properties: {},\n            }, authScheme);\n            const signingRegion = authScheme.signingRegion;\n            const signingService = authScheme.signingName;\n            config.signingRegion = config.signingRegion || signingRegion;\n            config.signingName = config.signingName || signingService || config.serviceId;\n            const params = {\n                ...config,\n                credentials: config.credentials,\n                region: config.signingRegion,\n                service: config.signingName,\n                sha256,\n                uriEscapePath: signingEscapePath,\n            };\n            const SignerCtor = config.signerConstructor || SignatureV4;\n            return new SignerCtor(params);\n        };\n    }\n    const resolvedConfig = Object.assign(config, {\n        systemClockOffset,\n        signingEscapePath,\n        signer,\n    });\n    return resolvedConfig;\n};\nexport const resolveAWSSDKSigV4Config = resolveAwsSdkSigV4Config;\nfunction normalizeCredentialProvider(config, { credentials, credentialDefaultProvider, }) {\n    let credentialsProvider;\n    if (credentials) {\n        if (!credentials?.memoized) {\n            credentialsProvider = memoizeIdentityProvider(credentials, isIdentityExpired, doesIdentityRequireRefresh);\n        }\n        else {\n            credentialsProvider = credentials;\n        }\n    }\n    else {\n        if (credentialDefaultProvider) {\n            credentialsProvider = normalizeProvider(credentialDefaultProvider(Object.assign({}, config, {\n                parentClientConfig: config,\n            })));\n        }\n        else {\n            credentialsProvider = async () => {\n                throw new Error(\"@aws-sdk/core::resolveAwsSdkSigV4Config - `credentials` not provided and no credentialDefaultProvider was configured.\");\n            };\n        }\n    }\n    credentialsProvider.memoized = true;\n    return credentialsProvider;\n}\nfunction bindCallerConfig(config, credentialsProvider) {\n    if (credentialsProvider.configBound) {\n        return credentialsProvider;\n    }\n    const fn = async (options) => credentialsProvider({ ...options, callerClientConfig: config });\n    fn.memoized = credentialsProvider.memoized;\n    fn.configBound = true;\n    return fn;\n}\n", "export { AwsSdkSigV4Signer, AWSSDKSigV4Signer, validateSigningProperties } from \"./AwsSdkSigV4Signer\";\nexport { AwsSdkSigV4ASigner } from \"./AwsSdkSigV4ASigner\";\nexport * from \"./NODE_AUTH_SCHEME_PREFERENCE_OPTIONS\";\nexport * from \"./resolveAwsSdkSigV4AConfig\";\nexport * from \"./resolveAwsSdkSigV4Config\";\n", "export * from \"./aws_sdk\";\nexport * from \"./utils/getBearerTokenEnvKey\";\n", "export const majorUint64 = 0;\nexport const majorNegativeInt64 = 1;\nexport const majorUnstructuredByteString = 2;\nexport const majorUtf8String = 3;\nexport const majorList = 4;\nexport const majorMap = 5;\nexport const majorTag = 6;\nexport const majorSpecial = 7;\nexport const specialFalse = 20;\nexport const specialTrue = 21;\nexport const specialNull = 22;\nexport const specialUndefined = 23;\nexport const extendedOneByte = 24;\nexport const extendedFloat16 = 25;\nexport const extendedFloat32 = 26;\nexport const extendedFloat64 = 27;\nexport const minorIndefinite = 31;\nexport function alloc(size) {\n    return typeof Buffer !== \"undefined\" ? Buffer.alloc(size) : new Uint8Array(size);\n}\nexport const tagSymbol = Symbol(\"@smithy/core/cbor::tagSymbol\");\nexport function tag(data) {\n    data[tagSymbol] = true;\n    return data;\n}\n", "import { nv } from \"@smithy/core/serde\";\nimport { toUtf8 } from \"@smithy/util-utf8\";\nimport { alloc, extendedFloat16, extendedFloat32, extendedFloat64, extendedOneByte, majorList, majorMap, majorNegativeInt64, majorTag, majorUint64, majorUnstructuredByteString, majorUtf8String, minorIndefinite, specialFalse, specialNull, specialTrue, specialUndefined, tag, } from \"./cbor-types\";\nconst USE_TEXT_DECODER = typeof TextDecoder !== \"undefined\";\nconst USE_BUFFER = typeof Buffer !== \"undefined\";\nlet payload = alloc(0);\nlet dataView = new DataView(payload.buffer, payload.byteOffset, payload.byteLength);\nconst textDecoder = USE_TEXT_DECODER ? new TextDecoder() : null;\nlet _offset = 0;\nexport function setPayload(bytes) {\n    payload = bytes;\n    dataView = new DataView(payload.buffer, payload.byteOffset, payload.byteLength);\n}\nexport function decode(at, to) {\n    if (at >= to) {\n        throw new Error(\"unexpected end of (decode) payload.\");\n    }\n    const major = (payload[at] & 0b1110_0000) >> 5;\n    const minor = payload[at] & 0b0001_1111;\n    switch (major) {\n        case majorUint64:\n        case majorNegativeInt64:\n        case majorTag:\n            let unsignedInt;\n            let offset;\n            if (minor < 24) {\n                unsignedInt = minor;\n                offset = 1;\n            }\n            else {\n                switch (minor) {\n                    case extendedOneByte:\n                    case extendedFloat16:\n                    case extendedFloat32:\n                    case extendedFloat64:\n                        const countLength = minorValueToArgumentLength[minor];\n                        const countOffset = (countLength + 1);\n                        offset = countOffset;\n                        if (to - at < countOffset) {\n                            throw new Error(`countLength ${countLength} greater than remaining buf len.`);\n                        }\n                        const countIndex = at + 1;\n                        if (countLength === 1) {\n                            unsignedInt = payload[countIndex];\n                        }\n                        else if (countLength === 2) {\n                            unsignedInt = dataView.getUint16(countIndex);\n                        }\n                        else if (countLength === 4) {\n                            unsignedInt = dataView.getUint32(countIndex);\n                        }\n                        else {\n                            unsignedInt = dataView.getBigUint64(countIndex);\n                        }\n                        break;\n                    default:\n                        throw new Error(`unexpected minor value ${minor}.`);\n                }\n            }\n            if (major === majorUint64) {\n                _offset = offset;\n                return castBigInt(unsignedInt);\n            }\n            else if (major === majorNegativeInt64) {\n                let negativeInt;\n                if (typeof unsignedInt === \"bigint\") {\n                    negativeInt = BigInt(-1) - unsignedInt;\n                }\n                else {\n                    negativeInt = -1 - unsignedInt;\n                }\n                _offset = offset;\n                return castBigInt(negativeInt);\n            }\n            else {\n                if (minor === 2 || minor === 3) {\n                    const length = decodeCount(at + offset, to);\n                    let b = BigInt(0);\n                    const start = at + offset + _offset;\n                    for (let i = start; i < start + length; ++i) {\n                        b = (b << BigInt(8)) | BigInt(payload[i]);\n                    }\n                    _offset = offset + _offset + length;\n                    return minor === 3 ? -b - BigInt(1) : b;\n                }\n                else if (minor === 4) {\n                    const decimalFraction = decode(at + offset, to);\n                    const [exponent, mantissa] = decimalFraction;\n                    const normalizer = mantissa < 0 ? -1 : 1;\n                    const mantissaStr = \"0\".repeat(Math.abs(exponent) + 1) + String(BigInt(normalizer) * BigInt(mantissa));\n                    let numericString;\n                    const sign = mantissa < 0 ? \"-\" : \"\";\n                    numericString =\n                        exponent === 0\n                            ? mantissaStr\n                            : mantissaStr.slice(0, mantissaStr.length + exponent) + \".\" + mantissaStr.slice(exponent);\n                    numericString = numericString.replace(/^0+/g, \"\");\n                    if (numericString === \"\") {\n                        numericString = \"0\";\n                    }\n                    if (numericString[0] === \".\") {\n                        numericString = \"0\" + numericString;\n                    }\n                    numericString = sign + numericString;\n                    _offset = offset + _offset;\n                    return nv(numericString);\n                }\n                else {\n                    const value = decode(at + offset, to);\n                    const valueOffset = _offset;\n                    _offset = offset + valueOffset;\n                    return tag({ tag: castBigInt(unsignedInt), value });\n                }\n            }\n        case majorUtf8String:\n        case majorMap:\n        case majorList:\n        case majorUnstructuredByteString:\n            if (minor === minorIndefinite) {\n                switch (major) {\n                    case majorUtf8String:\n                        return decodeUtf8StringIndefinite(at, to);\n                    case majorMap:\n                        return decodeMapIndefinite(at, to);\n                    case majorList:\n                        return decodeListIndefinite(at, to);\n                    case majorUnstructuredByteString:\n                        return decodeUnstructuredByteStringIndefinite(at, to);\n                }\n            }\n            else {\n                switch (major) {\n                    case majorUtf8String:\n                        return decodeUtf8String(at, to);\n                    case majorMap:\n                        return decodeMap(at, to);\n                    case majorList:\n                        return decodeList(at, to);\n                    case majorUnstructuredByteString:\n                        return decodeUnstructuredByteString(at, to);\n                }\n            }\n        default:\n            return decodeSpecial(at, to);\n    }\n}\nfunction bytesToUtf8(bytes, at, to) {\n    if (USE_BUFFER && bytes.constructor?.name === \"Buffer\") {\n        return bytes.toString(\"utf-8\", at, to);\n    }\n    if (textDecoder) {\n        return textDecoder.decode(bytes.subarray(at, to));\n    }\n    return toUtf8(bytes.subarray(at, to));\n}\nfunction demote(bigInteger) {\n    const num = Number(bigInteger);\n    if (num < Number.MIN_SAFE_INTEGER || Number.MAX_SAFE_INTEGER < num) {\n        console.warn(new Error(`@smithy/core/cbor - truncating BigInt(${bigInteger}) to ${num} with loss of precision.`));\n    }\n    return num;\n}\nconst minorValueToArgumentLength = {\n    [extendedOneByte]: 1,\n    [extendedFloat16]: 2,\n    [extendedFloat32]: 4,\n    [extendedFloat64]: 8,\n};\nexport function bytesToFloat16(a, b) {\n    const sign = a >> 7;\n    const exponent = (a & 0b0111_1100) >> 2;\n    const fraction = ((a & 0b0000_0011) << 8) | b;\n    const scalar = sign === 0 ? 1 : -1;\n    let exponentComponent;\n    let summation;\n    if (exponent === 0b00000) {\n        if (fraction === 0b00000_00000) {\n            return 0;\n        }\n        else {\n            exponentComponent = Math.pow(2, 1 - 15);\n            summation = 0;\n        }\n    }\n    else if (exponent === 0b11111) {\n        if (fraction === 0b00000_00000) {\n            return scalar * Infinity;\n        }\n        else {\n            return NaN;\n        }\n    }\n    else {\n        exponentComponent = Math.pow(2, exponent - 15);\n        summation = 1;\n    }\n    summation += fraction / 1024;\n    return scalar * (exponentComponent * summation);\n}\nfunction decodeCount(at, to) {\n    const minor = payload[at] & 0b0001_1111;\n    if (minor < 24) {\n        _offset = 1;\n        return minor;\n    }\n    if (minor === extendedOneByte ||\n        minor === extendedFloat16 ||\n        minor === extendedFloat32 ||\n        minor === extendedFloat64) {\n        const countLength = minorValueToArgumentLength[minor];\n        _offset = (countLength + 1);\n        if (to - at < _offset) {\n            throw new Error(`countLength ${countLength} greater than remaining buf len.`);\n        }\n        const countIndex = at + 1;\n        if (countLength === 1) {\n            return payload[countIndex];\n        }\n        else if (countLength === 2) {\n            return dataView.getUint16(countIndex);\n        }\n        else if (countLength === 4) {\n            return dataView.getUint32(countIndex);\n        }\n        return demote(dataView.getBigUint64(countIndex));\n    }\n    throw new Error(`unexpected minor value ${minor}.`);\n}\nfunction decodeUtf8String(at, to) {\n    const length = decodeCount(at, to);\n    const offset = _offset;\n    at += offset;\n    if (to - at < length) {\n        throw new Error(`string len ${length} greater than remaining buf len.`);\n    }\n    const value = bytesToUtf8(payload, at, at + length);\n    _offset = offset + length;\n    return value;\n}\nfunction decodeUtf8StringIndefinite(at, to) {\n    at += 1;\n    const vector = [];\n    for (const base = at; at < to;) {\n        if (payload[at] === 0b1111_1111) {\n            const data = alloc(vector.length);\n            data.set(vector, 0);\n            _offset = at - base + 2;\n            return bytesToUtf8(data, 0, data.length);\n        }\n        const major = (payload[at] & 0b1110_0000) >> 5;\n        const minor = payload[at] & 0b0001_1111;\n        if (major !== majorUtf8String) {\n            throw new Error(`unexpected major type ${major} in indefinite string.`);\n        }\n        if (minor === minorIndefinite) {\n            throw new Error(\"nested indefinite string.\");\n        }\n        const bytes = decodeUnstructuredByteString(at, to);\n        const length = _offset;\n        at += length;\n        for (let i = 0; i < bytes.length; ++i) {\n            vector.push(bytes[i]);\n        }\n    }\n    throw new Error(\"expected break marker.\");\n}\nfunction decodeUnstructuredByteString(at, to) {\n    const length = decodeCount(at, to);\n    const offset = _offset;\n    at += offset;\n    if (to - at < length) {\n        throw new Error(`unstructured byte string len ${length} greater than remaining buf len.`);\n    }\n    const value = payload.subarray(at, at + length);\n    _offset = offset + length;\n    return value;\n}\nfunction decodeUnstructuredByteStringIndefinite(at, to) {\n    at += 1;\n    const vector = [];\n    for (const base = at; at < to;) {\n        if (payload[at] === 0b1111_1111) {\n            const data = alloc(vector.length);\n            data.set(vector, 0);\n            _offset = at - base + 2;\n            return data;\n        }\n        const major = (payload[at] & 0b1110_0000) >> 5;\n        const minor = payload[at] & 0b0001_1111;\n        if (major !== majorUnstructuredByteString) {\n            throw new Error(`unexpected major type ${major} in indefinite string.`);\n        }\n        if (minor === minorIndefinite) {\n            throw new Error(\"nested indefinite string.\");\n        }\n        const bytes = decodeUnstructuredByteString(at, to);\n        const length = _offset;\n        at += length;\n        for (let i = 0; i < bytes.length; ++i) {\n            vector.push(bytes[i]);\n        }\n    }\n    throw new Error(\"expected break marker.\");\n}\nfunction decodeList(at, to) {\n    const listDataLength = decodeCount(at, to);\n    const offset = _offset;\n    at += offset;\n    const base = at;\n    const list = Array(listDataLength);\n    for (let i = 0; i < listDataLength; ++i) {\n        const item = decode(at, to);\n        const itemOffset = _offset;\n        list[i] = item;\n        at += itemOffset;\n    }\n    _offset = offset + (at - base);\n    return list;\n}\nfunction decodeListIndefinite(at, to) {\n    at += 1;\n    const list = [];\n    for (const base = at; at < to;) {\n        if (payload[at] === 0b1111_1111) {\n            _offset = at - base + 2;\n            return list;\n        }\n        const item = decode(at, to);\n        const n = _offset;\n        at += n;\n        list.push(item);\n    }\n    throw new Error(\"expected break marker.\");\n}\nfunction decodeMap(at, to) {\n    const mapDataLength = decodeCount(at, to);\n    const offset = _offset;\n    at += offset;\n    const base = at;\n    const map = {};\n    for (let i = 0; i < mapDataLength; ++i) {\n        if (at >= to) {\n            throw new Error(\"unexpected end of map payload.\");\n        }\n        const major = (payload[at] & 0b1110_0000) >> 5;\n        if (major !== majorUtf8String) {\n            throw new Error(`unexpected major type ${major} for map key at index ${at}.`);\n        }\n        const key = decode(at, to);\n        at += _offset;\n        const value = decode(at, to);\n        at += _offset;\n        map[key] = value;\n    }\n    _offset = offset + (at - base);\n    return map;\n}\nfunction decodeMapIndefinite(at, to) {\n    at += 1;\n    const base = at;\n    const map = {};\n    for (; at < to;) {\n        if (at >= to) {\n            throw new Error(\"unexpected end of map payload.\");\n        }\n        if (payload[at] === 0b1111_1111) {\n            _offset = at - base + 2;\n            return map;\n        }\n        const major = (payload[at] & 0b1110_0000) >> 5;\n        if (major !== majorUtf8String) {\n            throw new Error(`unexpected major type ${major} for map key.`);\n        }\n        const key = decode(at, to);\n        at += _offset;\n        const value = decode(at, to);\n        at += _offset;\n        map[key] = value;\n    }\n    throw new Error(\"expected break marker.\");\n}\nfunction decodeSpecial(at, to) {\n    const minor = payload[at] & 0b0001_1111;\n    switch (minor) {\n        case specialTrue:\n        case specialFalse:\n            _offset = 1;\n            return minor === specialTrue;\n        case specialNull:\n            _offset = 1;\n            return null;\n        case specialUndefined:\n            _offset = 1;\n            return null;\n        case extendedFloat16:\n            if (to - at < 3) {\n                throw new Error(\"incomplete float16 at end of buf.\");\n            }\n            _offset = 3;\n            return bytesToFloat16(payload[at + 1], payload[at + 2]);\n        case extendedFloat32:\n            if (to - at < 5) {\n                throw new Error(\"incomplete float32 at end of buf.\");\n            }\n            _offset = 5;\n            return dataView.getFloat32(at + 1);\n        case extendedFloat64:\n            if (to - at < 9) {\n                throw new Error(\"incomplete float64 at end of buf.\");\n            }\n            _offset = 9;\n            return dataView.getFloat64(at + 1);\n        default:\n            throw new Error(`unexpected minor value ${minor}.`);\n    }\n}\nfunction castBigInt(bigInt) {\n    if (typeof bigInt === \"number\") {\n        return bigInt;\n    }\n    const num = Number(bigInt);\n    if (Number.MIN_SAFE_INTEGER <= num && num <= Number.MAX_SAFE_INTEGER) {\n        return num;\n    }\n    return bigInt;\n}\n", "import { NumericValue } from \"@smithy/core/serde\";\nimport { fromUtf8 } from \"@smithy/util-utf8\";\nimport { alloc, extendedFloat16, extendedFloat32, extendedFloat64, majorList, majorMap, majorNegativeInt64, majorSpecial, majorTag, majorUint64, majorUnstructuredByteString, majorUtf8String, specialFalse, specialNull, specialTrue, tagSymbol, } from \"./cbor-types\";\nconst USE_BUFFER = typeof Buffer !== \"undefined\";\nconst initialSize = 2048;\nlet data = alloc(initialSize);\nlet dataView = new DataView(data.buffer, data.byteOffset, data.byteLength);\nlet cursor = 0;\nfunction ensureSpace(bytes) {\n    const remaining = data.byteLength - cursor;\n    if (remaining < bytes) {\n        if (cursor < 16_000_000) {\n            resize(Math.max(data.byteLength * 4, data.byteLength + bytes));\n        }\n        else {\n            resize(data.byteLength + bytes + 16_000_000);\n        }\n    }\n}\nexport function toUint8Array() {\n    const out = alloc(cursor);\n    out.set(data.subarray(0, cursor), 0);\n    cursor = 0;\n    return out;\n}\nexport function resize(size) {\n    const old = data;\n    data = alloc(size);\n    if (old) {\n        if (old.copy) {\n            old.copy(data, 0, 0, old.byteLength);\n        }\n        else {\n            data.set(old, 0);\n        }\n    }\n    dataView = new DataView(data.buffer, data.byteOffset, data.byteLength);\n}\nfunction encodeHeader(major, value) {\n    if (value < 24) {\n        data[cursor++] = (major << 5) | value;\n    }\n    else if (value < 1 << 8) {\n        data[cursor++] = (major << 5) | 24;\n        data[cursor++] = value;\n    }\n    else if (value < 1 << 16) {\n        data[cursor++] = (major << 5) | extendedFloat16;\n        dataView.setUint16(cursor, value);\n        cursor += 2;\n    }\n    else if (value < 2 ** 32) {\n        data[cursor++] = (major << 5) | extendedFloat32;\n        dataView.setUint32(cursor, value);\n        cursor += 4;\n    }\n    else {\n        data[cursor++] = (major << 5) | extendedFloat64;\n        dataView.setBigUint64(cursor, typeof value === \"bigint\" ? value : BigInt(value));\n        cursor += 8;\n    }\n}\nexport function encode(_input) {\n    const encodeStack = [_input];\n    while (encodeStack.length) {\n        const input = encodeStack.pop();\n        ensureSpace(typeof input === \"string\" ? input.length * 4 : 64);\n        if (typeof input === \"string\") {\n            if (USE_BUFFER) {\n                encodeHeader(majorUtf8String, Buffer.byteLength(input));\n                cursor += data.write(input, cursor);\n            }\n            else {\n                const bytes = fromUtf8(input);\n                encodeHeader(majorUtf8String, bytes.byteLength);\n                data.set(bytes, cursor);\n                cursor += bytes.byteLength;\n            }\n            continue;\n        }\n        else if (typeof input === \"number\") {\n            if (Number.isInteger(input)) {\n                const nonNegative = input >= 0;\n                const major = nonNegative ? majorUint64 : majorNegativeInt64;\n                const value = nonNegative ? input : -input - 1;\n                if (value < 24) {\n                    data[cursor++] = (major << 5) | value;\n                }\n                else if (value < 256) {\n                    data[cursor++] = (major << 5) | 24;\n                    data[cursor++] = value;\n                }\n                else if (value < 65536) {\n                    data[cursor++] = (major << 5) | extendedFloat16;\n                    data[cursor++] = value >> 8;\n                    data[cursor++] = value;\n                }\n                else if (value < 4294967296) {\n                    data[cursor++] = (major << 5) | extendedFloat32;\n                    dataView.setUint32(cursor, value);\n                    cursor += 4;\n                }\n                else {\n                    data[cursor++] = (major << 5) | extendedFloat64;\n                    dataView.setBigUint64(cursor, BigInt(value));\n                    cursor += 8;\n                }\n                continue;\n            }\n            data[cursor++] = (majorSpecial << 5) | extendedFloat64;\n            dataView.setFloat64(cursor, input);\n            cursor += 8;\n            continue;\n        }\n        else if (typeof input === \"bigint\") {\n            const nonNegative = input >= 0;\n            const major = nonNegative ? majorUint64 : majorNegativeInt64;\n            const value = nonNegative ? input : -input - BigInt(1);\n            const n = Number(value);\n            if (n < 24) {\n                data[cursor++] = (major << 5) | n;\n            }\n            else if (n < 256) {\n                data[cursor++] = (major << 5) | 24;\n                data[cursor++] = n;\n            }\n            else if (n < 65536) {\n                data[cursor++] = (major << 5) | extendedFloat16;\n                data[cursor++] = n >> 8;\n                data[cursor++] = n & 0b1111_1111;\n            }\n            else if (n < 4294967296) {\n                data[cursor++] = (major << 5) | extendedFloat32;\n                dataView.setUint32(cursor, n);\n                cursor += 4;\n            }\n            else if (value < BigInt(\"18446744073709551616\")) {\n                data[cursor++] = (major << 5) | extendedFloat64;\n                dataView.setBigUint64(cursor, value);\n                cursor += 8;\n            }\n            else {\n                const binaryBigInt = value.toString(2);\n                const bigIntBytes = new Uint8Array(Math.ceil(binaryBigInt.length / 8));\n                let b = value;\n                let i = 0;\n                while (bigIntBytes.byteLength - ++i >= 0) {\n                    bigIntBytes[bigIntBytes.byteLength - i] = Number(b & BigInt(255));\n                    b >>= BigInt(8);\n                }\n                ensureSpace(bigIntBytes.byteLength * 2);\n                data[cursor++] = nonNegative ? 0b110_00010 : 0b110_00011;\n                if (USE_BUFFER) {\n                    encodeHeader(majorUnstructuredByteString, Buffer.byteLength(bigIntBytes));\n                }\n                else {\n                    encodeHeader(majorUnstructuredByteString, bigIntBytes.byteLength);\n                }\n                data.set(bigIntBytes, cursor);\n                cursor += bigIntBytes.byteLength;\n            }\n            continue;\n        }\n        else if (input === null) {\n            data[cursor++] = (majorSpecial << 5) | specialNull;\n            continue;\n        }\n        else if (typeof input === \"boolean\") {\n            data[cursor++] = (majorSpecial << 5) | (input ? specialTrue : specialFalse);\n            continue;\n        }\n        else if (typeof input === \"undefined\") {\n            throw new Error(\"@smithy/core/cbor: client may not serialize undefined value.\");\n        }\n        else if (Array.isArray(input)) {\n            for (let i = input.length - 1; i >= 0; --i) {\n                encodeStack.push(input[i]);\n            }\n            encodeHeader(majorList, input.length);\n            continue;\n        }\n        else if (typeof input.byteLength === \"number\") {\n            ensureSpace(input.length * 2);\n            encodeHeader(majorUnstructuredByteString, input.length);\n            data.set(input, cursor);\n            cursor += input.byteLength;\n            continue;\n        }\n        else if (typeof input === \"object\") {\n            if (input instanceof NumericValue) {\n                const decimalIndex = input.string.indexOf(\".\");\n                const exponent = decimalIndex === -1 ? 0 : decimalIndex - input.string.length + 1;\n                const mantissa = BigInt(input.string.replace(\".\", \"\"));\n                data[cursor++] = 0b110_00100;\n                encodeStack.push(mantissa);\n                encodeStack.push(exponent);\n                encodeHeader(majorList, 2);\n                continue;\n            }\n            if (input[tagSymbol]) {\n                if (\"tag\" in input && \"value\" in input) {\n                    encodeStack.push(input.value);\n                    encodeHeader(majorTag, input.tag);\n                    continue;\n                }\n                else {\n                    throw new Error(\"tag encountered with missing fields, need 'tag' and 'value', found: \" + JSON.stringify(input));\n                }\n            }\n            const keys = Object.keys(input);\n            for (let i = keys.length - 1; i >= 0; --i) {\n                const key = keys[i];\n                encodeStack.push(input[key]);\n                encodeStack.push(key);\n            }\n            encodeHeader(majorMap, keys.length);\n            continue;\n        }\n        throw new Error(`data type ${input?.constructor?.name ?? typeof input} not compatible for encoding.`);\n    }\n}\n", "import { decode, setPayload } from \"./cbor-decode\";\nimport { encode, resize, toUint8Array } from \"./cbor-encode\";\nexport const cbor = {\n    deserialize(payload) {\n        setPayload(payload);\n        return decode(0, payload.length);\n    },\n    serialize(input) {\n        try {\n            encode(input);\n            return toUint8Array();\n        }\n        catch (e) {\n            toUint8Array();\n            throw e;\n        }\n    },\n    resizeEncodingBuffer(size) {\n        resize(size);\n    },\n};\n", "import { collectBody } from \"@smithy/core/protocols\";\nimport { HttpRequest as __HttpRequest } from \"@smithy/protocol-http\";\nimport { calculateBodyLength } from \"@smithy/util-body-length-browser\";\nimport { cbor } from \"./cbor\";\nimport { tag } from \"./cbor-types\";\nexport const parseCborBody = (streamBody, context) => {\n    return collectBody(streamBody, context).then(async (bytes) => {\n        if (bytes.length) {\n            try {\n                return cbor.deserialize(bytes);\n            }\n            catch (e) {\n                Object.defineProperty(e, \"$responseBodyText\", {\n                    value: context.utf8Encoder(bytes),\n                });\n                throw e;\n            }\n        }\n        return {};\n    });\n};\nexport const dateToTag = (date) => {\n    return tag({\n        tag: 1,\n        value: date.getTime() / 1000,\n    });\n};\nexport const parseCborErrorBody = async (errorBody, context) => {\n    const value = await parseCborBody(errorBody, context);\n    value.message = value.message ?? value.Message;\n    return value;\n};\nexport const loadSmithyRpcV2CborErrorCode = (output, data) => {\n    const sanitizeErrorCode = (rawValue) => {\n        let cleanValue = rawValue;\n        if (typeof cleanValue === \"number\") {\n            cleanValue = cleanValue.toString();\n        }\n        if (cleanValue.indexOf(\",\") >= 0) {\n            cleanValue = cleanValue.split(\",\")[0];\n        }\n        if (cleanValue.indexOf(\":\") >= 0) {\n            cleanValue = cleanValue.split(\":\")[0];\n        }\n        if (cleanValue.indexOf(\"#\") >= 0) {\n            cleanValue = cleanValue.split(\"#\")[1];\n        }\n        return cleanValue;\n    };\n    if (data[\"__type\"] !== undefined) {\n        return sanitizeErrorCode(data[\"__type\"]);\n    }\n    const codeKey = Object.keys(data).find((key) => key.toLowerCase() === \"code\");\n    if (codeKey && data[codeKey] !== undefined) {\n        return sanitizeErrorCode(data[codeKey]);\n    }\n};\nexport const checkCborResponse = (response) => {\n    if (String(response.headers[\"smithy-protocol\"]).toLowerCase() !== \"rpc-v2-cbor\") {\n        throw new Error(\"Malformed RPCv2 CBOR response, status: \" + response.statusCode);\n    }\n};\nexport const buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const contents = {\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        path: basePath.endsWith(\"/\") ? basePath.slice(0, -1) + path : basePath + path,\n        headers: {\n            ...headers,\n        },\n    };\n    if (resolvedHostname !== undefined) {\n        contents.hostname = resolvedHostname;\n    }\n    if (body !== undefined) {\n        contents.body = body;\n        try {\n            contents.headers[\"content-length\"] = String(calculateBodyLength(body));\n        }\n        catch (e) { }\n    }\n    return new __HttpRequest(contents);\n};\n", "import { NormalizedSchema } from \"@smithy/core/schema\";\nimport { _parseEpochTimestamp, generateIdempotencyToken } from \"@smithy/core/serde\";\nimport { fromBase64 } from \"@smithy/util-base64\";\nimport { cbor } from \"./cbor\";\nimport { dateToTag } from \"./parseCborBody\";\nexport class CborCodec {\n    serdeContext;\n    createSerializer() {\n        const serializer = new CborShapeSerializer();\n        serializer.setSerdeContext(this.serdeContext);\n        return serializer;\n    }\n    createDeserializer() {\n        const deserializer = new CborShapeDeserializer();\n        deserializer.setSerdeContext(this.serdeContext);\n        return deserializer;\n    }\n    setSerdeContext(serdeContext) {\n        this.serdeContext = serdeContext;\n    }\n}\nexport class CborShapeSerializer {\n    serdeContext;\n    value;\n    setSerdeContext(serdeContext) {\n        this.serdeContext = serdeContext;\n    }\n    write(schema, value) {\n        this.value = this.serialize(schema, value);\n    }\n    serialize(schema, source) {\n        const ns = NormalizedSchema.of(schema);\n        if (source == null) {\n            if (ns.isIdempotencyToken()) {\n                return generateIdempotencyToken();\n            }\n            return source;\n        }\n        if (ns.isBlobSchema()) {\n            if (typeof source === \"string\") {\n                return (this.serdeContext?.base64Decoder ?? fromBase64)(source);\n            }\n            return source;\n        }\n        if (ns.isTimestampSchema()) {\n            if (typeof source === \"number\" || typeof source === \"bigint\") {\n                return dateToTag(new Date((Number(source) / 1000) | 0));\n            }\n            return dateToTag(source);\n        }\n        if (typeof source === \"function\" || typeof source === \"object\") {\n            const sourceObject = source;\n            if (ns.isListSchema() && Array.isArray(sourceObject)) {\n                const sparse = !!ns.getMergedTraits().sparse;\n                const newArray = [];\n                let i = 0;\n                for (const item of sourceObject) {\n                    const value = this.serialize(ns.getValueSchema(), item);\n                    if (value != null || sparse) {\n                        newArray[i++] = value;\n                    }\n                }\n                return newArray;\n            }\n            if (sourceObject instanceof Date) {\n                return dateToTag(sourceObject);\n            }\n            const newObject = {};\n            if (ns.isMapSchema()) {\n                const sparse = !!ns.getMergedTraits().sparse;\n                for (const key of Object.keys(sourceObject)) {\n                    const value = this.serialize(ns.getValueSchema(), sourceObject[key]);\n                    if (value != null || sparse) {\n                        newObject[key] = value;\n                    }\n                }\n            }\n            else if (ns.isStructSchema()) {\n                for (const [key, memberSchema] of ns.structIterator()) {\n                    const value = this.serialize(memberSchema, sourceObject[key]);\n                    if (value != null) {\n                        newObject[key] = value;\n                    }\n                }\n            }\n            else if (ns.isDocumentSchema()) {\n                for (const key of Object.keys(sourceObject)) {\n                    newObject[key] = this.serialize(ns.getValueSchema(), sourceObject[key]);\n                }\n            }\n            return newObject;\n        }\n        return source;\n    }\n    flush() {\n        const buffer = cbor.serialize(this.value);\n        this.value = undefined;\n        return buffer;\n    }\n}\nexport class CborShapeDeserializer {\n    serdeContext;\n    setSerdeContext(serdeContext) {\n        this.serdeContext = serdeContext;\n    }\n    read(schema, bytes) {\n        const data = cbor.deserialize(bytes);\n        return this.readValue(schema, data);\n    }\n    readValue(_schema, value) {\n        const ns = NormalizedSchema.of(_schema);\n        if (ns.isTimestampSchema() && typeof value === \"number\") {\n            return _parseEpochTimestamp(value);\n        }\n        if (ns.isBlobSchema()) {\n            if (typeof value === \"string\") {\n                return (this.serdeContext?.base64Decoder ?? fromBase64)(value);\n            }\n            return value;\n        }\n        if (typeof value === \"undefined\" ||\n            typeof value === \"boolean\" ||\n            typeof value === \"number\" ||\n            typeof value === \"string\" ||\n            typeof value === \"bigint\" ||\n            typeof value === \"symbol\") {\n            return value;\n        }\n        else if (typeof value === \"function\" || typeof value === \"object\") {\n            if (value === null) {\n                return null;\n            }\n            if (\"byteLength\" in value) {\n                return value;\n            }\n            if (value instanceof Date) {\n                return value;\n            }\n            if (ns.isDocumentSchema()) {\n                return value;\n            }\n            if (ns.isListSchema()) {\n                const newArray = [];\n                const memberSchema = ns.getValueSchema();\n                const sparse = !!ns.getMergedTraits().sparse;\n                for (const item of value) {\n                    const itemValue = this.readValue(memberSchema, item);\n                    if (itemValue != null || sparse) {\n                        newArray.push(itemValue);\n                    }\n                }\n                return newArray;\n            }\n            const newObject = {};\n            if (ns.isMapSchema()) {\n                const sparse = !!ns.getMergedTraits().sparse;\n                const targetSchema = ns.getValueSchema();\n                for (const key of Object.keys(value)) {\n                    const itemValue = this.readValue(targetSchema, value[key]);\n                    if (itemValue != null || sparse) {\n                        newObject[key] = itemValue;\n                    }\n                }\n            }\n            else if (ns.isStructSchema()) {\n                for (const [key, memberSchema] of ns.structIterator()) {\n                    newObject[key] = this.readValue(memberSchema, value[key]);\n                }\n            }\n            return newObject;\n        }\n        else {\n            return value;\n        }\n    }\n}\n", "import { RpcProtocol } from \"@smithy/core/protocols\";\nimport { deref, NormalizedSchema, TypeRegistry } from \"@smithy/core/schema\";\nimport { getSmithyContext } from \"@smithy/util-middleware\";\nimport { CborCodec } from \"./CborCodec\";\nimport { loadSmithyRpcV2CborErrorCode } from \"./parseCborBody\";\nexport class SmithyRpcV2CborProtocol extends RpcProtocol {\n    codec = new CborCodec();\n    serializer = this.codec.createSerializer();\n    deserializer = this.codec.createDeserializer();\n    constructor({ defaultNamespace }) {\n        super({ defaultNamespace });\n    }\n    getShapeId() {\n        return \"smithy.protocols#rpcv2Cbor\";\n    }\n    getPayloadCodec() {\n        return this.codec;\n    }\n    async serializeRequest(operationSchema, input, context) {\n        const request = await super.serializeRequest(operationSchema, input, context);\n        Object.assign(request.headers, {\n            \"content-type\": this.getDefaultContentType(),\n            \"smithy-protocol\": \"rpc-v2-cbor\",\n            accept: this.getDefaultContentType(),\n        });\n        if (deref(operationSchema.input) === \"unit\") {\n            delete request.body;\n            delete request.headers[\"content-type\"];\n        }\n        else {\n            if (!request.body) {\n                this.serializer.write(15, {});\n                request.body = this.serializer.flush();\n            }\n            try {\n                request.headers[\"content-length\"] = String(request.body.byteLength);\n            }\n            catch (e) { }\n        }\n        const { service, operation } = getSmithyContext(context);\n        const path = `/service/${service}/operation/${operation}`;\n        if (request.path.endsWith(\"/\")) {\n            request.path += path.slice(1);\n        }\n        else {\n            request.path += path;\n        }\n        return request;\n    }\n    async deserializeResponse(operationSchema, context, response) {\n        return super.deserializeResponse(operationSchema, context, response);\n    }\n    async handleError(operationSchema, context, response, dataObject, metadata) {\n        const errorName = loadSmithyRpcV2CborErrorCode(response, dataObject) ?? \"Unknown\";\n        let namespace = this.options.defaultNamespace;\n        if (errorName.includes(\"#\")) {\n            [namespace] = errorName.split(\"#\");\n        }\n        const errorMetadata = {\n            $metadata: metadata,\n            $response: response,\n            $fault: response.statusCode <= 500 ? \"client\" : \"server\",\n        };\n        const registry = TypeRegistry.for(namespace);\n        let errorSchema;\n        try {\n            errorSchema = registry.getSchema(errorName);\n        }\n        catch (e) {\n            if (dataObject.Message) {\n                dataObject.message = dataObject.Message;\n            }\n            const synthetic = TypeRegistry.for(\"smithy.ts.sdk.synthetic.\" + namespace);\n            const baseExceptionSchema = synthetic.getBaseException();\n            if (baseExceptionSchema) {\n                const ErrorCtor = synthetic.getErrorCtor(baseExceptionSchema);\n                throw Object.assign(new ErrorCtor({ name: errorName }), errorMetadata, dataObject);\n            }\n            throw Object.assign(new Error(errorName), errorMetadata, dataObject);\n        }\n        const ns = NormalizedSchema.of(errorSchema);\n        const ErrorCtor = registry.getErrorCtor(errorSchema);\n        const message = dataObject.message ?? dataObject.Message ?? \"Unknown\";\n        const exception = new ErrorCtor(message);\n        const output = {};\n        for (const [name, member] of ns.structIterator()) {\n            output[name] = this.deserializer.readValue(member, dataObject[name]);\n        }\n        throw Object.assign(exception, errorMetadata, {\n            $fault: ns.getMergedTraits().error,\n            message,\n        }, output);\n    }\n    getDefaultContentType() {\n        return \"application/cbor\";\n    }\n}\n", "export { cbor } from \"./cbor\";\nexport { tag, tagSymbol } from \"./cbor-types\";\nexport * from \"./parseCborBody\";\nexport * from \"./SmithyRpcV2CborProtocol\";\nexport * from \"./CborCodec\";\n", "import { TypeRegistry } from \"@smithy/core/schema\";\nexport class ProtocolLib {\n    resolveRestContentType(defaultContentType, inputSchema) {\n        const members = inputSchema.getMemberSchemas();\n        const httpPayloadMember = Object.values(members).find((m) => {\n            return !!m.getMergedTraits().httpPayload;\n        });\n        if (httpPayloadMember) {\n            const mediaType = httpPayloadMember.getMergedTraits().mediaType;\n            if (mediaType) {\n                return mediaType;\n            }\n            else if (httpPayloadMember.isStringSchema()) {\n                return \"text/plain\";\n            }\n            else if (httpPayloadMember.isBlobSchema()) {\n                return \"application/octet-stream\";\n            }\n            else {\n                return defaultContentType;\n            }\n        }\n        else if (!inputSchema.isUnitSchema()) {\n            const hasBody = Object.values(members).find((m) => {\n                const { httpQuery, httpQueryParams, httpHeader, httpLabel, httpPrefixHeaders } = m.getMergedTraits();\n                const noPrefixHeaders = httpPrefixHeaders === void 0;\n                return !httpQuery && !httpQueryParams && !httpHeader && !httpLabel && noPrefixHeaders;\n            });\n            if (hasBody) {\n                return defaultContentType;\n            }\n        }\n    }\n    async getErrorSchemaOrThrowBaseException(errorIdentifier, defaultNamespace, response, dataObject, metadata, getErrorSchema) {\n        let namespace = defaultNamespace;\n        let errorName = errorIdentifier;\n        if (errorIdentifier.includes(\"#\")) {\n            [namespace, errorName] = errorIdentifier.split(\"#\");\n        }\n        const errorMetadata = {\n            $metadata: metadata,\n            $response: response,\n            $fault: response.statusCode < 500 ? \"client\" : \"server\",\n        };\n        const registry = TypeRegistry.for(namespace);\n        try {\n            const errorSchema = getErrorSchema?.(registry, errorName) ?? registry.getSchema(errorIdentifier);\n            return { errorSchema, errorMetadata };\n        }\n        catch (e) {\n            dataObject.message = dataObject.message ?? dataObject.Message ?? \"UnknownError\";\n            const synthetic = TypeRegistry.for(\"smithy.ts.sdk.synthetic.\" + namespace);\n            const baseExceptionSchema = synthetic.getBaseException();\n            if (baseExceptionSchema) {\n                const ErrorCtor = synthetic.getErrorCtor(baseExceptionSchema) ?? Error;\n                throw Object.assign(new ErrorCtor({ name: errorName }), errorMetadata, dataObject);\n            }\n            throw Object.assign(new Error(errorName), errorMetadata, dataObject);\n        }\n    }\n    setQueryCompatError(output, response) {\n        const queryErrorHeader = response.headers?.[\"x-amzn-query-error\"];\n        if (output !== undefined && queryErrorHeader != null) {\n            const [Code, Type] = queryErrorHeader.split(\";\");\n            const entries = Object.entries(output);\n            const Error = {\n                Code,\n                Type,\n            };\n            Object.assign(output, Error);\n            for (const [k, v] of entries) {\n                Error[k] = v;\n            }\n            delete Error.__type;\n            output.Error = Error;\n        }\n    }\n    queryCompatOutput(queryCompatErrorData, errorData) {\n        if (queryCompatErrorData.Error) {\n            errorData.Error = queryCompatErrorData.Error;\n        }\n        if (queryCompatErrorData.Type) {\n            errorData.Type = queryCompatErrorData.Type;\n        }\n        if (queryCompatErrorData.Code) {\n            errorData.Code = queryCompatErrorData.Code;\n        }\n    }\n}\n", "import { loadSmithyRpcV2CborErrorCode, SmithyRpcV2CborProtocol } from \"@smithy/core/cbor\";\nimport { NormalizedSchema, TypeRegistry } from \"@smithy/core/schema\";\nimport { ProtocolLib } from \"../ProtocolLib\";\nexport class AwsSmithyRpcV2CborProtocol extends SmithyRpcV2CborProtocol {\n    awsQueryCompatible;\n    mixin = new ProtocolLib();\n    constructor({ defaultNamespace, awsQueryCompatible, }) {\n        super({ defaultNamespace });\n        this.awsQueryCompatible = !!awsQueryCompatible;\n    }\n    async serializeRequest(operationSchema, input, context) {\n        const request = await super.serializeRequest(operationSchema, input, context);\n        if (this.awsQueryCompatible) {\n            request.headers[\"x-amzn-query-mode\"] = \"true\";\n        }\n        return request;\n    }\n    async handleError(operationSchema, context, response, dataObject, metadata) {\n        if (this.awsQueryCompatible) {\n            this.mixin.setQueryCompatError(dataObject, response);\n        }\n        const errorName = loadSmithyRpcV2CborErrorCode(response, dataObject) ?? \"Unknown\";\n        const { errorSchema, errorMetadata } = await this.mixin.getErrorSchemaOrThrowBaseException(errorName, this.options.defaultNamespace, response, dataObject, metadata);\n        const ns = NormalizedSchema.of(errorSchema);\n        const message = dataObject.message ?? dataObject.Message ?? \"Unknown\";\n        const ErrorCtor = TypeRegistry.for(errorSchema.namespace).getErrorCtor(errorSchema) ?? Error;\n        const exception = new ErrorCtor(message);\n        const output = {};\n        for (const [name, member] of ns.structIterator()) {\n            output[name] = this.deserializer.readValue(member, dataObject[name]);\n        }\n        if (this.awsQueryCompatible) {\n            this.mixin.queryCompatOutput(dataObject, output);\n        }\n        throw Object.assign(exception, errorMetadata, {\n            $fault: ns.getMergedTraits().error,\n            message,\n        }, output);\n    }\n}\n", "export const _toStr = (val) => {\n    if (val == null) {\n        return val;\n    }\n    if (typeof val === \"number\" || typeof val === \"bigint\") {\n        const warning = new Error(`Received number ${val} where a string was expected.`);\n        warning.name = \"Warning\";\n        console.warn(warning);\n        return String(val);\n    }\n    if (typeof val === \"boolean\") {\n        const warning = new Error(`Received boolean ${val} where a string was expected.`);\n        warning.name = \"Warning\";\n        console.warn(warning);\n        return String(val);\n    }\n    return val;\n};\nexport const _toBool = (val) => {\n    if (val == null) {\n        return val;\n    }\n    if (typeof val === \"number\") {\n    }\n    if (typeof val === \"string\") {\n        const lowercase = val.toLowerCase();\n        if (val !== \"\" && lowercase !== \"false\" && lowercase !== \"true\") {\n            const warning = new Error(`Received string \"${val}\" where a boolean was expected.`);\n            warning.name = \"Warning\";\n            console.warn(warning);\n        }\n        return val !== \"\" && lowercase !== \"false\";\n    }\n    return val;\n};\nexport const _toNum = (val) => {\n    if (val == null) {\n        return val;\n    }\n    if (typeof val === \"boolean\") {\n    }\n    if (typeof val === \"string\") {\n        const num = Number(val);\n        if (num.toString() !== val) {\n            const warning = new Error(`Received string \"${val}\" where a number was expected.`);\n            warning.name = \"Warning\";\n            console.warn(warning);\n            return val;\n        }\n        return num;\n    }\n    return val;\n};\n", "export class SerdeContextConfig {\n    serdeContext;\n    setSerdeContext(serdeContext) {\n        this.serdeContext = serdeContext;\n    }\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromBase64 = void 0;\nconst util_buffer_from_1 = require(\"@smithy/util-buffer-from\");\nconst BASE64_REGEX = /^[A-Za-z0-9+/]*={0,2}$/;\nconst fromBase64 = (input) => {\n    if ((input.length * 3) % 4 !== 0) {\n        throw new TypeError(`Incorrect padding on base64 string.`);\n    }\n    if (!BASE64_REGEX.exec(input)) {\n        throw new TypeError(`Invalid base64 string.`);\n    }\n    const buffer = (0, util_buffer_from_1.fromString)(input, \"base64\");\n    return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n};\nexports.fromBase64 = fromBase64;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toBase64 = void 0;\nconst util_buffer_from_1 = require(\"@smithy/util-buffer-from\");\nconst util_utf8_1 = require(\"@smithy/util-utf8\");\nconst toBase64 = (_input) => {\n    let input;\n    if (typeof _input === \"string\") {\n        input = (0, util_utf8_1.fromUtf8)(_input);\n    }\n    else {\n        input = _input;\n    }\n    if (typeof input !== \"object\" || typeof input.byteOffset !== \"number\" || typeof input.byteLength !== \"number\") {\n        throw new Error(\"@smithy/util-base64: toBase64 encoder function only accepts string | Uint8Array.\");\n    }\n    return (0, util_buffer_from_1.fromArrayBuffer)(input.buffer, input.byteOffset, input.byteLength).toString(\"base64\");\n};\nexports.toBase64 = toBase64;\n", "'use strict';\n\nvar fromBase64 = require('./fromBase64');\nvar toBase64 = require('./toBase64');\n\n\n\nObject.keys(fromBase64).forEach(function (k) {\n\tif (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () { return fromBase64[k]; }\n\t});\n});\nObject.keys(toBase64).forEach(function (k) {\n\tif (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () { return toBase64[k]; }\n\t});\n});\n", "import { NumericValue } from \"@smithy/core/serde\";\nexport function jsonReviver(key, value, context) {\n    if (context?.source) {\n        const numericString = context.source;\n        if (typeof value === \"number\") {\n            if (value > Number.MAX_SAFE_INTEGER || value < Number.MIN_SAFE_INTEGER || numericString !== String(value)) {\n                const isFractional = numericString.includes(\".\");\n                if (isFractional) {\n                    return new NumericValue(numericString, \"bigDecimal\");\n                }\n                else {\n                    return BigInt(numericString);\n                }\n            }\n        }\n    }\n    return value;\n}\n", "'use strict';\n\nconst getAllAliases = (name, aliases) => {\n    const _aliases = [];\n    if (name) {\n        _aliases.push(name);\n    }\n    if (aliases) {\n        for (const alias of aliases) {\n            _aliases.push(alias);\n        }\n    }\n    return _aliases;\n};\nconst getMiddlewareNameWithAliases = (name, aliases) => {\n    return `${name || \"anonymous\"}${aliases && aliases.length > 0 ? ` (a.k.a. ${aliases.join(\",\")})` : \"\"}`;\n};\nconst constructStack = () => {\n    let absoluteEntries = [];\n    let relativeEntries = [];\n    let identifyOnResolve = false;\n    const entriesNameSet = new Set();\n    const sort = (entries) => entries.sort((a, b) => stepWeights[b.step] - stepWeights[a.step] ||\n        priorityWeights[b.priority || \"normal\"] - priorityWeights[a.priority || \"normal\"]);\n    const removeByName = (toRemove) => {\n        let isRemoved = false;\n        const filterCb = (entry) => {\n            const aliases = getAllAliases(entry.name, entry.aliases);\n            if (aliases.includes(toRemove)) {\n                isRemoved = true;\n                for (const alias of aliases) {\n                    entriesNameSet.delete(alias);\n                }\n                return false;\n            }\n            return true;\n        };\n        absoluteEntries = absoluteEntries.filter(filterCb);\n        relativeEntries = relativeEntries.filter(filterCb);\n        return isRemoved;\n    };\n    const removeByReference = (toRemove) => {\n        let isRemoved = false;\n        const filterCb = (entry) => {\n            if (entry.middleware === toRemove) {\n                isRemoved = true;\n                for (const alias of getAllAliases(entry.name, entry.aliases)) {\n                    entriesNameSet.delete(alias);\n                }\n                return false;\n            }\n            return true;\n        };\n        absoluteEntries = absoluteEntries.filter(filterCb);\n        relativeEntries = relativeEntries.filter(filterCb);\n        return isRemoved;\n    };\n    const cloneTo = (toStack) => {\n        absoluteEntries.forEach((entry) => {\n            toStack.add(entry.middleware, { ...entry });\n        });\n        relativeEntries.forEach((entry) => {\n            toStack.addRelativeTo(entry.middleware, { ...entry });\n        });\n        toStack.identifyOnResolve?.(stack.identifyOnResolve());\n        return toStack;\n    };\n    const expandRelativeMiddlewareList = (from) => {\n        const expandedMiddlewareList = [];\n        from.before.forEach((entry) => {\n            if (entry.before.length === 0 && entry.after.length === 0) {\n                expandedMiddlewareList.push(entry);\n            }\n            else {\n                expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n            }\n        });\n        expandedMiddlewareList.push(from);\n        from.after.reverse().forEach((entry) => {\n            if (entry.before.length === 0 && entry.after.length === 0) {\n                expandedMiddlewareList.push(entry);\n            }\n            else {\n                expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n            }\n        });\n        return expandedMiddlewareList;\n    };\n    const getMiddlewareList = (debug = false) => {\n        const normalizedAbsoluteEntries = [];\n        const normalizedRelativeEntries = [];\n        const normalizedEntriesNameMap = {};\n        absoluteEntries.forEach((entry) => {\n            const normalizedEntry = {\n                ...entry,\n                before: [],\n                after: [],\n            };\n            for (const alias of getAllAliases(normalizedEntry.name, normalizedEntry.aliases)) {\n                normalizedEntriesNameMap[alias] = normalizedEntry;\n            }\n            normalizedAbsoluteEntries.push(normalizedEntry);\n        });\n        relativeEntries.forEach((entry) => {\n            const normalizedEntry = {\n                ...entry,\n                before: [],\n                after: [],\n            };\n            for (const alias of getAllAliases(normalizedEntry.name, normalizedEntry.aliases)) {\n                normalizedEntriesNameMap[alias] = normalizedEntry;\n            }\n            normalizedRelativeEntries.push(normalizedEntry);\n        });\n        normalizedRelativeEntries.forEach((entry) => {\n            if (entry.toMiddleware) {\n                const toMiddleware = normalizedEntriesNameMap[entry.toMiddleware];\n                if (toMiddleware === undefined) {\n                    if (debug) {\n                        return;\n                    }\n                    throw new Error(`${entry.toMiddleware} is not found when adding ` +\n                        `${getMiddlewareNameWithAliases(entry.name, entry.aliases)} ` +\n                        `middleware ${entry.relation} ${entry.toMiddleware}`);\n                }\n                if (entry.relation === \"after\") {\n                    toMiddleware.after.push(entry);\n                }\n                if (entry.relation === \"before\") {\n                    toMiddleware.before.push(entry);\n                }\n            }\n        });\n        const mainChain = sort(normalizedAbsoluteEntries)\n            .map(expandRelativeMiddlewareList)\n            .reduce((wholeList, expandedMiddlewareList) => {\n            wholeList.push(...expandedMiddlewareList);\n            return wholeList;\n        }, []);\n        return mainChain;\n    };\n    const stack = {\n        add: (middleware, options = {}) => {\n            const { name, override, aliases: _aliases } = options;\n            const entry = {\n                step: \"initialize\",\n                priority: \"normal\",\n                middleware,\n                ...options,\n            };\n            const aliases = getAllAliases(name, _aliases);\n            if (aliases.length > 0) {\n                if (aliases.some((alias) => entriesNameSet.has(alias))) {\n                    if (!override)\n                        throw new Error(`Duplicate middleware name '${getMiddlewareNameWithAliases(name, _aliases)}'`);\n                    for (const alias of aliases) {\n                        const toOverrideIndex = absoluteEntries.findIndex((entry) => entry.name === alias || entry.aliases?.some((a) => a === alias));\n                        if (toOverrideIndex === -1) {\n                            continue;\n                        }\n                        const toOverride = absoluteEntries[toOverrideIndex];\n                        if (toOverride.step !== entry.step || entry.priority !== toOverride.priority) {\n                            throw new Error(`\"${getMiddlewareNameWithAliases(toOverride.name, toOverride.aliases)}\" middleware with ` +\n                                `${toOverride.priority} priority in ${toOverride.step} step cannot ` +\n                                `be overridden by \"${getMiddlewareNameWithAliases(name, _aliases)}\" middleware with ` +\n                                `${entry.priority} priority in ${entry.step} step.`);\n                        }\n                        absoluteEntries.splice(toOverrideIndex, 1);\n                    }\n                }\n                for (const alias of aliases) {\n                    entriesNameSet.add(alias);\n                }\n            }\n            absoluteEntries.push(entry);\n        },\n        addRelativeTo: (middleware, options) => {\n            const { name, override, aliases: _aliases } = options;\n            const entry = {\n                middleware,\n                ...options,\n            };\n            const aliases = getAllAliases(name, _aliases);\n            if (aliases.length > 0) {\n                if (aliases.some((alias) => entriesNameSet.has(alias))) {\n                    if (!override)\n                        throw new Error(`Duplicate middleware name '${getMiddlewareNameWithAliases(name, _aliases)}'`);\n                    for (const alias of aliases) {\n                        const toOverrideIndex = relativeEntries.findIndex((entry) => entry.name === alias || entry.aliases?.some((a) => a === alias));\n                        if (toOverrideIndex === -1) {\n                            continue;\n                        }\n                        const toOverride = relativeEntries[toOverrideIndex];\n                        if (toOverride.toMiddleware !== entry.toMiddleware || toOverride.relation !== entry.relation) {\n                            throw new Error(`\"${getMiddlewareNameWithAliases(toOverride.name, toOverride.aliases)}\" middleware ` +\n                                `${toOverride.relation} \"${toOverride.toMiddleware}\" middleware cannot be overridden ` +\n                                `by \"${getMiddlewareNameWithAliases(name, _aliases)}\" middleware ${entry.relation} ` +\n                                `\"${entry.toMiddleware}\" middleware.`);\n                        }\n                        relativeEntries.splice(toOverrideIndex, 1);\n                    }\n                }\n                for (const alias of aliases) {\n                    entriesNameSet.add(alias);\n                }\n            }\n            relativeEntries.push(entry);\n        },\n        clone: () => cloneTo(constructStack()),\n        use: (plugin) => {\n            plugin.applyToStack(stack);\n        },\n        remove: (toRemove) => {\n            if (typeof toRemove === \"string\")\n                return removeByName(toRemove);\n            else\n                return removeByReference(toRemove);\n        },\n        removeByTag: (toRemove) => {\n            let isRemoved = false;\n            const filterCb = (entry) => {\n                const { tags, name, aliases: _aliases } = entry;\n                if (tags && tags.includes(toRemove)) {\n                    const aliases = getAllAliases(name, _aliases);\n                    for (const alias of aliases) {\n                        entriesNameSet.delete(alias);\n                    }\n                    isRemoved = true;\n                    return false;\n                }\n                return true;\n            };\n            absoluteEntries = absoluteEntries.filter(filterCb);\n            relativeEntries = relativeEntries.filter(filterCb);\n            return isRemoved;\n        },\n        concat: (from) => {\n            const cloned = cloneTo(constructStack());\n            cloned.use(from);\n            cloned.identifyOnResolve(identifyOnResolve || cloned.identifyOnResolve() || (from.identifyOnResolve?.() ?? false));\n            return cloned;\n        },\n        applyToStack: cloneTo,\n        identify: () => {\n            return getMiddlewareList(true).map((mw) => {\n                const step = mw.step ??\n                    mw.relation +\n                        \" \" +\n                        mw.toMiddleware;\n                return getMiddlewareNameWithAliases(mw.name, mw.aliases) + \" - \" + step;\n            });\n        },\n        identifyOnResolve(toggle) {\n            if (typeof toggle === \"boolean\")\n                identifyOnResolve = toggle;\n            return identifyOnResolve;\n        },\n        resolve: (handler, context) => {\n            for (const middleware of getMiddlewareList()\n                .map((entry) => entry.middleware)\n                .reverse()) {\n                handler = middleware(handler, context);\n            }\n            if (identifyOnResolve) {\n                console.log(stack.identify());\n            }\n            return handler;\n        },\n    };\n    return stack;\n};\nconst stepWeights = {\n    initialize: 5,\n    serialize: 4,\n    build: 3,\n    finalizeRequest: 2,\n    deserialize: 1,\n};\nconst priorityWeights = {\n    high: 3,\n    normal: 2,\n    low: 1,\n};\n\nexports.constructStack = constructStack;\n", "'use strict';\n\nvar middlewareStack = require('@smithy/middleware-stack');\nvar protocols = require('@smithy/core/protocols');\nvar types = require('@smithy/types');\nvar schema = require('@smithy/core/schema');\nvar serde = require('@smithy/core/serde');\n\nclass Client {\n    config;\n    middlewareStack = middlewareStack.constructStack();\n    initConfig;\n    handlers;\n    constructor(config) {\n        this.config = config;\n    }\n    send(command, optionsOrCb, cb) {\n        const options = typeof optionsOrCb !== \"function\" ? optionsOrCb : undefined;\n        const callback = typeof optionsOrCb === \"function\" ? optionsOrCb : cb;\n        const useHandlerCache = options === undefined && this.config.cacheMiddleware === true;\n        let handler;\n        if (useHandlerCache) {\n            if (!this.handlers) {\n                this.handlers = new WeakMap();\n            }\n            const handlers = this.handlers;\n            if (handlers.has(command.constructor)) {\n                handler = handlers.get(command.constructor);\n            }\n            else {\n                handler = command.resolveMiddleware(this.middlewareStack, this.config, options);\n                handlers.set(command.constructor, handler);\n            }\n        }\n        else {\n            delete this.handlers;\n            handler = command.resolveMiddleware(this.middlewareStack, this.config, options);\n        }\n        if (callback) {\n            handler(command)\n                .then((result) => callback(null, result.output), (err) => callback(err))\n                .catch(() => { });\n        }\n        else {\n            return handler(command).then((result) => result.output);\n        }\n    }\n    destroy() {\n        this.config?.requestHandler?.destroy?.();\n        delete this.handlers;\n    }\n}\n\nconst SENSITIVE_STRING$1 = \"***SensitiveInformation***\";\nfunction schemaLogFilter(schema$1, data) {\n    if (data == null) {\n        return data;\n    }\n    const ns = schema.NormalizedSchema.of(schema$1);\n    if (ns.getMergedTraits().sensitive) {\n        return SENSITIVE_STRING$1;\n    }\n    if (ns.isListSchema()) {\n        const isSensitive = !!ns.getValueSchema().getMergedTraits().sensitive;\n        if (isSensitive) {\n            return SENSITIVE_STRING$1;\n        }\n    }\n    else if (ns.isMapSchema()) {\n        const isSensitive = !!ns.getKeySchema().getMergedTraits().sensitive || !!ns.getValueSchema().getMergedTraits().sensitive;\n        if (isSensitive) {\n            return SENSITIVE_STRING$1;\n        }\n    }\n    else if (ns.isStructSchema() && typeof data === \"object\") {\n        const object = data;\n        const newObject = {};\n        for (const [member, memberNs] of ns.structIterator()) {\n            if (object[member] != null) {\n                newObject[member] = schemaLogFilter(memberNs, object[member]);\n            }\n        }\n        return newObject;\n    }\n    return data;\n}\n\nclass Command {\n    middlewareStack = middlewareStack.constructStack();\n    schema;\n    static classBuilder() {\n        return new ClassBuilder();\n    }\n    resolveMiddlewareWithContext(clientStack, configuration, options, { middlewareFn, clientName, commandName, inputFilterSensitiveLog, outputFilterSensitiveLog, smithyContext, additionalContext, CommandCtor, }) {\n        for (const mw of middlewareFn.bind(this)(CommandCtor, clientStack, configuration, options)) {\n            this.middlewareStack.use(mw);\n        }\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog,\n            outputFilterSensitiveLog,\n            [types.SMITHY_CONTEXT_KEY]: {\n                commandInstance: this,\n                ...smithyContext,\n            },\n            ...additionalContext,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n}\nclass ClassBuilder {\n    _init = () => { };\n    _ep = {};\n    _middlewareFn = () => [];\n    _commandName = \"\";\n    _clientName = \"\";\n    _additionalContext = {};\n    _smithyContext = {};\n    _inputFilterSensitiveLog = undefined;\n    _outputFilterSensitiveLog = undefined;\n    _serializer = null;\n    _deserializer = null;\n    _operationSchema;\n    init(cb) {\n        this._init = cb;\n    }\n    ep(endpointParameterInstructions) {\n        this._ep = endpointParameterInstructions;\n        return this;\n    }\n    m(middlewareSupplier) {\n        this._middlewareFn = middlewareSupplier;\n        return this;\n    }\n    s(service, operation, smithyContext = {}) {\n        this._smithyContext = {\n            service,\n            operation,\n            ...smithyContext,\n        };\n        return this;\n    }\n    c(additionalContext = {}) {\n        this._additionalContext = additionalContext;\n        return this;\n    }\n    n(clientName, commandName) {\n        this._clientName = clientName;\n        this._commandName = commandName;\n        return this;\n    }\n    f(inputFilter = (_) => _, outputFilter = (_) => _) {\n        this._inputFilterSensitiveLog = inputFilter;\n        this._outputFilterSensitiveLog = outputFilter;\n        return this;\n    }\n    ser(serializer) {\n        this._serializer = serializer;\n        return this;\n    }\n    de(deserializer) {\n        this._deserializer = deserializer;\n        return this;\n    }\n    sc(operation) {\n        this._operationSchema = operation;\n        this._smithyContext.operationSchema = operation;\n        return this;\n    }\n    build() {\n        const closure = this;\n        let CommandRef;\n        return (CommandRef = class extends Command {\n            input;\n            static getEndpointParameterInstructions() {\n                return closure._ep;\n            }\n            constructor(...[input]) {\n                super();\n                this.input = input ?? {};\n                closure._init(this);\n                this.schema = closure._operationSchema;\n            }\n            resolveMiddleware(stack, configuration, options) {\n                return this.resolveMiddlewareWithContext(stack, configuration, options, {\n                    CommandCtor: CommandRef,\n                    middlewareFn: closure._middlewareFn,\n                    clientName: closure._clientName,\n                    commandName: closure._commandName,\n                    inputFilterSensitiveLog: closure._inputFilterSensitiveLog ??\n                        (closure._operationSchema ? schemaLogFilter.bind(null, closure._operationSchema.input) : (_) => _),\n                    outputFilterSensitiveLog: closure._outputFilterSensitiveLog ??\n                        (closure._operationSchema ? schemaLogFilter.bind(null, closure._operationSchema.output) : (_) => _),\n                    smithyContext: closure._smithyContext,\n                    additionalContext: closure._additionalContext,\n                });\n            }\n            serialize = closure._serializer;\n            deserialize = closure._deserializer;\n        });\n    }\n}\n\nconst SENSITIVE_STRING = \"***SensitiveInformation***\";\n\nconst createAggregatedClient = (commands, Client) => {\n    for (const command of Object.keys(commands)) {\n        const CommandCtor = commands[command];\n        const methodImpl = async function (args, optionsOrCb, cb) {\n            const command = new CommandCtor(args);\n            if (typeof optionsOrCb === \"function\") {\n                this.send(command, optionsOrCb);\n            }\n            else if (typeof cb === \"function\") {\n                if (typeof optionsOrCb !== \"object\")\n                    throw new Error(`Expected http options but got ${typeof optionsOrCb}`);\n                this.send(command, optionsOrCb || {}, cb);\n            }\n            else {\n                return this.send(command, optionsOrCb);\n            }\n        };\n        const methodName = (command[0].toLowerCase() + command.slice(1)).replace(/Command$/, \"\");\n        Client.prototype[methodName] = methodImpl;\n    }\n};\n\nclass ServiceException extends Error {\n    $fault;\n    $response;\n    $retryable;\n    $metadata;\n    constructor(options) {\n        super(options.message);\n        Object.setPrototypeOf(this, Object.getPrototypeOf(this).constructor.prototype);\n        this.name = options.name;\n        this.$fault = options.$fault;\n        this.$metadata = options.$metadata;\n    }\n    static isInstance(value) {\n        if (!value)\n            return false;\n        const candidate = value;\n        return (ServiceException.prototype.isPrototypeOf(candidate) ||\n            (Boolean(candidate.$fault) &&\n                Boolean(candidate.$metadata) &&\n                (candidate.$fault === \"client\" || candidate.$fault === \"server\")));\n    }\n    static [Symbol.hasInstance](instance) {\n        if (!instance)\n            return false;\n        const candidate = instance;\n        if (this === ServiceException) {\n            return ServiceException.isInstance(instance);\n        }\n        if (ServiceException.isInstance(instance)) {\n            if (candidate.name && this.name) {\n                return this.prototype.isPrototypeOf(instance) || candidate.name === this.name;\n            }\n            return this.prototype.isPrototypeOf(instance);\n        }\n        return false;\n    }\n}\nconst decorateServiceException = (exception, additions = {}) => {\n    Object.entries(additions)\n        .filter(([, v]) => v !== undefined)\n        .forEach(([k, v]) => {\n        if (exception[k] == undefined || exception[k] === \"\") {\n            exception[k] = v;\n        }\n    });\n    const message = exception.message || exception.Message || \"UnknownError\";\n    exception.message = message;\n    delete exception.Message;\n    return exception;\n};\n\nconst throwDefaultError = ({ output, parsedBody, exceptionCtor, errorCode }) => {\n    const $metadata = deserializeMetadata(output);\n    const statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + \"\" : undefined;\n    const response = new exceptionCtor({\n        name: parsedBody?.code || parsedBody?.Code || errorCode || statusCode || \"UnknownError\",\n        $fault: \"client\",\n        $metadata,\n    });\n    throw decorateServiceException(response, parsedBody);\n};\nconst withBaseException = (ExceptionCtor) => {\n    return ({ output, parsedBody, errorCode }) => {\n        throwDefaultError({ output, parsedBody, exceptionCtor: ExceptionCtor, errorCode });\n    };\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\n\nconst loadConfigsForDefaultMode = (mode) => {\n    switch (mode) {\n        case \"standard\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 3100,\n            };\n        case \"in-region\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 1100,\n            };\n        case \"cross-region\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 3100,\n            };\n        case \"mobile\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 30000,\n            };\n        default:\n            return {};\n    }\n};\n\nlet warningEmitted = false;\nconst emitWarningIfUnsupportedVersion = (version) => {\n    if (version && !warningEmitted && parseInt(version.substring(1, version.indexOf(\".\"))) < 16) {\n        warningEmitted = true;\n    }\n};\n\nconst getChecksumConfiguration = (runtimeConfig) => {\n    const checksumAlgorithms = [];\n    for (const id in types.AlgorithmId) {\n        const algorithmId = types.AlgorithmId[id];\n        if (runtimeConfig[algorithmId] === undefined) {\n            continue;\n        }\n        checksumAlgorithms.push({\n            algorithmId: () => algorithmId,\n            checksumConstructor: () => runtimeConfig[algorithmId],\n        });\n    }\n    return {\n        addChecksumAlgorithm(algo) {\n            checksumAlgorithms.push(algo);\n        },\n        checksumAlgorithms() {\n            return checksumAlgorithms;\n        },\n    };\n};\nconst resolveChecksumRuntimeConfig = (clientConfig) => {\n    const runtimeConfig = {};\n    clientConfig.checksumAlgorithms().forEach((checksumAlgorithm) => {\n        runtimeConfig[checksumAlgorithm.algorithmId()] = checksumAlgorithm.checksumConstructor();\n    });\n    return runtimeConfig;\n};\n\nconst getRetryConfiguration = (runtimeConfig) => {\n    return {\n        setRetryStrategy(retryStrategy) {\n            runtimeConfig.retryStrategy = retryStrategy;\n        },\n        retryStrategy() {\n            return runtimeConfig.retryStrategy;\n        },\n    };\n};\nconst resolveRetryRuntimeConfig = (retryStrategyConfiguration) => {\n    const runtimeConfig = {};\n    runtimeConfig.retryStrategy = retryStrategyConfiguration.retryStrategy();\n    return runtimeConfig;\n};\n\nconst getDefaultExtensionConfiguration = (runtimeConfig) => {\n    return Object.assign(getChecksumConfiguration(runtimeConfig), getRetryConfiguration(runtimeConfig));\n};\nconst getDefaultClientConfiguration = getDefaultExtensionConfiguration;\nconst resolveDefaultRuntimeConfig = (config) => {\n    return Object.assign(resolveChecksumRuntimeConfig(config), resolveRetryRuntimeConfig(config));\n};\n\nconst getArrayIfSingleItem = (mayBeArray) => Array.isArray(mayBeArray) ? mayBeArray : [mayBeArray];\n\nconst getValueFromTextNode = (obj) => {\n    const textNodeName = \"#text\";\n    for (const key in obj) {\n        if (obj.hasOwnProperty(key) && obj[key][textNodeName] !== undefined) {\n            obj[key] = obj[key][textNodeName];\n        }\n        else if (typeof obj[key] === \"object\" && obj[key] !== null) {\n            obj[key] = getValueFromTextNode(obj[key]);\n        }\n    }\n    return obj;\n};\n\nconst isSerializableHeaderValue = (value) => {\n    return value != null;\n};\n\nclass NoOpLogger {\n    trace() { }\n    debug() { }\n    info() { }\n    warn() { }\n    error() { }\n}\n\nfunction map(arg0, arg1, arg2) {\n    let target;\n    let filter;\n    let instructions;\n    if (typeof arg1 === \"undefined\" && typeof arg2 === \"undefined\") {\n        target = {};\n        instructions = arg0;\n    }\n    else {\n        target = arg0;\n        if (typeof arg1 === \"function\") {\n            filter = arg1;\n            instructions = arg2;\n            return mapWithFilter(target, filter, instructions);\n        }\n        else {\n            instructions = arg1;\n        }\n    }\n    for (const key of Object.keys(instructions)) {\n        if (!Array.isArray(instructions[key])) {\n            target[key] = instructions[key];\n            continue;\n        }\n        applyInstruction(target, null, instructions, key);\n    }\n    return target;\n}\nconst convertMap = (target) => {\n    const output = {};\n    for (const [k, v] of Object.entries(target || {})) {\n        output[k] = [, v];\n    }\n    return output;\n};\nconst take = (source, instructions) => {\n    const out = {};\n    for (const key in instructions) {\n        applyInstruction(out, source, instructions, key);\n    }\n    return out;\n};\nconst mapWithFilter = (target, filter, instructions) => {\n    return map(target, Object.entries(instructions).reduce((_instructions, [key, value]) => {\n        if (Array.isArray(value)) {\n            _instructions[key] = value;\n        }\n        else {\n            if (typeof value === \"function\") {\n                _instructions[key] = [filter, value()];\n            }\n            else {\n                _instructions[key] = [filter, value];\n            }\n        }\n        return _instructions;\n    }, {}));\n};\nconst applyInstruction = (target, source, instructions, targetKey) => {\n    if (source !== null) {\n        let instruction = instructions[targetKey];\n        if (typeof instruction === \"function\") {\n            instruction = [, instruction];\n        }\n        const [filter = nonNullish, valueFn = pass, sourceKey = targetKey] = instruction;\n        if ((typeof filter === \"function\" && filter(source[sourceKey])) || (typeof filter !== \"function\" && !!filter)) {\n            target[targetKey] = valueFn(source[sourceKey]);\n        }\n        return;\n    }\n    let [filter, value] = instructions[targetKey];\n    if (typeof value === \"function\") {\n        let _value;\n        const defaultFilterPassed = filter === undefined && (_value = value()) != null;\n        const customFilterPassed = (typeof filter === \"function\" && !!filter(void 0)) || (typeof filter !== \"function\" && !!filter);\n        if (defaultFilterPassed) {\n            target[targetKey] = _value;\n        }\n        else if (customFilterPassed) {\n            target[targetKey] = value();\n        }\n    }\n    else {\n        const defaultFilterPassed = filter === undefined && value != null;\n        const customFilterPassed = (typeof filter === \"function\" && !!filter(value)) || (typeof filter !== \"function\" && !!filter);\n        if (defaultFilterPassed || customFilterPassed) {\n            target[targetKey] = value;\n        }\n    }\n};\nconst nonNullish = (_) => _ != null;\nconst pass = (_) => _;\n\nconst serializeFloat = (value) => {\n    if (value !== value) {\n        return \"NaN\";\n    }\n    switch (value) {\n        case Infinity:\n            return \"Infinity\";\n        case -Infinity:\n            return \"-Infinity\";\n        default:\n            return value;\n    }\n};\nconst serializeDateTime = (date) => date.toISOString().replace(\".000Z\", \"Z\");\n\nconst _json = (obj) => {\n    if (obj == null) {\n        return {};\n    }\n    if (Array.isArray(obj)) {\n        return obj.filter((_) => _ != null).map(_json);\n    }\n    if (typeof obj === \"object\") {\n        const target = {};\n        for (const key of Object.keys(obj)) {\n            if (obj[key] == null) {\n                continue;\n            }\n            target[key] = _json(obj[key]);\n        }\n        return target;\n    }\n    return obj;\n};\n\nObject.defineProperty(exports, \"collectBody\", {\n    enumerable: true,\n    get: function () { return protocols.collectBody; }\n});\nObject.defineProperty(exports, \"extendedEncodeURIComponent\", {\n    enumerable: true,\n    get: function () { return protocols.extendedEncodeURIComponent; }\n});\nObject.defineProperty(exports, \"resolvedPath\", {\n    enumerable: true,\n    get: function () { return protocols.resolvedPath; }\n});\nexports.Client = Client;\nexports.Command = Command;\nexports.NoOpLogger = NoOpLogger;\nexports.SENSITIVE_STRING = SENSITIVE_STRING;\nexports.ServiceException = ServiceException;\nexports._json = _json;\nexports.convertMap = convertMap;\nexports.createAggregatedClient = createAggregatedClient;\nexports.decorateServiceException = decorateServiceException;\nexports.emitWarningIfUnsupportedVersion = emitWarningIfUnsupportedVersion;\nexports.getArrayIfSingleItem = getArrayIfSingleItem;\nexports.getDefaultClientConfiguration = getDefaultClientConfiguration;\nexports.getDefaultExtensionConfiguration = getDefaultExtensionConfiguration;\nexports.getValueFromTextNode = getValueFromTextNode;\nexports.isSerializableHeaderValue = isSerializableHeaderValue;\nexports.loadConfigsForDefaultMode = loadConfigsForDefaultMode;\nexports.map = map;\nexports.resolveDefaultRuntimeConfig = resolveDefaultRuntimeConfig;\nexports.serializeDateTime = serializeDateTime;\nexports.serializeFloat = serializeFloat;\nexports.take = take;\nexports.throwDefaultError = throwDefaultError;\nexports.withBaseException = withBaseException;\nObject.keys(serde).forEach(function (k) {\n    if (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {\n        enumerable: true,\n        get: function () { return serde[k]; }\n    });\n});\n", "import { collectBody } from \"@smithy/smithy-client\";\nimport { toUtf8 } from \"@smithy/util-utf8\";\nexport const collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => (context?.utf8Encoder ?? toUtf8)(body));\n", "import { collectBodyString } from \"../common\";\nexport const parseJsonBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        try {\n            return JSON.parse(encoded);\n        }\n        catch (e) {\n            if (e?.name === \"SyntaxError\") {\n                Object.defineProperty(e, \"$responseBodyText\", {\n                    value: encoded,\n                });\n            }\n            throw e;\n        }\n    }\n    return {};\n});\nexport const parseJsonErrorBody = async (errorBody, context) => {\n    const value = await parseJsonBody(errorBody, context);\n    value.message = value.message ?? value.Message;\n    return value;\n};\nexport const loadRestJsonErrorCode = (output, data) => {\n    const findKey = (object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n    const sanitizeErrorCode = (rawValue) => {\n        let cleanValue = rawValue;\n        if (typeof cleanValue === \"number\") {\n            cleanValue = cleanValue.toString();\n        }\n        if (cleanValue.indexOf(\",\") >= 0) {\n            cleanValue = cleanValue.split(\",\")[0];\n        }\n        if (cleanValue.indexOf(\":\") >= 0) {\n            cleanValue = cleanValue.split(\":\")[0];\n        }\n        if (cleanValue.indexOf(\"#\") >= 0) {\n            cleanValue = cleanValue.split(\"#\")[1];\n        }\n        return cleanValue;\n    };\n    const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n    if (headerKey !== undefined) {\n        return sanitizeErrorCode(output.headers[headerKey]);\n    }\n    if (data && typeof data === \"object\") {\n        const codeKey = findKey(data, \"code\");\n        if (codeKey && data[codeKey] !== undefined) {\n            return sanitizeErrorCode(data[codeKey]);\n        }\n        if (data[\"__type\"] !== undefined) {\n            return sanitizeErrorCode(data[\"__type\"]);\n        }\n    }\n};\n", "import { determineTimestampFormat } from \"@smithy/core/protocols\";\nimport { NormalizedSchema } from \"@smithy/core/schema\";\nimport { LazyJsonString, NumericValue, parseEpochTimestamp, parseRfc3339DateTimeWithOffset, parseRfc7231DateTime, } from \"@smithy/core/serde\";\nimport { fromBase64 } from \"@smithy/util-base64\";\nimport { SerdeContextConfig } from \"../ConfigurableSerdeContext\";\nimport { jsonReviver } from \"./jsonReviver\";\nimport { parseJsonBody } from \"./parseJsonBody\";\nexport class JsonShapeDeserializer extends SerdeContextConfig {\n    settings;\n    constructor(settings) {\n        super();\n        this.settings = settings;\n    }\n    async read(schema, data) {\n        return this._read(schema, typeof data === \"string\" ? JSON.parse(data, jsonReviver) : await parseJsonBody(data, this.serdeContext));\n    }\n    readObject(schema, data) {\n        return this._read(schema, data);\n    }\n    _read(schema, value) {\n        const isObject = value !== null && typeof value === \"object\";\n        const ns = NormalizedSchema.of(schema);\n        if (ns.isListSchema() && Array.isArray(value)) {\n            const listMember = ns.getValueSchema();\n            const out = [];\n            const sparse = !!ns.getMergedTraits().sparse;\n            for (const item of value) {\n                if (sparse || item != null) {\n                    out.push(this._read(listMember, item));\n                }\n            }\n            return out;\n        }\n        else if (ns.isMapSchema() && isObject) {\n            const mapMember = ns.getValueSchema();\n            const out = {};\n            const sparse = !!ns.getMergedTraits().sparse;\n            for (const [_k, _v] of Object.entries(value)) {\n                if (sparse || _v != null) {\n                    out[_k] = this._read(mapMember, _v);\n                }\n            }\n            return out;\n        }\n        else if (ns.isStructSchema() && isObject) {\n            const out = {};\n            for (const [memberName, memberSchema] of ns.structIterator()) {\n                const fromKey = this.settings.jsonName ? memberSchema.getMergedTraits().jsonName ?? memberName : memberName;\n                const deserializedValue = this._read(memberSchema, value[fromKey]);\n                if (deserializedValue != null) {\n                    out[memberName] = deserializedValue;\n                }\n            }\n            return out;\n        }\n        if (ns.isBlobSchema() && typeof value === \"string\") {\n            return fromBase64(value);\n        }\n        const mediaType = ns.getMergedTraits().mediaType;\n        if (ns.isStringSchema() && typeof value === \"string\" && mediaType) {\n            const isJson = mediaType === \"application/json\" || mediaType.endsWith(\"+json\");\n            if (isJson) {\n                return LazyJsonString.from(value);\n            }\n        }\n        if (ns.isTimestampSchema() && value != null) {\n            const format = determineTimestampFormat(ns, this.settings);\n            switch (format) {\n                case 5:\n                    return parseRfc3339DateTimeWithOffset(value);\n                case 6:\n                    return parseRfc7231DateTime(value);\n                case 7:\n                    return parseEpochTimestamp(value);\n                default:\n                    console.warn(\"Missing timestamp format, parsing value with Date constructor:\", value);\n                    return new Date(value);\n            }\n        }\n        if (ns.isBigIntegerSchema() && (typeof value === \"number\" || typeof value === \"string\")) {\n            return BigInt(value);\n        }\n        if (ns.isBigDecimalSchema() && value != undefined) {\n            if (value instanceof NumericValue) {\n                return value;\n            }\n            const untyped = value;\n            if (untyped.type === \"bigDecimal\" && \"string\" in untyped) {\n                return new NumericValue(untyped.string, untyped.type);\n            }\n            return new NumericValue(String(value), \"bigDecimal\");\n        }\n        if (ns.isNumericSchema() && typeof value === \"string\") {\n            switch (value) {\n                case \"Infinity\":\n                    return Infinity;\n                case \"-Infinity\":\n                    return -Infinity;\n                case \"NaN\":\n                    return NaN;\n            }\n        }\n        if (ns.isDocumentSchema()) {\n            if (isObject) {\n                const out = Array.isArray(value) ? [] : {};\n                for (const [k, v] of Object.entries(value)) {\n                    if (v instanceof NumericValue) {\n                        out[k] = v;\n                    }\n                    else {\n                        out[k] = this._read(ns, v);\n                    }\n                }\n                return out;\n            }\n            else {\n                return structuredClone(value);\n            }\n        }\n        return value;\n    }\n}\n", "import { NumericValue } from \"@smithy/core/serde\";\nconst NUMERIC_CONTROL_CHAR = String.fromCharCode(925);\nexport class JsonReplacer {\n    values = new Map();\n    counter = 0;\n    stage = 0;\n    createReplacer() {\n        if (this.stage === 1) {\n            throw new Error(\"@aws-sdk/core/protocols - JsonReplacer already created.\");\n        }\n        if (this.stage === 2) {\n            throw new Error(\"@aws-sdk/core/protocols - JsonReplacer exhausted.\");\n        }\n        this.stage = 1;\n        return (key, value) => {\n            if (value instanceof NumericValue) {\n                const v = `${NUMERIC_CONTROL_CHAR + \"nv\" + this.counter++}_` + value.string;\n                this.values.set(`\"${v}\"`, value.string);\n                return v;\n            }\n            if (typeof value === \"bigint\") {\n                const s = value.toString();\n                const v = `${NUMERIC_CONTROL_CHAR + \"b\" + this.counter++}_` + s;\n                this.values.set(`\"${v}\"`, s);\n                return v;\n            }\n            return value;\n        };\n    }\n    replaceInJson(json) {\n        if (this.stage === 0) {\n            throw new Error(\"@aws-sdk/core/protocols - JsonReplacer not created yet.\");\n        }\n        if (this.stage === 2) {\n            throw new Error(\"@aws-sdk/core/protocols - JsonReplacer exhausted.\");\n        }\n        this.stage = 2;\n        if (this.counter === 0) {\n            return json;\n        }\n        for (const [key, value] of this.values) {\n            json = json.replace(key, value);\n        }\n        return json;\n    }\n}\n", "import { determineTimestampFormat } from \"@smithy/core/protocols\";\nimport { NormalizedSchema } from \"@smithy/core/schema\";\nimport { dateToUtcString, generateIdempotencyToken, LazyJsonString, NumericValue } from \"@smithy/core/serde\";\nimport { toBase64 } from \"@smithy/util-base64\";\nimport { SerdeContextConfig } from \"../ConfigurableSerdeContext\";\nimport { JsonReplacer } from \"./jsonReplacer\";\nexport class JsonShapeSerializer extends SerdeContextConfig {\n    settings;\n    buffer;\n    rootSchema;\n    constructor(settings) {\n        super();\n        this.settings = settings;\n    }\n    write(schema, value) {\n        this.rootSchema = NormalizedSchema.of(schema);\n        this.buffer = this._write(this.rootSchema, value);\n    }\n    writeDiscriminatedDocument(schema, value) {\n        this.write(schema, value);\n        if (typeof this.buffer === \"object\") {\n            this.buffer.__type = NormalizedSchema.of(schema).getName(true);\n        }\n    }\n    flush() {\n        const { rootSchema } = this;\n        this.rootSchema = undefined;\n        if (rootSchema?.isStructSchema() || rootSchema?.isDocumentSchema()) {\n            const replacer = new JsonReplacer();\n            return replacer.replaceInJson(JSON.stringify(this.buffer, replacer.createReplacer(), 0));\n        }\n        return this.buffer;\n    }\n    _write(schema, value, container) {\n        const isObject = value !== null && typeof value === \"object\";\n        const ns = NormalizedSchema.of(schema);\n        if (ns.isListSchema() && Array.isArray(value)) {\n            const listMember = ns.getValueSchema();\n            const out = [];\n            const sparse = !!ns.getMergedTraits().sparse;\n            for (const item of value) {\n                if (sparse || item != null) {\n                    out.push(this._write(listMember, item));\n                }\n            }\n            return out;\n        }\n        else if (ns.isMapSchema() && isObject) {\n            const mapMember = ns.getValueSchema();\n            const out = {};\n            const sparse = !!ns.getMergedTraits().sparse;\n            for (const [_k, _v] of Object.entries(value)) {\n                if (sparse || _v != null) {\n                    out[_k] = this._write(mapMember, _v);\n                }\n            }\n            return out;\n        }\n        else if (ns.isStructSchema() && isObject) {\n            const out = {};\n            for (const [memberName, memberSchema] of ns.structIterator()) {\n                const targetKey = this.settings.jsonName ? memberSchema.getMergedTraits().jsonName ?? memberName : memberName;\n                const serializableValue = this._write(memberSchema, value[memberName], ns);\n                if (serializableValue !== undefined) {\n                    out[targetKey] = serializableValue;\n                }\n            }\n            return out;\n        }\n        if (value === null && container?.isStructSchema()) {\n            return void 0;\n        }\n        if ((ns.isBlobSchema() && (value instanceof Uint8Array || typeof value === \"string\")) ||\n            (ns.isDocumentSchema() && value instanceof Uint8Array)) {\n            if (ns === this.rootSchema) {\n                return value;\n            }\n            if (!this.serdeContext?.base64Encoder) {\n                return toBase64(value);\n            }\n            return this.serdeContext?.base64Encoder(value);\n        }\n        if ((ns.isTimestampSchema() || ns.isDocumentSchema()) && value instanceof Date) {\n            const format = determineTimestampFormat(ns, this.settings);\n            switch (format) {\n                case 5:\n                    return value.toISOString().replace(\".000Z\", \"Z\");\n                case 6:\n                    return dateToUtcString(value);\n                case 7:\n                    return value.getTime() / 1000;\n                default:\n                    console.warn(\"Missing timestamp format, using epoch seconds\", value);\n                    return value.getTime() / 1000;\n            }\n        }\n        if (ns.isNumericSchema() && typeof value === \"number\") {\n            if (Math.abs(value) === Infinity || isNaN(value)) {\n                return String(value);\n            }\n        }\n        if (ns.isStringSchema()) {\n            if (typeof value === \"undefined\" && ns.isIdempotencyToken()) {\n                return generateIdempotencyToken();\n            }\n            const mediaType = ns.getMergedTraits().mediaType;\n            if (value != null && mediaType) {\n                const isJson = mediaType === \"application/json\" || mediaType.endsWith(\"+json\");\n                if (isJson) {\n                    return LazyJsonString.from(value);\n                }\n            }\n        }\n        if (ns.isDocumentSchema()) {\n            if (isObject) {\n                const out = Array.isArray(value) ? [] : {};\n                for (const [k, v] of Object.entries(value)) {\n                    if (v instanceof NumericValue) {\n                        out[k] = v;\n                    }\n                    else {\n                        out[k] = this._write(ns, v);\n                    }\n                }\n                return out;\n            }\n            else {\n                return structuredClone(value);\n            }\n        }\n        return value;\n    }\n}\n", "import { SerdeContextConfig } from \"../ConfigurableSerdeContext\";\nimport { JsonShapeDeserializer } from \"./JsonShapeDeserializer\";\nimport { JsonShapeSerializer } from \"./JsonShapeSerializer\";\nexport class JsonCodec extends SerdeContextConfig {\n    settings;\n    constructor(settings) {\n        super();\n        this.settings = settings;\n    }\n    createSerializer() {\n        const serializer = new JsonShapeSerializer(this.settings);\n        serializer.setSerdeContext(this.serdeContext);\n        return serializer;\n    }\n    createDeserializer() {\n        const deserializer = new JsonShapeDeserializer(this.settings);\n        deserializer.setSerdeContext(this.serdeContext);\n        return deserializer;\n    }\n}\n", "import { RpcProtocol } from \"@smithy/core/protocols\";\nimport { deref, NormalizedSchema, TypeRegistry } from \"@smithy/core/schema\";\nimport { ProtocolLib } from \"../ProtocolLib\";\nimport { JsonCodec } from \"./JsonCodec\";\nimport { loadRestJsonErrorCode } from \"./parseJsonBody\";\nexport class AwsJsonRpcProtocol extends RpcProtocol {\n    serializer;\n    deserializer;\n    serviceTarget;\n    codec;\n    mixin = new ProtocolLib();\n    awsQueryCompatible;\n    constructor({ defaultNamespace, serviceTarget, awsQueryCompatible, }) {\n        super({\n            defaultNamespace,\n        });\n        this.serviceTarget = serviceTarget;\n        this.codec = new JsonCodec({\n            timestampFormat: {\n                useTrait: true,\n                default: 7,\n            },\n            jsonName: false,\n        });\n        this.serializer = this.codec.createSerializer();\n        this.deserializer = this.codec.createDeserializer();\n        this.awsQueryCompatible = !!awsQueryCompatible;\n    }\n    async serializeRequest(operationSchema, input, context) {\n        const request = await super.serializeRequest(operationSchema, input, context);\n        if (!request.path.endsWith(\"/\")) {\n            request.path += \"/\";\n        }\n        Object.assign(request.headers, {\n            \"content-type\": `application/x-amz-json-${this.getJsonRpcVersion()}`,\n            \"x-amz-target\": `${this.serviceTarget}.${NormalizedSchema.of(operationSchema).getName()}`,\n        });\n        if (this.awsQueryCompatible) {\n            request.headers[\"x-amzn-query-mode\"] = \"true\";\n        }\n        if (deref(operationSchema.input) === \"unit\" || !request.body) {\n            request.body = \"{}\";\n        }\n        return request;\n    }\n    getPayloadCodec() {\n        return this.codec;\n    }\n    async handleError(operationSchema, context, response, dataObject, metadata) {\n        if (this.awsQueryCompatible) {\n            this.mixin.setQueryCompatError(dataObject, response);\n        }\n        const errorIdentifier = loadRestJsonErrorCode(response, dataObject) ?? \"Unknown\";\n        const { errorSchema, errorMetadata } = await this.mixin.getErrorSchemaOrThrowBaseException(errorIdentifier, this.options.defaultNamespace, response, dataObject, metadata);\n        const ns = NormalizedSchema.of(errorSchema);\n        const message = dataObject.message ?? dataObject.Message ?? \"Unknown\";\n        const ErrorCtor = TypeRegistry.for(errorSchema.namespace).getErrorCtor(errorSchema) ?? Error;\n        const exception = new ErrorCtor(message);\n        const output = {};\n        for (const [name, member] of ns.structIterator()) {\n            const target = member.getMergedTraits().jsonName ?? name;\n            output[name] = this.codec.createDeserializer().readObject(member, dataObject[target]);\n        }\n        if (this.awsQueryCompatible) {\n            this.mixin.queryCompatOutput(dataObject, output);\n        }\n        throw Object.assign(exception, errorMetadata, {\n            $fault: ns.getMergedTraits().error,\n            message,\n        }, output);\n    }\n}\n", "import { AwsJsonRpcProtocol } from \"./AwsJsonRpcProtocol\";\nexport class AwsJson1_0Protocol extends AwsJsonRpcProtocol {\n    constructor({ defaultNamespace, serviceTarget, awsQueryCompatible, }) {\n        super({\n            defaultNamespace,\n            serviceTarget,\n            awsQueryCompatible,\n        });\n    }\n    getShapeId() {\n        return \"aws.protocols#awsJson1_0\";\n    }\n    getJsonRpcVersion() {\n        return \"1.0\";\n    }\n    getDefaultContentType() {\n        return \"application/x-amz-json-1.0\";\n    }\n}\n", "import { AwsJsonRpcProtocol } from \"./AwsJsonRpcProtocol\";\nexport class AwsJson1_1Protocol extends AwsJsonRpcProtocol {\n    constructor({ defaultNamespace, serviceTarget, awsQueryCompatible, }) {\n        super({\n            defaultNamespace,\n            serviceTarget,\n            awsQueryCompatible,\n        });\n    }\n    getShapeId() {\n        return \"aws.protocols#awsJson1_1\";\n    }\n    getJsonRpcVersion() {\n        return \"1.1\";\n    }\n    getDefaultContentType() {\n        return \"application/x-amz-json-1.1\";\n    }\n}\n", "import { HttpBindingProtocol, HttpInterceptingShapeDeserializer, HttpInterceptingShapeSerializer, } from \"@smithy/core/protocols\";\nimport { NormalizedSchema, TypeRegistry } from \"@smithy/core/schema\";\nimport { ProtocolLib } from \"../ProtocolLib\";\nimport { JsonCodec } from \"./JsonCodec\";\nimport { loadRestJsonErrorCode } from \"./parseJsonBody\";\nexport class AwsRestJsonProtocol extends HttpBindingProtocol {\n    serializer;\n    deserializer;\n    codec;\n    mixin = new ProtocolLib();\n    constructor({ defaultNamespace }) {\n        super({\n            defaultNamespace,\n        });\n        const settings = {\n            timestampFormat: {\n                useTrait: true,\n                default: 7,\n            },\n            httpBindings: true,\n            jsonName: true,\n        };\n        this.codec = new JsonCodec(settings);\n        this.serializer = new HttpInterceptingShapeSerializer(this.codec.createSerializer(), settings);\n        this.deserializer = new HttpInterceptingShapeDeserializer(this.codec.createDeserializer(), settings);\n    }\n    getShapeId() {\n        return \"aws.protocols#restJson1\";\n    }\n    getPayloadCodec() {\n        return this.codec;\n    }\n    setSerdeContext(serdeContext) {\n        this.codec.setSerdeContext(serdeContext);\n        super.setSerdeContext(serdeContext);\n    }\n    async serializeRequest(operationSchema, input, context) {\n        const request = await super.serializeRequest(operationSchema, input, context);\n        const inputSchema = NormalizedSchema.of(operationSchema.input);\n        if (!request.headers[\"content-type\"]) {\n            const contentType = this.mixin.resolveRestContentType(this.getDefaultContentType(), inputSchema);\n            if (contentType) {\n                request.headers[\"content-type\"] = contentType;\n            }\n        }\n        if (request.headers[\"content-type\"] && !request.body) {\n            request.body = \"{}\";\n        }\n        return request;\n    }\n    async handleError(operationSchema, context, response, dataObject, metadata) {\n        const errorIdentifier = loadRestJsonErrorCode(response, dataObject) ?? \"Unknown\";\n        const { errorSchema, errorMetadata } = await this.mixin.getErrorSchemaOrThrowBaseException(errorIdentifier, this.options.defaultNamespace, response, dataObject, metadata);\n        const ns = NormalizedSchema.of(errorSchema);\n        const message = dataObject.message ?? dataObject.Message ?? \"Unknown\";\n        const ErrorCtor = TypeRegistry.for(errorSchema.namespace).getErrorCtor(errorSchema) ?? Error;\n        const exception = new ErrorCtor(message);\n        await this.deserializeHttpMessage(errorSchema, context, response, dataObject);\n        const output = {};\n        for (const [name, member] of ns.structIterator()) {\n            const target = member.getMergedTraits().jsonName ?? name;\n            output[name] = this.codec.createDeserializer().readObject(member, dataObject[target]);\n        }\n        throw Object.assign(exception, errorMetadata, {\n            $fault: ns.getMergedTraits().error,\n            message,\n        }, output);\n    }\n    getDefaultContentType() {\n        return \"application/json\";\n    }\n}\n", "import { expectUnion } from \"@smithy/smithy-client\";\nexport const awsExpectUnion = (value) => {\n    if (value == null) {\n        return undefined;\n    }\n    if (typeof value === \"object\" && \"__type\" in value) {\n        delete value.__type;\n    }\n    return expectUnion(value);\n};\n", "(()=>{\"use strict\";var t={d:(e,n)=>{for(var i in n)t.o(n,i)&&!t.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:n[i]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})}},e={};t.r(e),t.d(e,{XMLBuilder:()=>ft,XMLParser:()=>st,XMLValidator:()=>mt});const n=\":A-Za-z_\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\",i=new RegExp(\"^[\"+n+\"][\"+n+\"\\\\-.\\\\d\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]*$\");function s(t,e){const n=[];let i=e.exec(t);for(;i;){const s=[];s.startIndex=e.lastIndex-i[0].length;const r=i.length;for(let t=0;t<r;t++)s.push(i[t]);n.push(s),i=e.exec(t)}return n}const r=function(t){return!(null==i.exec(t))},o={allowBooleanAttributes:!1,unpairedTags:[]};function a(t,e){e=Object.assign({},o,e);const n=[];let i=!1,s=!1;\"\\ufeff\"===t[0]&&(t=t.substr(1));for(let o=0;o<t.length;o++)if(\"<\"===t[o]&&\"?\"===t[o+1]){if(o+=2,o=u(t,o),o.err)return o}else{if(\"<\"!==t[o]){if(l(t[o]))continue;return x(\"InvalidChar\",\"char '\"+t[o]+\"' is not expected.\",N(t,o))}{let a=o;if(o++,\"!\"===t[o]){o=h(t,o);continue}{let d=!1;\"/\"===t[o]&&(d=!0,o++);let f=\"\";for(;o<t.length&&\">\"!==t[o]&&\" \"!==t[o]&&\"\\t\"!==t[o]&&\"\\n\"!==t[o]&&\"\\r\"!==t[o];o++)f+=t[o];if(f=f.trim(),\"/\"===f[f.length-1]&&(f=f.substring(0,f.length-1),o--),!r(f)){let e;return e=0===f.trim().length?\"Invalid space after '<'.\":\"Tag '\"+f+\"' is an invalid name.\",x(\"InvalidTag\",e,N(t,o))}const p=c(t,o);if(!1===p)return x(\"InvalidAttr\",\"Attributes for '\"+f+\"' have open quote.\",N(t,o));let b=p.value;if(o=p.index,\"/\"===b[b.length-1]){const n=o-b.length;b=b.substring(0,b.length-1);const s=g(b,e);if(!0!==s)return x(s.err.code,s.err.msg,N(t,n+s.err.line));i=!0}else if(d){if(!p.tagClosed)return x(\"InvalidTag\",\"Closing tag '\"+f+\"' doesn't have proper closing.\",N(t,o));if(b.trim().length>0)return x(\"InvalidTag\",\"Closing tag '\"+f+\"' can't have attributes or invalid starting.\",N(t,a));if(0===n.length)return x(\"InvalidTag\",\"Closing tag '\"+f+\"' has not been opened.\",N(t,a));{const e=n.pop();if(f!==e.tagName){let n=N(t,e.tagStartPos);return x(\"InvalidTag\",\"Expected closing tag '\"+e.tagName+\"' (opened in line \"+n.line+\", col \"+n.col+\") instead of closing tag '\"+f+\"'.\",N(t,a))}0==n.length&&(s=!0)}}else{const r=g(b,e);if(!0!==r)return x(r.err.code,r.err.msg,N(t,o-b.length+r.err.line));if(!0===s)return x(\"InvalidXml\",\"Multiple possible root nodes found.\",N(t,o));-1!==e.unpairedTags.indexOf(f)||n.push({tagName:f,tagStartPos:a}),i=!0}for(o++;o<t.length;o++)if(\"<\"===t[o]){if(\"!\"===t[o+1]){o++,o=h(t,o);continue}if(\"?\"!==t[o+1])break;if(o=u(t,++o),o.err)return o}else if(\"&\"===t[o]){const e=m(t,o);if(-1==e)return x(\"InvalidChar\",\"char '&' is not expected.\",N(t,o));o=e}else if(!0===s&&!l(t[o]))return x(\"InvalidXml\",\"Extra text at the end\",N(t,o));\"<\"===t[o]&&o--}}}return i?1==n.length?x(\"InvalidTag\",\"Unclosed tag '\"+n[0].tagName+\"'.\",N(t,n[0].tagStartPos)):!(n.length>0)||x(\"InvalidXml\",\"Invalid '\"+JSON.stringify(n.map((t=>t.tagName)),null,4).replace(/\\r?\\n/g,\"\")+\"' found.\",{line:1,col:1}):x(\"InvalidXml\",\"Start tag expected.\",1)}function l(t){return\" \"===t||\"\\t\"===t||\"\\n\"===t||\"\\r\"===t}function u(t,e){const n=e;for(;e<t.length;e++)if(\"?\"!=t[e]&&\" \"!=t[e]);else{const i=t.substr(n,e-n);if(e>5&&\"xml\"===i)return x(\"InvalidXml\",\"XML declaration allowed only at the start of the document.\",N(t,e));if(\"?\"==t[e]&&\">\"==t[e+1]){e++;break}}return e}function h(t,e){if(t.length>e+5&&\"-\"===t[e+1]&&\"-\"===t[e+2]){for(e+=3;e<t.length;e++)if(\"-\"===t[e]&&\"-\"===t[e+1]&&\">\"===t[e+2]){e+=2;break}}else if(t.length>e+8&&\"D\"===t[e+1]&&\"O\"===t[e+2]&&\"C\"===t[e+3]&&\"T\"===t[e+4]&&\"Y\"===t[e+5]&&\"P\"===t[e+6]&&\"E\"===t[e+7]){let n=1;for(e+=8;e<t.length;e++)if(\"<\"===t[e])n++;else if(\">\"===t[e]&&(n--,0===n))break}else if(t.length>e+9&&\"[\"===t[e+1]&&\"C\"===t[e+2]&&\"D\"===t[e+3]&&\"A\"===t[e+4]&&\"T\"===t[e+5]&&\"A\"===t[e+6]&&\"[\"===t[e+7])for(e+=8;e<t.length;e++)if(\"]\"===t[e]&&\"]\"===t[e+1]&&\">\"===t[e+2]){e+=2;break}return e}const d='\"',f=\"'\";function c(t,e){let n=\"\",i=\"\",s=!1;for(;e<t.length;e++){if(t[e]===d||t[e]===f)\"\"===i?i=t[e]:i!==t[e]||(i=\"\");else if(\">\"===t[e]&&\"\"===i){s=!0;break}n+=t[e]}return\"\"===i&&{value:n,index:e,tagClosed:s}}const p=new RegExp(\"(\\\\s*)([^\\\\s=]+)(\\\\s*=)?(\\\\s*(['\\\"])(([\\\\s\\\\S])*?)\\\\5)?\",\"g\");function g(t,e){const n=s(t,p),i={};for(let t=0;t<n.length;t++){if(0===n[t][1].length)return x(\"InvalidAttr\",\"Attribute '\"+n[t][2]+\"' has no space in starting.\",E(n[t]));if(void 0!==n[t][3]&&void 0===n[t][4])return x(\"InvalidAttr\",\"Attribute '\"+n[t][2]+\"' is without value.\",E(n[t]));if(void 0===n[t][3]&&!e.allowBooleanAttributes)return x(\"InvalidAttr\",\"boolean attribute '\"+n[t][2]+\"' is not allowed.\",E(n[t]));const s=n[t][2];if(!b(s))return x(\"InvalidAttr\",\"Attribute '\"+s+\"' is an invalid name.\",E(n[t]));if(i.hasOwnProperty(s))return x(\"InvalidAttr\",\"Attribute '\"+s+\"' is repeated.\",E(n[t]));i[s]=1}return!0}function m(t,e){if(\";\"===t[++e])return-1;if(\"#\"===t[e])return function(t,e){let n=/\\d/;for(\"x\"===t[e]&&(e++,n=/[\\da-fA-F]/);e<t.length;e++){if(\";\"===t[e])return e;if(!t[e].match(n))break}return-1}(t,++e);let n=0;for(;e<t.length;e++,n++)if(!(t[e].match(/\\w/)&&n<20)){if(\";\"===t[e])break;return-1}return e}function x(t,e,n){return{err:{code:t,msg:e,line:n.line||n,col:n.col}}}function b(t){return r(t)}function N(t,e){const n=t.substring(0,e).split(/\\r?\\n/);return{line:n.length,col:n[n.length-1].length+1}}function E(t){return t.startIndex+t[1].length}const v={preserveOrder:!1,attributeNamePrefix:\"@_\",attributesGroupName:!1,textNodeName:\"#text\",ignoreAttributes:!0,removeNSPrefix:!1,allowBooleanAttributes:!1,parseTagValue:!0,parseAttributeValue:!1,trimValues:!0,cdataPropName:!1,numberParseOptions:{hex:!0,leadingZeros:!0,eNotation:!0},tagValueProcessor:function(t,e){return e},attributeValueProcessor:function(t,e){return e},stopNodes:[],alwaysCreateTextNode:!1,isArray:()=>!1,commentPropName:!1,unpairedTags:[],processEntities:!0,htmlEntities:!1,ignoreDeclaration:!1,ignorePiTags:!1,transformTagName:!1,transformAttributeName:!1,updateTag:function(t,e,n){return t},captureMetaData:!1};let y;y=\"function\"!=typeof Symbol?\"@@xmlMetadata\":Symbol(\"XML Node Metadata\");class T{constructor(t){this.tagname=t,this.child=[],this[\":@\"]={}}add(t,e){\"__proto__\"===t&&(t=\"#__proto__\"),this.child.push({[t]:e})}addChild(t,e){\"__proto__\"===t.tagname&&(t.tagname=\"#__proto__\"),t[\":@\"]&&Object.keys(t[\":@\"]).length>0?this.child.push({[t.tagname]:t.child,\":@\":t[\":@\"]}):this.child.push({[t.tagname]:t.child}),void 0!==e&&(this.child[this.child.length-1][y]={startIndex:e})}static getMetaDataSymbol(){return y}}function w(t,e){const n={};if(\"O\"!==t[e+3]||\"C\"!==t[e+4]||\"T\"!==t[e+5]||\"Y\"!==t[e+6]||\"P\"!==t[e+7]||\"E\"!==t[e+8])throw new Error(\"Invalid Tag instead of DOCTYPE\");{e+=9;let i=1,s=!1,r=!1,o=\"\";for(;e<t.length;e++)if(\"<\"!==t[e]||r)if(\">\"===t[e]){if(r?\"-\"===t[e-1]&&\"-\"===t[e-2]&&(r=!1,i--):i--,0===i)break}else\"[\"===t[e]?s=!0:o+=t[e];else{if(s&&C(t,\"!ENTITY\",e)){let i,s;e+=7,[i,s,e]=O(t,e+1),-1===s.indexOf(\"&\")&&(n[i]={regx:RegExp(`&${i};`,\"g\"),val:s})}else if(s&&C(t,\"!ELEMENT\",e)){e+=8;const{index:n}=S(t,e+1);e=n}else if(s&&C(t,\"!ATTLIST\",e))e+=8;else if(s&&C(t,\"!NOTATION\",e)){e+=9;const{index:n}=A(t,e+1);e=n}else{if(!C(t,\"!--\",e))throw new Error(\"Invalid DOCTYPE\");r=!0}i++,o=\"\"}if(0!==i)throw new Error(\"Unclosed DOCTYPE\")}return{entities:n,i:e}}const P=(t,e)=>{for(;e<t.length&&/\\s/.test(t[e]);)e++;return e};function O(t,e){e=P(t,e);let n=\"\";for(;e<t.length&&!/\\s/.test(t[e])&&'\"'!==t[e]&&\"'\"!==t[e];)n+=t[e],e++;if($(n),e=P(t,e),\"SYSTEM\"===t.substring(e,e+6).toUpperCase())throw new Error(\"External entities are not supported\");if(\"%\"===t[e])throw new Error(\"Parameter entities are not supported\");let i=\"\";return[e,i]=I(t,e,\"entity\"),[n,i,--e]}function A(t,e){e=P(t,e);let n=\"\";for(;e<t.length&&!/\\s/.test(t[e]);)n+=t[e],e++;$(n),e=P(t,e);const i=t.substring(e,e+6).toUpperCase();if(\"SYSTEM\"!==i&&\"PUBLIC\"!==i)throw new Error(`Expected SYSTEM or PUBLIC, found \"${i}\"`);e+=i.length,e=P(t,e);let s=null,r=null;if(\"PUBLIC\"===i)[e,s]=I(t,e,\"publicIdentifier\"),'\"'!==t[e=P(t,e)]&&\"'\"!==t[e]||([e,r]=I(t,e,\"systemIdentifier\"));else if(\"SYSTEM\"===i&&([e,r]=I(t,e,\"systemIdentifier\"),!r))throw new Error(\"Missing mandatory system identifier for SYSTEM notation\");return{notationName:n,publicIdentifier:s,systemIdentifier:r,index:--e}}function I(t,e,n){let i=\"\";const s=t[e];if('\"'!==s&&\"'\"!==s)throw new Error(`Expected quoted string, found \"${s}\"`);for(e++;e<t.length&&t[e]!==s;)i+=t[e],e++;if(t[e]!==s)throw new Error(`Unterminated ${n} value`);return[++e,i]}function S(t,e){e=P(t,e);let n=\"\";for(;e<t.length&&!/\\s/.test(t[e]);)n+=t[e],e++;if(!$(n))throw new Error(`Invalid element name: \"${n}\"`);let i=\"\";if(\"E\"===t[e=P(t,e)]&&C(t,\"MPTY\",e))e+=4;else if(\"A\"===t[e]&&C(t,\"NY\",e))e+=2;else{if(\"(\"!==t[e])throw new Error(`Invalid Element Expression, found \"${t[e]}\"`);for(e++;e<t.length&&\")\"!==t[e];)i+=t[e],e++;if(\")\"!==t[e])throw new Error(\"Unterminated content model\")}return{elementName:n,contentModel:i.trim(),index:e}}function C(t,e,n){for(let i=0;i<e.length;i++)if(e[i]!==t[n+i+1])return!1;return!0}function $(t){if(r(t))return t;throw new Error(`Invalid entity name ${t}`)}const j=/^[-+]?0x[a-fA-F0-9]+$/,D=/^([\\-\\+])?(0*)([0-9]*(\\.[0-9]*)?)$/,V={hex:!0,leadingZeros:!0,decimalPoint:\".\",eNotation:!0};const M=/^([-+])?(0*)(\\d*(\\.\\d*)?[eE][-\\+]?\\d+)$/;function _(t){return\"function\"==typeof t?t:Array.isArray(t)?e=>{for(const n of t){if(\"string\"==typeof n&&e===n)return!0;if(n instanceof RegExp&&n.test(e))return!0}}:()=>!1}class k{constructor(t){this.options=t,this.currentNode=null,this.tagsNodeStack=[],this.docTypeEntities={},this.lastEntities={apos:{regex:/&(apos|#39|#x27);/g,val:\"'\"},gt:{regex:/&(gt|#62|#x3E);/g,val:\">\"},lt:{regex:/&(lt|#60|#x3C);/g,val:\"<\"},quot:{regex:/&(quot|#34|#x22);/g,val:'\"'}},this.ampEntity={regex:/&(amp|#38|#x26);/g,val:\"&\"},this.htmlEntities={space:{regex:/&(nbsp|#160);/g,val:\" \"},cent:{regex:/&(cent|#162);/g,val:\"\u00A2\"},pound:{regex:/&(pound|#163);/g,val:\"\u00A3\"},yen:{regex:/&(yen|#165);/g,val:\"\u00A5\"},euro:{regex:/&(euro|#8364);/g,val:\"\u20AC\"},copyright:{regex:/&(copy|#169);/g,val:\"\u00A9\"},reg:{regex:/&(reg|#174);/g,val:\"\u00AE\"},inr:{regex:/&(inr|#8377);/g,val:\"\u20B9\"},num_dec:{regex:/&#([0-9]{1,7});/g,val:(t,e)=>String.fromCodePoint(Number.parseInt(e,10))},num_hex:{regex:/&#x([0-9a-fA-F]{1,6});/g,val:(t,e)=>String.fromCodePoint(Number.parseInt(e,16))}},this.addExternalEntities=F,this.parseXml=X,this.parseTextData=L,this.resolveNameSpace=B,this.buildAttributesMap=G,this.isItStopNode=Z,this.replaceEntitiesValue=R,this.readStopNodeData=J,this.saveTextToParentTag=q,this.addChild=Y,this.ignoreAttributesFn=_(this.options.ignoreAttributes)}}function F(t){const e=Object.keys(t);for(let n=0;n<e.length;n++){const i=e[n];this.lastEntities[i]={regex:new RegExp(\"&\"+i+\";\",\"g\"),val:t[i]}}}function L(t,e,n,i,s,r,o){if(void 0!==t&&(this.options.trimValues&&!i&&(t=t.trim()),t.length>0)){o||(t=this.replaceEntitiesValue(t));const i=this.options.tagValueProcessor(e,t,n,s,r);return null==i?t:typeof i!=typeof t||i!==t?i:this.options.trimValues||t.trim()===t?H(t,this.options.parseTagValue,this.options.numberParseOptions):t}}function B(t){if(this.options.removeNSPrefix){const e=t.split(\":\"),n=\"/\"===t.charAt(0)?\"/\":\"\";if(\"xmlns\"===e[0])return\"\";2===e.length&&(t=n+e[1])}return t}const U=new RegExp(\"([^\\\\s=]+)\\\\s*(=\\\\s*(['\\\"])([\\\\s\\\\S]*?)\\\\3)?\",\"gm\");function G(t,e,n){if(!0!==this.options.ignoreAttributes&&\"string\"==typeof t){const n=s(t,U),i=n.length,r={};for(let t=0;t<i;t++){const i=this.resolveNameSpace(n[t][1]);if(this.ignoreAttributesFn(i,e))continue;let s=n[t][4],o=this.options.attributeNamePrefix+i;if(i.length)if(this.options.transformAttributeName&&(o=this.options.transformAttributeName(o)),\"__proto__\"===o&&(o=\"#__proto__\"),void 0!==s){this.options.trimValues&&(s=s.trim()),s=this.replaceEntitiesValue(s);const t=this.options.attributeValueProcessor(i,s,e);r[o]=null==t?s:typeof t!=typeof s||t!==s?t:H(s,this.options.parseAttributeValue,this.options.numberParseOptions)}else this.options.allowBooleanAttributes&&(r[o]=!0)}if(!Object.keys(r).length)return;if(this.options.attributesGroupName){const t={};return t[this.options.attributesGroupName]=r,t}return r}}const X=function(t){t=t.replace(/\\r\\n?/g,\"\\n\");const e=new T(\"!xml\");let n=e,i=\"\",s=\"\";for(let r=0;r<t.length;r++)if(\"<\"===t[r])if(\"/\"===t[r+1]){const e=W(t,\">\",r,\"Closing Tag is not closed.\");let o=t.substring(r+2,e).trim();if(this.options.removeNSPrefix){const t=o.indexOf(\":\");-1!==t&&(o=o.substr(t+1))}this.options.transformTagName&&(o=this.options.transformTagName(o)),n&&(i=this.saveTextToParentTag(i,n,s));const a=s.substring(s.lastIndexOf(\".\")+1);if(o&&-1!==this.options.unpairedTags.indexOf(o))throw new Error(`Unpaired tag can not be used as closing tag: </${o}>`);let l=0;a&&-1!==this.options.unpairedTags.indexOf(a)?(l=s.lastIndexOf(\".\",s.lastIndexOf(\".\")-1),this.tagsNodeStack.pop()):l=s.lastIndexOf(\".\"),s=s.substring(0,l),n=this.tagsNodeStack.pop(),i=\"\",r=e}else if(\"?\"===t[r+1]){let e=z(t,r,!1,\"?>\");if(!e)throw new Error(\"Pi Tag is not closed.\");if(i=this.saveTextToParentTag(i,n,s),this.options.ignoreDeclaration&&\"?xml\"===e.tagName||this.options.ignorePiTags);else{const t=new T(e.tagName);t.add(this.options.textNodeName,\"\"),e.tagName!==e.tagExp&&e.attrExpPresent&&(t[\":@\"]=this.buildAttributesMap(e.tagExp,s,e.tagName)),this.addChild(n,t,s,r)}r=e.closeIndex+1}else if(\"!--\"===t.substr(r+1,3)){const e=W(t,\"--\\x3e\",r+4,\"Comment is not closed.\");if(this.options.commentPropName){const o=t.substring(r+4,e-2);i=this.saveTextToParentTag(i,n,s),n.add(this.options.commentPropName,[{[this.options.textNodeName]:o}])}r=e}else if(\"!D\"===t.substr(r+1,2)){const e=w(t,r);this.docTypeEntities=e.entities,r=e.i}else if(\"![\"===t.substr(r+1,2)){const e=W(t,\"]]>\",r,\"CDATA is not closed.\")-2,o=t.substring(r+9,e);i=this.saveTextToParentTag(i,n,s);let a=this.parseTextData(o,n.tagname,s,!0,!1,!0,!0);null==a&&(a=\"\"),this.options.cdataPropName?n.add(this.options.cdataPropName,[{[this.options.textNodeName]:o}]):n.add(this.options.textNodeName,a),r=e+2}else{let o=z(t,r,this.options.removeNSPrefix),a=o.tagName;const l=o.rawTagName;let u=o.tagExp,h=o.attrExpPresent,d=o.closeIndex;this.options.transformTagName&&(a=this.options.transformTagName(a)),n&&i&&\"!xml\"!==n.tagname&&(i=this.saveTextToParentTag(i,n,s,!1));const f=n;f&&-1!==this.options.unpairedTags.indexOf(f.tagname)&&(n=this.tagsNodeStack.pop(),s=s.substring(0,s.lastIndexOf(\".\"))),a!==e.tagname&&(s+=s?\".\"+a:a);const c=r;if(this.isItStopNode(this.options.stopNodes,s,a)){let e=\"\";if(u.length>0&&u.lastIndexOf(\"/\")===u.length-1)\"/\"===a[a.length-1]?(a=a.substr(0,a.length-1),s=s.substr(0,s.length-1),u=a):u=u.substr(0,u.length-1),r=o.closeIndex;else if(-1!==this.options.unpairedTags.indexOf(a))r=o.closeIndex;else{const n=this.readStopNodeData(t,l,d+1);if(!n)throw new Error(`Unexpected end of ${l}`);r=n.i,e=n.tagContent}const i=new T(a);a!==u&&h&&(i[\":@\"]=this.buildAttributesMap(u,s,a)),e&&(e=this.parseTextData(e,a,s,!0,h,!0,!0)),s=s.substr(0,s.lastIndexOf(\".\")),i.add(this.options.textNodeName,e),this.addChild(n,i,s,c)}else{if(u.length>0&&u.lastIndexOf(\"/\")===u.length-1){\"/\"===a[a.length-1]?(a=a.substr(0,a.length-1),s=s.substr(0,s.length-1),u=a):u=u.substr(0,u.length-1),this.options.transformTagName&&(a=this.options.transformTagName(a));const t=new T(a);a!==u&&h&&(t[\":@\"]=this.buildAttributesMap(u,s,a)),this.addChild(n,t,s,c),s=s.substr(0,s.lastIndexOf(\".\"))}else{const t=new T(a);this.tagsNodeStack.push(n),a!==u&&h&&(t[\":@\"]=this.buildAttributesMap(u,s,a)),this.addChild(n,t,s,c),n=t}i=\"\",r=d}}else i+=t[r];return e.child};function Y(t,e,n,i){this.options.captureMetaData||(i=void 0);const s=this.options.updateTag(e.tagname,n,e[\":@\"]);!1===s||(\"string\"==typeof s?(e.tagname=s,t.addChild(e,i)):t.addChild(e,i))}const R=function(t){if(this.options.processEntities){for(let e in this.docTypeEntities){const n=this.docTypeEntities[e];t=t.replace(n.regx,n.val)}for(let e in this.lastEntities){const n=this.lastEntities[e];t=t.replace(n.regex,n.val)}if(this.options.htmlEntities)for(let e in this.htmlEntities){const n=this.htmlEntities[e];t=t.replace(n.regex,n.val)}t=t.replace(this.ampEntity.regex,this.ampEntity.val)}return t};function q(t,e,n,i){return t&&(void 0===i&&(i=0===e.child.length),void 0!==(t=this.parseTextData(t,e.tagname,n,!1,!!e[\":@\"]&&0!==Object.keys(e[\":@\"]).length,i))&&\"\"!==t&&e.add(this.options.textNodeName,t),t=\"\"),t}function Z(t,e,n){const i=\"*.\"+n;for(const n in t){const s=t[n];if(i===s||e===s)return!0}return!1}function W(t,e,n,i){const s=t.indexOf(e,n);if(-1===s)throw new Error(i);return s+e.length-1}function z(t,e,n,i=\">\"){const s=function(t,e,n=\">\"){let i,s=\"\";for(let r=e;r<t.length;r++){let e=t[r];if(i)e===i&&(i=\"\");else if('\"'===e||\"'\"===e)i=e;else if(e===n[0]){if(!n[1])return{data:s,index:r};if(t[r+1]===n[1])return{data:s,index:r}}else\"\\t\"===e&&(e=\" \");s+=e}}(t,e+1,i);if(!s)return;let r=s.data;const o=s.index,a=r.search(/\\s/);let l=r,u=!0;-1!==a&&(l=r.substring(0,a),r=r.substring(a+1).trimStart());const h=l;if(n){const t=l.indexOf(\":\");-1!==t&&(l=l.substr(t+1),u=l!==s.data.substr(t+1))}return{tagName:l,tagExp:r,closeIndex:o,attrExpPresent:u,rawTagName:h}}function J(t,e,n){const i=n;let s=1;for(;n<t.length;n++)if(\"<\"===t[n])if(\"/\"===t[n+1]){const r=W(t,\">\",n,`${e} is not closed`);if(t.substring(n+2,r).trim()===e&&(s--,0===s))return{tagContent:t.substring(i,n),i:r};n=r}else if(\"?\"===t[n+1])n=W(t,\"?>\",n+1,\"StopNode is not closed.\");else if(\"!--\"===t.substr(n+1,3))n=W(t,\"--\\x3e\",n+3,\"StopNode is not closed.\");else if(\"![\"===t.substr(n+1,2))n=W(t,\"]]>\",n,\"StopNode is not closed.\")-2;else{const i=z(t,n,\">\");i&&((i&&i.tagName)===e&&\"/\"!==i.tagExp[i.tagExp.length-1]&&s++,n=i.closeIndex)}}function H(t,e,n){if(e&&\"string\"==typeof t){const e=t.trim();return\"true\"===e||\"false\"!==e&&function(t,e={}){if(e=Object.assign({},V,e),!t||\"string\"!=typeof t)return t;let n=t.trim();if(void 0!==e.skipLike&&e.skipLike.test(n))return t;if(\"0\"===t)return 0;if(e.hex&&j.test(n))return function(t){if(parseInt)return parseInt(t,16);if(Number.parseInt)return Number.parseInt(t,16);if(window&&window.parseInt)return window.parseInt(t,16);throw new Error(\"parseInt, Number.parseInt, window.parseInt are not supported\")}(n);if(-1!==n.search(/.+[eE].+/))return function(t,e,n){if(!n.eNotation)return t;const i=e.match(M);if(i){let s=i[1]||\"\";const r=-1===i[3].indexOf(\"e\")?\"E\":\"e\",o=i[2],a=s?t[o.length+1]===r:t[o.length]===r;return o.length>1&&a?t:1!==o.length||!i[3].startsWith(`.${r}`)&&i[3][0]!==r?n.leadingZeros&&!a?(e=(i[1]||\"\")+i[3],Number(e)):t:Number(e)}return t}(t,n,e);{const s=D.exec(n);if(s){const r=s[1]||\"\",o=s[2];let a=(i=s[3])&&-1!==i.indexOf(\".\")?(\".\"===(i=i.replace(/0+$/,\"\"))?i=\"0\":\".\"===i[0]?i=\"0\"+i:\".\"===i[i.length-1]&&(i=i.substring(0,i.length-1)),i):i;const l=r?\".\"===t[o.length+1]:\".\"===t[o.length];if(!e.leadingZeros&&(o.length>1||1===o.length&&!l))return t;{const i=Number(n),s=String(i);if(0===i||-0===i)return i;if(-1!==s.search(/[eE]/))return e.eNotation?i:t;if(-1!==n.indexOf(\".\"))return\"0\"===s||s===a||s===`${r}${a}`?i:t;let l=o?a:n;return o?l===s||r+l===s?i:t:l===s||l===r+s?i:t}}return t}var i}(t,n)}return void 0!==t?t:\"\"}const K=T.getMetaDataSymbol();function Q(t,e){return tt(t,e)}function tt(t,e,n){let i;const s={};for(let r=0;r<t.length;r++){const o=t[r],a=et(o);let l=\"\";if(l=void 0===n?a:n+\".\"+a,a===e.textNodeName)void 0===i?i=o[a]:i+=\"\"+o[a];else{if(void 0===a)continue;if(o[a]){let t=tt(o[a],e,l);const n=it(t,e);void 0!==o[K]&&(t[K]=o[K]),o[\":@\"]?nt(t,o[\":@\"],l,e):1!==Object.keys(t).length||void 0===t[e.textNodeName]||e.alwaysCreateTextNode?0===Object.keys(t).length&&(e.alwaysCreateTextNode?t[e.textNodeName]=\"\":t=\"\"):t=t[e.textNodeName],void 0!==s[a]&&s.hasOwnProperty(a)?(Array.isArray(s[a])||(s[a]=[s[a]]),s[a].push(t)):e.isArray(a,l,n)?s[a]=[t]:s[a]=t}}}return\"string\"==typeof i?i.length>0&&(s[e.textNodeName]=i):void 0!==i&&(s[e.textNodeName]=i),s}function et(t){const e=Object.keys(t);for(let t=0;t<e.length;t++){const n=e[t];if(\":@\"!==n)return n}}function nt(t,e,n,i){if(e){const s=Object.keys(e),r=s.length;for(let o=0;o<r;o++){const r=s[o];i.isArray(r,n+\".\"+r,!0,!0)?t[r]=[e[r]]:t[r]=e[r]}}}function it(t,e){const{textNodeName:n}=e,i=Object.keys(t).length;return 0===i||!(1!==i||!t[n]&&\"boolean\"!=typeof t[n]&&0!==t[n])}class st{constructor(t){this.externalEntities={},this.options=function(t){return Object.assign({},v,t)}(t)}parse(t,e){if(\"string\"==typeof t);else{if(!t.toString)throw new Error(\"XML data is accepted in String or Bytes[] form.\");t=t.toString()}if(e){!0===e&&(e={});const n=a(t,e);if(!0!==n)throw Error(`${n.err.msg}:${n.err.line}:${n.err.col}`)}const n=new k(this.options);n.addExternalEntities(this.externalEntities);const i=n.parseXml(t);return this.options.preserveOrder||void 0===i?i:Q(i,this.options)}addEntity(t,e){if(-1!==e.indexOf(\"&\"))throw new Error(\"Entity value can't have '&'\");if(-1!==t.indexOf(\"&\")||-1!==t.indexOf(\";\"))throw new Error(\"An entity must be set without '&' and ';'. Eg. use '#xD' for '&#xD;'\");if(\"&\"===e)throw new Error(\"An entity with value '&' is not permitted\");this.externalEntities[t]=e}static getMetaDataSymbol(){return T.getMetaDataSymbol()}}function rt(t,e){let n=\"\";return e.format&&e.indentBy.length>0&&(n=\"\\n\"),ot(t,e,\"\",n)}function ot(t,e,n,i){let s=\"\",r=!1;for(let o=0;o<t.length;o++){const a=t[o],l=at(a);if(void 0===l)continue;let u=\"\";if(u=0===n.length?l:`${n}.${l}`,l===e.textNodeName){let t=a[l];ut(u,e)||(t=e.tagValueProcessor(l,t),t=ht(t,e)),r&&(s+=i),s+=t,r=!1;continue}if(l===e.cdataPropName){r&&(s+=i),s+=`<![CDATA[${a[l][0][e.textNodeName]}]]>`,r=!1;continue}if(l===e.commentPropName){s+=i+`\\x3c!--${a[l][0][e.textNodeName]}--\\x3e`,r=!0;continue}if(\"?\"===l[0]){const t=lt(a[\":@\"],e),n=\"?xml\"===l?\"\":i;let o=a[l][0][e.textNodeName];o=0!==o.length?\" \"+o:\"\",s+=n+`<${l}${o}${t}?>`,r=!0;continue}let h=i;\"\"!==h&&(h+=e.indentBy);const d=i+`<${l}${lt(a[\":@\"],e)}`,f=ot(a[l],e,u,h);-1!==e.unpairedTags.indexOf(l)?e.suppressUnpairedNode?s+=d+\">\":s+=d+\"/>\":f&&0!==f.length||!e.suppressEmptyNode?f&&f.endsWith(\">\")?s+=d+`>${f}${i}</${l}>`:(s+=d+\">\",f&&\"\"!==i&&(f.includes(\"/>\")||f.includes(\"</\"))?s+=i+e.indentBy+f+i:s+=f,s+=`</${l}>`):s+=d+\"/>\",r=!0}return s}function at(t){const e=Object.keys(t);for(let n=0;n<e.length;n++){const i=e[n];if(t.hasOwnProperty(i)&&\":@\"!==i)return i}}function lt(t,e){let n=\"\";if(t&&!e.ignoreAttributes)for(let i in t){if(!t.hasOwnProperty(i))continue;let s=e.attributeValueProcessor(i,t[i]);s=ht(s,e),!0===s&&e.suppressBooleanAttributes?n+=` ${i.substr(e.attributeNamePrefix.length)}`:n+=` ${i.substr(e.attributeNamePrefix.length)}=\"${s}\"`}return n}function ut(t,e){let n=(t=t.substr(0,t.length-e.textNodeName.length-1)).substr(t.lastIndexOf(\".\")+1);for(let i in e.stopNodes)if(e.stopNodes[i]===t||e.stopNodes[i]===\"*.\"+n)return!0;return!1}function ht(t,e){if(t&&t.length>0&&e.processEntities)for(let n=0;n<e.entities.length;n++){const i=e.entities[n];t=t.replace(i.regex,i.val)}return t}const dt={attributeNamePrefix:\"@_\",attributesGroupName:!1,textNodeName:\"#text\",ignoreAttributes:!0,cdataPropName:!1,format:!1,indentBy:\"  \",suppressEmptyNode:!1,suppressUnpairedNode:!0,suppressBooleanAttributes:!0,tagValueProcessor:function(t,e){return e},attributeValueProcessor:function(t,e){return e},preserveOrder:!1,commentPropName:!1,unpairedTags:[],entities:[{regex:new RegExp(\"&\",\"g\"),val:\"&amp;\"},{regex:new RegExp(\">\",\"g\"),val:\"&gt;\"},{regex:new RegExp(\"<\",\"g\"),val:\"&lt;\"},{regex:new RegExp(\"'\",\"g\"),val:\"&apos;\"},{regex:new RegExp('\"',\"g\"),val:\"&quot;\"}],processEntities:!0,stopNodes:[],oneListGroup:!1};function ft(t){this.options=Object.assign({},dt,t),!0===this.options.ignoreAttributes||this.options.attributesGroupName?this.isAttribute=function(){return!1}:(this.ignoreAttributesFn=_(this.options.ignoreAttributes),this.attrPrefixLen=this.options.attributeNamePrefix.length,this.isAttribute=gt),this.processTextOrObjNode=ct,this.options.format?(this.indentate=pt,this.tagEndChar=\">\\n\",this.newLine=\"\\n\"):(this.indentate=function(){return\"\"},this.tagEndChar=\">\",this.newLine=\"\")}function ct(t,e,n,i){const s=this.j2x(t,n+1,i.concat(e));return void 0!==t[this.options.textNodeName]&&1===Object.keys(t).length?this.buildTextValNode(t[this.options.textNodeName],e,s.attrStr,n):this.buildObjectNode(s.val,e,s.attrStr,n)}function pt(t){return this.options.indentBy.repeat(t)}function gt(t){return!(!t.startsWith(this.options.attributeNamePrefix)||t===this.options.textNodeName)&&t.substr(this.attrPrefixLen)}ft.prototype.build=function(t){return this.options.preserveOrder?rt(t,this.options):(Array.isArray(t)&&this.options.arrayNodeName&&this.options.arrayNodeName.length>1&&(t={[this.options.arrayNodeName]:t}),this.j2x(t,0,[]).val)},ft.prototype.j2x=function(t,e,n){let i=\"\",s=\"\";const r=n.join(\".\");for(let o in t)if(Object.prototype.hasOwnProperty.call(t,o))if(void 0===t[o])this.isAttribute(o)&&(s+=\"\");else if(null===t[o])this.isAttribute(o)||o===this.options.cdataPropName?s+=\"\":\"?\"===o[0]?s+=this.indentate(e)+\"<\"+o+\"?\"+this.tagEndChar:s+=this.indentate(e)+\"<\"+o+\"/\"+this.tagEndChar;else if(t[o]instanceof Date)s+=this.buildTextValNode(t[o],o,\"\",e);else if(\"object\"!=typeof t[o]){const n=this.isAttribute(o);if(n&&!this.ignoreAttributesFn(n,r))i+=this.buildAttrPairStr(n,\"\"+t[o]);else if(!n)if(o===this.options.textNodeName){let e=this.options.tagValueProcessor(o,\"\"+t[o]);s+=this.replaceEntitiesValue(e)}else s+=this.buildTextValNode(t[o],o,\"\",e)}else if(Array.isArray(t[o])){const i=t[o].length;let r=\"\",a=\"\";for(let l=0;l<i;l++){const i=t[o][l];if(void 0===i);else if(null===i)\"?\"===o[0]?s+=this.indentate(e)+\"<\"+o+\"?\"+this.tagEndChar:s+=this.indentate(e)+\"<\"+o+\"/\"+this.tagEndChar;else if(\"object\"==typeof i)if(this.options.oneListGroup){const t=this.j2x(i,e+1,n.concat(o));r+=t.val,this.options.attributesGroupName&&i.hasOwnProperty(this.options.attributesGroupName)&&(a+=t.attrStr)}else r+=this.processTextOrObjNode(i,o,e,n);else if(this.options.oneListGroup){let t=this.options.tagValueProcessor(o,i);t=this.replaceEntitiesValue(t),r+=t}else r+=this.buildTextValNode(i,o,\"\",e)}this.options.oneListGroup&&(r=this.buildObjectNode(r,o,a,e)),s+=r}else if(this.options.attributesGroupName&&o===this.options.attributesGroupName){const e=Object.keys(t[o]),n=e.length;for(let s=0;s<n;s++)i+=this.buildAttrPairStr(e[s],\"\"+t[o][e[s]])}else s+=this.processTextOrObjNode(t[o],o,e,n);return{attrStr:i,val:s}},ft.prototype.buildAttrPairStr=function(t,e){return e=this.options.attributeValueProcessor(t,\"\"+e),e=this.replaceEntitiesValue(e),this.options.suppressBooleanAttributes&&\"true\"===e?\" \"+t:\" \"+t+'=\"'+e+'\"'},ft.prototype.buildObjectNode=function(t,e,n,i){if(\"\"===t)return\"?\"===e[0]?this.indentate(i)+\"<\"+e+n+\"?\"+this.tagEndChar:this.indentate(i)+\"<\"+e+n+this.closeTag(e)+this.tagEndChar;{let s=\"</\"+e+this.tagEndChar,r=\"\";return\"?\"===e[0]&&(r=\"?\",s=\"\"),!n&&\"\"!==n||-1!==t.indexOf(\"<\")?!1!==this.options.commentPropName&&e===this.options.commentPropName&&0===r.length?this.indentate(i)+`\\x3c!--${t}--\\x3e`+this.newLine:this.indentate(i)+\"<\"+e+n+r+this.tagEndChar+t+this.indentate(i)+s:this.indentate(i)+\"<\"+e+n+r+\">\"+t+s}},ft.prototype.closeTag=function(t){let e=\"\";return-1!==this.options.unpairedTags.indexOf(t)?this.options.suppressUnpairedNode||(e=\"/\"):e=this.options.suppressEmptyNode?\"/\":`></${t}`,e},ft.prototype.buildTextValNode=function(t,e,n,i){if(!1!==this.options.cdataPropName&&e===this.options.cdataPropName)return this.indentate(i)+`<![CDATA[${t}]]>`+this.newLine;if(!1!==this.options.commentPropName&&e===this.options.commentPropName)return this.indentate(i)+`\\x3c!--${t}--\\x3e`+this.newLine;if(\"?\"===e[0])return this.indentate(i)+\"<\"+e+n+\"?\"+this.tagEndChar;{let s=this.options.tagValueProcessor(e,t);return s=this.replaceEntitiesValue(s),\"\"===s?this.indentate(i)+\"<\"+e+n+this.closeTag(e)+this.tagEndChar:this.indentate(i)+\"<\"+e+n+\">\"+s+\"</\"+e+this.tagEndChar}},ft.prototype.replaceEntitiesValue=function(t){if(t&&t.length>0&&this.options.processEntities)for(let e=0;e<this.options.entities.length;e++){const n=this.options.entities[e];t=t.replace(n.regex,n.val)}return t};const mt={validate:a};module.exports=e})();", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseXML = parseXML;\nconst fast_xml_parser_1 = require(\"fast-xml-parser\");\nconst parser = new fast_xml_parser_1.XMLParser({\n    attributeNamePrefix: \"\",\n    htmlEntities: true,\n    ignoreAttributes: false,\n    ignoreDeclaration: true,\n    parseTagValue: false,\n    trimValues: false,\n    tagValueProcessor: (_, val) => (val.trim() === \"\" && val.includes(\"\\n\") ? \"\" : undefined),\n});\nparser.addEntity(\"#xD\", \"\\r\");\nparser.addEntity(\"#10\", \"\\n\");\nfunction parseXML(xmlString) {\n    return parser.parse(xmlString, true);\n}\n", "\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar index_exports = {};\n__export(index_exports, {\n  XmlNode: () => XmlNode,\n  XmlText: () => XmlText,\n  parseXML: () => import_xml_parser.parseXML\n});\nmodule.exports = __toCommonJS(index_exports);\n\n// src/escape-attribute.ts\nfunction escapeAttribute(value) {\n  return value.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\");\n}\n__name(escapeAttribute, \"escapeAttribute\");\n\n// src/escape-element.ts\nfunction escapeElement(value) {\n  return value.replace(/&/g, \"&amp;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&apos;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\\r/g, \"&#x0D;\").replace(/\\n/g, \"&#x0A;\").replace(/\\u0085/g, \"&#x85;\").replace(/\\u2028/, \"&#x2028;\");\n}\n__name(escapeElement, \"escapeElement\");\n\n// src/XmlText.ts\nvar XmlText = class {\n  constructor(value) {\n    this.value = value;\n  }\n  static {\n    __name(this, \"XmlText\");\n  }\n  toString() {\n    return escapeElement(\"\" + this.value);\n  }\n};\n\n// src/XmlNode.ts\nvar XmlNode = class _XmlNode {\n  constructor(name, children = []) {\n    this.name = name;\n    this.children = children;\n  }\n  static {\n    __name(this, \"XmlNode\");\n  }\n  attributes = {};\n  static of(name, childText, withName) {\n    const node = new _XmlNode(name);\n    if (childText !== void 0) {\n      node.addChildNode(new XmlText(childText));\n    }\n    if (withName !== void 0) {\n      node.withName(withName);\n    }\n    return node;\n  }\n  withName(name) {\n    this.name = name;\n    return this;\n  }\n  addAttribute(name, value) {\n    this.attributes[name] = value;\n    return this;\n  }\n  addChildNode(child) {\n    this.children.push(child);\n    return this;\n  }\n  removeAttribute(name) {\n    delete this.attributes[name];\n    return this;\n  }\n  /**\n   * @internal\n   * Alias of {@link XmlNode#withName(string)} for codegen brevity.\n   */\n  n(name) {\n    this.name = name;\n    return this;\n  }\n  /**\n   * @internal\n   * Alias of {@link XmlNode#addChildNode(string)} for codegen brevity.\n   */\n  c(child) {\n    this.children.push(child);\n    return this;\n  }\n  /**\n   * @internal\n   * Checked version of {@link XmlNode#addAttribute(string)} for codegen brevity.\n   */\n  a(name, value) {\n    if (value != null) {\n      this.attributes[name] = value;\n    }\n    return this;\n  }\n  /**\n   * Create a child node.\n   * Used in serialization of string fields.\n   * @internal\n   */\n  cc(input, field, withName = field) {\n    if (input[field] != null) {\n      const node = _XmlNode.of(field, input[field]).withName(withName);\n      this.c(node);\n    }\n  }\n  /**\n   * Creates list child nodes.\n   * @internal\n   */\n  l(input, listName, memberName, valueProvider) {\n    if (input[listName] != null) {\n      const nodes = valueProvider();\n      nodes.map((node) => {\n        node.withName(memberName);\n        this.c(node);\n      });\n    }\n  }\n  /**\n   * Creates list child nodes with container.\n   * @internal\n   */\n  lc(input, listName, memberName, valueProvider) {\n    if (input[listName] != null) {\n      const nodes = valueProvider();\n      const containerNode = new _XmlNode(memberName);\n      nodes.map((node) => {\n        containerNode.c(node);\n      });\n      this.c(containerNode);\n    }\n  }\n  toString() {\n    const hasChildren = Boolean(this.children.length);\n    let xmlText = `<${this.name}`;\n    const attributes = this.attributes;\n    for (const attributeName of Object.keys(attributes)) {\n      const attribute = attributes[attributeName];\n      if (attribute != null) {\n        xmlText += ` ${attributeName}=\"${escapeAttribute(\"\" + attribute)}\"`;\n      }\n    }\n    return xmlText += !hasChildren ? \"/>\" : `>${this.children.map((c) => c.toString()).join(\"\")}</${this.name}>`;\n  }\n};\n\n// src/index.ts\nvar import_xml_parser = require(\"././xml-parser\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  parseXML,\n  XmlNode,\n  XmlText\n});\n\n", "import { parseXML } from \"@aws-sdk/xml-builder\";\nimport { FromStringShapeDeserializer } from \"@smithy/core/protocols\";\nimport { NormalizedSchema } from \"@smithy/core/schema\";\nimport { getValueFromTextNode } from \"@smithy/smithy-client\";\nimport { toUtf8 } from \"@smithy/util-utf8\";\nimport { SerdeContextConfig } from \"../ConfigurableSerdeContext\";\nexport class XmlShapeDeserializer extends SerdeContextConfig {\n    settings;\n    stringDeserializer;\n    constructor(settings) {\n        super();\n        this.settings = settings;\n        this.stringDeserializer = new FromStringShapeDeserializer(settings);\n    }\n    setSerdeContext(serdeContext) {\n        this.serdeContext = serdeContext;\n        this.stringDeserializer.setSerdeContext(serdeContext);\n    }\n    read(schema, bytes, key) {\n        const ns = NormalizedSchema.of(schema);\n        const memberSchemas = ns.getMemberSchemas();\n        const isEventPayload = ns.isStructSchema() &&\n            ns.isMemberSchema() &&\n            !!Object.values(memberSchemas).find((memberNs) => {\n                return !!memberNs.getMemberTraits().eventPayload;\n            });\n        if (isEventPayload) {\n            const output = {};\n            const memberName = Object.keys(memberSchemas)[0];\n            const eventMemberSchema = memberSchemas[memberName];\n            if (eventMemberSchema.isBlobSchema()) {\n                output[memberName] = bytes;\n            }\n            else {\n                output[memberName] = this.read(memberSchemas[memberName], bytes);\n            }\n            return output;\n        }\n        const xmlString = (this.serdeContext?.utf8Encoder ?? toUtf8)(bytes);\n        const parsedObject = this.parseXml(xmlString);\n        return this.readSchema(schema, key ? parsedObject[key] : parsedObject);\n    }\n    readSchema(_schema, value) {\n        const ns = NormalizedSchema.of(_schema);\n        if (ns.isUnitSchema()) {\n            return;\n        }\n        const traits = ns.getMergedTraits();\n        if (ns.isListSchema() && !Array.isArray(value)) {\n            return this.readSchema(ns, [value]);\n        }\n        if (value == null) {\n            return value;\n        }\n        if (typeof value === \"object\") {\n            const sparse = !!traits.sparse;\n            const flat = !!traits.xmlFlattened;\n            if (ns.isListSchema()) {\n                const listValue = ns.getValueSchema();\n                const buffer = [];\n                const sourceKey = listValue.getMergedTraits().xmlName ?? \"member\";\n                const source = flat ? value : (value[0] ?? value)[sourceKey];\n                const sourceArray = Array.isArray(source) ? source : [source];\n                for (const v of sourceArray) {\n                    if (v != null || sparse) {\n                        buffer.push(this.readSchema(listValue, v));\n                    }\n                }\n                return buffer;\n            }\n            const buffer = {};\n            if (ns.isMapSchema()) {\n                const keyNs = ns.getKeySchema();\n                const memberNs = ns.getValueSchema();\n                let entries;\n                if (flat) {\n                    entries = Array.isArray(value) ? value : [value];\n                }\n                else {\n                    entries = Array.isArray(value.entry) ? value.entry : [value.entry];\n                }\n                const keyProperty = keyNs.getMergedTraits().xmlName ?? \"key\";\n                const valueProperty = memberNs.getMergedTraits().xmlName ?? \"value\";\n                for (const entry of entries) {\n                    const key = entry[keyProperty];\n                    const value = entry[valueProperty];\n                    if (value != null || sparse) {\n                        buffer[key] = this.readSchema(memberNs, value);\n                    }\n                }\n                return buffer;\n            }\n            if (ns.isStructSchema()) {\n                for (const [memberName, memberSchema] of ns.structIterator()) {\n                    const memberTraits = memberSchema.getMergedTraits();\n                    const xmlObjectKey = !memberTraits.httpPayload\n                        ? memberSchema.getMemberTraits().xmlName ?? memberName\n                        : memberTraits.xmlName ?? memberSchema.getName();\n                    if (value[xmlObjectKey] != null) {\n                        buffer[memberName] = this.readSchema(memberSchema, value[xmlObjectKey]);\n                    }\n                }\n                return buffer;\n            }\n            if (ns.isDocumentSchema()) {\n                return value;\n            }\n            throw new Error(`@aws-sdk/core/protocols - xml deserializer unhandled schema type for ${ns.getName(true)}`);\n        }\n        if (ns.isListSchema()) {\n            return [];\n        }\n        if (ns.isMapSchema() || ns.isStructSchema()) {\n            return {};\n        }\n        return this.stringDeserializer.read(ns, value);\n    }\n    parseXml(xml) {\n        if (xml.length) {\n            let parsedObj;\n            try {\n                parsedObj = parseXML(xml);\n            }\n            catch (e) {\n                if (e && typeof e === \"object\") {\n                    Object.defineProperty(e, \"$responseBodyText\", {\n                        value: xml,\n                    });\n                }\n                throw e;\n            }\n            const textNodeName = \"#text\";\n            const key = Object.keys(parsedObj)[0];\n            const parsedObjToReturn = parsedObj[key];\n            if (parsedObjToReturn[textNodeName]) {\n                parsedObjToReturn[key] = parsedObjToReturn[textNodeName];\n                delete parsedObjToReturn[textNodeName];\n            }\n            return getValueFromTextNode(parsedObjToReturn);\n        }\n        return {};\n    }\n}\n", "import { determineTimestampFormat, extendedEncodeURIComponent } from \"@smithy/core/protocols\";\nimport { NormalizedSchema } from \"@smithy/core/schema\";\nimport { generateIdempotencyToken, NumericValue } from \"@smithy/core/serde\";\nimport { dateToUtcString } from \"@smithy/smithy-client\";\nimport { toBase64 } from \"@smithy/util-base64\";\nimport { SerdeContextConfig } from \"../ConfigurableSerdeContext\";\nexport class QueryShapeSerializer extends SerdeContextConfig {\n    settings;\n    buffer;\n    constructor(settings) {\n        super();\n        this.settings = settings;\n    }\n    write(schema, value, prefix = \"\") {\n        if (this.buffer === undefined) {\n            this.buffer = \"\";\n        }\n        const ns = NormalizedSchema.of(schema);\n        if (prefix && !prefix.endsWith(\".\")) {\n            prefix += \".\";\n        }\n        if (ns.isBlobSchema()) {\n            if (typeof value === \"string\" || value instanceof Uint8Array) {\n                this.writeKey(prefix);\n                this.writeValue((this.serdeContext?.base64Encoder ?? toBase64)(value));\n            }\n        }\n        else if (ns.isBooleanSchema() || ns.isNumericSchema() || ns.isStringSchema()) {\n            if (value != null) {\n                this.writeKey(prefix);\n                this.writeValue(String(value));\n            }\n            else if (ns.isIdempotencyToken()) {\n                this.writeKey(prefix);\n                this.writeValue(generateIdempotencyToken());\n            }\n        }\n        else if (ns.isBigIntegerSchema()) {\n            if (value != null) {\n                this.writeKey(prefix);\n                this.writeValue(String(value));\n            }\n        }\n        else if (ns.isBigDecimalSchema()) {\n            if (value != null) {\n                this.writeKey(prefix);\n                this.writeValue(value instanceof NumericValue ? value.string : String(value));\n            }\n        }\n        else if (ns.isTimestampSchema()) {\n            if (value instanceof Date) {\n                this.writeKey(prefix);\n                const format = determineTimestampFormat(ns, this.settings);\n                switch (format) {\n                    case 5:\n                        this.writeValue(value.toISOString().replace(\".000Z\", \"Z\"));\n                        break;\n                    case 6:\n                        this.writeValue(dateToUtcString(value));\n                        break;\n                    case 7:\n                        this.writeValue(String(value.getTime() / 1000));\n                        break;\n                }\n            }\n        }\n        else if (ns.isDocumentSchema()) {\n            throw new Error(`@aws-sdk/core/protocols - QuerySerializer unsupported document type ${ns.getName(true)}`);\n        }\n        else if (ns.isListSchema()) {\n            if (Array.isArray(value)) {\n                if (value.length === 0) {\n                    if (this.settings.serializeEmptyLists) {\n                        this.writeKey(prefix);\n                        this.writeValue(\"\");\n                    }\n                }\n                else {\n                    const member = ns.getValueSchema();\n                    const flat = this.settings.flattenLists || ns.getMergedTraits().xmlFlattened;\n                    let i = 1;\n                    for (const item of value) {\n                        if (item == null) {\n                            continue;\n                        }\n                        const suffix = this.getKey(\"member\", member.getMergedTraits().xmlName);\n                        const key = flat ? `${prefix}${i}` : `${prefix}${suffix}.${i}`;\n                        this.write(member, item, key);\n                        ++i;\n                    }\n                }\n            }\n        }\n        else if (ns.isMapSchema()) {\n            if (value && typeof value === \"object\") {\n                const keySchema = ns.getKeySchema();\n                const memberSchema = ns.getValueSchema();\n                const flat = ns.getMergedTraits().xmlFlattened;\n                let i = 1;\n                for (const [k, v] of Object.entries(value)) {\n                    if (v == null) {\n                        continue;\n                    }\n                    const keySuffix = this.getKey(\"key\", keySchema.getMergedTraits().xmlName);\n                    const key = flat ? `${prefix}${i}.${keySuffix}` : `${prefix}entry.${i}.${keySuffix}`;\n                    const valueSuffix = this.getKey(\"value\", memberSchema.getMergedTraits().xmlName);\n                    const valueKey = flat ? `${prefix}${i}.${valueSuffix}` : `${prefix}entry.${i}.${valueSuffix}`;\n                    this.write(keySchema, k, key);\n                    this.write(memberSchema, v, valueKey);\n                    ++i;\n                }\n            }\n        }\n        else if (ns.isStructSchema()) {\n            if (value && typeof value === \"object\") {\n                for (const [memberName, member] of ns.structIterator()) {\n                    if (value[memberName] == null && !member.isIdempotencyToken()) {\n                        continue;\n                    }\n                    const suffix = this.getKey(memberName, member.getMergedTraits().xmlName);\n                    const key = `${prefix}${suffix}`;\n                    this.write(member, value[memberName], key);\n                }\n            }\n        }\n        else if (ns.isUnitSchema()) {\n        }\n        else {\n            throw new Error(`@aws-sdk/core/protocols - QuerySerializer unrecognized schema type ${ns.getName(true)}`);\n        }\n    }\n    flush() {\n        if (this.buffer === undefined) {\n            throw new Error(\"@aws-sdk/core/protocols - QuerySerializer cannot flush with nothing written to buffer.\");\n        }\n        const str = this.buffer;\n        delete this.buffer;\n        return str;\n    }\n    getKey(memberName, xmlName) {\n        const key = xmlName ?? memberName;\n        if (this.settings.capitalizeKeys) {\n            return key[0].toUpperCase() + key.slice(1);\n        }\n        return key;\n    }\n    writeKey(key) {\n        if (key.endsWith(\".\")) {\n            key = key.slice(0, key.length - 1);\n        }\n        this.buffer += `&${extendedEncodeURIComponent(key)}=`;\n    }\n    writeValue(value) {\n        this.buffer += extendedEncodeURIComponent(value);\n    }\n}\n", "import { collectBody, RpcProtocol } from \"@smithy/core/protocols\";\nimport { deref, NormalizedSchema, TypeRegistry } from \"@smithy/core/schema\";\nimport { ProtocolLib } from \"../ProtocolLib\";\nimport { XmlShapeDeserializer } from \"../xml/XmlShapeDeserializer\";\nimport { QueryShapeSerializer } from \"./QueryShapeSerializer\";\nexport class AwsQueryProtocol extends RpcProtocol {\n    options;\n    serializer;\n    deserializer;\n    mixin = new ProtocolLib();\n    constructor(options) {\n        super({\n            defaultNamespace: options.defaultNamespace,\n        });\n        this.options = options;\n        const settings = {\n            timestampFormat: {\n                useTrait: true,\n                default: 5,\n            },\n            httpBindings: false,\n            xmlNamespace: options.xmlNamespace,\n            serviceNamespace: options.defaultNamespace,\n            serializeEmptyLists: true,\n        };\n        this.serializer = new QueryShapeSerializer(settings);\n        this.deserializer = new XmlShapeDeserializer(settings);\n    }\n    getShapeId() {\n        return \"aws.protocols#awsQuery\";\n    }\n    setSerdeContext(serdeContext) {\n        this.serializer.setSerdeContext(serdeContext);\n        this.deserializer.setSerdeContext(serdeContext);\n    }\n    getPayloadCodec() {\n        throw new Error(\"AWSQuery protocol has no payload codec.\");\n    }\n    async serializeRequest(operationSchema, input, context) {\n        const request = await super.serializeRequest(operationSchema, input, context);\n        if (!request.path.endsWith(\"/\")) {\n            request.path += \"/\";\n        }\n        Object.assign(request.headers, {\n            \"content-type\": `application/x-www-form-urlencoded`,\n        });\n        if (deref(operationSchema.input) === \"unit\" || !request.body) {\n            request.body = \"\";\n        }\n        const action = operationSchema.name.split(\"#\")[1] ?? operationSchema.name;\n        request.body = `Action=${action}&Version=${this.options.version}` + request.body;\n        if (request.body.endsWith(\"&\")) {\n            request.body = request.body.slice(-1);\n        }\n        return request;\n    }\n    async deserializeResponse(operationSchema, context, response) {\n        const deserializer = this.deserializer;\n        const ns = NormalizedSchema.of(operationSchema.output);\n        const dataObject = {};\n        if (response.statusCode >= 300) {\n            const bytes = await collectBody(response.body, context);\n            if (bytes.byteLength > 0) {\n                Object.assign(dataObject, await deserializer.read(15, bytes));\n            }\n            await this.handleError(operationSchema, context, response, dataObject, this.deserializeMetadata(response));\n        }\n        for (const header in response.headers) {\n            const value = response.headers[header];\n            delete response.headers[header];\n            response.headers[header.toLowerCase()] = value;\n        }\n        const shortName = operationSchema.name.split(\"#\")[1] ?? operationSchema.name;\n        const awsQueryResultKey = ns.isStructSchema() && this.useNestedResult() ? shortName + \"Result\" : undefined;\n        const bytes = await collectBody(response.body, context);\n        if (bytes.byteLength > 0) {\n            Object.assign(dataObject, await deserializer.read(ns, bytes, awsQueryResultKey));\n        }\n        const output = {\n            $metadata: this.deserializeMetadata(response),\n            ...dataObject,\n        };\n        return output;\n    }\n    useNestedResult() {\n        return true;\n    }\n    async handleError(operationSchema, context, response, dataObject, metadata) {\n        const errorIdentifier = this.loadQueryErrorCode(response, dataObject) ?? \"Unknown\";\n        const errorData = this.loadQueryError(dataObject);\n        const message = this.loadQueryErrorMessage(dataObject);\n        errorData.message = message;\n        errorData.Error = {\n            Type: errorData.Type,\n            Code: errorData.Code,\n            Message: message,\n        };\n        const { errorSchema, errorMetadata } = await this.mixin.getErrorSchemaOrThrowBaseException(errorIdentifier, this.options.defaultNamespace, response, errorData, metadata, (registry, errorName) => registry.find((schema) => NormalizedSchema.of(schema).getMergedTraits().awsQueryError?.[0] === errorName));\n        const ns = NormalizedSchema.of(errorSchema);\n        const ErrorCtor = TypeRegistry.for(errorSchema.namespace).getErrorCtor(errorSchema) ?? Error;\n        const exception = new ErrorCtor(message);\n        const output = {\n            Error: errorData.Error,\n        };\n        for (const [name, member] of ns.structIterator()) {\n            const target = member.getMergedTraits().xmlName ?? name;\n            const value = errorData[target] ?? dataObject[target];\n            output[name] = this.deserializer.readSchema(member, value);\n        }\n        throw Object.assign(exception, errorMetadata, {\n            $fault: ns.getMergedTraits().error,\n            message,\n        }, output);\n    }\n    loadQueryErrorCode(output, data) {\n        const code = (data.Errors?.[0]?.Error ?? data.Errors?.Error ?? data.Error)?.Code;\n        if (code !== undefined) {\n            return code;\n        }\n        if (output.statusCode == 404) {\n            return \"NotFound\";\n        }\n    }\n    loadQueryError(data) {\n        return data.Errors?.[0]?.Error ?? data.Errors?.Error ?? data.Error;\n    }\n    loadQueryErrorMessage(data) {\n        const errorData = this.loadQueryError(data);\n        return errorData?.message ?? errorData?.Message ?? data.message ?? data.Message ?? \"Unknown\";\n    }\n    getDefaultContentType() {\n        return \"application/x-www-form-urlencoded\";\n    }\n}\n", "import { AwsQueryProtocol } from \"./AwsQueryProtocol\";\nexport class AwsEc2QueryProtocol extends AwsQueryProtocol {\n    options;\n    constructor(options) {\n        super(options);\n        this.options = options;\n        const ec2Settings = {\n            capitalizeKeys: true,\n            flattenLists: true,\n            serializeEmptyLists: false,\n        };\n        Object.assign(this.serializer.settings, ec2Settings);\n    }\n    useNestedResult() {\n        return false;\n    }\n}\n", "import { parseXML } from \"@aws-sdk/xml-builder\";\nimport { getValueFromTextNode } from \"@smithy/smithy-client\";\nimport { collectBodyString } from \"../common\";\nexport const parseXmlBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        let parsedObj;\n        try {\n            parsedObj = parseXML(encoded);\n        }\n        catch (e) {\n            if (e && typeof e === \"object\") {\n                Object.defineProperty(e, \"$responseBodyText\", {\n                    value: encoded,\n                });\n            }\n            throw e;\n        }\n        const textNodeName = \"#text\";\n        const key = Object.keys(parsedObj)[0];\n        const parsedObjToReturn = parsedObj[key];\n        if (parsedObjToReturn[textNodeName]) {\n            parsedObjToReturn[key] = parsedObjToReturn[textNodeName];\n            delete parsedObjToReturn[textNodeName];\n        }\n        return getValueFromTextNode(parsedObjToReturn);\n    }\n    return {};\n});\nexport const parseXmlErrorBody = async (errorBody, context) => {\n    const value = await parseXmlBody(errorBody, context);\n    if (value.Error) {\n        value.Error.message = value.Error.message ?? value.Error.Message;\n    }\n    return value;\n};\nexport const loadRestXmlErrorCode = (output, data) => {\n    if (data?.Error?.Code !== undefined) {\n        return data.Error.Code;\n    }\n    if (data?.Code !== undefined) {\n        return data.Code;\n    }\n    if (output.statusCode == 404) {\n        return \"NotFound\";\n    }\n};\n", "import { XmlNode, XmlText } from \"@aws-sdk/xml-builder\";\nimport { determineTimestampFormat } from \"@smithy/core/protocols\";\nimport { NormalizedSchema } from \"@smithy/core/schema\";\nimport { generateIdempotencyToken, NumericValue } from \"@smithy/core/serde\";\nimport { dateToUtcString } from \"@smithy/smithy-client\";\nimport { fromBase64, toBase64 } from \"@smithy/util-base64\";\nimport { SerdeContextConfig } from \"../ConfigurableSerdeContext\";\nexport class XmlShapeSerializer extends SerdeContextConfig {\n    settings;\n    stringBuffer;\n    byteBuffer;\n    buffer;\n    constructor(settings) {\n        super();\n        this.settings = settings;\n    }\n    write(schema, value) {\n        const ns = NormalizedSchema.of(schema);\n        if (ns.isStringSchema() && typeof value === \"string\") {\n            this.stringBuffer = value;\n        }\n        else if (ns.isBlobSchema()) {\n            this.byteBuffer =\n                \"byteLength\" in value\n                    ? value\n                    : (this.serdeContext?.base64Decoder ?? fromBase64)(value);\n        }\n        else {\n            this.buffer = this.writeStruct(ns, value, undefined);\n            const traits = ns.getMergedTraits();\n            if (traits.httpPayload && !traits.xmlName) {\n                this.buffer.withName(ns.getName());\n            }\n        }\n    }\n    flush() {\n        if (this.byteBuffer !== undefined) {\n            const bytes = this.byteBuffer;\n            delete this.byteBuffer;\n            return bytes;\n        }\n        if (this.stringBuffer !== undefined) {\n            const str = this.stringBuffer;\n            delete this.stringBuffer;\n            return str;\n        }\n        const buffer = this.buffer;\n        if (this.settings.xmlNamespace) {\n            if (!buffer?.attributes?.[\"xmlns\"]) {\n                buffer.addAttribute(\"xmlns\", this.settings.xmlNamespace);\n            }\n        }\n        delete this.buffer;\n        return buffer.toString();\n    }\n    writeStruct(ns, value, parentXmlns) {\n        const traits = ns.getMergedTraits();\n        const name = ns.isMemberSchema() && !traits.httpPayload\n            ? ns.getMemberTraits().xmlName ?? ns.getMemberName()\n            : traits.xmlName ?? ns.getName();\n        if (!name || !ns.isStructSchema()) {\n            throw new Error(`@aws-sdk/core/protocols - xml serializer, cannot write struct with empty name or non-struct, schema=${ns.getName(true)}.`);\n        }\n        const structXmlNode = XmlNode.of(name);\n        const [xmlnsAttr, xmlns] = this.getXmlnsAttribute(ns, parentXmlns);\n        for (const [memberName, memberSchema] of ns.structIterator()) {\n            const val = value[memberName];\n            if (val != null || memberSchema.isIdempotencyToken()) {\n                if (memberSchema.getMergedTraits().xmlAttribute) {\n                    structXmlNode.addAttribute(memberSchema.getMergedTraits().xmlName ?? memberName, this.writeSimple(memberSchema, val));\n                    continue;\n                }\n                if (memberSchema.isListSchema()) {\n                    this.writeList(memberSchema, val, structXmlNode, xmlns);\n                }\n                else if (memberSchema.isMapSchema()) {\n                    this.writeMap(memberSchema, val, structXmlNode, xmlns);\n                }\n                else if (memberSchema.isStructSchema()) {\n                    structXmlNode.addChildNode(this.writeStruct(memberSchema, val, xmlns));\n                }\n                else {\n                    const memberNode = XmlNode.of(memberSchema.getMergedTraits().xmlName ?? memberSchema.getMemberName());\n                    this.writeSimpleInto(memberSchema, val, memberNode, xmlns);\n                    structXmlNode.addChildNode(memberNode);\n                }\n            }\n        }\n        if (xmlns) {\n            structXmlNode.addAttribute(xmlnsAttr, xmlns);\n        }\n        return structXmlNode;\n    }\n    writeList(listMember, array, container, parentXmlns) {\n        if (!listMember.isMemberSchema()) {\n            throw new Error(`@aws-sdk/core/protocols - xml serializer, cannot write non-member list: ${listMember.getName(true)}`);\n        }\n        const listTraits = listMember.getMergedTraits();\n        const listValueSchema = listMember.getValueSchema();\n        const listValueTraits = listValueSchema.getMergedTraits();\n        const sparse = !!listValueTraits.sparse;\n        const flat = !!listTraits.xmlFlattened;\n        const [xmlnsAttr, xmlns] = this.getXmlnsAttribute(listMember, parentXmlns);\n        const writeItem = (container, value) => {\n            if (listValueSchema.isListSchema()) {\n                this.writeList(listValueSchema, Array.isArray(value) ? value : [value], container, xmlns);\n            }\n            else if (listValueSchema.isMapSchema()) {\n                this.writeMap(listValueSchema, value, container, xmlns);\n            }\n            else if (listValueSchema.isStructSchema()) {\n                const struct = this.writeStruct(listValueSchema, value, xmlns);\n                container.addChildNode(struct.withName(flat ? listTraits.xmlName ?? listMember.getMemberName() : listValueTraits.xmlName ?? \"member\"));\n            }\n            else {\n                const listItemNode = XmlNode.of(flat ? listTraits.xmlName ?? listMember.getMemberName() : listValueTraits.xmlName ?? \"member\");\n                this.writeSimpleInto(listValueSchema, value, listItemNode, xmlns);\n                container.addChildNode(listItemNode);\n            }\n        };\n        if (flat) {\n            for (const value of array) {\n                if (sparse || value != null) {\n                    writeItem(container, value);\n                }\n            }\n        }\n        else {\n            const listNode = XmlNode.of(listTraits.xmlName ?? listMember.getMemberName());\n            if (xmlns) {\n                listNode.addAttribute(xmlnsAttr, xmlns);\n            }\n            for (const value of array) {\n                if (sparse || value != null) {\n                    writeItem(listNode, value);\n                }\n            }\n            container.addChildNode(listNode);\n        }\n    }\n    writeMap(mapMember, map, container, parentXmlns, containerIsMap = false) {\n        if (!mapMember.isMemberSchema()) {\n            throw new Error(`@aws-sdk/core/protocols - xml serializer, cannot write non-member map: ${mapMember.getName(true)}`);\n        }\n        const mapTraits = mapMember.getMergedTraits();\n        const mapKeySchema = mapMember.getKeySchema();\n        const mapKeyTraits = mapKeySchema.getMergedTraits();\n        const keyTag = mapKeyTraits.xmlName ?? \"key\";\n        const mapValueSchema = mapMember.getValueSchema();\n        const mapValueTraits = mapValueSchema.getMergedTraits();\n        const valueTag = mapValueTraits.xmlName ?? \"value\";\n        const sparse = !!mapValueTraits.sparse;\n        const flat = !!mapTraits.xmlFlattened;\n        const [xmlnsAttr, xmlns] = this.getXmlnsAttribute(mapMember, parentXmlns);\n        const addKeyValue = (entry, key, val) => {\n            const keyNode = XmlNode.of(keyTag, key);\n            const [keyXmlnsAttr, keyXmlns] = this.getXmlnsAttribute(mapKeySchema, xmlns);\n            if (keyXmlns) {\n                keyNode.addAttribute(keyXmlnsAttr, keyXmlns);\n            }\n            entry.addChildNode(keyNode);\n            let valueNode = XmlNode.of(valueTag);\n            if (mapValueSchema.isListSchema()) {\n                this.writeList(mapValueSchema, val, valueNode, xmlns);\n            }\n            else if (mapValueSchema.isMapSchema()) {\n                this.writeMap(mapValueSchema, val, valueNode, xmlns, true);\n            }\n            else if (mapValueSchema.isStructSchema()) {\n                valueNode = this.writeStruct(mapValueSchema, val, xmlns);\n            }\n            else {\n                this.writeSimpleInto(mapValueSchema, val, valueNode, xmlns);\n            }\n            entry.addChildNode(valueNode);\n        };\n        if (flat) {\n            for (const [key, val] of Object.entries(map)) {\n                if (sparse || val != null) {\n                    const entry = XmlNode.of(mapTraits.xmlName ?? mapMember.getMemberName());\n                    addKeyValue(entry, key, val);\n                    container.addChildNode(entry);\n                }\n            }\n        }\n        else {\n            let mapNode;\n            if (!containerIsMap) {\n                mapNode = XmlNode.of(mapTraits.xmlName ?? mapMember.getMemberName());\n                if (xmlns) {\n                    mapNode.addAttribute(xmlnsAttr, xmlns);\n                }\n                container.addChildNode(mapNode);\n            }\n            for (const [key, val] of Object.entries(map)) {\n                if (sparse || val != null) {\n                    const entry = XmlNode.of(\"entry\");\n                    addKeyValue(entry, key, val);\n                    (containerIsMap ? container : mapNode).addChildNode(entry);\n                }\n            }\n        }\n    }\n    writeSimple(_schema, value) {\n        if (null === value) {\n            throw new Error(\"@aws-sdk/core/protocols - (XML serializer) cannot write null value.\");\n        }\n        const ns = NormalizedSchema.of(_schema);\n        let nodeContents = null;\n        if (value && typeof value === \"object\") {\n            if (ns.isBlobSchema()) {\n                nodeContents = (this.serdeContext?.base64Encoder ?? toBase64)(value);\n            }\n            else if (ns.isTimestampSchema() && value instanceof Date) {\n                const format = determineTimestampFormat(ns, this.settings);\n                switch (format) {\n                    case 5:\n                        nodeContents = value.toISOString().replace(\".000Z\", \"Z\");\n                        break;\n                    case 6:\n                        nodeContents = dateToUtcString(value);\n                        break;\n                    case 7:\n                        nodeContents = String(value.getTime() / 1000);\n                        break;\n                    default:\n                        console.warn(\"Missing timestamp format, using http date\", value);\n                        nodeContents = dateToUtcString(value);\n                        break;\n                }\n            }\n            else if (ns.isBigDecimalSchema() && value) {\n                if (value instanceof NumericValue) {\n                    return value.string;\n                }\n                return String(value);\n            }\n            else if (ns.isMapSchema() || ns.isListSchema()) {\n                throw new Error(\"@aws-sdk/core/protocols - xml serializer, cannot call _write() on List/Map schema, call writeList or writeMap() instead.\");\n            }\n            else {\n                throw new Error(`@aws-sdk/core/protocols - xml serializer, unhandled schema type for object value and schema: ${ns.getName(true)}`);\n            }\n        }\n        if (ns.isBooleanSchema() || ns.isNumericSchema() || ns.isBigIntegerSchema() || ns.isBigDecimalSchema()) {\n            nodeContents = String(value);\n        }\n        if (ns.isStringSchema()) {\n            if (value === undefined && ns.isIdempotencyToken()) {\n                nodeContents = generateIdempotencyToken();\n            }\n            else {\n                nodeContents = String(value);\n            }\n        }\n        if (nodeContents === null) {\n            throw new Error(`Unhandled schema-value pair ${ns.getName(true)}=${value}`);\n        }\n        return nodeContents;\n    }\n    writeSimpleInto(_schema, value, into, parentXmlns) {\n        const nodeContents = this.writeSimple(_schema, value);\n        const ns = NormalizedSchema.of(_schema);\n        const content = new XmlText(nodeContents);\n        const [xmlnsAttr, xmlns] = this.getXmlnsAttribute(ns, parentXmlns);\n        if (xmlns) {\n            into.addAttribute(xmlnsAttr, xmlns);\n        }\n        into.addChildNode(content);\n    }\n    getXmlnsAttribute(ns, parentXmlns) {\n        const traits = ns.getMergedTraits();\n        const [prefix, xmlns] = traits.xmlNamespace ?? [];\n        if (xmlns && xmlns !== parentXmlns) {\n            return [prefix ? `xmlns:${prefix}` : \"xmlns\", xmlns];\n        }\n        return [void 0, void 0];\n    }\n}\n", "import { SerdeContextConfig } from \"../ConfigurableSerdeContext\";\nimport { XmlShapeDeserializer } from \"./XmlShapeDeserializer\";\nimport { XmlShapeSerializer } from \"./XmlShapeSerializer\";\nexport class XmlCodec extends SerdeContextConfig {\n    settings;\n    constructor(settings) {\n        super();\n        this.settings = settings;\n    }\n    createSerializer() {\n        const serializer = new XmlShapeSerializer(this.settings);\n        serializer.setSerdeContext(this.serdeContext);\n        return serializer;\n    }\n    createDeserializer() {\n        const deserializer = new XmlShapeDeserializer(this.settings);\n        deserializer.setSerdeContext(this.serdeContext);\n        return deserializer;\n    }\n}\n", "import { HttpBindingProtocol, HttpInterceptingShapeDeserializer, HttpInterceptingShapeSerializer, } from \"@smithy/core/protocols\";\nimport { NormalizedSchema, TypeRegistry } from \"@smithy/core/schema\";\nimport { ProtocolLib } from \"../ProtocolLib\";\nimport { loadRestXmlErrorCode } from \"./parseXmlBody\";\nimport { XmlCodec } from \"./XmlCodec\";\nexport class AwsRestXmlProtocol extends HttpBindingProtocol {\n    codec;\n    serializer;\n    deserializer;\n    mixin = new ProtocolLib();\n    constructor(options) {\n        super(options);\n        const settings = {\n            timestampFormat: {\n                useTrait: true,\n                default: 5,\n            },\n            httpBindings: true,\n            xmlNamespace: options.xmlNamespace,\n            serviceNamespace: options.defaultNamespace,\n        };\n        this.codec = new XmlCodec(settings);\n        this.serializer = new HttpInterceptingShapeSerializer(this.codec.createSerializer(), settings);\n        this.deserializer = new HttpInterceptingShapeDeserializer(this.codec.createDeserializer(), settings);\n    }\n    getPayloadCodec() {\n        return this.codec;\n    }\n    getShapeId() {\n        return \"aws.protocols#restXml\";\n    }\n    async serializeRequest(operationSchema, input, context) {\n        const request = await super.serializeRequest(operationSchema, input, context);\n        const inputSchema = NormalizedSchema.of(operationSchema.input);\n        if (!request.headers[\"content-type\"]) {\n            const contentType = this.mixin.resolveRestContentType(this.getDefaultContentType(), inputSchema);\n            if (contentType) {\n                request.headers[\"content-type\"] = contentType;\n            }\n        }\n        if (request.headers[\"content-type\"] === this.getDefaultContentType()) {\n            if (typeof request.body === \"string\") {\n                request.body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>' + request.body;\n            }\n        }\n        return request;\n    }\n    async deserializeResponse(operationSchema, context, response) {\n        return super.deserializeResponse(operationSchema, context, response);\n    }\n    async handleError(operationSchema, context, response, dataObject, metadata) {\n        const errorIdentifier = loadRestXmlErrorCode(response, dataObject) ?? \"Unknown\";\n        const { errorSchema, errorMetadata } = await this.mixin.getErrorSchemaOrThrowBaseException(errorIdentifier, this.options.defaultNamespace, response, dataObject, metadata);\n        const ns = NormalizedSchema.of(errorSchema);\n        const message = dataObject.Error?.message ?? dataObject.Error?.Message ?? dataObject.message ?? dataObject.Message ?? \"Unknown\";\n        const ErrorCtor = TypeRegistry.for(errorSchema.namespace).getErrorCtor(errorSchema) ?? Error;\n        const exception = new ErrorCtor(message);\n        await this.deserializeHttpMessage(errorSchema, context, response, dataObject);\n        const output = {};\n        for (const [name, member] of ns.structIterator()) {\n            const target = member.getMergedTraits().xmlName ?? name;\n            const value = dataObject.Error?.[target] ?? dataObject[target];\n            output[name] = this.codec.createDeserializer().readSchema(member, value);\n        }\n        throw Object.assign(exception, errorMetadata, {\n            $fault: ns.getMergedTraits().error,\n            message,\n        }, output);\n    }\n    getDefaultContentType() {\n        return \"application/xml\";\n    }\n}\n", "export * from \"./cbor/AwsSmithyRpcV2CborProtocol\";\nexport * from \"./coercing-serializers\";\nexport * from \"./json/AwsJson1_0Protocol\";\nexport * from \"./json/AwsJson1_1Protocol\";\nexport * from \"./json/AwsJsonRpcProtocol\";\nexport * from \"./json/AwsRestJsonProtocol\";\nexport * from \"./json/JsonCodec\";\nexport * from \"./json/JsonShapeDeserializer\";\nexport * from \"./json/JsonShapeSerializer\";\nexport * from \"./json/awsExpectUnion\";\nexport * from \"./json/parseJsonBody\";\nexport * from \"./query/AwsEc2QueryProtocol\";\nexport * from \"./query/AwsQueryProtocol\";\nexport * from \"./xml/AwsRestXmlProtocol\";\nexport * from \"./xml/XmlCodec\";\nexport * from \"./xml/XmlShapeDeserializer\";\nexport * from \"./xml/XmlShapeSerializer\";\nexport * from \"./xml/parseXmlBody\";\n", "export * from \"./submodules/client/index\";\nexport * from \"./submodules/httpAuthSchemes/index\";\nexport * from \"./submodules/protocols/index\";\n", "'use strict';\n\nvar core = require('@smithy/core');\nvar utilEndpoints = require('@aws-sdk/util-endpoints');\nvar protocolHttp = require('@smithy/protocol-http');\nvar core$1 = require('@aws-sdk/core');\n\nconst DEFAULT_UA_APP_ID = undefined;\nfunction isValidUserAgentAppId(appId) {\n    if (appId === undefined) {\n        return true;\n    }\n    return typeof appId === \"string\" && appId.length <= 50;\n}\nfunction resolveUserAgentConfig(input) {\n    const normalizedAppIdProvider = core.normalizeProvider(input.userAgentAppId ?? DEFAULT_UA_APP_ID);\n    const { customUserAgent } = input;\n    return Object.assign(input, {\n        customUserAgent: typeof customUserAgent === \"string\" ? [[customUserAgent]] : customUserAgent,\n        userAgentAppId: async () => {\n            const appId = await normalizedAppIdProvider();\n            if (!isValidUserAgentAppId(appId)) {\n                const logger = input.logger?.constructor?.name === \"NoOpLogger\" || !input.logger ? console : input.logger;\n                if (typeof appId !== \"string\") {\n                    logger?.warn(\"userAgentAppId must be a string or undefined.\");\n                }\n                else if (appId.length > 50) {\n                    logger?.warn(\"The provided userAgentAppId exceeds the maximum length of 50 characters.\");\n                }\n            }\n            return appId;\n        },\n    });\n}\n\nconst ACCOUNT_ID_ENDPOINT_REGEX = /\\d{12}\\.ddb/;\nasync function checkFeatures(context, config, args) {\n    const request = args.request;\n    if (request?.headers?.[\"smithy-protocol\"] === \"rpc-v2-cbor\") {\n        core$1.setFeature(context, \"PROTOCOL_RPC_V2_CBOR\", \"M\");\n    }\n    if (typeof config.retryStrategy === \"function\") {\n        const retryStrategy = await config.retryStrategy();\n        if (typeof retryStrategy.acquireInitialRetryToken === \"function\") {\n            if (retryStrategy.constructor?.name?.includes(\"Adaptive\")) {\n                core$1.setFeature(context, \"RETRY_MODE_ADAPTIVE\", \"F\");\n            }\n            else {\n                core$1.setFeature(context, \"RETRY_MODE_STANDARD\", \"E\");\n            }\n        }\n        else {\n            core$1.setFeature(context, \"RETRY_MODE_LEGACY\", \"D\");\n        }\n    }\n    if (typeof config.accountIdEndpointMode === \"function\") {\n        const endpointV2 = context.endpointV2;\n        if (String(endpointV2?.url?.hostname).match(ACCOUNT_ID_ENDPOINT_REGEX)) {\n            core$1.setFeature(context, \"ACCOUNT_ID_ENDPOINT\", \"O\");\n        }\n        switch (await config.accountIdEndpointMode?.()) {\n            case \"disabled\":\n                core$1.setFeature(context, \"ACCOUNT_ID_MODE_DISABLED\", \"Q\");\n                break;\n            case \"preferred\":\n                core$1.setFeature(context, \"ACCOUNT_ID_MODE_PREFERRED\", \"P\");\n                break;\n            case \"required\":\n                core$1.setFeature(context, \"ACCOUNT_ID_MODE_REQUIRED\", \"R\");\n                break;\n        }\n    }\n    const identity = context.__smithy_context?.selectedHttpAuthScheme?.identity;\n    if (identity?.$source) {\n        const credentials = identity;\n        if (credentials.accountId) {\n            core$1.setFeature(context, \"RESOLVED_ACCOUNT_ID\", \"T\");\n        }\n        for (const [key, value] of Object.entries(credentials.$source ?? {})) {\n            core$1.setFeature(context, key, value);\n        }\n    }\n}\n\nconst USER_AGENT = \"user-agent\";\nconst X_AMZ_USER_AGENT = \"x-amz-user-agent\";\nconst SPACE = \" \";\nconst UA_NAME_SEPARATOR = \"/\";\nconst UA_NAME_ESCAPE_REGEX = /[^\\!\\$\\%\\&\\'\\*\\+\\-\\.\\^\\_\\`\\|\\~\\d\\w]/g;\nconst UA_VALUE_ESCAPE_REGEX = /[^\\!\\$\\%\\&\\'\\*\\+\\-\\.\\^\\_\\`\\|\\~\\d\\w\\#]/g;\nconst UA_ESCAPE_CHAR = \"-\";\n\nconst BYTE_LIMIT = 1024;\nfunction encodeFeatures(features) {\n    let buffer = \"\";\n    for (const key in features) {\n        const val = features[key];\n        if (buffer.length + val.length + 1 <= BYTE_LIMIT) {\n            if (buffer.length) {\n                buffer += \",\" + val;\n            }\n            else {\n                buffer += val;\n            }\n            continue;\n        }\n        break;\n    }\n    return buffer;\n}\n\nconst userAgentMiddleware = (options) => (next, context) => async (args) => {\n    const { request } = args;\n    if (!protocolHttp.HttpRequest.isInstance(request)) {\n        return next(args);\n    }\n    const { headers } = request;\n    const userAgent = context?.userAgent?.map(escapeUserAgent) || [];\n    const defaultUserAgent = (await options.defaultUserAgentProvider()).map(escapeUserAgent);\n    await checkFeatures(context, options, args);\n    const awsContext = context;\n    defaultUserAgent.push(`m/${encodeFeatures(Object.assign({}, context.__smithy_context?.features, awsContext.__aws_sdk_context?.features))}`);\n    const customUserAgent = options?.customUserAgent?.map(escapeUserAgent) || [];\n    const appId = await options.userAgentAppId();\n    if (appId) {\n        defaultUserAgent.push(escapeUserAgent([`app/${appId}`]));\n    }\n    const prefix = utilEndpoints.getUserAgentPrefix();\n    const sdkUserAgentValue = (prefix ? [prefix] : [])\n        .concat([...defaultUserAgent, ...userAgent, ...customUserAgent])\n        .join(SPACE);\n    const normalUAValue = [\n        ...defaultUserAgent.filter((section) => section.startsWith(\"aws-sdk-\")),\n        ...customUserAgent,\n    ].join(SPACE);\n    if (options.runtime !== \"browser\") {\n        if (normalUAValue) {\n            headers[X_AMZ_USER_AGENT] = headers[X_AMZ_USER_AGENT]\n                ? `${headers[USER_AGENT]} ${normalUAValue}`\n                : normalUAValue;\n        }\n        headers[USER_AGENT] = sdkUserAgentValue;\n    }\n    else {\n        headers[X_AMZ_USER_AGENT] = sdkUserAgentValue;\n    }\n    return next({\n        ...args,\n        request,\n    });\n};\nconst escapeUserAgent = (userAgentPair) => {\n    const name = userAgentPair[0]\n        .split(UA_NAME_SEPARATOR)\n        .map((part) => part.replace(UA_NAME_ESCAPE_REGEX, UA_ESCAPE_CHAR))\n        .join(UA_NAME_SEPARATOR);\n    const version = userAgentPair[1]?.replace(UA_VALUE_ESCAPE_REGEX, UA_ESCAPE_CHAR);\n    const prefixSeparatorIndex = name.indexOf(UA_NAME_SEPARATOR);\n    const prefix = name.substring(0, prefixSeparatorIndex);\n    let uaName = name.substring(prefixSeparatorIndex + 1);\n    if (prefix === \"api\") {\n        uaName = uaName.toLowerCase();\n    }\n    return [prefix, uaName, version]\n        .filter((item) => item && item.length > 0)\n        .reduce((acc, item, index) => {\n        switch (index) {\n            case 0:\n                return item;\n            case 1:\n                return `${acc}/${item}`;\n            default:\n                return `${acc}#${item}`;\n        }\n    }, \"\");\n};\nconst getUserAgentMiddlewareOptions = {\n    name: \"getUserAgentMiddleware\",\n    step: \"build\",\n    priority: \"low\",\n    tags: [\"SET_USER_AGENT\", \"USER_AGENT\"],\n    override: true,\n};\nconst getUserAgentPlugin = (config) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(userAgentMiddleware(config), getUserAgentMiddlewareOptions);\n    },\n});\n\nexports.DEFAULT_UA_APP_ID = DEFAULT_UA_APP_ID;\nexports.getUserAgentMiddlewareOptions = getUserAgentMiddlewareOptions;\nexports.getUserAgentPlugin = getUserAgentPlugin;\nexports.resolveUserAgentConfig = resolveUserAgentConfig;\nexports.userAgentMiddleware = userAgentMiddleware;\n", "'use strict';\n\nconst booleanSelector = (obj, key, type) => {\n    if (!(key in obj))\n        return undefined;\n    if (obj[key] === \"true\")\n        return true;\n    if (obj[key] === \"false\")\n        return false;\n    throw new Error(`Cannot load ${type} \"${key}\". Expected \"true\" or \"false\", got ${obj[key]}.`);\n};\n\nconst numberSelector = (obj, key, type) => {\n    if (!(key in obj))\n        return undefined;\n    const numberValue = parseInt(obj[key], 10);\n    if (Number.isNaN(numberValue)) {\n        throw new TypeError(`Cannot load ${type} '${key}'. Expected number, got '${obj[key]}'.`);\n    }\n    return numberValue;\n};\n\nexports.SelectorType = void 0;\n(function (SelectorType) {\n    SelectorType[\"ENV\"] = \"env\";\n    SelectorType[\"CONFIG\"] = \"shared config entry\";\n})(exports.SelectorType || (exports.SelectorType = {}));\n\nexports.booleanSelector = booleanSelector;\nexports.numberSelector = numberSelector;\n", "'use strict';\n\nvar utilConfigProvider = require('@smithy/util-config-provider');\nvar utilMiddleware = require('@smithy/util-middleware');\n\nconst ENV_USE_DUALSTACK_ENDPOINT = \"AWS_USE_DUALSTACK_ENDPOINT\";\nconst CONFIG_USE_DUALSTACK_ENDPOINT = \"use_dualstack_endpoint\";\nconst DEFAULT_USE_DUALSTACK_ENDPOINT = false;\nconst NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => utilConfigProvider.booleanSelector(env, ENV_USE_DUALSTACK_ENDPOINT, utilConfigProvider.SelectorType.ENV),\n    configFileSelector: (profile) => utilConfigProvider.booleanSelector(profile, CONFIG_USE_DUALSTACK_ENDPOINT, utilConfigProvider.SelectorType.CONFIG),\n    default: false,\n};\n\nconst ENV_USE_FIPS_ENDPOINT = \"AWS_USE_FIPS_ENDPOINT\";\nconst CONFIG_USE_FIPS_ENDPOINT = \"use_fips_endpoint\";\nconst DEFAULT_USE_FIPS_ENDPOINT = false;\nconst NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => utilConfigProvider.booleanSelector(env, ENV_USE_FIPS_ENDPOINT, utilConfigProvider.SelectorType.ENV),\n    configFileSelector: (profile) => utilConfigProvider.booleanSelector(profile, CONFIG_USE_FIPS_ENDPOINT, utilConfigProvider.SelectorType.CONFIG),\n    default: false,\n};\n\nconst resolveCustomEndpointsConfig = (input) => {\n    const { tls, endpoint, urlParser, useDualstackEndpoint } = input;\n    return Object.assign(input, {\n        tls: tls ?? true,\n        endpoint: utilMiddleware.normalizeProvider(typeof endpoint === \"string\" ? urlParser(endpoint) : endpoint),\n        isCustomEndpoint: true,\n        useDualstackEndpoint: utilMiddleware.normalizeProvider(useDualstackEndpoint ?? false),\n    });\n};\n\nconst getEndpointFromRegion = async (input) => {\n    const { tls = true } = input;\n    const region = await input.region();\n    const dnsHostRegex = new RegExp(/^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]{0,61}[a-zA-Z0-9])$/);\n    if (!dnsHostRegex.test(region)) {\n        throw new Error(\"Invalid region in client config\");\n    }\n    const useDualstackEndpoint = await input.useDualstackEndpoint();\n    const useFipsEndpoint = await input.useFipsEndpoint();\n    const { hostname } = (await input.regionInfoProvider(region, { useDualstackEndpoint, useFipsEndpoint })) ?? {};\n    if (!hostname) {\n        throw new Error(\"Cannot resolve hostname from client config\");\n    }\n    return input.urlParser(`${tls ? \"https:\" : \"http:\"}//${hostname}`);\n};\n\nconst resolveEndpointsConfig = (input) => {\n    const useDualstackEndpoint = utilMiddleware.normalizeProvider(input.useDualstackEndpoint ?? false);\n    const { endpoint, useFipsEndpoint, urlParser, tls } = input;\n    return Object.assign(input, {\n        tls: tls ?? true,\n        endpoint: endpoint\n            ? utilMiddleware.normalizeProvider(typeof endpoint === \"string\" ? urlParser(endpoint) : endpoint)\n            : () => getEndpointFromRegion({ ...input, useDualstackEndpoint, useFipsEndpoint }),\n        isCustomEndpoint: !!endpoint,\n        useDualstackEndpoint,\n    });\n};\n\nconst REGION_ENV_NAME = \"AWS_REGION\";\nconst REGION_INI_NAME = \"region\";\nconst NODE_REGION_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[REGION_ENV_NAME],\n    configFileSelector: (profile) => profile[REGION_INI_NAME],\n    default: () => {\n        throw new Error(\"Region is missing\");\n    },\n};\nconst NODE_REGION_CONFIG_FILE_OPTIONS = {\n    preferredFile: \"credentials\",\n};\n\nconst isFipsRegion = (region) => typeof region === \"string\" && (region.startsWith(\"fips-\") || region.endsWith(\"-fips\"));\n\nconst getRealRegion = (region) => isFipsRegion(region)\n    ? [\"fips-aws-global\", \"aws-fips\"].includes(region)\n        ? \"us-east-1\"\n        : region.replace(/fips-(dkr-|prod-)?|-fips/, \"\")\n    : region;\n\nconst resolveRegionConfig = (input) => {\n    const { region, useFipsEndpoint } = input;\n    if (!region) {\n        throw new Error(\"Region is missing\");\n    }\n    return Object.assign(input, {\n        region: async () => {\n            if (typeof region === \"string\") {\n                return getRealRegion(region);\n            }\n            const providedRegion = await region();\n            return getRealRegion(providedRegion);\n        },\n        useFipsEndpoint: async () => {\n            const providedRegion = typeof region === \"string\" ? region : await region();\n            if (isFipsRegion(providedRegion)) {\n                return true;\n            }\n            return typeof useFipsEndpoint !== \"function\" ? Promise.resolve(!!useFipsEndpoint) : useFipsEndpoint();\n        },\n    });\n};\n\nconst getHostnameFromVariants = (variants = [], { useFipsEndpoint, useDualstackEndpoint }) => variants.find(({ tags }) => useFipsEndpoint === tags.includes(\"fips\") && useDualstackEndpoint === tags.includes(\"dualstack\"))?.hostname;\n\nconst getResolvedHostname = (resolvedRegion, { regionHostname, partitionHostname }) => regionHostname\n    ? regionHostname\n    : partitionHostname\n        ? partitionHostname.replace(\"{region}\", resolvedRegion)\n        : undefined;\n\nconst getResolvedPartition = (region, { partitionHash }) => Object.keys(partitionHash || {}).find((key) => partitionHash[key].regions.includes(region)) ?? \"aws\";\n\nconst getResolvedSigningRegion = (hostname, { signingRegion, regionRegex, useFipsEndpoint }) => {\n    if (signingRegion) {\n        return signingRegion;\n    }\n    else if (useFipsEndpoint) {\n        const regionRegexJs = regionRegex.replace(\"\\\\\\\\\", \"\\\\\").replace(/^\\^/g, \"\\\\.\").replace(/\\$$/g, \"\\\\.\");\n        const regionRegexmatchArray = hostname.match(regionRegexJs);\n        if (regionRegexmatchArray) {\n            return regionRegexmatchArray[0].slice(1, -1);\n        }\n    }\n};\n\nconst getRegionInfo = (region, { useFipsEndpoint = false, useDualstackEndpoint = false, signingService, regionHash, partitionHash, }) => {\n    const partition = getResolvedPartition(region, { partitionHash });\n    const resolvedRegion = region in regionHash ? region : partitionHash[partition]?.endpoint ?? region;\n    const hostnameOptions = { useFipsEndpoint, useDualstackEndpoint };\n    const regionHostname = getHostnameFromVariants(regionHash[resolvedRegion]?.variants, hostnameOptions);\n    const partitionHostname = getHostnameFromVariants(partitionHash[partition]?.variants, hostnameOptions);\n    const hostname = getResolvedHostname(resolvedRegion, { regionHostname, partitionHostname });\n    if (hostname === undefined) {\n        throw new Error(`Endpoint resolution failed for: ${{ resolvedRegion, useFipsEndpoint, useDualstackEndpoint }}`);\n    }\n    const signingRegion = getResolvedSigningRegion(hostname, {\n        signingRegion: regionHash[resolvedRegion]?.signingRegion,\n        regionRegex: partitionHash[partition].regionRegex,\n        useFipsEndpoint,\n    });\n    return {\n        partition,\n        signingService,\n        hostname,\n        ...(signingRegion && { signingRegion }),\n        ...(regionHash[resolvedRegion]?.signingService && {\n            signingService: regionHash[resolvedRegion].signingService,\n        }),\n    };\n};\n\nexports.CONFIG_USE_DUALSTACK_ENDPOINT = CONFIG_USE_DUALSTACK_ENDPOINT;\nexports.CONFIG_USE_FIPS_ENDPOINT = CONFIG_USE_FIPS_ENDPOINT;\nexports.DEFAULT_USE_DUALSTACK_ENDPOINT = DEFAULT_USE_DUALSTACK_ENDPOINT;\nexports.DEFAULT_USE_FIPS_ENDPOINT = DEFAULT_USE_FIPS_ENDPOINT;\nexports.ENV_USE_DUALSTACK_ENDPOINT = ENV_USE_DUALSTACK_ENDPOINT;\nexports.ENV_USE_FIPS_ENDPOINT = ENV_USE_FIPS_ENDPOINT;\nexports.NODE_REGION_CONFIG_FILE_OPTIONS = NODE_REGION_CONFIG_FILE_OPTIONS;\nexports.NODE_REGION_CONFIG_OPTIONS = NODE_REGION_CONFIG_OPTIONS;\nexports.NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS = NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS;\nexports.NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS = NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS;\nexports.REGION_ENV_NAME = REGION_ENV_NAME;\nexports.REGION_INI_NAME = REGION_INI_NAME;\nexports.getRegionInfo = getRegionInfo;\nexports.resolveCustomEndpointsConfig = resolveCustomEndpointsConfig;\nexports.resolveEndpointsConfig = resolveEndpointsConfig;\nexports.resolveRegionConfig = resolveRegionConfig;\n", "'use strict';\n\nvar protocolHttp = require('@smithy/protocol-http');\n\nconst CONTENT_LENGTH_HEADER = \"content-length\";\nfunction contentLengthMiddleware(bodyLengthChecker) {\n    return (next) => async (args) => {\n        const request = args.request;\n        if (protocolHttp.HttpRequest.isInstance(request)) {\n            const { body, headers } = request;\n            if (body &&\n                Object.keys(headers)\n                    .map((str) => str.toLowerCase())\n                    .indexOf(CONTENT_LENGTH_HEADER) === -1) {\n                try {\n                    const length = bodyLengthChecker(body);\n                    request.headers = {\n                        ...request.headers,\n                        [CONTENT_LENGTH_HEADER]: String(length),\n                    };\n                }\n                catch (error) {\n                }\n            }\n        }\n        return next({\n            ...args,\n            request,\n        });\n    };\n}\nconst contentLengthMiddlewareOptions = {\n    step: \"build\",\n    tags: [\"SET_CONTENT_LENGTH\", \"CONTENT_LENGTH\"],\n    name: \"contentLengthMiddleware\",\n    override: true,\n};\nconst getContentLengthPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(contentLengthMiddleware(options.bodyLengthChecker), contentLengthMiddlewareOptions);\n    },\n});\n\nexports.contentLengthMiddleware = contentLengthMiddleware;\nexports.contentLengthMiddlewareOptions = contentLengthMiddlewareOptions;\nexports.getContentLengthPlugin = getContentLengthPlugin;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getHomeDir = void 0;\nconst os_1 = require(\"os\");\nconst path_1 = require(\"path\");\nconst homeDirCache = {};\nconst getHomeDirCacheKey = () => {\n    if (process && process.geteuid) {\n        return `${process.geteuid()}`;\n    }\n    return \"DEFAULT\";\n};\nconst getHomeDir = () => {\n    const { HOME, USERPROFILE, HOMEPATH, HOMEDRIVE = `C:${path_1.sep}` } = process.env;\n    if (HOME)\n        return HOME;\n    if (USERPROFILE)\n        return USERPROFILE;\n    if (HOMEPATH)\n        return `${HOMEDRIVE}${HOMEPATH}`;\n    const homeDirCacheKey = getHomeDirCacheKey();\n    if (!homeDirCache[homeDirCacheKey])\n        homeDirCache[homeDirCacheKey] = (0, os_1.homedir)();\n    return homeDirCache[homeDirCacheKey];\n};\nexports.getHomeDir = getHomeDir;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSSOTokenFilepath = void 0;\nconst crypto_1 = require(\"crypto\");\nconst path_1 = require(\"path\");\nconst getHomeDir_1 = require(\"./getHomeDir\");\nconst getSSOTokenFilepath = (id) => {\n    const hasher = (0, crypto_1.createHash)(\"sha1\");\n    const cacheName = hasher.update(id).digest(\"hex\");\n    return (0, path_1.join)((0, getHomeDir_1.getHomeDir)(), \".aws\", \"sso\", \"cache\", `${cacheName}.json`);\n};\nexports.getSSOTokenFilepath = getSSOTokenFilepath;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSSOTokenFromFile = exports.tokenIntercept = void 0;\nconst fs_1 = require(\"fs\");\nconst getSSOTokenFilepath_1 = require(\"./getSSOTokenFilepath\");\nconst { readFile } = fs_1.promises;\nexports.tokenIntercept = {};\nconst getSSOTokenFromFile = async (id) => {\n    if (exports.tokenIntercept[id]) {\n        return exports.tokenIntercept[id];\n    }\n    const ssoTokenFilepath = (0, getSSOTokenFilepath_1.getSSOTokenFilepath)(id);\n    const ssoTokenText = await readFile(ssoTokenFilepath, \"utf8\");\n    return JSON.parse(ssoTokenText);\n};\nexports.getSSOTokenFromFile = getSSOTokenFromFile;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.slurpFile = exports.fileIntercept = exports.filePromisesHash = void 0;\nconst fs_1 = require(\"fs\");\nconst { readFile } = fs_1.promises;\nexports.filePromisesHash = {};\nexports.fileIntercept = {};\nconst slurpFile = (path, options) => {\n    if (exports.fileIntercept[path] !== undefined) {\n        return exports.fileIntercept[path];\n    }\n    if (!exports.filePromisesHash[path] || options?.ignoreCache) {\n        exports.filePromisesHash[path] = readFile(path, \"utf8\");\n    }\n    return exports.filePromisesHash[path];\n};\nexports.slurpFile = slurpFile;\n", "'use strict';\n\nvar getHomeDir = require('./getHomeDir');\nvar getSSOTokenFilepath = require('./getSSOTokenFilepath');\nvar getSSOTokenFromFile = require('./getSSOTokenFromFile');\nvar path = require('path');\nvar types = require('@smithy/types');\nvar slurpFile = require('./slurpFile');\n\nconst ENV_PROFILE = \"AWS_PROFILE\";\nconst DEFAULT_PROFILE = \"default\";\nconst getProfileName = (init) => init.profile || process.env[ENV_PROFILE] || DEFAULT_PROFILE;\n\nconst getConfigData = (data) => Object.entries(data)\n    .filter(([key]) => {\n    const indexOfSeparator = key.indexOf(CONFIG_PREFIX_SEPARATOR);\n    if (indexOfSeparator === -1) {\n        return false;\n    }\n    return Object.values(types.IniSectionType).includes(key.substring(0, indexOfSeparator));\n})\n    .reduce((acc, [key, value]) => {\n    const indexOfSeparator = key.indexOf(CONFIG_PREFIX_SEPARATOR);\n    const updatedKey = key.substring(0, indexOfSeparator) === types.IniSectionType.PROFILE ? key.substring(indexOfSeparator + 1) : key;\n    acc[updatedKey] = value;\n    return acc;\n}, {\n    ...(data.default && { default: data.default }),\n});\n\nconst ENV_CONFIG_PATH = \"AWS_CONFIG_FILE\";\nconst getConfigFilepath = () => process.env[ENV_CONFIG_PATH] || path.join(getHomeDir.getHomeDir(), \".aws\", \"config\");\n\nconst ENV_CREDENTIALS_PATH = \"AWS_SHARED_CREDENTIALS_FILE\";\nconst getCredentialsFilepath = () => process.env[ENV_CREDENTIALS_PATH] || path.join(getHomeDir.getHomeDir(), \".aws\", \"credentials\");\n\nconst prefixKeyRegex = /^([\\w-]+)\\s([\"'])?([\\w-@\\+\\.%:/]+)\\2$/;\nconst profileNameBlockList = [\"__proto__\", \"profile __proto__\"];\nconst parseIni = (iniData) => {\n    const map = {};\n    let currentSection;\n    let currentSubSection;\n    for (const iniLine of iniData.split(/\\r?\\n/)) {\n        const trimmedLine = iniLine.split(/(^|\\s)[;#]/)[0].trim();\n        const isSection = trimmedLine[0] === \"[\" && trimmedLine[trimmedLine.length - 1] === \"]\";\n        if (isSection) {\n            currentSection = undefined;\n            currentSubSection = undefined;\n            const sectionName = trimmedLine.substring(1, trimmedLine.length - 1);\n            const matches = prefixKeyRegex.exec(sectionName);\n            if (matches) {\n                const [, prefix, , name] = matches;\n                if (Object.values(types.IniSectionType).includes(prefix)) {\n                    currentSection = [prefix, name].join(CONFIG_PREFIX_SEPARATOR);\n                }\n            }\n            else {\n                currentSection = sectionName;\n            }\n            if (profileNameBlockList.includes(sectionName)) {\n                throw new Error(`Found invalid profile name \"${sectionName}\"`);\n            }\n        }\n        else if (currentSection) {\n            const indexOfEqualsSign = trimmedLine.indexOf(\"=\");\n            if (![0, -1].includes(indexOfEqualsSign)) {\n                const [name, value] = [\n                    trimmedLine.substring(0, indexOfEqualsSign).trim(),\n                    trimmedLine.substring(indexOfEqualsSign + 1).trim(),\n                ];\n                if (value === \"\") {\n                    currentSubSection = name;\n                }\n                else {\n                    if (currentSubSection && iniLine.trimStart() === iniLine) {\n                        currentSubSection = undefined;\n                    }\n                    map[currentSection] = map[currentSection] || {};\n                    const key = currentSubSection ? [currentSubSection, name].join(CONFIG_PREFIX_SEPARATOR) : name;\n                    map[currentSection][key] = value;\n                }\n            }\n        }\n    }\n    return map;\n};\n\nconst swallowError$1 = () => ({});\nconst CONFIG_PREFIX_SEPARATOR = \".\";\nconst loadSharedConfigFiles = async (init = {}) => {\n    const { filepath = getCredentialsFilepath(), configFilepath = getConfigFilepath() } = init;\n    const homeDir = getHomeDir.getHomeDir();\n    const relativeHomeDirPrefix = \"~/\";\n    let resolvedFilepath = filepath;\n    if (filepath.startsWith(relativeHomeDirPrefix)) {\n        resolvedFilepath = path.join(homeDir, filepath.slice(2));\n    }\n    let resolvedConfigFilepath = configFilepath;\n    if (configFilepath.startsWith(relativeHomeDirPrefix)) {\n        resolvedConfigFilepath = path.join(homeDir, configFilepath.slice(2));\n    }\n    const parsedFiles = await Promise.all([\n        slurpFile.slurpFile(resolvedConfigFilepath, {\n            ignoreCache: init.ignoreCache,\n        })\n            .then(parseIni)\n            .then(getConfigData)\n            .catch(swallowError$1),\n        slurpFile.slurpFile(resolvedFilepath, {\n            ignoreCache: init.ignoreCache,\n        })\n            .then(parseIni)\n            .catch(swallowError$1),\n    ]);\n    return {\n        configFile: parsedFiles[0],\n        credentialsFile: parsedFiles[1],\n    };\n};\n\nconst getSsoSessionData = (data) => Object.entries(data)\n    .filter(([key]) => key.startsWith(types.IniSectionType.SSO_SESSION + CONFIG_PREFIX_SEPARATOR))\n    .reduce((acc, [key, value]) => ({ ...acc, [key.substring(key.indexOf(CONFIG_PREFIX_SEPARATOR) + 1)]: value }), {});\n\nconst swallowError = () => ({});\nconst loadSsoSessionData = async (init = {}) => slurpFile.slurpFile(init.configFilepath ?? getConfigFilepath())\n    .then(parseIni)\n    .then(getSsoSessionData)\n    .catch(swallowError);\n\nconst mergeConfigFiles = (...files) => {\n    const merged = {};\n    for (const file of files) {\n        for (const [key, values] of Object.entries(file)) {\n            if (merged[key] !== undefined) {\n                Object.assign(merged[key], values);\n            }\n            else {\n                merged[key] = values;\n            }\n        }\n    }\n    return merged;\n};\n\nconst parseKnownFiles = async (init) => {\n    const parsedFiles = await loadSharedConfigFiles(init);\n    return mergeConfigFiles(parsedFiles.configFile, parsedFiles.credentialsFile);\n};\n\nconst externalDataInterceptor = {\n    getFileRecord() {\n        return slurpFile.fileIntercept;\n    },\n    interceptFile(path, contents) {\n        slurpFile.fileIntercept[path] = Promise.resolve(contents);\n    },\n    getTokenRecord() {\n        return getSSOTokenFromFile.tokenIntercept;\n    },\n    interceptToken(id, contents) {\n        getSSOTokenFromFile.tokenIntercept[id] = contents;\n    },\n};\n\nObject.defineProperty(exports, \"getSSOTokenFromFile\", {\n    enumerable: true,\n    get: function () { return getSSOTokenFromFile.getSSOTokenFromFile; }\n});\nexports.CONFIG_PREFIX_SEPARATOR = CONFIG_PREFIX_SEPARATOR;\nexports.DEFAULT_PROFILE = DEFAULT_PROFILE;\nexports.ENV_PROFILE = ENV_PROFILE;\nexports.externalDataInterceptor = externalDataInterceptor;\nexports.getProfileName = getProfileName;\nexports.loadSharedConfigFiles = loadSharedConfigFiles;\nexports.loadSsoSessionData = loadSsoSessionData;\nexports.parseKnownFiles = parseKnownFiles;\nObject.keys(getHomeDir).forEach(function (k) {\n    if (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {\n        enumerable: true,\n        get: function () { return getHomeDir[k]; }\n    });\n});\nObject.keys(getSSOTokenFilepath).forEach(function (k) {\n    if (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {\n        enumerable: true,\n        get: function () { return getSSOTokenFilepath[k]; }\n    });\n});\n", "'use strict';\n\nvar propertyProvider = require('@smithy/property-provider');\nvar sharedIniFileLoader = require('@smithy/shared-ini-file-loader');\n\nfunction getSelectorName(functionString) {\n    try {\n        const constants = new Set(Array.from(functionString.match(/([A-Z_]){3,}/g) ?? []));\n        constants.delete(\"CONFIG\");\n        constants.delete(\"CONFIG_PREFIX_SEPARATOR\");\n        constants.delete(\"ENV\");\n        return [...constants].join(\", \");\n    }\n    catch (e) {\n        return functionString;\n    }\n}\n\nconst fromEnv = (envVarSelector, options) => async () => {\n    try {\n        const config = envVarSelector(process.env, options);\n        if (config === undefined) {\n            throw new Error();\n        }\n        return config;\n    }\n    catch (e) {\n        throw new propertyProvider.CredentialsProviderError(e.message || `Not found in ENV: ${getSelectorName(envVarSelector.toString())}`, { logger: options?.logger });\n    }\n};\n\nconst fromSharedConfigFiles = (configSelector, { preferredFile = \"config\", ...init } = {}) => async () => {\n    const profile = sharedIniFileLoader.getProfileName(init);\n    const { configFile, credentialsFile } = await sharedIniFileLoader.loadSharedConfigFiles(init);\n    const profileFromCredentials = credentialsFile[profile] || {};\n    const profileFromConfig = configFile[profile] || {};\n    const mergedProfile = preferredFile === \"config\"\n        ? { ...profileFromCredentials, ...profileFromConfig }\n        : { ...profileFromConfig, ...profileFromCredentials };\n    try {\n        const cfgFile = preferredFile === \"config\" ? configFile : credentialsFile;\n        const configValue = configSelector(mergedProfile, cfgFile);\n        if (configValue === undefined) {\n            throw new Error();\n        }\n        return configValue;\n    }\n    catch (e) {\n        throw new propertyProvider.CredentialsProviderError(e.message || `Not found in config files w/ profile [${profile}]: ${getSelectorName(configSelector.toString())}`, { logger: init.logger });\n    }\n};\n\nconst isFunction = (func) => typeof func === \"function\";\nconst fromStatic = (defaultValue) => isFunction(defaultValue) ? async () => await defaultValue() : propertyProvider.fromStatic(defaultValue);\n\nconst loadConfig = ({ environmentVariableSelector, configFileSelector, default: defaultValue }, configuration = {}) => {\n    const { signingName, logger } = configuration;\n    const envOptions = { signingName, logger };\n    return propertyProvider.memoize(propertyProvider.chain(fromEnv(environmentVariableSelector, envOptions), fromSharedConfigFiles(configFileSelector, configuration), fromStatic(defaultValue)));\n};\n\nexports.loadConfig = loadConfig;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getEndpointUrlConfig = void 0;\nconst shared_ini_file_loader_1 = require(\"@smithy/shared-ini-file-loader\");\nconst ENV_ENDPOINT_URL = \"AWS_ENDPOINT_URL\";\nconst CONFIG_ENDPOINT_URL = \"endpoint_url\";\nconst getEndpointUrlConfig = (serviceId) => ({\n    environmentVariableSelector: (env) => {\n        const serviceSuffixParts = serviceId.split(\" \").map((w) => w.toUpperCase());\n        const serviceEndpointUrl = env[[ENV_ENDPOINT_URL, ...serviceSuffixParts].join(\"_\")];\n        if (serviceEndpointUrl)\n            return serviceEndpointUrl;\n        const endpointUrl = env[ENV_ENDPOINT_URL];\n        if (endpointUrl)\n            return endpointUrl;\n        return undefined;\n    },\n    configFileSelector: (profile, config) => {\n        if (config && profile.services) {\n            const servicesSection = config[[\"services\", profile.services].join(shared_ini_file_loader_1.CONFIG_PREFIX_SEPARATOR)];\n            if (servicesSection) {\n                const servicePrefixParts = serviceId.split(\" \").map((w) => w.toLowerCase());\n                const endpointUrl = servicesSection[[servicePrefixParts.join(\"_\"), CONFIG_ENDPOINT_URL].join(shared_ini_file_loader_1.CONFIG_PREFIX_SEPARATOR)];\n                if (endpointUrl)\n                    return endpointUrl;\n            }\n        }\n        const endpointUrl = profile[CONFIG_ENDPOINT_URL];\n        if (endpointUrl)\n            return endpointUrl;\n        return undefined;\n    },\n    default: undefined,\n});\nexports.getEndpointUrlConfig = getEndpointUrlConfig;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getEndpointFromConfig = void 0;\nconst node_config_provider_1 = require(\"@smithy/node-config-provider\");\nconst getEndpointUrlConfig_1 = require(\"./getEndpointUrlConfig\");\nconst getEndpointFromConfig = async (serviceId) => (0, node_config_provider_1.loadConfig)((0, getEndpointUrlConfig_1.getEndpointUrlConfig)(serviceId ?? \"\"))();\nexports.getEndpointFromConfig = getEndpointFromConfig;\n", "'use strict';\n\nvar getEndpointFromConfig = require('./adaptors/getEndpointFromConfig');\nvar urlParser = require('@smithy/url-parser');\nvar core = require('@smithy/core');\nvar utilMiddleware = require('@smithy/util-middleware');\nvar middlewareSerde = require('@smithy/middleware-serde');\n\nconst resolveParamsForS3 = async (endpointParams) => {\n    const bucket = endpointParams?.Bucket || \"\";\n    if (typeof endpointParams.Bucket === \"string\") {\n        endpointParams.Bucket = bucket.replace(/#/g, encodeURIComponent(\"#\")).replace(/\\?/g, encodeURIComponent(\"?\"));\n    }\n    if (isArnBucketName(bucket)) {\n        if (endpointParams.ForcePathStyle === true) {\n            throw new Error(\"Path-style addressing cannot be used with ARN buckets\");\n        }\n    }\n    else if (!isDnsCompatibleBucketName(bucket) ||\n        (bucket.indexOf(\".\") !== -1 && !String(endpointParams.Endpoint).startsWith(\"http:\")) ||\n        bucket.toLowerCase() !== bucket ||\n        bucket.length < 3) {\n        endpointParams.ForcePathStyle = true;\n    }\n    if (endpointParams.DisableMultiRegionAccessPoints) {\n        endpointParams.disableMultiRegionAccessPoints = true;\n        endpointParams.DisableMRAP = true;\n    }\n    return endpointParams;\n};\nconst DOMAIN_PATTERN = /^[a-z0-9][a-z0-9\\.\\-]{1,61}[a-z0-9]$/;\nconst IP_ADDRESS_PATTERN = /(\\d+\\.){3}\\d+/;\nconst DOTS_PATTERN = /\\.\\./;\nconst isDnsCompatibleBucketName = (bucketName) => DOMAIN_PATTERN.test(bucketName) && !IP_ADDRESS_PATTERN.test(bucketName) && !DOTS_PATTERN.test(bucketName);\nconst isArnBucketName = (bucketName) => {\n    const [arn, partition, service, , , bucket] = bucketName.split(\":\");\n    const isArn = arn === \"arn\" && bucketName.split(\":\").length >= 6;\n    const isValidArn = Boolean(isArn && partition && service && bucket);\n    if (isArn && !isValidArn) {\n        throw new Error(`Invalid ARN: ${bucketName} was an invalid ARN.`);\n    }\n    return isValidArn;\n};\n\nconst createConfigValueProvider = (configKey, canonicalEndpointParamKey, config) => {\n    const configProvider = async () => {\n        const configValue = config[configKey] ?? config[canonicalEndpointParamKey];\n        if (typeof configValue === \"function\") {\n            return configValue();\n        }\n        return configValue;\n    };\n    if (configKey === \"credentialScope\" || canonicalEndpointParamKey === \"CredentialScope\") {\n        return async () => {\n            const credentials = typeof config.credentials === \"function\" ? await config.credentials() : config.credentials;\n            const configValue = credentials?.credentialScope ?? credentials?.CredentialScope;\n            return configValue;\n        };\n    }\n    if (configKey === \"accountId\" || canonicalEndpointParamKey === \"AccountId\") {\n        return async () => {\n            const credentials = typeof config.credentials === \"function\" ? await config.credentials() : config.credentials;\n            const configValue = credentials?.accountId ?? credentials?.AccountId;\n            return configValue;\n        };\n    }\n    if (configKey === \"endpoint\" || canonicalEndpointParamKey === \"endpoint\") {\n        return async () => {\n            if (config.isCustomEndpoint === false) {\n                return undefined;\n            }\n            const endpoint = await configProvider();\n            if (endpoint && typeof endpoint === \"object\") {\n                if (\"url\" in endpoint) {\n                    return endpoint.url.href;\n                }\n                if (\"hostname\" in endpoint) {\n                    const { protocol, hostname, port, path } = endpoint;\n                    return `${protocol}//${hostname}${port ? \":\" + port : \"\"}${path}`;\n                }\n            }\n            return endpoint;\n        };\n    }\n    return configProvider;\n};\n\nconst toEndpointV1 = (endpoint) => {\n    if (typeof endpoint === \"object\") {\n        if (\"url\" in endpoint) {\n            return urlParser.parseUrl(endpoint.url);\n        }\n        return endpoint;\n    }\n    return urlParser.parseUrl(endpoint);\n};\n\nconst getEndpointFromInstructions = async (commandInput, instructionsSupplier, clientConfig, context) => {\n    if (!clientConfig.isCustomEndpoint) {\n        let endpointFromConfig;\n        if (clientConfig.serviceConfiguredEndpoint) {\n            endpointFromConfig = await clientConfig.serviceConfiguredEndpoint();\n        }\n        else {\n            endpointFromConfig = await getEndpointFromConfig.getEndpointFromConfig(clientConfig.serviceId);\n        }\n        if (endpointFromConfig) {\n            clientConfig.endpoint = () => Promise.resolve(toEndpointV1(endpointFromConfig));\n            clientConfig.isCustomEndpoint = true;\n        }\n    }\n    const endpointParams = await resolveParams(commandInput, instructionsSupplier, clientConfig);\n    if (typeof clientConfig.endpointProvider !== \"function\") {\n        throw new Error(\"config.endpointProvider is not set.\");\n    }\n    const endpoint = clientConfig.endpointProvider(endpointParams, context);\n    return endpoint;\n};\nconst resolveParams = async (commandInput, instructionsSupplier, clientConfig) => {\n    const endpointParams = {};\n    const instructions = instructionsSupplier?.getEndpointParameterInstructions?.() || {};\n    for (const [name, instruction] of Object.entries(instructions)) {\n        switch (instruction.type) {\n            case \"staticContextParams\":\n                endpointParams[name] = instruction.value;\n                break;\n            case \"contextParams\":\n                endpointParams[name] = commandInput[instruction.name];\n                break;\n            case \"clientContextParams\":\n            case \"builtInParams\":\n                endpointParams[name] = await createConfigValueProvider(instruction.name, name, clientConfig)();\n                break;\n            case \"operationContextParams\":\n                endpointParams[name] = instruction.get(commandInput);\n                break;\n            default:\n                throw new Error(\"Unrecognized endpoint parameter instruction: \" + JSON.stringify(instruction));\n        }\n    }\n    if (Object.keys(instructions).length === 0) {\n        Object.assign(endpointParams, clientConfig);\n    }\n    if (String(clientConfig.serviceId).toLowerCase() === \"s3\") {\n        await resolveParamsForS3(endpointParams);\n    }\n    return endpointParams;\n};\n\nconst endpointMiddleware = ({ config, instructions, }) => {\n    return (next, context) => async (args) => {\n        if (config.isCustomEndpoint) {\n            core.setFeature(context, \"ENDPOINT_OVERRIDE\", \"N\");\n        }\n        const endpoint = await getEndpointFromInstructions(args.input, {\n            getEndpointParameterInstructions() {\n                return instructions;\n            },\n        }, { ...config }, context);\n        context.endpointV2 = endpoint;\n        context.authSchemes = endpoint.properties?.authSchemes;\n        const authScheme = context.authSchemes?.[0];\n        if (authScheme) {\n            context[\"signing_region\"] = authScheme.signingRegion;\n            context[\"signing_service\"] = authScheme.signingName;\n            const smithyContext = utilMiddleware.getSmithyContext(context);\n            const httpAuthOption = smithyContext?.selectedHttpAuthScheme?.httpAuthOption;\n            if (httpAuthOption) {\n                httpAuthOption.signingProperties = Object.assign(httpAuthOption.signingProperties || {}, {\n                    signing_region: authScheme.signingRegion,\n                    signingRegion: authScheme.signingRegion,\n                    signing_service: authScheme.signingName,\n                    signingName: authScheme.signingName,\n                    signingRegionSet: authScheme.signingRegionSet,\n                }, authScheme.properties);\n            }\n        }\n        return next({\n            ...args,\n        });\n    };\n};\n\nconst endpointMiddlewareOptions = {\n    step: \"serialize\",\n    tags: [\"ENDPOINT_PARAMETERS\", \"ENDPOINT_V2\", \"ENDPOINT\"],\n    name: \"endpointV2Middleware\",\n    override: true,\n    relation: \"before\",\n    toMiddleware: middlewareSerde.serializerMiddlewareOption.name,\n};\nconst getEndpointPlugin = (config, instructions) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(endpointMiddleware({\n            config,\n            instructions,\n        }), endpointMiddlewareOptions);\n    },\n});\n\nconst resolveEndpointConfig = (input) => {\n    const tls = input.tls ?? true;\n    const { endpoint, useDualstackEndpoint, useFipsEndpoint } = input;\n    const customEndpointProvider = endpoint != null ? async () => toEndpointV1(await utilMiddleware.normalizeProvider(endpoint)()) : undefined;\n    const isCustomEndpoint = !!endpoint;\n    const resolvedConfig = Object.assign(input, {\n        endpoint: customEndpointProvider,\n        tls,\n        isCustomEndpoint,\n        useDualstackEndpoint: utilMiddleware.normalizeProvider(useDualstackEndpoint ?? false),\n        useFipsEndpoint: utilMiddleware.normalizeProvider(useFipsEndpoint ?? false),\n    });\n    let configuredEndpointPromise = undefined;\n    resolvedConfig.serviceConfiguredEndpoint = async () => {\n        if (input.serviceId && !configuredEndpointPromise) {\n            configuredEndpointPromise = getEndpointFromConfig.getEndpointFromConfig(input.serviceId);\n        }\n        return configuredEndpointPromise;\n    };\n    return resolvedConfig;\n};\n\nconst resolveEndpointRequiredConfig = (input) => {\n    const { endpoint } = input;\n    if (endpoint === undefined) {\n        input.endpoint = async () => {\n            throw new Error(\"@smithy/middleware-endpoint: (default endpointRuleSet) endpoint is not set - you must configure an endpoint.\");\n        };\n    }\n    return input;\n};\n\nexports.endpointMiddleware = endpointMiddleware;\nexports.endpointMiddlewareOptions = endpointMiddlewareOptions;\nexports.getEndpointFromInstructions = getEndpointFromInstructions;\nexports.getEndpointPlugin = getEndpointPlugin;\nexports.resolveEndpointConfig = resolveEndpointConfig;\nexports.resolveEndpointRequiredConfig = resolveEndpointRequiredConfig;\nexports.resolveParams = resolveParams;\nexports.toEndpointV1 = toEndpointV1;\n", "'use strict';\n\nconst CLOCK_SKEW_ERROR_CODES = [\n    \"AuthFailure\",\n    \"InvalidSignatureException\",\n    \"RequestExpired\",\n    \"RequestInTheFuture\",\n    \"RequestTimeTooSkewed\",\n    \"SignatureDoesNotMatch\",\n];\nconst THROTTLING_ERROR_CODES = [\n    \"BandwidthLimitExceeded\",\n    \"EC2ThrottledException\",\n    \"LimitExceededException\",\n    \"PriorRequestNotComplete\",\n    \"ProvisionedThroughputExceededException\",\n    \"RequestLimitExceeded\",\n    \"RequestThrottled\",\n    \"RequestThrottledException\",\n    \"SlowDown\",\n    \"ThrottledException\",\n    \"Throttling\",\n    \"ThrottlingException\",\n    \"TooManyRequestsException\",\n    \"TransactionInProgressException\",\n];\nconst TRANSIENT_ERROR_CODES = [\"TimeoutError\", \"RequestTimeout\", \"RequestTimeoutException\"];\nconst TRANSIENT_ERROR_STATUS_CODES = [500, 502, 503, 504];\nconst NODEJS_TIMEOUT_ERROR_CODES = [\"ECONNRESET\", \"ECONNREFUSED\", \"EPIPE\", \"ETIMEDOUT\"];\nconst NODEJS_NETWORK_ERROR_CODES = [\"EHOSTUNREACH\", \"ENETUNREACH\", \"ENOTFOUND\"];\n\nconst isRetryableByTrait = (error) => error?.$retryable !== undefined;\nconst isClockSkewError = (error) => CLOCK_SKEW_ERROR_CODES.includes(error.name);\nconst isClockSkewCorrectedError = (error) => error.$metadata?.clockSkewCorrected;\nconst isBrowserNetworkError = (error) => {\n    const errorMessages = new Set([\n        \"Failed to fetch\",\n        \"NetworkError when attempting to fetch resource\",\n        \"The Internet connection appears to be offline\",\n        \"Load failed\",\n        \"Network request failed\",\n    ]);\n    const isValid = error && error instanceof TypeError;\n    if (!isValid) {\n        return false;\n    }\n    return errorMessages.has(error.message);\n};\nconst isThrottlingError = (error) => error.$metadata?.httpStatusCode === 429 ||\n    THROTTLING_ERROR_CODES.includes(error.name) ||\n    error.$retryable?.throttling == true;\nconst isTransientError = (error, depth = 0) => isRetryableByTrait(error) ||\n    isClockSkewCorrectedError(error) ||\n    TRANSIENT_ERROR_CODES.includes(error.name) ||\n    NODEJS_TIMEOUT_ERROR_CODES.includes(error?.code || \"\") ||\n    NODEJS_NETWORK_ERROR_CODES.includes(error?.code || \"\") ||\n    TRANSIENT_ERROR_STATUS_CODES.includes(error.$metadata?.httpStatusCode || 0) ||\n    isBrowserNetworkError(error) ||\n    (error.cause !== undefined && depth <= 10 && isTransientError(error.cause, depth + 1));\nconst isServerError = (error) => {\n    if (error.$metadata?.httpStatusCode !== undefined) {\n        const statusCode = error.$metadata.httpStatusCode;\n        if (500 <= statusCode && statusCode <= 599 && !isTransientError(error)) {\n            return true;\n        }\n        return false;\n    }\n    return false;\n};\n\nexports.isBrowserNetworkError = isBrowserNetworkError;\nexports.isClockSkewCorrectedError = isClockSkewCorrectedError;\nexports.isClockSkewError = isClockSkewError;\nexports.isRetryableByTrait = isRetryableByTrait;\nexports.isServerError = isServerError;\nexports.isThrottlingError = isThrottlingError;\nexports.isTransientError = isTransientError;\n", "'use strict';\n\nvar serviceErrorClassification = require('@smithy/service-error-classification');\n\nexports.RETRY_MODES = void 0;\n(function (RETRY_MODES) {\n    RETRY_MODES[\"STANDARD\"] = \"standard\";\n    RETRY_MODES[\"ADAPTIVE\"] = \"adaptive\";\n})(exports.RETRY_MODES || (exports.RETRY_MODES = {}));\nconst DEFAULT_MAX_ATTEMPTS = 3;\nconst DEFAULT_RETRY_MODE = exports.RETRY_MODES.STANDARD;\n\nclass DefaultRateLimiter {\n    static setTimeoutFn = setTimeout;\n    beta;\n    minCapacity;\n    minFillRate;\n    scaleConstant;\n    smooth;\n    currentCapacity = 0;\n    enabled = false;\n    lastMaxRate = 0;\n    measuredTxRate = 0;\n    requestCount = 0;\n    fillRate;\n    lastThrottleTime;\n    lastTimestamp = 0;\n    lastTxRateBucket;\n    maxCapacity;\n    timeWindow = 0;\n    constructor(options) {\n        this.beta = options?.beta ?? 0.7;\n        this.minCapacity = options?.minCapacity ?? 1;\n        this.minFillRate = options?.minFillRate ?? 0.5;\n        this.scaleConstant = options?.scaleConstant ?? 0.4;\n        this.smooth = options?.smooth ?? 0.8;\n        const currentTimeInSeconds = this.getCurrentTimeInSeconds();\n        this.lastThrottleTime = currentTimeInSeconds;\n        this.lastTxRateBucket = Math.floor(this.getCurrentTimeInSeconds());\n        this.fillRate = this.minFillRate;\n        this.maxCapacity = this.minCapacity;\n    }\n    getCurrentTimeInSeconds() {\n        return Date.now() / 1000;\n    }\n    async getSendToken() {\n        return this.acquireTokenBucket(1);\n    }\n    async acquireTokenBucket(amount) {\n        if (!this.enabled) {\n            return;\n        }\n        this.refillTokenBucket();\n        if (amount > this.currentCapacity) {\n            const delay = ((amount - this.currentCapacity) / this.fillRate) * 1000;\n            await new Promise((resolve) => DefaultRateLimiter.setTimeoutFn(resolve, delay));\n        }\n        this.currentCapacity = this.currentCapacity - amount;\n    }\n    refillTokenBucket() {\n        const timestamp = this.getCurrentTimeInSeconds();\n        if (!this.lastTimestamp) {\n            this.lastTimestamp = timestamp;\n            return;\n        }\n        const fillAmount = (timestamp - this.lastTimestamp) * this.fillRate;\n        this.currentCapacity = Math.min(this.maxCapacity, this.currentCapacity + fillAmount);\n        this.lastTimestamp = timestamp;\n    }\n    updateClientSendingRate(response) {\n        let calculatedRate;\n        this.updateMeasuredRate();\n        if (serviceErrorClassification.isThrottlingError(response)) {\n            const rateToUse = !this.enabled ? this.measuredTxRate : Math.min(this.measuredTxRate, this.fillRate);\n            this.lastMaxRate = rateToUse;\n            this.calculateTimeWindow();\n            this.lastThrottleTime = this.getCurrentTimeInSeconds();\n            calculatedRate = this.cubicThrottle(rateToUse);\n            this.enableTokenBucket();\n        }\n        else {\n            this.calculateTimeWindow();\n            calculatedRate = this.cubicSuccess(this.getCurrentTimeInSeconds());\n        }\n        const newRate = Math.min(calculatedRate, 2 * this.measuredTxRate);\n        this.updateTokenBucketRate(newRate);\n    }\n    calculateTimeWindow() {\n        this.timeWindow = this.getPrecise(Math.pow((this.lastMaxRate * (1 - this.beta)) / this.scaleConstant, 1 / 3));\n    }\n    cubicThrottle(rateToUse) {\n        return this.getPrecise(rateToUse * this.beta);\n    }\n    cubicSuccess(timestamp) {\n        return this.getPrecise(this.scaleConstant * Math.pow(timestamp - this.lastThrottleTime - this.timeWindow, 3) + this.lastMaxRate);\n    }\n    enableTokenBucket() {\n        this.enabled = true;\n    }\n    updateTokenBucketRate(newRate) {\n        this.refillTokenBucket();\n        this.fillRate = Math.max(newRate, this.minFillRate);\n        this.maxCapacity = Math.max(newRate, this.minCapacity);\n        this.currentCapacity = Math.min(this.currentCapacity, this.maxCapacity);\n    }\n    updateMeasuredRate() {\n        const t = this.getCurrentTimeInSeconds();\n        const timeBucket = Math.floor(t * 2) / 2;\n        this.requestCount++;\n        if (timeBucket > this.lastTxRateBucket) {\n            const currentRate = this.requestCount / (timeBucket - this.lastTxRateBucket);\n            this.measuredTxRate = this.getPrecise(currentRate * this.smooth + this.measuredTxRate * (1 - this.smooth));\n            this.requestCount = 0;\n            this.lastTxRateBucket = timeBucket;\n        }\n    }\n    getPrecise(num) {\n        return parseFloat(num.toFixed(8));\n    }\n}\n\nconst DEFAULT_RETRY_DELAY_BASE = 100;\nconst MAXIMUM_RETRY_DELAY = 20 * 1000;\nconst THROTTLING_RETRY_DELAY_BASE = 500;\nconst INITIAL_RETRY_TOKENS = 500;\nconst RETRY_COST = 5;\nconst TIMEOUT_RETRY_COST = 10;\nconst NO_RETRY_INCREMENT = 1;\nconst INVOCATION_ID_HEADER = \"amz-sdk-invocation-id\";\nconst REQUEST_HEADER = \"amz-sdk-request\";\n\nconst getDefaultRetryBackoffStrategy = () => {\n    let delayBase = DEFAULT_RETRY_DELAY_BASE;\n    const computeNextBackoffDelay = (attempts) => {\n        return Math.floor(Math.min(MAXIMUM_RETRY_DELAY, Math.random() * 2 ** attempts * delayBase));\n    };\n    const setDelayBase = (delay) => {\n        delayBase = delay;\n    };\n    return {\n        computeNextBackoffDelay,\n        setDelayBase,\n    };\n};\n\nconst createDefaultRetryToken = ({ retryDelay, retryCount, retryCost, }) => {\n    const getRetryCount = () => retryCount;\n    const getRetryDelay = () => Math.min(MAXIMUM_RETRY_DELAY, retryDelay);\n    const getRetryCost = () => retryCost;\n    return {\n        getRetryCount,\n        getRetryDelay,\n        getRetryCost,\n    };\n};\n\nclass StandardRetryStrategy {\n    maxAttempts;\n    mode = exports.RETRY_MODES.STANDARD;\n    capacity = INITIAL_RETRY_TOKENS;\n    retryBackoffStrategy = getDefaultRetryBackoffStrategy();\n    maxAttemptsProvider;\n    constructor(maxAttempts) {\n        this.maxAttempts = maxAttempts;\n        this.maxAttemptsProvider = typeof maxAttempts === \"function\" ? maxAttempts : async () => maxAttempts;\n    }\n    async acquireInitialRetryToken(retryTokenScope) {\n        return createDefaultRetryToken({\n            retryDelay: DEFAULT_RETRY_DELAY_BASE,\n            retryCount: 0,\n        });\n    }\n    async refreshRetryTokenForRetry(token, errorInfo) {\n        const maxAttempts = await this.getMaxAttempts();\n        if (this.shouldRetry(token, errorInfo, maxAttempts)) {\n            const errorType = errorInfo.errorType;\n            this.retryBackoffStrategy.setDelayBase(errorType === \"THROTTLING\" ? THROTTLING_RETRY_DELAY_BASE : DEFAULT_RETRY_DELAY_BASE);\n            const delayFromErrorType = this.retryBackoffStrategy.computeNextBackoffDelay(token.getRetryCount());\n            const retryDelay = errorInfo.retryAfterHint\n                ? Math.max(errorInfo.retryAfterHint.getTime() - Date.now() || 0, delayFromErrorType)\n                : delayFromErrorType;\n            const capacityCost = this.getCapacityCost(errorType);\n            this.capacity -= capacityCost;\n            return createDefaultRetryToken({\n                retryDelay,\n                retryCount: token.getRetryCount() + 1,\n                retryCost: capacityCost,\n            });\n        }\n        throw new Error(\"No retry token available\");\n    }\n    recordSuccess(token) {\n        this.capacity = Math.max(INITIAL_RETRY_TOKENS, this.capacity + (token.getRetryCost() ?? NO_RETRY_INCREMENT));\n    }\n    getCapacity() {\n        return this.capacity;\n    }\n    async getMaxAttempts() {\n        try {\n            return await this.maxAttemptsProvider();\n        }\n        catch (error) {\n            console.warn(`Max attempts provider could not resolve. Using default of ${DEFAULT_MAX_ATTEMPTS}`);\n            return DEFAULT_MAX_ATTEMPTS;\n        }\n    }\n    shouldRetry(tokenToRenew, errorInfo, maxAttempts) {\n        const attempts = tokenToRenew.getRetryCount() + 1;\n        return (attempts < maxAttempts &&\n            this.capacity >= this.getCapacityCost(errorInfo.errorType) &&\n            this.isRetryableError(errorInfo.errorType));\n    }\n    getCapacityCost(errorType) {\n        return errorType === \"TRANSIENT\" ? TIMEOUT_RETRY_COST : RETRY_COST;\n    }\n    isRetryableError(errorType) {\n        return errorType === \"THROTTLING\" || errorType === \"TRANSIENT\";\n    }\n}\n\nclass AdaptiveRetryStrategy {\n    maxAttemptsProvider;\n    rateLimiter;\n    standardRetryStrategy;\n    mode = exports.RETRY_MODES.ADAPTIVE;\n    constructor(maxAttemptsProvider, options) {\n        this.maxAttemptsProvider = maxAttemptsProvider;\n        const { rateLimiter } = options ?? {};\n        this.rateLimiter = rateLimiter ?? new DefaultRateLimiter();\n        this.standardRetryStrategy = new StandardRetryStrategy(maxAttemptsProvider);\n    }\n    async acquireInitialRetryToken(retryTokenScope) {\n        await this.rateLimiter.getSendToken();\n        return this.standardRetryStrategy.acquireInitialRetryToken(retryTokenScope);\n    }\n    async refreshRetryTokenForRetry(tokenToRenew, errorInfo) {\n        this.rateLimiter.updateClientSendingRate(errorInfo);\n        return this.standardRetryStrategy.refreshRetryTokenForRetry(tokenToRenew, errorInfo);\n    }\n    recordSuccess(token) {\n        this.rateLimiter.updateClientSendingRate({});\n        this.standardRetryStrategy.recordSuccess(token);\n    }\n}\n\nclass ConfiguredRetryStrategy extends StandardRetryStrategy {\n    computeNextBackoffDelay;\n    constructor(maxAttempts, computeNextBackoffDelay = DEFAULT_RETRY_DELAY_BASE) {\n        super(typeof maxAttempts === \"function\" ? maxAttempts : async () => maxAttempts);\n        if (typeof computeNextBackoffDelay === \"number\") {\n            this.computeNextBackoffDelay = () => computeNextBackoffDelay;\n        }\n        else {\n            this.computeNextBackoffDelay = computeNextBackoffDelay;\n        }\n    }\n    async refreshRetryTokenForRetry(tokenToRenew, errorInfo) {\n        const token = await super.refreshRetryTokenForRetry(tokenToRenew, errorInfo);\n        token.getRetryDelay = () => this.computeNextBackoffDelay(token.getRetryCount());\n        return token;\n    }\n}\n\nexports.AdaptiveRetryStrategy = AdaptiveRetryStrategy;\nexports.ConfiguredRetryStrategy = ConfiguredRetryStrategy;\nexports.DEFAULT_MAX_ATTEMPTS = DEFAULT_MAX_ATTEMPTS;\nexports.DEFAULT_RETRY_DELAY_BASE = DEFAULT_RETRY_DELAY_BASE;\nexports.DEFAULT_RETRY_MODE = DEFAULT_RETRY_MODE;\nexports.DefaultRateLimiter = DefaultRateLimiter;\nexports.INITIAL_RETRY_TOKENS = INITIAL_RETRY_TOKENS;\nexports.INVOCATION_ID_HEADER = INVOCATION_ID_HEADER;\nexports.MAXIMUM_RETRY_DELAY = MAXIMUM_RETRY_DELAY;\nexports.NO_RETRY_INCREMENT = NO_RETRY_INCREMENT;\nexports.REQUEST_HEADER = REQUEST_HEADER;\nexports.RETRY_COST = RETRY_COST;\nexports.StandardRetryStrategy = StandardRetryStrategy;\nexports.THROTTLING_RETRY_DELAY_BASE = THROTTLING_RETRY_DELAY_BASE;\nexports.TIMEOUT_RETRY_COST = TIMEOUT_RETRY_COST;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isStreamingPayload = void 0;\nconst stream_1 = require(\"stream\");\nconst isStreamingPayload = (request) => request?.body instanceof stream_1.Readable ||\n    (typeof ReadableStream !== \"undefined\" && request?.body instanceof ReadableStream);\nexports.isStreamingPayload = isStreamingPayload;\n", "'use strict';\n\nvar utilRetry = require('@smithy/util-retry');\nvar protocolHttp = require('@smithy/protocol-http');\nvar serviceErrorClassification = require('@smithy/service-error-classification');\nvar uuid = require('@smithy/uuid');\nvar utilMiddleware = require('@smithy/util-middleware');\nvar smithyClient = require('@smithy/smithy-client');\nvar isStreamingPayload = require('./isStreamingPayload/isStreamingPayload');\n\nconst getDefaultRetryQuota = (initialRetryTokens, options) => {\n    const MAX_CAPACITY = initialRetryTokens;\n    const noRetryIncrement = utilRetry.NO_RETRY_INCREMENT;\n    const retryCost = utilRetry.RETRY_COST;\n    const timeoutRetryCost = utilRetry.TIMEOUT_RETRY_COST;\n    let availableCapacity = initialRetryTokens;\n    const getCapacityAmount = (error) => (error.name === \"TimeoutError\" ? timeoutRetryCost : retryCost);\n    const hasRetryTokens = (error) => getCapacityAmount(error) <= availableCapacity;\n    const retrieveRetryTokens = (error) => {\n        if (!hasRetryTokens(error)) {\n            throw new Error(\"No retry token available\");\n        }\n        const capacityAmount = getCapacityAmount(error);\n        availableCapacity -= capacityAmount;\n        return capacityAmount;\n    };\n    const releaseRetryTokens = (capacityReleaseAmount) => {\n        availableCapacity += capacityReleaseAmount ?? noRetryIncrement;\n        availableCapacity = Math.min(availableCapacity, MAX_CAPACITY);\n    };\n    return Object.freeze({\n        hasRetryTokens,\n        retrieveRetryTokens,\n        releaseRetryTokens,\n    });\n};\n\nconst defaultDelayDecider = (delayBase, attempts) => Math.floor(Math.min(utilRetry.MAXIMUM_RETRY_DELAY, Math.random() * 2 ** attempts * delayBase));\n\nconst defaultRetryDecider = (error) => {\n    if (!error) {\n        return false;\n    }\n    return serviceErrorClassification.isRetryableByTrait(error) || serviceErrorClassification.isClockSkewError(error) || serviceErrorClassification.isThrottlingError(error) || serviceErrorClassification.isTransientError(error);\n};\n\nconst asSdkError = (error) => {\n    if (error instanceof Error)\n        return error;\n    if (error instanceof Object)\n        return Object.assign(new Error(), error);\n    if (typeof error === \"string\")\n        return new Error(error);\n    return new Error(`AWS SDK error wrapper for ${error}`);\n};\n\nclass StandardRetryStrategy {\n    maxAttemptsProvider;\n    retryDecider;\n    delayDecider;\n    retryQuota;\n    mode = utilRetry.RETRY_MODES.STANDARD;\n    constructor(maxAttemptsProvider, options) {\n        this.maxAttemptsProvider = maxAttemptsProvider;\n        this.retryDecider = options?.retryDecider ?? defaultRetryDecider;\n        this.delayDecider = options?.delayDecider ?? defaultDelayDecider;\n        this.retryQuota = options?.retryQuota ?? getDefaultRetryQuota(utilRetry.INITIAL_RETRY_TOKENS);\n    }\n    shouldRetry(error, attempts, maxAttempts) {\n        return attempts < maxAttempts && this.retryDecider(error) && this.retryQuota.hasRetryTokens(error);\n    }\n    async getMaxAttempts() {\n        let maxAttempts;\n        try {\n            maxAttempts = await this.maxAttemptsProvider();\n        }\n        catch (error) {\n            maxAttempts = utilRetry.DEFAULT_MAX_ATTEMPTS;\n        }\n        return maxAttempts;\n    }\n    async retry(next, args, options) {\n        let retryTokenAmount;\n        let attempts = 0;\n        let totalDelay = 0;\n        const maxAttempts = await this.getMaxAttempts();\n        const { request } = args;\n        if (protocolHttp.HttpRequest.isInstance(request)) {\n            request.headers[utilRetry.INVOCATION_ID_HEADER] = uuid.v4();\n        }\n        while (true) {\n            try {\n                if (protocolHttp.HttpRequest.isInstance(request)) {\n                    request.headers[utilRetry.REQUEST_HEADER] = `attempt=${attempts + 1}; max=${maxAttempts}`;\n                }\n                if (options?.beforeRequest) {\n                    await options.beforeRequest();\n                }\n                const { response, output } = await next(args);\n                if (options?.afterRequest) {\n                    options.afterRequest(response);\n                }\n                this.retryQuota.releaseRetryTokens(retryTokenAmount);\n                output.$metadata.attempts = attempts + 1;\n                output.$metadata.totalRetryDelay = totalDelay;\n                return { response, output };\n            }\n            catch (e) {\n                const err = asSdkError(e);\n                attempts++;\n                if (this.shouldRetry(err, attempts, maxAttempts)) {\n                    retryTokenAmount = this.retryQuota.retrieveRetryTokens(err);\n                    const delayFromDecider = this.delayDecider(serviceErrorClassification.isThrottlingError(err) ? utilRetry.THROTTLING_RETRY_DELAY_BASE : utilRetry.DEFAULT_RETRY_DELAY_BASE, attempts);\n                    const delayFromResponse = getDelayFromRetryAfterHeader(err.$response);\n                    const delay = Math.max(delayFromResponse || 0, delayFromDecider);\n                    totalDelay += delay;\n                    await new Promise((resolve) => setTimeout(resolve, delay));\n                    continue;\n                }\n                if (!err.$metadata) {\n                    err.$metadata = {};\n                }\n                err.$metadata.attempts = attempts;\n                err.$metadata.totalRetryDelay = totalDelay;\n                throw err;\n            }\n        }\n    }\n}\nconst getDelayFromRetryAfterHeader = (response) => {\n    if (!protocolHttp.HttpResponse.isInstance(response))\n        return;\n    const retryAfterHeaderName = Object.keys(response.headers).find((key) => key.toLowerCase() === \"retry-after\");\n    if (!retryAfterHeaderName)\n        return;\n    const retryAfter = response.headers[retryAfterHeaderName];\n    const retryAfterSeconds = Number(retryAfter);\n    if (!Number.isNaN(retryAfterSeconds))\n        return retryAfterSeconds * 1000;\n    const retryAfterDate = new Date(retryAfter);\n    return retryAfterDate.getTime() - Date.now();\n};\n\nclass AdaptiveRetryStrategy extends StandardRetryStrategy {\n    rateLimiter;\n    constructor(maxAttemptsProvider, options) {\n        const { rateLimiter, ...superOptions } = options ?? {};\n        super(maxAttemptsProvider, superOptions);\n        this.rateLimiter = rateLimiter ?? new utilRetry.DefaultRateLimiter();\n        this.mode = utilRetry.RETRY_MODES.ADAPTIVE;\n    }\n    async retry(next, args) {\n        return super.retry(next, args, {\n            beforeRequest: async () => {\n                return this.rateLimiter.getSendToken();\n            },\n            afterRequest: (response) => {\n                this.rateLimiter.updateClientSendingRate(response);\n            },\n        });\n    }\n}\n\nconst ENV_MAX_ATTEMPTS = \"AWS_MAX_ATTEMPTS\";\nconst CONFIG_MAX_ATTEMPTS = \"max_attempts\";\nconst NODE_MAX_ATTEMPT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => {\n        const value = env[ENV_MAX_ATTEMPTS];\n        if (!value)\n            return undefined;\n        const maxAttempt = parseInt(value);\n        if (Number.isNaN(maxAttempt)) {\n            throw new Error(`Environment variable ${ENV_MAX_ATTEMPTS} mast be a number, got \"${value}\"`);\n        }\n        return maxAttempt;\n    },\n    configFileSelector: (profile) => {\n        const value = profile[CONFIG_MAX_ATTEMPTS];\n        if (!value)\n            return undefined;\n        const maxAttempt = parseInt(value);\n        if (Number.isNaN(maxAttempt)) {\n            throw new Error(`Shared config file entry ${CONFIG_MAX_ATTEMPTS} mast be a number, got \"${value}\"`);\n        }\n        return maxAttempt;\n    },\n    default: utilRetry.DEFAULT_MAX_ATTEMPTS,\n};\nconst resolveRetryConfig = (input) => {\n    const { retryStrategy, retryMode: _retryMode, maxAttempts: _maxAttempts } = input;\n    const maxAttempts = utilMiddleware.normalizeProvider(_maxAttempts ?? utilRetry.DEFAULT_MAX_ATTEMPTS);\n    return Object.assign(input, {\n        maxAttempts,\n        retryStrategy: async () => {\n            if (retryStrategy) {\n                return retryStrategy;\n            }\n            const retryMode = await utilMiddleware.normalizeProvider(_retryMode)();\n            if (retryMode === utilRetry.RETRY_MODES.ADAPTIVE) {\n                return new utilRetry.AdaptiveRetryStrategy(maxAttempts);\n            }\n            return new utilRetry.StandardRetryStrategy(maxAttempts);\n        },\n    });\n};\nconst ENV_RETRY_MODE = \"AWS_RETRY_MODE\";\nconst CONFIG_RETRY_MODE = \"retry_mode\";\nconst NODE_RETRY_MODE_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[ENV_RETRY_MODE],\n    configFileSelector: (profile) => profile[CONFIG_RETRY_MODE],\n    default: utilRetry.DEFAULT_RETRY_MODE,\n};\n\nconst omitRetryHeadersMiddleware = () => (next) => async (args) => {\n    const { request } = args;\n    if (protocolHttp.HttpRequest.isInstance(request)) {\n        delete request.headers[utilRetry.INVOCATION_ID_HEADER];\n        delete request.headers[utilRetry.REQUEST_HEADER];\n    }\n    return next(args);\n};\nconst omitRetryHeadersMiddlewareOptions = {\n    name: \"omitRetryHeadersMiddleware\",\n    tags: [\"RETRY\", \"HEADERS\", \"OMIT_RETRY_HEADERS\"],\n    relation: \"before\",\n    toMiddleware: \"awsAuthMiddleware\",\n    override: true,\n};\nconst getOmitRetryHeadersPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(omitRetryHeadersMiddleware(), omitRetryHeadersMiddlewareOptions);\n    },\n});\n\nconst retryMiddleware = (options) => (next, context) => async (args) => {\n    let retryStrategy = await options.retryStrategy();\n    const maxAttempts = await options.maxAttempts();\n    if (isRetryStrategyV2(retryStrategy)) {\n        retryStrategy = retryStrategy;\n        let retryToken = await retryStrategy.acquireInitialRetryToken(context[\"partition_id\"]);\n        let lastError = new Error();\n        let attempts = 0;\n        let totalRetryDelay = 0;\n        const { request } = args;\n        const isRequest = protocolHttp.HttpRequest.isInstance(request);\n        if (isRequest) {\n            request.headers[utilRetry.INVOCATION_ID_HEADER] = uuid.v4();\n        }\n        while (true) {\n            try {\n                if (isRequest) {\n                    request.headers[utilRetry.REQUEST_HEADER] = `attempt=${attempts + 1}; max=${maxAttempts}`;\n                }\n                const { response, output } = await next(args);\n                retryStrategy.recordSuccess(retryToken);\n                output.$metadata.attempts = attempts + 1;\n                output.$metadata.totalRetryDelay = totalRetryDelay;\n                return { response, output };\n            }\n            catch (e) {\n                const retryErrorInfo = getRetryErrorInfo(e);\n                lastError = asSdkError(e);\n                if (isRequest && isStreamingPayload.isStreamingPayload(request)) {\n                    (context.logger instanceof smithyClient.NoOpLogger ? console : context.logger)?.warn(\"An error was encountered in a non-retryable streaming request.\");\n                    throw lastError;\n                }\n                try {\n                    retryToken = await retryStrategy.refreshRetryTokenForRetry(retryToken, retryErrorInfo);\n                }\n                catch (refreshError) {\n                    if (!lastError.$metadata) {\n                        lastError.$metadata = {};\n                    }\n                    lastError.$metadata.attempts = attempts + 1;\n                    lastError.$metadata.totalRetryDelay = totalRetryDelay;\n                    throw lastError;\n                }\n                attempts = retryToken.getRetryCount();\n                const delay = retryToken.getRetryDelay();\n                totalRetryDelay += delay;\n                await new Promise((resolve) => setTimeout(resolve, delay));\n            }\n        }\n    }\n    else {\n        retryStrategy = retryStrategy;\n        if (retryStrategy?.mode)\n            context.userAgent = [...(context.userAgent || []), [\"cfg/retry-mode\", retryStrategy.mode]];\n        return retryStrategy.retry(next, args);\n    }\n};\nconst isRetryStrategyV2 = (retryStrategy) => typeof retryStrategy.acquireInitialRetryToken !== \"undefined\" &&\n    typeof retryStrategy.refreshRetryTokenForRetry !== \"undefined\" &&\n    typeof retryStrategy.recordSuccess !== \"undefined\";\nconst getRetryErrorInfo = (error) => {\n    const errorInfo = {\n        error,\n        errorType: getRetryErrorType(error),\n    };\n    const retryAfterHint = getRetryAfterHint(error.$response);\n    if (retryAfterHint) {\n        errorInfo.retryAfterHint = retryAfterHint;\n    }\n    return errorInfo;\n};\nconst getRetryErrorType = (error) => {\n    if (serviceErrorClassification.isThrottlingError(error))\n        return \"THROTTLING\";\n    if (serviceErrorClassification.isTransientError(error))\n        return \"TRANSIENT\";\n    if (serviceErrorClassification.isServerError(error))\n        return \"SERVER_ERROR\";\n    return \"CLIENT_ERROR\";\n};\nconst retryMiddlewareOptions = {\n    name: \"retryMiddleware\",\n    tags: [\"RETRY\"],\n    step: \"finalizeRequest\",\n    priority: \"high\",\n    override: true,\n};\nconst getRetryPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(retryMiddleware(options), retryMiddlewareOptions);\n    },\n});\nconst getRetryAfterHint = (response) => {\n    if (!protocolHttp.HttpResponse.isInstance(response))\n        return;\n    const retryAfterHeaderName = Object.keys(response.headers).find((key) => key.toLowerCase() === \"retry-after\");\n    if (!retryAfterHeaderName)\n        return;\n    const retryAfter = response.headers[retryAfterHeaderName];\n    const retryAfterSeconds = Number(retryAfter);\n    if (!Number.isNaN(retryAfterSeconds))\n        return new Date(retryAfterSeconds * 1000);\n    const retryAfterDate = new Date(retryAfter);\n    return retryAfterDate;\n};\n\nexports.AdaptiveRetryStrategy = AdaptiveRetryStrategy;\nexports.CONFIG_MAX_ATTEMPTS = CONFIG_MAX_ATTEMPTS;\nexports.CONFIG_RETRY_MODE = CONFIG_RETRY_MODE;\nexports.ENV_MAX_ATTEMPTS = ENV_MAX_ATTEMPTS;\nexports.ENV_RETRY_MODE = ENV_RETRY_MODE;\nexports.NODE_MAX_ATTEMPT_CONFIG_OPTIONS = NODE_MAX_ATTEMPT_CONFIG_OPTIONS;\nexports.NODE_RETRY_MODE_CONFIG_OPTIONS = NODE_RETRY_MODE_CONFIG_OPTIONS;\nexports.StandardRetryStrategy = StandardRetryStrategy;\nexports.defaultDelayDecider = defaultDelayDecider;\nexports.defaultRetryDecider = defaultRetryDecider;\nexports.getOmitRetryHeadersPlugin = getOmitRetryHeadersPlugin;\nexports.getRetryAfterHint = getRetryAfterHint;\nexports.getRetryPlugin = getRetryPlugin;\nexports.omitRetryHeadersMiddleware = omitRetryHeadersMiddleware;\nexports.omitRetryHeadersMiddlewareOptions = omitRetryHeadersMiddlewareOptions;\nexports.resolveRetryConfig = resolveRetryConfig;\nexports.retryMiddleware = retryMiddleware;\nexports.retryMiddlewareOptions = retryMiddlewareOptions;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveHttpAuthSchemeConfig = exports.defaultKMSHttpAuthSchemeProvider = exports.defaultKMSHttpAuthSchemeParametersProvider = void 0;\nconst core_1 = require(\"@aws-sdk/core\");\nconst util_middleware_1 = require(\"@smithy/util-middleware\");\nconst defaultKMSHttpAuthSchemeParametersProvider = async (config, context, input) => {\n    return {\n        operation: (0, util_middleware_1.getSmithyContext)(context).operation,\n        region: (await (0, util_middleware_1.normalizeProvider)(config.region)()) ||\n            (() => {\n                throw new Error(\"expected `region` to be configured for `aws.auth#sigv4`\");\n            })(),\n    };\n};\nexports.defaultKMSHttpAuthSchemeParametersProvider = defaultKMSHttpAuthSchemeParametersProvider;\nfunction createAwsAuthSigv4HttpAuthOption(authParameters) {\n    return {\n        schemeId: \"aws.auth#sigv4\",\n        signingProperties: {\n            name: \"kms\",\n            region: authParameters.region,\n        },\n        propertiesExtractor: (config, context) => ({\n            signingProperties: {\n                config,\n                context,\n            },\n        }),\n    };\n}\nconst defaultKMSHttpAuthSchemeProvider = (authParameters) => {\n    const options = [];\n    switch (authParameters.operation) {\n        default: {\n            options.push(createAwsAuthSigv4HttpAuthOption(authParameters));\n        }\n    }\n    return options;\n};\nexports.defaultKMSHttpAuthSchemeProvider = defaultKMSHttpAuthSchemeProvider;\nconst resolveHttpAuthSchemeConfig = (config) => {\n    const config_0 = (0, core_1.resolveAwsSdkSigV4Config)(config);\n    return Object.assign(config_0, {\n        authSchemePreference: (0, util_middleware_1.normalizeProvider)(config.authSchemePreference ?? []),\n    });\n};\nexports.resolveHttpAuthSchemeConfig = resolveHttpAuthSchemeConfig;\n", "{\n  \"name\": \"@aws-sdk/client-kms\",\n  \"description\": \"AWS SDK for JavaScript Kms Client for Node.js, Browser and React Native\",\n  \"version\": \"3.908.0\",\n  \"scripts\": {\n    \"build\": \"concurrently 'yarn:build:cjs' 'yarn:build:es' 'yarn:build:types'\",\n    \"build:cjs\": \"node ../../scripts/compilation/inline client-kms\",\n    \"build:es\": \"tsc -p tsconfig.es.json\",\n    \"build:include:deps\": \"lerna run --scope $npm_package_name --include-dependencies build\",\n    \"build:types\": \"tsc -p tsconfig.types.json\",\n    \"build:types:downlevel\": \"downlevel-dts dist-types dist-types/ts3.4\",\n    \"clean\": \"rimraf ./dist-* && rimraf *.tsbuildinfo\",\n    \"extract:docs\": \"api-extractor run --local\",\n    \"generate:client\": \"node ../../scripts/generate-clients/single-service --solo kms\"\n  },\n  \"main\": \"./dist-cjs/index.js\",\n  \"types\": \"./dist-types/index.d.ts\",\n  \"module\": \"./dist-es/index.js\",\n  \"sideEffects\": false,\n  \"dependencies\": {\n    \"@aws-crypto/sha256-browser\": \"5.2.0\",\n    \"@aws-crypto/sha256-js\": \"5.2.0\",\n    \"@aws-sdk/core\": \"3.908.0\",\n    \"@aws-sdk/credential-provider-node\": \"3.908.0\",\n    \"@aws-sdk/middleware-host-header\": \"3.901.0\",\n    \"@aws-sdk/middleware-logger\": \"3.901.0\",\n    \"@aws-sdk/middleware-recursion-detection\": \"3.901.0\",\n    \"@aws-sdk/middleware-user-agent\": \"3.908.0\",\n    \"@aws-sdk/region-config-resolver\": \"3.901.0\",\n    \"@aws-sdk/types\": \"3.901.0\",\n    \"@aws-sdk/util-endpoints\": \"3.901.0\",\n    \"@aws-sdk/util-user-agent-browser\": \"3.907.0\",\n    \"@aws-sdk/util-user-agent-node\": \"3.908.0\",\n    \"@smithy/config-resolver\": \"^4.3.0\",\n    \"@smithy/core\": \"^3.15.0\",\n    \"@smithy/fetch-http-handler\": \"^5.3.1\",\n    \"@smithy/hash-node\": \"^4.2.0\",\n    \"@smithy/invalid-dependency\": \"^4.2.0\",\n    \"@smithy/middleware-content-length\": \"^4.2.0\",\n    \"@smithy/middleware-endpoint\": \"^4.3.1\",\n    \"@smithy/middleware-retry\": \"^4.4.1\",\n    \"@smithy/middleware-serde\": \"^4.2.0\",\n    \"@smithy/middleware-stack\": \"^4.2.0\",\n    \"@smithy/node-config-provider\": \"^4.3.0\",\n    \"@smithy/node-http-handler\": \"^4.3.0\",\n    \"@smithy/protocol-http\": \"^5.3.0\",\n    \"@smithy/smithy-client\": \"^4.7.1\",\n    \"@smithy/types\": \"^4.6.0\",\n    \"@smithy/url-parser\": \"^4.2.0\",\n    \"@smithy/util-base64\": \"^4.3.0\",\n    \"@smithy/util-body-length-browser\": \"^4.2.0\",\n    \"@smithy/util-body-length-node\": \"^4.2.1\",\n    \"@smithy/util-defaults-mode-browser\": \"^4.3.0\",\n    \"@smithy/util-defaults-mode-node\": \"^4.2.1\",\n    \"@smithy/util-endpoints\": \"^3.2.0\",\n    \"@smithy/util-middleware\": \"^4.2.0\",\n    \"@smithy/util-retry\": \"^4.2.0\",\n    \"@smithy/util-utf8\": \"^4.2.0\",\n    \"tslib\": \"^2.6.2\"\n  },\n  \"devDependencies\": {\n    \"@tsconfig/node18\": \"18.2.4\",\n    \"@types/node\": \"^18.19.69\",\n    \"concurrently\": \"7.0.0\",\n    \"downlevel-dts\": \"0.10.1\",\n    \"rimraf\": \"3.0.2\",\n    \"typescript\": \"~5.8.3\"\n  },\n  \"engines\": {\n    \"node\": \">=18.0.0\"\n  },\n  \"typesVersions\": {\n    \"<4.0\": {\n      \"dist-types/*\": [\n        \"dist-types/ts3.4/*\"\n      ]\n    }\n  },\n  \"files\": [\n    \"dist-*/**\"\n  ],\n  \"author\": {\n    \"name\": \"AWS SDK for JavaScript Team\",\n    \"url\": \"https://aws.amazon.com/javascript/\"\n  },\n  \"license\": \"Apache-2.0\",\n  \"browser\": {\n    \"./dist-es/runtimeConfig\": \"./dist-es/runtimeConfig.browser\"\n  },\n  \"react-native\": {\n    \"./dist-es/runtimeConfig\": \"./dist-es/runtimeConfig.native\"\n  },\n  \"homepage\": \"https://github.com/aws/aws-sdk-js-v3/tree/main/clients/client-kms\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/aws/aws-sdk-js-v3.git\",\n    \"directory\": \"clients/client-kms\"\n  }\n}\n", "'use strict';\n\nvar client = require('@aws-sdk/core/client');\nvar propertyProvider = require('@smithy/property-provider');\n\nconst ENV_KEY = \"AWS_ACCESS_KEY_ID\";\nconst ENV_SECRET = \"AWS_SECRET_ACCESS_KEY\";\nconst ENV_SESSION = \"AWS_SESSION_TOKEN\";\nconst ENV_EXPIRATION = \"AWS_CREDENTIAL_EXPIRATION\";\nconst ENV_CREDENTIAL_SCOPE = \"AWS_CREDENTIAL_SCOPE\";\nconst ENV_ACCOUNT_ID = \"AWS_ACCOUNT_ID\";\nconst fromEnv = (init) => async () => {\n    init?.logger?.debug(\"@aws-sdk/credential-provider-env - fromEnv\");\n    const accessKeyId = process.env[ENV_KEY];\n    const secretAccessKey = process.env[ENV_SECRET];\n    const sessionToken = process.env[ENV_SESSION];\n    const expiry = process.env[ENV_EXPIRATION];\n    const credentialScope = process.env[ENV_CREDENTIAL_SCOPE];\n    const accountId = process.env[ENV_ACCOUNT_ID];\n    if (accessKeyId && secretAccessKey) {\n        const credentials = {\n            accessKeyId,\n            secretAccessKey,\n            ...(sessionToken && { sessionToken }),\n            ...(expiry && { expiration: new Date(expiry) }),\n            ...(credentialScope && { credentialScope }),\n            ...(accountId && { accountId }),\n        };\n        client.setCredentialFeature(credentials, \"CREDENTIALS_ENV_VARS\", \"g\");\n        return credentials;\n    }\n    throw new propertyProvider.CredentialsProviderError(\"Unable to find environment variable credentials.\", { logger: init?.logger });\n};\n\nexports.ENV_ACCOUNT_ID = ENV_ACCOUNT_ID;\nexports.ENV_CREDENTIAL_SCOPE = ENV_CREDENTIAL_SCOPE;\nexports.ENV_EXPIRATION = ENV_EXPIRATION;\nexports.ENV_KEY = ENV_KEY;\nexports.ENV_SECRET = ENV_SECRET;\nexports.ENV_SESSION = ENV_SESSION;\nexports.fromEnv = fromEnv;\n", "'use strict';\n\nvar propertyProvider = require('@smithy/property-provider');\nvar url = require('url');\nvar buffer = require('buffer');\nvar http = require('http');\nvar nodeConfigProvider = require('@smithy/node-config-provider');\nvar urlParser = require('@smithy/url-parser');\n\nfunction httpRequest(options) {\n    return new Promise((resolve, reject) => {\n        const req = http.request({\n            method: \"GET\",\n            ...options,\n            hostname: options.hostname?.replace(/^\\[(.+)\\]$/, \"$1\"),\n        });\n        req.on(\"error\", (err) => {\n            reject(Object.assign(new propertyProvider.ProviderError(\"Unable to connect to instance metadata service\"), err));\n            req.destroy();\n        });\n        req.on(\"timeout\", () => {\n            reject(new propertyProvider.ProviderError(\"TimeoutError from instance metadata service\"));\n            req.destroy();\n        });\n        req.on(\"response\", (res) => {\n            const { statusCode = 400 } = res;\n            if (statusCode < 200 || 300 <= statusCode) {\n                reject(Object.assign(new propertyProvider.ProviderError(\"Error response received from instance metadata service\"), { statusCode }));\n                req.destroy();\n            }\n            const chunks = [];\n            res.on(\"data\", (chunk) => {\n                chunks.push(chunk);\n            });\n            res.on(\"end\", () => {\n                resolve(buffer.Buffer.concat(chunks));\n                req.destroy();\n            });\n        });\n        req.end();\n    });\n}\n\nconst isImdsCredentials = (arg) => Boolean(arg) &&\n    typeof arg === \"object\" &&\n    typeof arg.AccessKeyId === \"string\" &&\n    typeof arg.SecretAccessKey === \"string\" &&\n    typeof arg.Token === \"string\" &&\n    typeof arg.Expiration === \"string\";\nconst fromImdsCredentials = (creds) => ({\n    accessKeyId: creds.AccessKeyId,\n    secretAccessKey: creds.SecretAccessKey,\n    sessionToken: creds.Token,\n    expiration: new Date(creds.Expiration),\n    ...(creds.AccountId && { accountId: creds.AccountId }),\n});\n\nconst DEFAULT_TIMEOUT = 1000;\nconst DEFAULT_MAX_RETRIES = 0;\nconst providerConfigFromInit = ({ maxRetries = DEFAULT_MAX_RETRIES, timeout = DEFAULT_TIMEOUT, }) => ({ maxRetries, timeout });\n\nconst retry = (toRetry, maxRetries) => {\n    let promise = toRetry();\n    for (let i = 0; i < maxRetries; i++) {\n        promise = promise.catch(toRetry);\n    }\n    return promise;\n};\n\nconst ENV_CMDS_FULL_URI = \"AWS_CONTAINER_CREDENTIALS_FULL_URI\";\nconst ENV_CMDS_RELATIVE_URI = \"AWS_CONTAINER_CREDENTIALS_RELATIVE_URI\";\nconst ENV_CMDS_AUTH_TOKEN = \"AWS_CONTAINER_AUTHORIZATION_TOKEN\";\nconst fromContainerMetadata = (init = {}) => {\n    const { timeout, maxRetries } = providerConfigFromInit(init);\n    return () => retry(async () => {\n        const requestOptions = await getCmdsUri({ logger: init.logger });\n        const credsResponse = JSON.parse(await requestFromEcsImds(timeout, requestOptions));\n        if (!isImdsCredentials(credsResponse)) {\n            throw new propertyProvider.CredentialsProviderError(\"Invalid response received from instance metadata service.\", {\n                logger: init.logger,\n            });\n        }\n        return fromImdsCredentials(credsResponse);\n    }, maxRetries);\n};\nconst requestFromEcsImds = async (timeout, options) => {\n    if (process.env[ENV_CMDS_AUTH_TOKEN]) {\n        options.headers = {\n            ...options.headers,\n            Authorization: process.env[ENV_CMDS_AUTH_TOKEN],\n        };\n    }\n    const buffer = await httpRequest({\n        ...options,\n        timeout,\n    });\n    return buffer.toString();\n};\nconst CMDS_IP = \"169.254.170.2\";\nconst GREENGRASS_HOSTS = {\n    localhost: true,\n    \"127.0.0.1\": true,\n};\nconst GREENGRASS_PROTOCOLS = {\n    \"http:\": true,\n    \"https:\": true,\n};\nconst getCmdsUri = async ({ logger }) => {\n    if (process.env[ENV_CMDS_RELATIVE_URI]) {\n        return {\n            hostname: CMDS_IP,\n            path: process.env[ENV_CMDS_RELATIVE_URI],\n        };\n    }\n    if (process.env[ENV_CMDS_FULL_URI]) {\n        const parsed = url.parse(process.env[ENV_CMDS_FULL_URI]);\n        if (!parsed.hostname || !(parsed.hostname in GREENGRASS_HOSTS)) {\n            throw new propertyProvider.CredentialsProviderError(`${parsed.hostname} is not a valid container metadata service hostname`, {\n                tryNextLink: false,\n                logger,\n            });\n        }\n        if (!parsed.protocol || !(parsed.protocol in GREENGRASS_PROTOCOLS)) {\n            throw new propertyProvider.CredentialsProviderError(`${parsed.protocol} is not a valid container metadata service protocol`, {\n                tryNextLink: false,\n                logger,\n            });\n        }\n        return {\n            ...parsed,\n            port: parsed.port ? parseInt(parsed.port, 10) : undefined,\n        };\n    }\n    throw new propertyProvider.CredentialsProviderError(\"The container metadata credential provider cannot be used unless\" +\n        ` the ${ENV_CMDS_RELATIVE_URI} or ${ENV_CMDS_FULL_URI} environment` +\n        \" variable is set\", {\n        tryNextLink: false,\n        logger,\n    });\n};\n\nclass InstanceMetadataV1FallbackError extends propertyProvider.CredentialsProviderError {\n    tryNextLink;\n    name = \"InstanceMetadataV1FallbackError\";\n    constructor(message, tryNextLink = true) {\n        super(message, tryNextLink);\n        this.tryNextLink = tryNextLink;\n        Object.setPrototypeOf(this, InstanceMetadataV1FallbackError.prototype);\n    }\n}\n\nexports.Endpoint = void 0;\n(function (Endpoint) {\n    Endpoint[\"IPv4\"] = \"http://169.254.169.254\";\n    Endpoint[\"IPv6\"] = \"http://[fd00:ec2::254]\";\n})(exports.Endpoint || (exports.Endpoint = {}));\n\nconst ENV_ENDPOINT_NAME = \"AWS_EC2_METADATA_SERVICE_ENDPOINT\";\nconst CONFIG_ENDPOINT_NAME = \"ec2_metadata_service_endpoint\";\nconst ENDPOINT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[ENV_ENDPOINT_NAME],\n    configFileSelector: (profile) => profile[CONFIG_ENDPOINT_NAME],\n    default: undefined,\n};\n\nvar EndpointMode;\n(function (EndpointMode) {\n    EndpointMode[\"IPv4\"] = \"IPv4\";\n    EndpointMode[\"IPv6\"] = \"IPv6\";\n})(EndpointMode || (EndpointMode = {}));\n\nconst ENV_ENDPOINT_MODE_NAME = \"AWS_EC2_METADATA_SERVICE_ENDPOINT_MODE\";\nconst CONFIG_ENDPOINT_MODE_NAME = \"ec2_metadata_service_endpoint_mode\";\nconst ENDPOINT_MODE_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[ENV_ENDPOINT_MODE_NAME],\n    configFileSelector: (profile) => profile[CONFIG_ENDPOINT_MODE_NAME],\n    default: EndpointMode.IPv4,\n};\n\nconst getInstanceMetadataEndpoint = async () => urlParser.parseUrl((await getFromEndpointConfig()) || (await getFromEndpointModeConfig()));\nconst getFromEndpointConfig = async () => nodeConfigProvider.loadConfig(ENDPOINT_CONFIG_OPTIONS)();\nconst getFromEndpointModeConfig = async () => {\n    const endpointMode = await nodeConfigProvider.loadConfig(ENDPOINT_MODE_CONFIG_OPTIONS)();\n    switch (endpointMode) {\n        case EndpointMode.IPv4:\n            return exports.Endpoint.IPv4;\n        case EndpointMode.IPv6:\n            return exports.Endpoint.IPv6;\n        default:\n            throw new Error(`Unsupported endpoint mode: ${endpointMode}.` + ` Select from ${Object.values(EndpointMode)}`);\n    }\n};\n\nconst STATIC_STABILITY_REFRESH_INTERVAL_SECONDS = 5 * 60;\nconst STATIC_STABILITY_REFRESH_INTERVAL_JITTER_WINDOW_SECONDS = 5 * 60;\nconst STATIC_STABILITY_DOC_URL = \"https://docs.aws.amazon.com/sdkref/latest/guide/feature-static-credentials.html\";\nconst getExtendedInstanceMetadataCredentials = (credentials, logger) => {\n    const refreshInterval = STATIC_STABILITY_REFRESH_INTERVAL_SECONDS +\n        Math.floor(Math.random() * STATIC_STABILITY_REFRESH_INTERVAL_JITTER_WINDOW_SECONDS);\n    const newExpiration = new Date(Date.now() + refreshInterval * 1000);\n    logger.warn(\"Attempting credential expiration extension due to a credential service availability issue. A refresh of these \" +\n        `credentials will be attempted after ${new Date(newExpiration)}.\\nFor more information, please visit: ` +\n        STATIC_STABILITY_DOC_URL);\n    const originalExpiration = credentials.originalExpiration ?? credentials.expiration;\n    return {\n        ...credentials,\n        ...(originalExpiration ? { originalExpiration } : {}),\n        expiration: newExpiration,\n    };\n};\n\nconst staticStabilityProvider = (provider, options = {}) => {\n    const logger = options?.logger || console;\n    let pastCredentials;\n    return async () => {\n        let credentials;\n        try {\n            credentials = await provider();\n            if (credentials.expiration && credentials.expiration.getTime() < Date.now()) {\n                credentials = getExtendedInstanceMetadataCredentials(credentials, logger);\n            }\n        }\n        catch (e) {\n            if (pastCredentials) {\n                logger.warn(\"Credential renew failed: \", e);\n                credentials = getExtendedInstanceMetadataCredentials(pastCredentials, logger);\n            }\n            else {\n                throw e;\n            }\n        }\n        pastCredentials = credentials;\n        return credentials;\n    };\n};\n\nconst IMDS_PATH = \"/latest/meta-data/iam/security-credentials/\";\nconst IMDS_TOKEN_PATH = \"/latest/api/token\";\nconst AWS_EC2_METADATA_V1_DISABLED = \"AWS_EC2_METADATA_V1_DISABLED\";\nconst PROFILE_AWS_EC2_METADATA_V1_DISABLED = \"ec2_metadata_v1_disabled\";\nconst X_AWS_EC2_METADATA_TOKEN = \"x-aws-ec2-metadata-token\";\nconst fromInstanceMetadata = (init = {}) => staticStabilityProvider(getInstanceMetadataProvider(init), { logger: init.logger });\nconst getInstanceMetadataProvider = (init = {}) => {\n    let disableFetchToken = false;\n    const { logger, profile } = init;\n    const { timeout, maxRetries } = providerConfigFromInit(init);\n    const getCredentials = async (maxRetries, options) => {\n        const isImdsV1Fallback = disableFetchToken || options.headers?.[X_AWS_EC2_METADATA_TOKEN] == null;\n        if (isImdsV1Fallback) {\n            let fallbackBlockedFromProfile = false;\n            let fallbackBlockedFromProcessEnv = false;\n            const configValue = await nodeConfigProvider.loadConfig({\n                environmentVariableSelector: (env) => {\n                    const envValue = env[AWS_EC2_METADATA_V1_DISABLED];\n                    fallbackBlockedFromProcessEnv = !!envValue && envValue !== \"false\";\n                    if (envValue === undefined) {\n                        throw new propertyProvider.CredentialsProviderError(`${AWS_EC2_METADATA_V1_DISABLED} not set in env, checking config file next.`, { logger: init.logger });\n                    }\n                    return fallbackBlockedFromProcessEnv;\n                },\n                configFileSelector: (profile) => {\n                    const profileValue = profile[PROFILE_AWS_EC2_METADATA_V1_DISABLED];\n                    fallbackBlockedFromProfile = !!profileValue && profileValue !== \"false\";\n                    return fallbackBlockedFromProfile;\n                },\n                default: false,\n            }, {\n                profile,\n            })();\n            if (init.ec2MetadataV1Disabled || configValue) {\n                const causes = [];\n                if (init.ec2MetadataV1Disabled)\n                    causes.push(\"credential provider initialization (runtime option ec2MetadataV1Disabled)\");\n                if (fallbackBlockedFromProfile)\n                    causes.push(`config file profile (${PROFILE_AWS_EC2_METADATA_V1_DISABLED})`);\n                if (fallbackBlockedFromProcessEnv)\n                    causes.push(`process environment variable (${AWS_EC2_METADATA_V1_DISABLED})`);\n                throw new InstanceMetadataV1FallbackError(`AWS EC2 Metadata v1 fallback has been blocked by AWS SDK configuration in the following: [${causes.join(\", \")}].`);\n            }\n        }\n        const imdsProfile = (await retry(async () => {\n            let profile;\n            try {\n                profile = await getProfile(options);\n            }\n            catch (err) {\n                if (err.statusCode === 401) {\n                    disableFetchToken = false;\n                }\n                throw err;\n            }\n            return profile;\n        }, maxRetries)).trim();\n        return retry(async () => {\n            let creds;\n            try {\n                creds = await getCredentialsFromProfile(imdsProfile, options, init);\n            }\n            catch (err) {\n                if (err.statusCode === 401) {\n                    disableFetchToken = false;\n                }\n                throw err;\n            }\n            return creds;\n        }, maxRetries);\n    };\n    return async () => {\n        const endpoint = await getInstanceMetadataEndpoint();\n        if (disableFetchToken) {\n            logger?.debug(\"AWS SDK Instance Metadata\", \"using v1 fallback (no token fetch)\");\n            return getCredentials(maxRetries, { ...endpoint, timeout });\n        }\n        else {\n            let token;\n            try {\n                token = (await getMetadataToken({ ...endpoint, timeout })).toString();\n            }\n            catch (error) {\n                if (error?.statusCode === 400) {\n                    throw Object.assign(error, {\n                        message: \"EC2 Metadata token request returned error\",\n                    });\n                }\n                else if (error.message === \"TimeoutError\" || [403, 404, 405].includes(error.statusCode)) {\n                    disableFetchToken = true;\n                }\n                logger?.debug(\"AWS SDK Instance Metadata\", \"using v1 fallback (initial)\");\n                return getCredentials(maxRetries, { ...endpoint, timeout });\n            }\n            return getCredentials(maxRetries, {\n                ...endpoint,\n                headers: {\n                    [X_AWS_EC2_METADATA_TOKEN]: token,\n                },\n                timeout,\n            });\n        }\n    };\n};\nconst getMetadataToken = async (options) => httpRequest({\n    ...options,\n    path: IMDS_TOKEN_PATH,\n    method: \"PUT\",\n    headers: {\n        \"x-aws-ec2-metadata-token-ttl-seconds\": \"21600\",\n    },\n});\nconst getProfile = async (options) => (await httpRequest({ ...options, path: IMDS_PATH })).toString();\nconst getCredentialsFromProfile = async (profile, options, init) => {\n    const credentialsResponse = JSON.parse((await httpRequest({\n        ...options,\n        path: IMDS_PATH + profile,\n    })).toString());\n    if (!isImdsCredentials(credentialsResponse)) {\n        throw new propertyProvider.CredentialsProviderError(\"Invalid response received from instance metadata service.\", {\n            logger: init.logger,\n        });\n    }\n    return fromImdsCredentials(credentialsResponse);\n};\n\nexports.DEFAULT_MAX_RETRIES = DEFAULT_MAX_RETRIES;\nexports.DEFAULT_TIMEOUT = DEFAULT_TIMEOUT;\nexports.ENV_CMDS_AUTH_TOKEN = ENV_CMDS_AUTH_TOKEN;\nexports.ENV_CMDS_FULL_URI = ENV_CMDS_FULL_URI;\nexports.ENV_CMDS_RELATIVE_URI = ENV_CMDS_RELATIVE_URI;\nexports.fromContainerMetadata = fromContainerMetadata;\nexports.fromInstanceMetadata = fromInstanceMetadata;\nexports.getInstanceMetadataEndpoint = getInstanceMetadataEndpoint;\nexports.httpRequest = httpRequest;\nexports.providerConfigFromInit = providerConfigFromInit;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkUrl = void 0;\nconst property_provider_1 = require(\"@smithy/property-provider\");\nconst LOOPBACK_CIDR_IPv4 = \"127.0.0.0/8\";\nconst LOOPBACK_CIDR_IPv6 = \"::1/128\";\nconst ECS_CONTAINER_HOST = \"169.254.170.2\";\nconst EKS_CONTAINER_HOST_IPv4 = \"169.254.170.23\";\nconst EKS_CONTAINER_HOST_IPv6 = \"[fd00:ec2::23]\";\nconst checkUrl = (url, logger) => {\n    if (url.protocol === \"https:\") {\n        return;\n    }\n    if (url.hostname === ECS_CONTAINER_HOST ||\n        url.hostname === EKS_CONTAINER_HOST_IPv4 ||\n        url.hostname === EKS_CONTAINER_HOST_IPv6) {\n        return;\n    }\n    if (url.hostname.includes(\"[\")) {\n        if (url.hostname === \"[::1]\" || url.hostname === \"[0000:0000:0000:0000:0000:0000:0000:0001]\") {\n            return;\n        }\n    }\n    else {\n        if (url.hostname === \"localhost\") {\n            return;\n        }\n        const ipComponents = url.hostname.split(\".\");\n        const inRange = (component) => {\n            const num = parseInt(component, 10);\n            return 0 <= num && num <= 255;\n        };\n        if (ipComponents[0] === \"127\" &&\n            inRange(ipComponents[1]) &&\n            inRange(ipComponents[2]) &&\n            inRange(ipComponents[3]) &&\n            ipComponents.length === 4) {\n            return;\n        }\n    }\n    throw new property_provider_1.CredentialsProviderError(`URL not accepted. It must either be HTTPS or match one of the following:\n  - loopback CIDR 127.0.0.0/8 or [::1/128]\n  - ECS container host 169.254.170.2\n  - EKS container host 169.254.170.23 or [fd00:ec2::23]`, { logger });\n};\nexports.checkUrl = checkUrl;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createGetRequest = createGetRequest;\nexports.getCredentials = getCredentials;\nconst property_provider_1 = require(\"@smithy/property-provider\");\nconst protocol_http_1 = require(\"@smithy/protocol-http\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst util_stream_1 = require(\"@smithy/util-stream\");\nfunction createGetRequest(url) {\n    return new protocol_http_1.HttpRequest({\n        protocol: url.protocol,\n        hostname: url.hostname,\n        port: Number(url.port),\n        path: url.pathname,\n        query: Array.from(url.searchParams.entries()).reduce((acc, [k, v]) => {\n            acc[k] = v;\n            return acc;\n        }, {}),\n        fragment: url.hash,\n    });\n}\nasync function getCredentials(response, logger) {\n    const stream = (0, util_stream_1.sdkStreamMixin)(response.body);\n    const str = await stream.transformToString();\n    if (response.statusCode === 200) {\n        const parsed = JSON.parse(str);\n        if (typeof parsed.AccessKeyId !== \"string\" ||\n            typeof parsed.SecretAccessKey !== \"string\" ||\n            typeof parsed.Token !== \"string\" ||\n            typeof parsed.Expiration !== \"string\") {\n            throw new property_provider_1.CredentialsProviderError(\"HTTP credential provider response not of the required format, an object matching: \" +\n                \"{ AccessKeyId: string, SecretAccessKey: string, Token: string, Expiration: string(rfc3339) }\", { logger });\n        }\n        return {\n            accessKeyId: parsed.AccessKeyId,\n            secretAccessKey: parsed.SecretAccessKey,\n            sessionToken: parsed.Token,\n            expiration: (0, smithy_client_1.parseRfc3339DateTime)(parsed.Expiration),\n        };\n    }\n    if (response.statusCode >= 400 && response.statusCode < 500) {\n        let parsedBody = {};\n        try {\n            parsedBody = JSON.parse(str);\n        }\n        catch (e) { }\n        throw Object.assign(new property_provider_1.CredentialsProviderError(`Server responded with status: ${response.statusCode}`, { logger }), {\n            Code: parsedBody.Code,\n            Message: parsedBody.Message,\n        });\n    }\n    throw new property_provider_1.CredentialsProviderError(`Server responded with status: ${response.statusCode}`, { logger });\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.retryWrapper = void 0;\nconst retryWrapper = (toRetry, maxRetries, delayMs) => {\n    return async () => {\n        for (let i = 0; i < maxRetries; ++i) {\n            try {\n                return await toRetry();\n            }\n            catch (e) {\n                await new Promise((resolve) => setTimeout(resolve, delayMs));\n            }\n        }\n        return await toRetry();\n    };\n};\nexports.retryWrapper = retryWrapper;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromHttp = void 0;\nconst tslib_1 = require(\"tslib\");\nconst client_1 = require(\"@aws-sdk/core/client\");\nconst node_http_handler_1 = require(\"@smithy/node-http-handler\");\nconst property_provider_1 = require(\"@smithy/property-provider\");\nconst promises_1 = tslib_1.__importDefault(require(\"fs/promises\"));\nconst checkUrl_1 = require(\"./checkUrl\");\nconst requestHelpers_1 = require(\"./requestHelpers\");\nconst retry_wrapper_1 = require(\"./retry-wrapper\");\nconst AWS_CONTAINER_CREDENTIALS_RELATIVE_URI = \"AWS_CONTAINER_CREDENTIALS_RELATIVE_URI\";\nconst DEFAULT_LINK_LOCAL_HOST = \"http://169.254.170.2\";\nconst AWS_CONTAINER_CREDENTIALS_FULL_URI = \"AWS_CONTAINER_CREDENTIALS_FULL_URI\";\nconst AWS_CONTAINER_AUTHORIZATION_TOKEN_FILE = \"AWS_CONTAINER_AUTHORIZATION_TOKEN_FILE\";\nconst AWS_CONTAINER_AUTHORIZATION_TOKEN = \"AWS_CONTAINER_AUTHORIZATION_TOKEN\";\nconst fromHttp = (options = {}) => {\n    options.logger?.debug(\"@aws-sdk/credential-provider-http - fromHttp\");\n    let host;\n    const relative = options.awsContainerCredentialsRelativeUri ?? process.env[AWS_CONTAINER_CREDENTIALS_RELATIVE_URI];\n    const full = options.awsContainerCredentialsFullUri ?? process.env[AWS_CONTAINER_CREDENTIALS_FULL_URI];\n    const token = options.awsContainerAuthorizationToken ?? process.env[AWS_CONTAINER_AUTHORIZATION_TOKEN];\n    const tokenFile = options.awsContainerAuthorizationTokenFile ?? process.env[AWS_CONTAINER_AUTHORIZATION_TOKEN_FILE];\n    const warn = options.logger?.constructor?.name === \"NoOpLogger\" || !options.logger?.warn\n        ? console.warn\n        : options.logger.warn.bind(options.logger);\n    if (relative && full) {\n        warn(\"@aws-sdk/credential-provider-http: \" +\n            \"you have set both awsContainerCredentialsRelativeUri and awsContainerCredentialsFullUri.\");\n        warn(\"awsContainerCredentialsFullUri will take precedence.\");\n    }\n    if (token && tokenFile) {\n        warn(\"@aws-sdk/credential-provider-http: \" +\n            \"you have set both awsContainerAuthorizationToken and awsContainerAuthorizationTokenFile.\");\n        warn(\"awsContainerAuthorizationToken will take precedence.\");\n    }\n    if (full) {\n        host = full;\n    }\n    else if (relative) {\n        host = `${DEFAULT_LINK_LOCAL_HOST}${relative}`;\n    }\n    else {\n        throw new property_provider_1.CredentialsProviderError(`No HTTP credential provider host provided.\nSet AWS_CONTAINER_CREDENTIALS_FULL_URI or AWS_CONTAINER_CREDENTIALS_RELATIVE_URI.`, { logger: options.logger });\n    }\n    const url = new URL(host);\n    (0, checkUrl_1.checkUrl)(url, options.logger);\n    const requestHandler = node_http_handler_1.NodeHttpHandler.create({\n        requestTimeout: options.timeout ?? 1000,\n        connectionTimeout: options.timeout ?? 1000,\n    });\n    return (0, retry_wrapper_1.retryWrapper)(async () => {\n        const request = (0, requestHelpers_1.createGetRequest)(url);\n        if (token) {\n            request.headers.Authorization = token;\n        }\n        else if (tokenFile) {\n            request.headers.Authorization = (await promises_1.default.readFile(tokenFile)).toString();\n        }\n        try {\n            const result = await requestHandler.handle(request);\n            return (0, requestHelpers_1.getCredentials)(result.response).then((creds) => (0, client_1.setCredentialFeature)(creds, \"CREDENTIALS_HTTP\", \"z\"));\n        }\n        catch (e) {\n            throw new property_provider_1.CredentialsProviderError(String(e), { logger: options.logger });\n        }\n    }, options.maxRetries ?? 3, options.timeout ?? 1000);\n};\nexports.fromHttp = fromHttp;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromHttp = void 0;\nvar fromHttp_1 = require(\"./fromHttp/fromHttp\");\nObject.defineProperty(exports, \"fromHttp\", { enumerable: true, get: function () { return fromHttp_1.fromHttp; } });\n", "import { resolveAwsSdkSigV4Config, } from \"@aws-sdk/core\";\nimport { getSmithyContext, normalizeProvider } from \"@smithy/util-middleware\";\nexport const defaultSSOOIDCHttpAuthSchemeParametersProvider = async (config, context, input) => {\n    return {\n        operation: getSmithyContext(context).operation,\n        region: (await normalizeProvider(config.region)()) ||\n            (() => {\n                throw new Error(\"expected `region` to be configured for `aws.auth#sigv4`\");\n            })(),\n    };\n};\nfunction createAwsAuthSigv4HttpAuthOption(authParameters) {\n    return {\n        schemeId: \"aws.auth#sigv4\",\n        signingProperties: {\n            name: \"sso-oauth\",\n            region: authParameters.region,\n        },\n        propertiesExtractor: (config, context) => ({\n            signingProperties: {\n                config,\n                context,\n            },\n        }),\n    };\n}\nfunction createSmithyApiNoAuthHttpAuthOption(authParameters) {\n    return {\n        schemeId: \"smithy.api#noAuth\",\n    };\n}\nexport const defaultSSOOIDCHttpAuthSchemeProvider = (authParameters) => {\n    const options = [];\n    switch (authParameters.operation) {\n        case \"CreateToken\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        default: {\n            options.push(createAwsAuthSigv4HttpAuthOption(authParameters));\n        }\n    }\n    return options;\n};\nexport const resolveHttpAuthSchemeConfig = (config) => {\n    const config_0 = resolveAwsSdkSigV4Config(config);\n    return Object.assign(config_0, {\n        authSchemePreference: normalizeProvider(config.authSchemePreference ?? []),\n    });\n};\n", "export const resolveClientEndpointParameters = (options) => {\n    return Object.assign(options, {\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        defaultSigningName: \"sso-oauth\",\n    });\n};\nexport const commonParams = {\n    UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n    Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n    Region: { type: \"builtInParams\", name: \"region\" },\n    UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n};\n", "{\n  \"name\": \"@aws-sdk/nested-clients\",\n  \"version\": \"3.908.0\",\n  \"description\": \"Nested clients for AWS SDK packages.\",\n  \"main\": \"./dist-cjs/index.js\",\n  \"module\": \"./dist-es/index.js\",\n  \"types\": \"./dist-types/index.d.ts\",\n  \"scripts\": {\n    \"build\": \"yarn lint && concurrently 'yarn:build:cjs' 'yarn:build:es' 'yarn:build:types'\",\n    \"build:cjs\": \"node ../../scripts/compilation/inline nested-clients\",\n    \"build:es\": \"tsc -p tsconfig.es.json\",\n    \"build:include:deps\": \"lerna run --scope $npm_package_name --include-dependencies build\",\n    \"build:types\": \"tsc -p tsconfig.types.json\",\n    \"build:types:downlevel\": \"downlevel-dts dist-types dist-types/ts3.4\",\n    \"clean\": \"rimraf ./dist-* && rimraf *.tsbuildinfo\",\n    \"lint\": \"node ../../scripts/validation/submodules-linter.js --pkg nested-clients\",\n    \"test\": \"yarn g:vitest run\",\n    \"test:watch\": \"yarn g:vitest watch\"\n  },\n  \"engines\": {\n    \"node\": \">=18.0.0\"\n  },\n  \"sideEffects\": false,\n  \"author\": {\n    \"name\": \"AWS SDK for JavaScript Team\",\n    \"url\": \"https://aws.amazon.com/javascript/\"\n  },\n  \"license\": \"Apache-2.0\",\n  \"dependencies\": {\n    \"@aws-crypto/sha256-browser\": \"5.2.0\",\n    \"@aws-crypto/sha256-js\": \"5.2.0\",\n    \"@aws-sdk/core\": \"3.908.0\",\n    \"@aws-sdk/middleware-host-header\": \"3.901.0\",\n    \"@aws-sdk/middleware-logger\": \"3.901.0\",\n    \"@aws-sdk/middleware-recursion-detection\": \"3.901.0\",\n    \"@aws-sdk/middleware-user-agent\": \"3.908.0\",\n    \"@aws-sdk/region-config-resolver\": \"3.901.0\",\n    \"@aws-sdk/types\": \"3.901.0\",\n    \"@aws-sdk/util-endpoints\": \"3.901.0\",\n    \"@aws-sdk/util-user-agent-browser\": \"3.907.0\",\n    \"@aws-sdk/util-user-agent-node\": \"3.908.0\",\n    \"@smithy/config-resolver\": \"^4.3.0\",\n    \"@smithy/core\": \"^3.15.0\",\n    \"@smithy/fetch-http-handler\": \"^5.3.1\",\n    \"@smithy/hash-node\": \"^4.2.0\",\n    \"@smithy/invalid-dependency\": \"^4.2.0\",\n    \"@smithy/middleware-content-length\": \"^4.2.0\",\n    \"@smithy/middleware-endpoint\": \"^4.3.1\",\n    \"@smithy/middleware-retry\": \"^4.4.1\",\n    \"@smithy/middleware-serde\": \"^4.2.0\",\n    \"@smithy/middleware-stack\": \"^4.2.0\",\n    \"@smithy/node-config-provider\": \"^4.3.0\",\n    \"@smithy/node-http-handler\": \"^4.3.0\",\n    \"@smithy/protocol-http\": \"^5.3.0\",\n    \"@smithy/smithy-client\": \"^4.7.1\",\n    \"@smithy/types\": \"^4.6.0\",\n    \"@smithy/url-parser\": \"^4.2.0\",\n    \"@smithy/util-base64\": \"^4.3.0\",\n    \"@smithy/util-body-length-browser\": \"^4.2.0\",\n    \"@smithy/util-body-length-node\": \"^4.2.1\",\n    \"@smithy/util-defaults-mode-browser\": \"^4.3.0\",\n    \"@smithy/util-defaults-mode-node\": \"^4.2.1\",\n    \"@smithy/util-endpoints\": \"^3.2.0\",\n    \"@smithy/util-middleware\": \"^4.2.0\",\n    \"@smithy/util-retry\": \"^4.2.0\",\n    \"@smithy/util-utf8\": \"^4.2.0\",\n    \"tslib\": \"^2.6.2\"\n  },\n  \"devDependencies\": {\n    \"concurrently\": \"7.0.0\",\n    \"downlevel-dts\": \"0.10.1\",\n    \"rimraf\": \"3.0.2\",\n    \"typescript\": \"~5.8.3\"\n  },\n  \"typesVersions\": {\n    \"<4.0\": {\n      \"dist-types/*\": [\n        \"dist-types/ts3.4/*\"\n      ]\n    }\n  },\n  \"files\": [\n    \"./sso-oidc.d.ts\",\n    \"./sso-oidc.js\",\n    \"./sts.d.ts\",\n    \"./sts.js\",\n    \"dist-*/**\"\n  ],\n  \"browser\": {\n    \"./dist-es/submodules/sso-oidc/runtimeConfig\": \"./dist-es/submodules/sso-oidc/runtimeConfig.browser\",\n    \"./dist-es/submodules/sts/runtimeConfig\": \"./dist-es/submodules/sts/runtimeConfig.browser\"\n  },\n  \"react-native\": {},\n  \"homepage\": \"https://github.com/aws/aws-sdk-js-v3/tree/main/packages/nested-clients\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/aws/aws-sdk-js-v3.git\",\n    \"directory\": \"packages/nested-clients\"\n  },\n  \"exports\": {\n    \"./sso-oidc\": {\n      \"types\": \"./dist-types/submodules/sso-oidc/index.d.ts\",\n      \"module\": \"./dist-es/submodules/sso-oidc/index.js\",\n      \"node\": \"./dist-cjs/submodules/sso-oidc/index.js\",\n      \"import\": \"./dist-es/submodules/sso-oidc/index.js\",\n      \"require\": \"./dist-cjs/submodules/sso-oidc/index.js\"\n    },\n    \"./sts\": {\n      \"types\": \"./dist-types/submodules/sts/index.d.ts\",\n      \"module\": \"./dist-es/submodules/sts/index.js\",\n      \"node\": \"./dist-cjs/submodules/sts/index.js\",\n      \"import\": \"./dist-es/submodules/sts/index.js\",\n      \"require\": \"./dist-cjs/submodules/sts/index.js\"\n    }\n  }\n}\n", "'use strict';\n\nvar os = require('os');\nvar process = require('process');\nvar middlewareUserAgent = require('@aws-sdk/middleware-user-agent');\n\nconst crtAvailability = {\n    isCrtAvailable: false,\n};\n\nconst isCrtAvailable = () => {\n    if (crtAvailability.isCrtAvailable) {\n        return [\"md/crt-avail\"];\n    }\n    return null;\n};\n\nconst createDefaultUserAgentProvider = ({ serviceId, clientVersion }) => {\n    return async (config) => {\n        const sections = [\n            [\"aws-sdk-js\", clientVersion],\n            [\"ua\", \"2.1\"],\n            [`os/${os.platform()}`, os.release()],\n            [\"lang/js\"],\n            [\"md/nodejs\", `${process.versions.node}`],\n        ];\n        const crtAvailable = isCrtAvailable();\n        if (crtAvailable) {\n            sections.push(crtAvailable);\n        }\n        if (serviceId) {\n            sections.push([`api/${serviceId}`, clientVersion]);\n        }\n        if (process.env.AWS_EXECUTION_ENV) {\n            sections.push([`exec-env/${process.env.AWS_EXECUTION_ENV}`]);\n        }\n        const appId = await config?.userAgentAppId?.();\n        const resolvedUserAgent = appId ? [...sections, [`app/${appId}`]] : [...sections];\n        return resolvedUserAgent;\n    };\n};\nconst defaultUserAgent = createDefaultUserAgentProvider;\n\nconst UA_APP_ID_ENV_NAME = \"AWS_SDK_UA_APP_ID\";\nconst UA_APP_ID_INI_NAME = \"sdk_ua_app_id\";\nconst UA_APP_ID_INI_NAME_DEPRECATED = \"sdk-ua-app-id\";\nconst NODE_APP_ID_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[UA_APP_ID_ENV_NAME],\n    configFileSelector: (profile) => profile[UA_APP_ID_INI_NAME] ?? profile[UA_APP_ID_INI_NAME_DEPRECATED],\n    default: middlewareUserAgent.DEFAULT_UA_APP_ID,\n};\n\nexports.NODE_APP_ID_CONFIG_OPTIONS = NODE_APP_ID_CONFIG_OPTIONS;\nexports.UA_APP_ID_ENV_NAME = UA_APP_ID_ENV_NAME;\nexports.UA_APP_ID_INI_NAME = UA_APP_ID_INI_NAME;\nexports.createDefaultUserAgentProvider = createDefaultUserAgentProvider;\nexports.crtAvailability = crtAvailability;\nexports.defaultUserAgent = defaultUserAgent;\n", "'use strict';\n\nvar utilBufferFrom = require('@smithy/util-buffer-from');\nvar utilUtf8 = require('@smithy/util-utf8');\nvar buffer = require('buffer');\nvar crypto = require('crypto');\n\nclass Hash {\n    algorithmIdentifier;\n    secret;\n    hash;\n    constructor(algorithmIdentifier, secret) {\n        this.algorithmIdentifier = algorithmIdentifier;\n        this.secret = secret;\n        this.reset();\n    }\n    update(toHash, encoding) {\n        this.hash.update(utilUtf8.toUint8Array(castSourceData(toHash, encoding)));\n    }\n    digest() {\n        return Promise.resolve(this.hash.digest());\n    }\n    reset() {\n        this.hash = this.secret\n            ? crypto.createHmac(this.algorithmIdentifier, castSourceData(this.secret))\n            : crypto.createHash(this.algorithmIdentifier);\n    }\n}\nfunction castSourceData(toCast, encoding) {\n    if (buffer.Buffer.isBuffer(toCast)) {\n        return toCast;\n    }\n    if (typeof toCast === \"string\") {\n        return utilBufferFrom.fromString(toCast, encoding);\n    }\n    if (ArrayBuffer.isView(toCast)) {\n        return utilBufferFrom.fromArrayBuffer(toCast.buffer, toCast.byteOffset, toCast.byteLength);\n    }\n    return utilBufferFrom.fromArrayBuffer(toCast);\n}\n\nexports.Hash = Hash;\n", "'use strict';\n\nvar node_fs = require('node:fs');\n\nconst calculateBodyLength = (body) => {\n    if (!body) {\n        return 0;\n    }\n    if (typeof body === \"string\") {\n        return Buffer.byteLength(body);\n    }\n    else if (typeof body.byteLength === \"number\") {\n        return body.byteLength;\n    }\n    else if (typeof body.size === \"number\") {\n        return body.size;\n    }\n    else if (typeof body.start === \"number\" && typeof body.end === \"number\") {\n        return body.end + 1 - body.start;\n    }\n    else if (body instanceof node_fs.ReadStream) {\n        if (body.path != null) {\n            return node_fs.lstatSync(body.path).size;\n        }\n        else if (typeof body.fd === \"number\") {\n            return node_fs.fstatSync(body.fd).size;\n        }\n    }\n    throw new Error(`Body Length computation failed for ${body}`);\n};\n\nexports.calculateBodyLength = calculateBodyLength;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromBase64 = void 0;\nconst util_buffer_from_1 = require(\"@smithy/util-buffer-from\");\nconst BASE64_REGEX = /^[A-Za-z0-9+/]*={0,2}$/;\nconst fromBase64 = (input) => {\n    if ((input.length * 3) % 4 !== 0) {\n        throw new TypeError(`Incorrect padding on base64 string.`);\n    }\n    if (!BASE64_REGEX.exec(input)) {\n        throw new TypeError(`Invalid base64 string.`);\n    }\n    const buffer = (0, util_buffer_from_1.fromString)(input, \"base64\");\n    return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n};\nexports.fromBase64 = fromBase64;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toBase64 = void 0;\nconst util_buffer_from_1 = require(\"@smithy/util-buffer-from\");\nconst util_utf8_1 = require(\"@smithy/util-utf8\");\nconst toBase64 = (_input) => {\n    let input;\n    if (typeof _input === \"string\") {\n        input = (0, util_utf8_1.fromUtf8)(_input);\n    }\n    else {\n        input = _input;\n    }\n    if (typeof input !== \"object\" || typeof input.byteOffset !== \"number\" || typeof input.byteLength !== \"number\") {\n        throw new Error(\"@smithy/util-base64: toBase64 encoder function only accepts string | Uint8Array.\");\n    }\n    return (0, util_buffer_from_1.fromArrayBuffer)(input.buffer, input.byteOffset, input.byteLength).toString(\"base64\");\n};\nexports.toBase64 = toBase64;\n", "'use strict';\n\nvar fromBase64 = require('./fromBase64');\nvar toBase64 = require('./toBase64');\n\n\n\nObject.keys(fromBase64).forEach(function (k) {\n\tif (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () { return fromBase64[k]; }\n\t});\n});\nObject.keys(toBase64).forEach(function (k) {\n\tif (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () { return toBase64[k]; }\n\t});\n});\n", "const u = \"required\", v = \"fn\", w = \"argv\", x = \"ref\";\nconst a = true, b = \"isSet\", c = \"booleanEquals\", d = \"error\", e = \"endpoint\", f = \"tree\", g = \"PartitionResult\", h = \"getAttr\", i = { [u]: false, \"type\": \"String\" }, j = { [u]: true, \"default\": false, \"type\": \"Boolean\" }, k = { [x]: \"Endpoint\" }, l = { [v]: c, [w]: [{ [x]: \"UseFIPS\" }, true] }, m = { [v]: c, [w]: [{ [x]: \"UseDualStack\" }, true] }, n = {}, o = { [v]: h, [w]: [{ [x]: g }, \"supportsFIPS\"] }, p = { [x]: g }, q = { [v]: c, [w]: [true, { [v]: h, [w]: [p, \"supportsDualStack\"] }] }, r = [l], s = [m], t = [{ [x]: \"Region\" }];\nconst _data = { version: \"1.0\", parameters: { Region: i, UseDualStack: j, UseFIPS: j, Endpoint: i }, rules: [{ conditions: [{ [v]: b, [w]: [k] }], rules: [{ conditions: r, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", type: d }, { conditions: s, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", type: d }, { endpoint: { url: k, properties: n, headers: n }, type: e }], type: f }, { conditions: [{ [v]: b, [w]: t }], rules: [{ conditions: [{ [v]: \"aws.partition\", [w]: t, assign: g }], rules: [{ conditions: [l, m], rules: [{ conditions: [{ [v]: c, [w]: [a, o] }, q], rules: [{ endpoint: { url: \"https://oidc-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: n, headers: n }, type: e }], type: f }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", type: d }], type: f }, { conditions: r, rules: [{ conditions: [{ [v]: c, [w]: [o, a] }], rules: [{ conditions: [{ [v]: \"stringEquals\", [w]: [{ [v]: h, [w]: [p, \"name\"] }, \"aws-us-gov\"] }], endpoint: { url: \"https://oidc.{Region}.amazonaws.com\", properties: n, headers: n }, type: e }, { endpoint: { url: \"https://oidc-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: n, headers: n }, type: e }], type: f }, { error: \"FIPS is enabled but this partition does not support FIPS\", type: d }], type: f }, { conditions: s, rules: [{ conditions: [q], rules: [{ endpoint: { url: \"https://oidc.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: n, headers: n }, type: e }], type: f }, { error: \"DualStack is enabled but this partition does not support DualStack\", type: d }], type: f }, { endpoint: { url: \"https://oidc.{Region}.{PartitionResult#dnsSuffix}\", properties: n, headers: n }, type: e }], type: f }], type: f }, { error: \"Invalid Configuration: Missing Region\", type: d }] };\nexport const ruleSet = _data;\n", "import { awsEndpointFunctions } from \"@aws-sdk/util-endpoints\";\nimport { customEndpointFunctions, EndpointCache, resolveEndpoint } from \"@smithy/util-endpoints\";\nimport { ruleSet } from \"./ruleset\";\nconst cache = new EndpointCache({\n    size: 50,\n    params: [\"Endpoint\", \"Region\", \"UseDualStack\", \"UseFIPS\"],\n});\nexport const defaultEndpointResolver = (endpointParams, context = {}) => {\n    return cache.get(endpointParams, () => resolveEndpoint(ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    }));\n};\ncustomEndpointFunctions.aws = awsEndpointFunctions;\n", "import { AwsSdkSigV4Signer } from \"@aws-sdk/core\";\nimport { NoAuthSigner } from \"@smithy/core\";\nimport { NoOpLogger } from \"@smithy/smithy-client\";\nimport { parseUrl } from \"@smithy/url-parser\";\nimport { fromBase64, toBase64 } from \"@smithy/util-base64\";\nimport { fromUtf8, toUtf8 } from \"@smithy/util-utf8\";\nimport { defaultSSOOIDCHttpAuthSchemeProvider } from \"./auth/httpAuthSchemeProvider\";\nimport { defaultEndpointResolver } from \"./endpoint/endpointResolver\";\nexport const getRuntimeConfig = (config) => {\n    return {\n        apiVersion: \"2019-06-10\",\n        base64Decoder: config?.base64Decoder ?? fromBase64,\n        base64Encoder: config?.base64Encoder ?? toBase64,\n        disableHostPrefix: config?.disableHostPrefix ?? false,\n        endpointProvider: config?.endpointProvider ?? defaultEndpointResolver,\n        extensions: config?.extensions ?? [],\n        httpAuthSchemeProvider: config?.httpAuthSchemeProvider ?? defaultSSOOIDCHttpAuthSchemeProvider,\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"aws.auth#sigv4\"),\n                signer: new AwsSdkSigV4Signer(),\n            },\n            {\n                schemeId: \"smithy.api#noAuth\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"smithy.api#noAuth\") || (async () => ({})),\n                signer: new NoAuthSigner(),\n            },\n        ],\n        logger: config?.logger ?? new NoOpLogger(),\n        serviceId: config?.serviceId ?? \"SSO OIDC\",\n        urlParser: config?.urlParser ?? parseUrl,\n        utf8Decoder: config?.utf8Decoder ?? fromUtf8,\n        utf8Encoder: config?.utf8Encoder ?? toUtf8,\n    };\n};\n", "'use strict';\n\nvar configResolver = require('@smithy/config-resolver');\nvar nodeConfigProvider = require('@smithy/node-config-provider');\nvar propertyProvider = require('@smithy/property-provider');\n\nconst AWS_EXECUTION_ENV = \"AWS_EXECUTION_ENV\";\nconst AWS_REGION_ENV = \"AWS_REGION\";\nconst AWS_DEFAULT_REGION_ENV = \"AWS_DEFAULT_REGION\";\nconst ENV_IMDS_DISABLED = \"AWS_EC2_METADATA_DISABLED\";\nconst DEFAULTS_MODE_OPTIONS = [\"in-region\", \"cross-region\", \"mobile\", \"standard\", \"legacy\"];\nconst IMDS_REGION_PATH = \"/latest/meta-data/placement/region\";\n\nconst AWS_DEFAULTS_MODE_ENV = \"AWS_DEFAULTS_MODE\";\nconst AWS_DEFAULTS_MODE_CONFIG = \"defaults_mode\";\nconst NODE_DEFAULTS_MODE_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => {\n        return env[AWS_DEFAULTS_MODE_ENV];\n    },\n    configFileSelector: (profile) => {\n        return profile[AWS_DEFAULTS_MODE_CONFIG];\n    },\n    default: \"legacy\",\n};\n\nconst resolveDefaultsModeConfig = ({ region = nodeConfigProvider.loadConfig(configResolver.NODE_REGION_CONFIG_OPTIONS), defaultsMode = nodeConfigProvider.loadConfig(NODE_DEFAULTS_MODE_CONFIG_OPTIONS), } = {}) => propertyProvider.memoize(async () => {\n    const mode = typeof defaultsMode === \"function\" ? await defaultsMode() : defaultsMode;\n    switch (mode?.toLowerCase()) {\n        case \"auto\":\n            return resolveNodeDefaultsModeAuto(region);\n        case \"in-region\":\n        case \"cross-region\":\n        case \"mobile\":\n        case \"standard\":\n        case \"legacy\":\n            return Promise.resolve(mode?.toLocaleLowerCase());\n        case undefined:\n            return Promise.resolve(\"legacy\");\n        default:\n            throw new Error(`Invalid parameter for \"defaultsMode\", expect ${DEFAULTS_MODE_OPTIONS.join(\", \")}, got ${mode}`);\n    }\n});\nconst resolveNodeDefaultsModeAuto = async (clientRegion) => {\n    if (clientRegion) {\n        const resolvedRegion = typeof clientRegion === \"function\" ? await clientRegion() : clientRegion;\n        const inferredRegion = await inferPhysicalRegion();\n        if (!inferredRegion) {\n            return \"standard\";\n        }\n        if (resolvedRegion === inferredRegion) {\n            return \"in-region\";\n        }\n        else {\n            return \"cross-region\";\n        }\n    }\n    return \"standard\";\n};\nconst inferPhysicalRegion = async () => {\n    if (process.env[AWS_EXECUTION_ENV] && (process.env[AWS_REGION_ENV] || process.env[AWS_DEFAULT_REGION_ENV])) {\n        return process.env[AWS_REGION_ENV] ?? process.env[AWS_DEFAULT_REGION_ENV];\n    }\n    if (!process.env[ENV_IMDS_DISABLED]) {\n        try {\n            const { getInstanceMetadataEndpoint, httpRequest } = await import('@smithy/credential-provider-imds');\n            const endpoint = await getInstanceMetadataEndpoint();\n            return (await httpRequest({ ...endpoint, path: IMDS_REGION_PATH })).toString();\n        }\n        catch (e) {\n        }\n    }\n};\n\nexports.resolveDefaultsModeConfig = resolveDefaultsModeConfig;\n", "import packageInfo from \"../../../package.json\";\nimport { NODE_AUTH_SCHEME_PREFERENCE_OPTIONS, emitWarningIfUnsupportedVersion as awsCheckVersion } from \"@aws-sdk/core\";\nimport { NODE_APP_ID_CONFIG_OPTIONS, createDefaultUserAgentProvider } from \"@aws-sdk/util-user-agent-node\";\nimport { NODE_REGION_CONFIG_FILE_OPTIONS, NODE_REGION_CONFIG_OPTIONS, NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, } from \"@smithy/config-resolver\";\nimport { Hash } from \"@smithy/hash-node\";\nimport { NODE_MAX_ATTEMPT_CONFIG_OPTIONS, NODE_RETRY_MODE_CONFIG_OPTIONS } from \"@smithy/middleware-retry\";\nimport { loadConfig as loadNodeConfig } from \"@smithy/node-config-provider\";\nimport { NodeHttpHandler as RequestHandler, streamCollector } from \"@smithy/node-http-handler\";\nimport { calculateBodyLength } from \"@smithy/util-body-length-node\";\nimport { DEFAULT_RETRY_MODE } from \"@smithy/util-retry\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@smithy/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@smithy/util-defaults-mode-node\";\nimport { emitWarningIfUnsupportedVersion } from \"@smithy/smithy-client\";\nexport const getRuntimeConfig = (config) => {\n    emitWarningIfUnsupportedVersion(process.version);\n    const defaultsMode = resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n    const clientSharedValues = getSharedRuntimeConfig(config);\n    awsCheckVersion(process.version);\n    const loaderConfig = {\n        profile: config?.profile,\n        logger: clientSharedValues.logger,\n    };\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        authSchemePreference: config?.authSchemePreference ?? loadNodeConfig(NODE_AUTH_SCHEME_PREFERENCE_OPTIONS, loaderConfig),\n        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            createDefaultUserAgentProvider({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),\n        maxAttempts: config?.maxAttempts ?? loadNodeConfig(NODE_MAX_ATTEMPT_CONFIG_OPTIONS, config),\n        region: config?.region ??\n            loadNodeConfig(NODE_REGION_CONFIG_OPTIONS, { ...NODE_REGION_CONFIG_FILE_OPTIONS, ...loaderConfig }),\n        requestHandler: RequestHandler.create(config?.requestHandler ?? defaultConfigProvider),\n        retryMode: config?.retryMode ??\n            loadNodeConfig({\n                ...NODE_RETRY_MODE_CONFIG_OPTIONS,\n                default: async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE,\n            }, config),\n        sha256: config?.sha256 ?? Hash.bind(null, \"sha256\"),\n        streamCollector: config?.streamCollector ?? streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? loadNodeConfig(NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, loaderConfig),\n        useFipsEndpoint: config?.useFipsEndpoint ?? loadNodeConfig(NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, loaderConfig),\n        userAgentAppId: config?.userAgentAppId ?? loadNodeConfig(NODE_APP_ID_CONFIG_OPTIONS, loaderConfig),\n    };\n};\n", "\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar index_exports = {};\n__export(index_exports, {\n  NODE_REGION_CONFIG_FILE_OPTIONS: () => NODE_REGION_CONFIG_FILE_OPTIONS,\n  NODE_REGION_CONFIG_OPTIONS: () => NODE_REGION_CONFIG_OPTIONS,\n  REGION_ENV_NAME: () => REGION_ENV_NAME,\n  REGION_INI_NAME: () => REGION_INI_NAME,\n  getAwsRegionExtensionConfiguration: () => getAwsRegionExtensionConfiguration,\n  resolveAwsRegionExtensionConfiguration: () => resolveAwsRegionExtensionConfiguration,\n  resolveRegionConfig: () => resolveRegionConfig\n});\nmodule.exports = __toCommonJS(index_exports);\n\n// src/extensions/index.ts\nvar getAwsRegionExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {\n  return {\n    setRegion(region) {\n      runtimeConfig.region = region;\n    },\n    region() {\n      return runtimeConfig.region;\n    }\n  };\n}, \"getAwsRegionExtensionConfiguration\");\nvar resolveAwsRegionExtensionConfiguration = /* @__PURE__ */ __name((awsRegionExtensionConfiguration) => {\n  return {\n    region: awsRegionExtensionConfiguration.region()\n  };\n}, \"resolveAwsRegionExtensionConfiguration\");\n\n// src/regionConfig/config.ts\nvar REGION_ENV_NAME = \"AWS_REGION\";\nvar REGION_INI_NAME = \"region\";\nvar NODE_REGION_CONFIG_OPTIONS = {\n  environmentVariableSelector: /* @__PURE__ */ __name((env) => env[REGION_ENV_NAME], \"environmentVariableSelector\"),\n  configFileSelector: /* @__PURE__ */ __name((profile) => profile[REGION_INI_NAME], \"configFileSelector\"),\n  default: /* @__PURE__ */ __name(() => {\n    throw new Error(\"Region is missing\");\n  }, \"default\")\n};\nvar NODE_REGION_CONFIG_FILE_OPTIONS = {\n  preferredFile: \"credentials\"\n};\n\n// src/regionConfig/isFipsRegion.ts\nvar isFipsRegion = /* @__PURE__ */ __name((region) => typeof region === \"string\" && (region.startsWith(\"fips-\") || region.endsWith(\"-fips\")), \"isFipsRegion\");\n\n// src/regionConfig/getRealRegion.ts\nvar getRealRegion = /* @__PURE__ */ __name((region) => isFipsRegion(region) ? [\"fips-aws-global\", \"aws-fips\"].includes(region) ? \"us-east-1\" : region.replace(/fips-(dkr-|prod-)?|-fips/, \"\") : region, \"getRealRegion\");\n\n// src/regionConfig/resolveRegionConfig.ts\nvar resolveRegionConfig = /* @__PURE__ */ __name((input) => {\n  const { region, useFipsEndpoint } = input;\n  if (!region) {\n    throw new Error(\"Region is missing\");\n  }\n  return Object.assign(input, {\n    region: /* @__PURE__ */ __name(async () => {\n      if (typeof region === \"string\") {\n        return getRealRegion(region);\n      }\n      const providedRegion = await region();\n      return getRealRegion(providedRegion);\n    }, \"region\"),\n    useFipsEndpoint: /* @__PURE__ */ __name(async () => {\n      const providedRegion = typeof region === \"string\" ? region : await region();\n      if (isFipsRegion(providedRegion)) {\n        return true;\n      }\n      return typeof useFipsEndpoint !== \"function\" ? Promise.resolve(!!useFipsEndpoint) : useFipsEndpoint();\n    }, \"useFipsEndpoint\")\n  });\n}, \"resolveRegionConfig\");\n// Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  getAwsRegionExtensionConfiguration,\n  resolveAwsRegionExtensionConfiguration,\n  REGION_ENV_NAME,\n  REGION_INI_NAME,\n  NODE_REGION_CONFIG_OPTIONS,\n  NODE_REGION_CONFIG_FILE_OPTIONS,\n  resolveRegionConfig\n});\n\n", "export const getHttpAuthExtensionConfiguration = (runtimeConfig) => {\n    const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;\n    let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;\n    let _credentials = runtimeConfig.credentials;\n    return {\n        setHttpAuthScheme(httpAuthScheme) {\n            const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);\n            if (index === -1) {\n                _httpAuthSchemes.push(httpAuthScheme);\n            }\n            else {\n                _httpAuthSchemes.splice(index, 1, httpAuthScheme);\n            }\n        },\n        httpAuthSchemes() {\n            return _httpAuthSchemes;\n        },\n        setHttpAuthSchemeProvider(httpAuthSchemeProvider) {\n            _httpAuthSchemeProvider = httpAuthSchemeProvider;\n        },\n        httpAuthSchemeProvider() {\n            return _httpAuthSchemeProvider;\n        },\n        setCredentials(credentials) {\n            _credentials = credentials;\n        },\n        credentials() {\n            return _credentials;\n        },\n    };\n};\nexport const resolveHttpAuthRuntimeConfig = (config) => {\n    return {\n        httpAuthSchemes: config.httpAuthSchemes(),\n        httpAuthSchemeProvider: config.httpAuthSchemeProvider(),\n        credentials: config.credentials(),\n    };\n};\n", "import { getAwsRegionExtensionConfiguration, resolveAwsRegionExtensionConfiguration, } from \"@aws-sdk/region-config-resolver\";\nimport { getHttpHandlerExtensionConfiguration, resolveHttpHandlerRuntimeConfig } from \"@smithy/protocol-http\";\nimport { getDefaultExtensionConfiguration, resolveDefaultRuntimeConfig } from \"@smithy/smithy-client\";\nimport { getHttpAuthExtensionConfiguration, resolveHttpAuthRuntimeConfig } from \"./auth/httpAuthExtensionConfiguration\";\nexport const resolveRuntimeExtensions = (runtimeConfig, extensions) => {\n    const extensionConfiguration = Object.assign(getAwsRegionExtensionConfiguration(runtimeConfig), getDefaultExtensionConfiguration(runtimeConfig), getHttpHandlerExtensionConfiguration(runtimeConfig), getHttpAuthExtensionConfiguration(runtimeConfig));\n    extensions.forEach((extension) => extension.configure(extensionConfiguration));\n    return Object.assign(runtimeConfig, resolveAwsRegionExtensionConfiguration(extensionConfiguration), resolveDefaultRuntimeConfig(extensionConfiguration), resolveHttpHandlerRuntimeConfig(extensionConfiguration), resolveHttpAuthRuntimeConfig(extensionConfiguration));\n};\n", "import { getHostHeaderPlugin, resolveHostHeaderConfig, } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRecursionDetectionPlugin } from \"@aws-sdk/middleware-recursion-detection\";\nimport { getUserAgentPlugin, resolveUserAgentConfig, } from \"@aws-sdk/middleware-user-agent\";\nimport { resolveRegionConfig } from \"@smithy/config-resolver\";\nimport { DefaultIdentityProviderConfig, getHttpAuthSchemeEndpointRuleSetPlugin, getHttpSigningPlugin, } from \"@smithy/core\";\nimport { getContentLengthPlugin } from \"@smithy/middleware-content-length\";\nimport { resolveEndpointConfig } from \"@smithy/middleware-endpoint\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@smithy/middleware-retry\";\nimport { Client as __Client, } from \"@smithy/smithy-client\";\nimport { defaultSSOOIDCHttpAuthSchemeParametersProvider, resolveHttpAuthSchemeConfig, } from \"./auth/httpAuthSchemeProvider\";\nimport { resolveClientEndpointParameters, } from \"./endpoint/EndpointParameters\";\nimport { getRuntimeConfig as __getRuntimeConfig } from \"./runtimeConfig\";\nimport { resolveRuntimeExtensions } from \"./runtimeExtensions\";\nexport { __Client };\nexport class SSOOIDCClient extends __Client {\n    config;\n    constructor(...[configuration]) {\n        const _config_0 = __getRuntimeConfig(configuration || {});\n        super(_config_0);\n        this.initConfig = _config_0;\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = resolveUserAgentConfig(_config_1);\n        const _config_3 = resolveRetryConfig(_config_2);\n        const _config_4 = resolveRegionConfig(_config_3);\n        const _config_5 = resolveHostHeaderConfig(_config_4);\n        const _config_6 = resolveEndpointConfig(_config_5);\n        const _config_7 = resolveHttpAuthSchemeConfig(_config_6);\n        const _config_8 = resolveRuntimeExtensions(_config_7, configuration?.extensions || []);\n        this.config = _config_8;\n        this.middlewareStack.use(getUserAgentPlugin(this.config));\n        this.middlewareStack.use(getRetryPlugin(this.config));\n        this.middlewareStack.use(getContentLengthPlugin(this.config));\n        this.middlewareStack.use(getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(getLoggerPlugin(this.config));\n        this.middlewareStack.use(getRecursionDetectionPlugin(this.config));\n        this.middlewareStack.use(getHttpAuthSchemeEndpointRuleSetPlugin(this.config, {\n            httpAuthSchemeParametersProvider: defaultSSOOIDCHttpAuthSchemeParametersProvider,\n            identityProviderConfigProvider: async (config) => new DefaultIdentityProviderConfig({\n                \"aws.auth#sigv4\": config.credentials,\n            }),\n        }));\n        this.middlewareStack.use(getHttpSigningPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\n", "import { ServiceException as __ServiceException, } from \"@smithy/smithy-client\";\nexport { __ServiceException };\nexport class SSOOIDCServiceException extends __ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, SSOOIDCServiceException.prototype);\n    }\n}\n", "import { SENSITIVE_STRING } from \"@smithy/smithy-client\";\nimport { SSOOIDCServiceException as __BaseException } from \"./SSOOIDCServiceException\";\nexport const AccessDeniedExceptionReason = {\n    KMS_ACCESS_DENIED: \"KMS_AccessDeniedException\",\n};\nexport class AccessDeniedException extends __BaseException {\n    name = \"AccessDeniedException\";\n    $fault = \"client\";\n    error;\n    reason;\n    error_description;\n    constructor(opts) {\n        super({\n            name: \"AccessDeniedException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, AccessDeniedException.prototype);\n        this.error = opts.error;\n        this.reason = opts.reason;\n        this.error_description = opts.error_description;\n    }\n}\nexport class AuthorizationPendingException extends __BaseException {\n    name = \"AuthorizationPendingException\";\n    $fault = \"client\";\n    error;\n    error_description;\n    constructor(opts) {\n        super({\n            name: \"AuthorizationPendingException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, AuthorizationPendingException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport const CreateTokenRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.clientSecret && { clientSecret: SENSITIVE_STRING }),\n    ...(obj.refreshToken && { refreshToken: SENSITIVE_STRING }),\n    ...(obj.codeVerifier && { codeVerifier: SENSITIVE_STRING }),\n});\nexport const CreateTokenResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.accessToken && { accessToken: SENSITIVE_STRING }),\n    ...(obj.refreshToken && { refreshToken: SENSITIVE_STRING }),\n    ...(obj.idToken && { idToken: SENSITIVE_STRING }),\n});\nexport class ExpiredTokenException extends __BaseException {\n    name = \"ExpiredTokenException\";\n    $fault = \"client\";\n    error;\n    error_description;\n    constructor(opts) {\n        super({\n            name: \"ExpiredTokenException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, ExpiredTokenException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class InternalServerException extends __BaseException {\n    name = \"InternalServerException\";\n    $fault = \"server\";\n    error;\n    error_description;\n    constructor(opts) {\n        super({\n            name: \"InternalServerException\",\n            $fault: \"server\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InternalServerException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class InvalidClientException extends __BaseException {\n    name = \"InvalidClientException\";\n    $fault = \"client\";\n    error;\n    error_description;\n    constructor(opts) {\n        super({\n            name: \"InvalidClientException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InvalidClientException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class InvalidGrantException extends __BaseException {\n    name = \"InvalidGrantException\";\n    $fault = \"client\";\n    error;\n    error_description;\n    constructor(opts) {\n        super({\n            name: \"InvalidGrantException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InvalidGrantException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport const InvalidRequestExceptionReason = {\n    KMS_DISABLED_KEY: \"KMS_DisabledException\",\n    KMS_INVALID_KEY_USAGE: \"KMS_InvalidKeyUsageException\",\n    KMS_INVALID_STATE: \"KMS_InvalidStateException\",\n    KMS_KEY_NOT_FOUND: \"KMS_NotFoundException\",\n};\nexport class InvalidRequestException extends __BaseException {\n    name = \"InvalidRequestException\";\n    $fault = \"client\";\n    error;\n    reason;\n    error_description;\n    constructor(opts) {\n        super({\n            name: \"InvalidRequestException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InvalidRequestException.prototype);\n        this.error = opts.error;\n        this.reason = opts.reason;\n        this.error_description = opts.error_description;\n    }\n}\nexport class InvalidScopeException extends __BaseException {\n    name = \"InvalidScopeException\";\n    $fault = \"client\";\n    error;\n    error_description;\n    constructor(opts) {\n        super({\n            name: \"InvalidScopeException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InvalidScopeException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class SlowDownException extends __BaseException {\n    name = \"SlowDownException\";\n    $fault = \"client\";\n    error;\n    error_description;\n    constructor(opts) {\n        super({\n            name: \"SlowDownException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, SlowDownException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class UnauthorizedClientException extends __BaseException {\n    name = \"UnauthorizedClientException\";\n    $fault = \"client\";\n    error;\n    error_description;\n    constructor(opts) {\n        super({\n            name: \"UnauthorizedClientException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, UnauthorizedClientException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class UnsupportedGrantTypeException extends __BaseException {\n    name = \"UnsupportedGrantTypeException\";\n    $fault = \"client\";\n    error;\n    error_description;\n    constructor(opts) {\n        super({\n            name: \"UnsupportedGrantTypeException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, UnsupportedGrantTypeException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\n", "import { loadRestJsonErrorCode, parseJsonBody as parseBody, parseJsonErrorBody as parseErrorBody } from \"@aws-sdk/core\";\nimport { requestBuilder as rb } from \"@smithy/core\";\nimport { _json, collectBody, decorateServiceException as __decorateServiceException, expectInt32 as __expectInt32, expectNonNull as __expectNonNull, expectObject as __expectObject, expectString as __expectString, map, take, withBaseException, } from \"@smithy/smithy-client\";\nimport { AccessDeniedException, AuthorizationPendingException, ExpiredTokenException, InternalServerException, InvalidClientException, InvalidGrantException, InvalidRequestException, InvalidScopeException, SlowDownException, UnauthorizedClientException, UnsupportedGrantTypeException, } from \"../models/models_0\";\nimport { SSOOIDCServiceException as __BaseException } from \"../models/SSOOIDCServiceException\";\nexport const se_CreateTokenCommand = async (input, context) => {\n    const b = rb(input, context);\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    b.bp(\"/token\");\n    let body;\n    body = JSON.stringify(take(input, {\n        clientId: [],\n        clientSecret: [],\n        code: [],\n        codeVerifier: [],\n        deviceCode: [],\n        grantType: [],\n        redirectUri: [],\n        refreshToken: [],\n        scope: (_) => _json(_),\n    }));\n    b.m(\"POST\").h(headers).b(body);\n    return b.build();\n};\nexport const de_CreateTokenCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        accessToken: __expectString,\n        expiresIn: __expectInt32,\n        idToken: __expectString,\n        refreshToken: __expectString,\n        tokenType: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nconst de_CommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDeniedException\":\n        case \"com.amazonaws.ssooidc#AccessDeniedException\":\n            throw await de_AccessDeniedExceptionRes(parsedOutput, context);\n        case \"AuthorizationPendingException\":\n        case \"com.amazonaws.ssooidc#AuthorizationPendingException\":\n            throw await de_AuthorizationPendingExceptionRes(parsedOutput, context);\n        case \"ExpiredTokenException\":\n        case \"com.amazonaws.ssooidc#ExpiredTokenException\":\n            throw await de_ExpiredTokenExceptionRes(parsedOutput, context);\n        case \"InternalServerException\":\n        case \"com.amazonaws.ssooidc#InternalServerException\":\n            throw await de_InternalServerExceptionRes(parsedOutput, context);\n        case \"InvalidClientException\":\n        case \"com.amazonaws.ssooidc#InvalidClientException\":\n            throw await de_InvalidClientExceptionRes(parsedOutput, context);\n        case \"InvalidGrantException\":\n        case \"com.amazonaws.ssooidc#InvalidGrantException\":\n            throw await de_InvalidGrantExceptionRes(parsedOutput, context);\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.ssooidc#InvalidRequestException\":\n            throw await de_InvalidRequestExceptionRes(parsedOutput, context);\n        case \"InvalidScopeException\":\n        case \"com.amazonaws.ssooidc#InvalidScopeException\":\n            throw await de_InvalidScopeExceptionRes(parsedOutput, context);\n        case \"SlowDownException\":\n        case \"com.amazonaws.ssooidc#SlowDownException\":\n            throw await de_SlowDownExceptionRes(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.ssooidc#UnauthorizedClientException\":\n            throw await de_UnauthorizedClientExceptionRes(parsedOutput, context);\n        case \"UnsupportedGrantTypeException\":\n        case \"com.amazonaws.ssooidc#UnsupportedGrantTypeException\":\n            throw await de_UnsupportedGrantTypeExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nconst throwDefaultError = withBaseException(__BaseException);\nconst de_AccessDeniedExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n        reason: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new AccessDeniedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_AuthorizationPendingExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new AuthorizationPendingException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ExpiredTokenExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new ExpiredTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_InternalServerExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new InternalServerException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_InvalidClientExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new InvalidClientException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_InvalidGrantExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new InvalidGrantException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_InvalidRequestExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n        reason: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new InvalidRequestException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_InvalidScopeExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new InvalidScopeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_SlowDownExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new SlowDownException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_UnauthorizedClientExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new UnauthorizedClientException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_UnsupportedGrantTypeExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new UnsupportedGrantTypeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\n", "import { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { CreateTokenRequestFilterSensitiveLog, CreateTokenResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { de_CreateTokenCommand, se_CreateTokenCommand } from \"../protocols/Aws_restJson1\";\nexport { $Command };\nexport class CreateTokenCommand extends $Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        getSerdePlugin(config, this.serialize, this.deserialize),\n        getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"AWSSSOOIDCService\", \"CreateToken\", {})\n    .n(\"SSOOIDCClient\", \"CreateTokenCommand\")\n    .f(CreateTokenRequestFilterSensitiveLog, CreateTokenResponseFilterSensitiveLog)\n    .ser(se_CreateTokenCommand)\n    .de(de_CreateTokenCommand)\n    .build() {\n}\n", "import { createAggregatedClient } from \"@smithy/smithy-client\";\nimport { CreateTokenCommand } from \"./commands/CreateTokenCommand\";\nimport { SSOOIDCClient } from \"./SSOOIDCClient\";\nconst commands = {\n    CreateTokenCommand,\n};\nexport class SSOOIDC extends SSOOIDCClient {\n}\ncreateAggregatedClient(commands, SSOOIDC);\n", "export * from \"./CreateTokenCommand\";\n", "export * from \"./models_0\";\n", "export * from \"./SSOOIDCClient\";\nexport * from \"./SSOOIDC\";\nexport * from \"./commands\";\nexport * from \"./models\";\nexport { SSOOIDCServiceException } from \"./models/SSOOIDCServiceException\";\n", "'use strict';\n\nvar client = require('@aws-sdk/core/client');\nvar httpAuthSchemes = require('@aws-sdk/core/httpAuthSchemes');\nvar propertyProvider = require('@smithy/property-provider');\nvar sharedIniFileLoader = require('@smithy/shared-ini-file-loader');\nvar fs = require('fs');\n\nconst fromEnvSigningName = ({ logger, signingName } = {}) => async () => {\n    logger?.debug?.(\"@aws-sdk/token-providers - fromEnvSigningName\");\n    if (!signingName) {\n        throw new propertyProvider.TokenProviderError(\"Please pass 'signingName' to compute environment variable key\", { logger });\n    }\n    const bearerTokenKey = httpAuthSchemes.getBearerTokenEnvKey(signingName);\n    if (!(bearerTokenKey in process.env)) {\n        throw new propertyProvider.TokenProviderError(`Token not present in '${bearerTokenKey}' environment variable`, { logger });\n    }\n    const token = { token: process.env[bearerTokenKey] };\n    client.setTokenFeature(token, \"BEARER_SERVICE_ENV_VARS\", \"3\");\n    return token;\n};\n\nconst EXPIRE_WINDOW_MS = 5 * 60 * 1000;\nconst REFRESH_MESSAGE = `To refresh this SSO session run 'aws sso login' with the corresponding profile.`;\n\nconst getSsoOidcClient = async (ssoRegion, init = {}) => {\n    const { SSOOIDCClient } = await import('@aws-sdk/nested-clients/sso-oidc');\n    const ssoOidcClient = new SSOOIDCClient(Object.assign({}, init.clientConfig ?? {}, {\n        region: ssoRegion ?? init.clientConfig?.region,\n        logger: init.clientConfig?.logger ?? init.parentClientConfig?.logger,\n    }));\n    return ssoOidcClient;\n};\n\nconst getNewSsoOidcToken = async (ssoToken, ssoRegion, init = {}) => {\n    const { CreateTokenCommand } = await import('@aws-sdk/nested-clients/sso-oidc');\n    const ssoOidcClient = await getSsoOidcClient(ssoRegion, init);\n    return ssoOidcClient.send(new CreateTokenCommand({\n        clientId: ssoToken.clientId,\n        clientSecret: ssoToken.clientSecret,\n        refreshToken: ssoToken.refreshToken,\n        grantType: \"refresh_token\",\n    }));\n};\n\nconst validateTokenExpiry = (token) => {\n    if (token.expiration && token.expiration.getTime() < Date.now()) {\n        throw new propertyProvider.TokenProviderError(`Token is expired. ${REFRESH_MESSAGE}`, false);\n    }\n};\n\nconst validateTokenKey = (key, value, forRefresh = false) => {\n    if (typeof value === \"undefined\") {\n        throw new propertyProvider.TokenProviderError(`Value not present for '${key}' in SSO Token${forRefresh ? \". Cannot refresh\" : \"\"}. ${REFRESH_MESSAGE}`, false);\n    }\n};\n\nconst { writeFile } = fs.promises;\nconst writeSSOTokenToFile = (id, ssoToken) => {\n    const tokenFilepath = sharedIniFileLoader.getSSOTokenFilepath(id);\n    const tokenString = JSON.stringify(ssoToken, null, 2);\n    return writeFile(tokenFilepath, tokenString);\n};\n\nconst lastRefreshAttemptTime = new Date(0);\nconst fromSso = (_init = {}) => async ({ callerClientConfig } = {}) => {\n    const init = {\n        ..._init,\n        parentClientConfig: {\n            ...callerClientConfig,\n            ..._init.parentClientConfig,\n        },\n    };\n    init.logger?.debug(\"@aws-sdk/token-providers - fromSso\");\n    const profiles = await sharedIniFileLoader.parseKnownFiles(init);\n    const profileName = sharedIniFileLoader.getProfileName({\n        profile: init.profile ?? callerClientConfig?.profile,\n    });\n    const profile = profiles[profileName];\n    if (!profile) {\n        throw new propertyProvider.TokenProviderError(`Profile '${profileName}' could not be found in shared credentials file.`, false);\n    }\n    else if (!profile[\"sso_session\"]) {\n        throw new propertyProvider.TokenProviderError(`Profile '${profileName}' is missing required property 'sso_session'.`);\n    }\n    const ssoSessionName = profile[\"sso_session\"];\n    const ssoSessions = await sharedIniFileLoader.loadSsoSessionData(init);\n    const ssoSession = ssoSessions[ssoSessionName];\n    if (!ssoSession) {\n        throw new propertyProvider.TokenProviderError(`Sso session '${ssoSessionName}' could not be found in shared credentials file.`, false);\n    }\n    for (const ssoSessionRequiredKey of [\"sso_start_url\", \"sso_region\"]) {\n        if (!ssoSession[ssoSessionRequiredKey]) {\n            throw new propertyProvider.TokenProviderError(`Sso session '${ssoSessionName}' is missing required property '${ssoSessionRequiredKey}'.`, false);\n        }\n    }\n    ssoSession[\"sso_start_url\"];\n    const ssoRegion = ssoSession[\"sso_region\"];\n    let ssoToken;\n    try {\n        ssoToken = await sharedIniFileLoader.getSSOTokenFromFile(ssoSessionName);\n    }\n    catch (e) {\n        throw new propertyProvider.TokenProviderError(`The SSO session token associated with profile=${profileName} was not found or is invalid. ${REFRESH_MESSAGE}`, false);\n    }\n    validateTokenKey(\"accessToken\", ssoToken.accessToken);\n    validateTokenKey(\"expiresAt\", ssoToken.expiresAt);\n    const { accessToken, expiresAt } = ssoToken;\n    const existingToken = { token: accessToken, expiration: new Date(expiresAt) };\n    if (existingToken.expiration.getTime() - Date.now() > EXPIRE_WINDOW_MS) {\n        return existingToken;\n    }\n    if (Date.now() - lastRefreshAttemptTime.getTime() < 30 * 1000) {\n        validateTokenExpiry(existingToken);\n        return existingToken;\n    }\n    validateTokenKey(\"clientId\", ssoToken.clientId, true);\n    validateTokenKey(\"clientSecret\", ssoToken.clientSecret, true);\n    validateTokenKey(\"refreshToken\", ssoToken.refreshToken, true);\n    try {\n        lastRefreshAttemptTime.setTime(Date.now());\n        const newSsoOidcToken = await getNewSsoOidcToken(ssoToken, ssoRegion, init);\n        validateTokenKey(\"accessToken\", newSsoOidcToken.accessToken);\n        validateTokenKey(\"expiresIn\", newSsoOidcToken.expiresIn);\n        const newTokenExpiration = new Date(Date.now() + newSsoOidcToken.expiresIn * 1000);\n        try {\n            await writeSSOTokenToFile(ssoSessionName, {\n                ...ssoToken,\n                accessToken: newSsoOidcToken.accessToken,\n                expiresAt: newTokenExpiration.toISOString(),\n                refreshToken: newSsoOidcToken.refreshToken,\n            });\n        }\n        catch (error) {\n        }\n        return {\n            token: newSsoOidcToken.accessToken,\n            expiration: newTokenExpiration,\n        };\n    }\n    catch (error) {\n        validateTokenExpiry(existingToken);\n        return existingToken;\n    }\n};\n\nconst fromStatic = ({ token, logger }) => async () => {\n    logger?.debug(\"@aws-sdk/token-providers - fromStatic\");\n    if (!token || !token.token) {\n        throw new propertyProvider.TokenProviderError(`Please pass a valid token to fromStatic`, false);\n    }\n    return token;\n};\n\nconst nodeProvider = (init = {}) => propertyProvider.memoize(propertyProvider.chain(fromSso(init), async () => {\n    throw new propertyProvider.TokenProviderError(\"Could not load token from any providers\", false);\n}), (token) => token.expiration !== undefined && token.expiration.getTime() - Date.now() < 300000, (token) => token.expiration !== undefined);\n\nexports.fromEnvSigningName = fromEnvSigningName;\nexports.fromSso = fromSso;\nexports.fromStatic = fromStatic;\nexports.nodeProvider = nodeProvider;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveHttpAuthSchemeConfig = exports.defaultSSOHttpAuthSchemeProvider = exports.defaultSSOHttpAuthSchemeParametersProvider = void 0;\nconst core_1 = require(\"@aws-sdk/core\");\nconst util_middleware_1 = require(\"@smithy/util-middleware\");\nconst defaultSSOHttpAuthSchemeParametersProvider = async (config, context, input) => {\n    return {\n        operation: (0, util_middleware_1.getSmithyContext)(context).operation,\n        region: (await (0, util_middleware_1.normalizeProvider)(config.region)()) ||\n            (() => {\n                throw new Error(\"expected `region` to be configured for `aws.auth#sigv4`\");\n            })(),\n    };\n};\nexports.defaultSSOHttpAuthSchemeParametersProvider = defaultSSOHttpAuthSchemeParametersProvider;\nfunction createAwsAuthSigv4HttpAuthOption(authParameters) {\n    return {\n        schemeId: \"aws.auth#sigv4\",\n        signingProperties: {\n            name: \"awsssoportal\",\n            region: authParameters.region,\n        },\n        propertiesExtractor: (config, context) => ({\n            signingProperties: {\n                config,\n                context,\n            },\n        }),\n    };\n}\nfunction createSmithyApiNoAuthHttpAuthOption(authParameters) {\n    return {\n        schemeId: \"smithy.api#noAuth\",\n    };\n}\nconst defaultSSOHttpAuthSchemeProvider = (authParameters) => {\n    const options = [];\n    switch (authParameters.operation) {\n        case \"GetRoleCredentials\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        case \"ListAccountRoles\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        case \"ListAccounts\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        case \"Logout\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        default: {\n            options.push(createAwsAuthSigv4HttpAuthOption(authParameters));\n        }\n    }\n    return options;\n};\nexports.defaultSSOHttpAuthSchemeProvider = defaultSSOHttpAuthSchemeProvider;\nconst resolveHttpAuthSchemeConfig = (config) => {\n    const config_0 = (0, core_1.resolveAwsSdkSigV4Config)(config);\n    return Object.assign(config_0, {\n        authSchemePreference: (0, util_middleware_1.normalizeProvider)(config.authSchemePreference ?? []),\n    });\n};\nexports.resolveHttpAuthSchemeConfig = resolveHttpAuthSchemeConfig;\n", "{\n  \"name\": \"@aws-sdk/client-sso\",\n  \"description\": \"AWS SDK for JavaScript Sso Client for Node.js, Browser and React Native\",\n  \"version\": \"3.908.0\",\n  \"scripts\": {\n    \"build\": \"concurrently 'yarn:build:cjs' 'yarn:build:es' 'yarn:build:types'\",\n    \"build:cjs\": \"node ../../scripts/compilation/inline client-sso\",\n    \"build:es\": \"tsc -p tsconfig.es.json\",\n    \"build:include:deps\": \"lerna run --scope $npm_package_name --include-dependencies build\",\n    \"build:types\": \"tsc -p tsconfig.types.json\",\n    \"build:types:downlevel\": \"downlevel-dts dist-types dist-types/ts3.4\",\n    \"clean\": \"rimraf ./dist-* && rimraf *.tsbuildinfo\",\n    \"extract:docs\": \"api-extractor run --local\",\n    \"generate:client\": \"node ../../scripts/generate-clients/single-service --solo sso\"\n  },\n  \"main\": \"./dist-cjs/index.js\",\n  \"types\": \"./dist-types/index.d.ts\",\n  \"module\": \"./dist-es/index.js\",\n  \"sideEffects\": false,\n  \"dependencies\": {\n    \"@aws-crypto/sha256-browser\": \"5.2.0\",\n    \"@aws-crypto/sha256-js\": \"5.2.0\",\n    \"@aws-sdk/core\": \"3.908.0\",\n    \"@aws-sdk/middleware-host-header\": \"3.901.0\",\n    \"@aws-sdk/middleware-logger\": \"3.901.0\",\n    \"@aws-sdk/middleware-recursion-detection\": \"3.901.0\",\n    \"@aws-sdk/middleware-user-agent\": \"3.908.0\",\n    \"@aws-sdk/region-config-resolver\": \"3.901.0\",\n    \"@aws-sdk/types\": \"3.901.0\",\n    \"@aws-sdk/util-endpoints\": \"3.901.0\",\n    \"@aws-sdk/util-user-agent-browser\": \"3.907.0\",\n    \"@aws-sdk/util-user-agent-node\": \"3.908.0\",\n    \"@smithy/config-resolver\": \"^4.3.0\",\n    \"@smithy/core\": \"^3.15.0\",\n    \"@smithy/fetch-http-handler\": \"^5.3.1\",\n    \"@smithy/hash-node\": \"^4.2.0\",\n    \"@smithy/invalid-dependency\": \"^4.2.0\",\n    \"@smithy/middleware-content-length\": \"^4.2.0\",\n    \"@smithy/middleware-endpoint\": \"^4.3.1\",\n    \"@smithy/middleware-retry\": \"^4.4.1\",\n    \"@smithy/middleware-serde\": \"^4.2.0\",\n    \"@smithy/middleware-stack\": \"^4.2.0\",\n    \"@smithy/node-config-provider\": \"^4.3.0\",\n    \"@smithy/node-http-handler\": \"^4.3.0\",\n    \"@smithy/protocol-http\": \"^5.3.0\",\n    \"@smithy/smithy-client\": \"^4.7.1\",\n    \"@smithy/types\": \"^4.6.0\",\n    \"@smithy/url-parser\": \"^4.2.0\",\n    \"@smithy/util-base64\": \"^4.3.0\",\n    \"@smithy/util-body-length-browser\": \"^4.2.0\",\n    \"@smithy/util-body-length-node\": \"^4.2.1\",\n    \"@smithy/util-defaults-mode-browser\": \"^4.3.0\",\n    \"@smithy/util-defaults-mode-node\": \"^4.2.1\",\n    \"@smithy/util-endpoints\": \"^3.2.0\",\n    \"@smithy/util-middleware\": \"^4.2.0\",\n    \"@smithy/util-retry\": \"^4.2.0\",\n    \"@smithy/util-utf8\": \"^4.2.0\",\n    \"tslib\": \"^2.6.2\"\n  },\n  \"devDependencies\": {\n    \"@tsconfig/node18\": \"18.2.4\",\n    \"@types/node\": \"^18.19.69\",\n    \"concurrently\": \"7.0.0\",\n    \"downlevel-dts\": \"0.10.1\",\n    \"rimraf\": \"3.0.2\",\n    \"typescript\": \"~5.8.3\"\n  },\n  \"engines\": {\n    \"node\": \">=18.0.0\"\n  },\n  \"typesVersions\": {\n    \"<4.0\": {\n      \"dist-types/*\": [\n        \"dist-types/ts3.4/*\"\n      ]\n    }\n  },\n  \"files\": [\n    \"dist-*/**\"\n  ],\n  \"author\": {\n    \"name\": \"AWS SDK for JavaScript Team\",\n    \"url\": \"https://aws.amazon.com/javascript/\"\n  },\n  \"license\": \"Apache-2.0\",\n  \"browser\": {\n    \"./dist-es/runtimeConfig\": \"./dist-es/runtimeConfig.browser\"\n  },\n  \"react-native\": {\n    \"./dist-es/runtimeConfig\": \"./dist-es/runtimeConfig.native\"\n  },\n  \"homepage\": \"https://github.com/aws/aws-sdk-js-v3/tree/main/clients/client-sso\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/aws/aws-sdk-js-v3.git\",\n    \"directory\": \"clients/client-sso\"\n  }\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromBase64 = void 0;\nconst util_buffer_from_1 = require(\"@smithy/util-buffer-from\");\nconst BASE64_REGEX = /^[A-Za-z0-9+/]*={0,2}$/;\nconst fromBase64 = (input) => {\n    if ((input.length * 3) % 4 !== 0) {\n        throw new TypeError(`Incorrect padding on base64 string.`);\n    }\n    if (!BASE64_REGEX.exec(input)) {\n        throw new TypeError(`Invalid base64 string.`);\n    }\n    const buffer = (0, util_buffer_from_1.fromString)(input, \"base64\");\n    return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n};\nexports.fromBase64 = fromBase64;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toBase64 = void 0;\nconst util_buffer_from_1 = require(\"@smithy/util-buffer-from\");\nconst util_utf8_1 = require(\"@smithy/util-utf8\");\nconst toBase64 = (_input) => {\n    let input;\n    if (typeof _input === \"string\") {\n        input = (0, util_utf8_1.fromUtf8)(_input);\n    }\n    else {\n        input = _input;\n    }\n    if (typeof input !== \"object\" || typeof input.byteOffset !== \"number\" || typeof input.byteLength !== \"number\") {\n        throw new Error(\"@smithy/util-base64: toBase64 encoder function only accepts string | Uint8Array.\");\n    }\n    return (0, util_buffer_from_1.fromArrayBuffer)(input.buffer, input.byteOffset, input.byteLength).toString(\"base64\");\n};\nexports.toBase64 = toBase64;\n", "'use strict';\n\nvar fromBase64 = require('./fromBase64');\nvar toBase64 = require('./toBase64');\n\n\n\nObject.keys(fromBase64).forEach(function (k) {\n\tif (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () { return fromBase64[k]; }\n\t});\n});\nObject.keys(toBase64).forEach(function (k) {\n\tif (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () { return toBase64[k]; }\n\t});\n});\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ruleSet = void 0;\nconst u = \"required\", v = \"fn\", w = \"argv\", x = \"ref\";\nconst a = true, b = \"isSet\", c = \"booleanEquals\", d = \"error\", e = \"endpoint\", f = \"tree\", g = \"PartitionResult\", h = \"getAttr\", i = { [u]: false, \"type\": \"String\" }, j = { [u]: true, \"default\": false, \"type\": \"Boolean\" }, k = { [x]: \"Endpoint\" }, l = { [v]: c, [w]: [{ [x]: \"UseFIPS\" }, true] }, m = { [v]: c, [w]: [{ [x]: \"UseDualStack\" }, true] }, n = {}, o = { [v]: h, [w]: [{ [x]: g }, \"supportsFIPS\"] }, p = { [x]: g }, q = { [v]: c, [w]: [true, { [v]: h, [w]: [p, \"supportsDualStack\"] }] }, r = [l], s = [m], t = [{ [x]: \"Region\" }];\nconst _data = { version: \"1.0\", parameters: { Region: i, UseDualStack: j, UseFIPS: j, Endpoint: i }, rules: [{ conditions: [{ [v]: b, [w]: [k] }], rules: [{ conditions: r, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", type: d }, { conditions: s, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", type: d }, { endpoint: { url: k, properties: n, headers: n }, type: e }], type: f }, { conditions: [{ [v]: b, [w]: t }], rules: [{ conditions: [{ [v]: \"aws.partition\", [w]: t, assign: g }], rules: [{ conditions: [l, m], rules: [{ conditions: [{ [v]: c, [w]: [a, o] }, q], rules: [{ endpoint: { url: \"https://portal.sso-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: n, headers: n }, type: e }], type: f }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", type: d }], type: f }, { conditions: r, rules: [{ conditions: [{ [v]: c, [w]: [o, a] }], rules: [{ conditions: [{ [v]: \"stringEquals\", [w]: [{ [v]: h, [w]: [p, \"name\"] }, \"aws-us-gov\"] }], endpoint: { url: \"https://portal.sso.{Region}.amazonaws.com\", properties: n, headers: n }, type: e }, { endpoint: { url: \"https://portal.sso-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: n, headers: n }, type: e }], type: f }, { error: \"FIPS is enabled but this partition does not support FIPS\", type: d }], type: f }, { conditions: s, rules: [{ conditions: [q], rules: [{ endpoint: { url: \"https://portal.sso.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: n, headers: n }, type: e }], type: f }, { error: \"DualStack is enabled but this partition does not support DualStack\", type: d }], type: f }, { endpoint: { url: \"https://portal.sso.{Region}.{PartitionResult#dnsSuffix}\", properties: n, headers: n }, type: e }], type: f }], type: f }, { error: \"Invalid Configuration: Missing Region\", type: d }] };\nexports.ruleSet = _data;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultEndpointResolver = void 0;\nconst util_endpoints_1 = require(\"@aws-sdk/util-endpoints\");\nconst util_endpoints_2 = require(\"@smithy/util-endpoints\");\nconst ruleset_1 = require(\"./ruleset\");\nconst cache = new util_endpoints_2.EndpointCache({\n    size: 50,\n    params: [\"Endpoint\", \"Region\", \"UseDualStack\", \"UseFIPS\"],\n});\nconst defaultEndpointResolver = (endpointParams, context = {}) => {\n    return cache.get(endpointParams, () => (0, util_endpoints_2.resolveEndpoint)(ruleset_1.ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    }));\n};\nexports.defaultEndpointResolver = defaultEndpointResolver;\nutil_endpoints_2.customEndpointFunctions.aws = util_endpoints_1.awsEndpointFunctions;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst core_1 = require(\"@aws-sdk/core\");\nconst core_2 = require(\"@smithy/core\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst url_parser_1 = require(\"@smithy/url-parser\");\nconst util_base64_1 = require(\"@smithy/util-base64\");\nconst util_utf8_1 = require(\"@smithy/util-utf8\");\nconst httpAuthSchemeProvider_1 = require(\"./auth/httpAuthSchemeProvider\");\nconst endpointResolver_1 = require(\"./endpoint/endpointResolver\");\nconst getRuntimeConfig = (config) => {\n    return {\n        apiVersion: \"2019-06-10\",\n        base64Decoder: config?.base64Decoder ?? util_base64_1.fromBase64,\n        base64Encoder: config?.base64Encoder ?? util_base64_1.toBase64,\n        disableHostPrefix: config?.disableHostPrefix ?? false,\n        endpointProvider: config?.endpointProvider ?? endpointResolver_1.defaultEndpointResolver,\n        extensions: config?.extensions ?? [],\n        httpAuthSchemeProvider: config?.httpAuthSchemeProvider ?? httpAuthSchemeProvider_1.defaultSSOHttpAuthSchemeProvider,\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"aws.auth#sigv4\"),\n                signer: new core_1.AwsSdkSigV4Signer(),\n            },\n            {\n                schemeId: \"smithy.api#noAuth\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"smithy.api#noAuth\") || (async () => ({})),\n                signer: new core_2.NoAuthSigner(),\n            },\n        ],\n        logger: config?.logger ?? new smithy_client_1.NoOpLogger(),\n        serviceId: config?.serviceId ?? \"SSO\",\n        urlParser: config?.urlParser ?? url_parser_1.parseUrl,\n        utf8Decoder: config?.utf8Decoder ?? util_utf8_1.fromUtf8,\n        utf8Encoder: config?.utf8Encoder ?? util_utf8_1.toUtf8,\n    };\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst tslib_1 = require(\"tslib\");\nconst package_json_1 = tslib_1.__importDefault(require(\"../package.json\"));\nconst core_1 = require(\"@aws-sdk/core\");\nconst util_user_agent_node_1 = require(\"@aws-sdk/util-user-agent-node\");\nconst config_resolver_1 = require(\"@smithy/config-resolver\");\nconst hash_node_1 = require(\"@smithy/hash-node\");\nconst middleware_retry_1 = require(\"@smithy/middleware-retry\");\nconst node_config_provider_1 = require(\"@smithy/node-config-provider\");\nconst node_http_handler_1 = require(\"@smithy/node-http-handler\");\nconst util_body_length_node_1 = require(\"@smithy/util-body-length-node\");\nconst util_retry_1 = require(\"@smithy/util-retry\");\nconst runtimeConfig_shared_1 = require(\"./runtimeConfig.shared\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst util_defaults_mode_node_1 = require(\"@smithy/util-defaults-mode-node\");\nconst smithy_client_2 = require(\"@smithy/smithy-client\");\nconst getRuntimeConfig = (config) => {\n    (0, smithy_client_2.emitWarningIfUnsupportedVersion)(process.version);\n    const defaultsMode = (0, util_defaults_mode_node_1.resolveDefaultsModeConfig)(config);\n    const defaultConfigProvider = () => defaultsMode().then(smithy_client_1.loadConfigsForDefaultMode);\n    const clientSharedValues = (0, runtimeConfig_shared_1.getRuntimeConfig)(config);\n    (0, core_1.emitWarningIfUnsupportedVersion)(process.version);\n    const loaderConfig = {\n        profile: config?.profile,\n        logger: clientSharedValues.logger,\n    };\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        authSchemePreference: config?.authSchemePreference ?? (0, node_config_provider_1.loadConfig)(core_1.NODE_AUTH_SCHEME_PREFERENCE_OPTIONS, loaderConfig),\n        bodyLengthChecker: config?.bodyLengthChecker ?? util_body_length_node_1.calculateBodyLength,\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            (0, util_user_agent_node_1.createDefaultUserAgentProvider)({ serviceId: clientSharedValues.serviceId, clientVersion: package_json_1.default.version }),\n        maxAttempts: config?.maxAttempts ?? (0, node_config_provider_1.loadConfig)(middleware_retry_1.NODE_MAX_ATTEMPT_CONFIG_OPTIONS, config),\n        region: config?.region ??\n            (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_REGION_CONFIG_OPTIONS, { ...config_resolver_1.NODE_REGION_CONFIG_FILE_OPTIONS, ...loaderConfig }),\n        requestHandler: node_http_handler_1.NodeHttpHandler.create(config?.requestHandler ?? defaultConfigProvider),\n        retryMode: config?.retryMode ??\n            (0, node_config_provider_1.loadConfig)({\n                ...middleware_retry_1.NODE_RETRY_MODE_CONFIG_OPTIONS,\n                default: async () => (await defaultConfigProvider()).retryMode || util_retry_1.DEFAULT_RETRY_MODE,\n            }, config),\n        sha256: config?.sha256 ?? hash_node_1.Hash.bind(null, \"sha256\"),\n        streamCollector: config?.streamCollector ?? node_http_handler_1.streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, loaderConfig),\n        useFipsEndpoint: config?.useFipsEndpoint ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, loaderConfig),\n        userAgentAppId: config?.userAgentAppId ?? (0, node_config_provider_1.loadConfig)(util_user_agent_node_1.NODE_APP_ID_CONFIG_OPTIONS, loaderConfig),\n    };\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n", "'use strict';\n\nvar middlewareHostHeader = require('@aws-sdk/middleware-host-header');\nvar middlewareLogger = require('@aws-sdk/middleware-logger');\nvar middlewareRecursionDetection = require('@aws-sdk/middleware-recursion-detection');\nvar middlewareUserAgent = require('@aws-sdk/middleware-user-agent');\nvar configResolver = require('@smithy/config-resolver');\nvar core = require('@smithy/core');\nvar middlewareContentLength = require('@smithy/middleware-content-length');\nvar middlewareEndpoint = require('@smithy/middleware-endpoint');\nvar middlewareRetry = require('@smithy/middleware-retry');\nvar smithyClient = require('@smithy/smithy-client');\nvar httpAuthSchemeProvider = require('./auth/httpAuthSchemeProvider');\nvar runtimeConfig = require('./runtimeConfig');\nvar regionConfigResolver = require('@aws-sdk/region-config-resolver');\nvar protocolHttp = require('@smithy/protocol-http');\nvar middlewareSerde = require('@smithy/middleware-serde');\nvar core$1 = require('@aws-sdk/core');\n\nconst resolveClientEndpointParameters = (options) => {\n    return Object.assign(options, {\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        defaultSigningName: \"awsssoportal\",\n    });\n};\nconst commonParams = {\n    UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n    Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n    Region: { type: \"builtInParams\", name: \"region\" },\n    UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n};\n\nconst getHttpAuthExtensionConfiguration = (runtimeConfig) => {\n    const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;\n    let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;\n    let _credentials = runtimeConfig.credentials;\n    return {\n        setHttpAuthScheme(httpAuthScheme) {\n            const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);\n            if (index === -1) {\n                _httpAuthSchemes.push(httpAuthScheme);\n            }\n            else {\n                _httpAuthSchemes.splice(index, 1, httpAuthScheme);\n            }\n        },\n        httpAuthSchemes() {\n            return _httpAuthSchemes;\n        },\n        setHttpAuthSchemeProvider(httpAuthSchemeProvider) {\n            _httpAuthSchemeProvider = httpAuthSchemeProvider;\n        },\n        httpAuthSchemeProvider() {\n            return _httpAuthSchemeProvider;\n        },\n        setCredentials(credentials) {\n            _credentials = credentials;\n        },\n        credentials() {\n            return _credentials;\n        },\n    };\n};\nconst resolveHttpAuthRuntimeConfig = (config) => {\n    return {\n        httpAuthSchemes: config.httpAuthSchemes(),\n        httpAuthSchemeProvider: config.httpAuthSchemeProvider(),\n        credentials: config.credentials(),\n    };\n};\n\nconst resolveRuntimeExtensions = (runtimeConfig, extensions) => {\n    const extensionConfiguration = Object.assign(regionConfigResolver.getAwsRegionExtensionConfiguration(runtimeConfig), smithyClient.getDefaultExtensionConfiguration(runtimeConfig), protocolHttp.getHttpHandlerExtensionConfiguration(runtimeConfig), getHttpAuthExtensionConfiguration(runtimeConfig));\n    extensions.forEach((extension) => extension.configure(extensionConfiguration));\n    return Object.assign(runtimeConfig, regionConfigResolver.resolveAwsRegionExtensionConfiguration(extensionConfiguration), smithyClient.resolveDefaultRuntimeConfig(extensionConfiguration), protocolHttp.resolveHttpHandlerRuntimeConfig(extensionConfiguration), resolveHttpAuthRuntimeConfig(extensionConfiguration));\n};\n\nclass SSOClient extends smithyClient.Client {\n    config;\n    constructor(...[configuration]) {\n        const _config_0 = runtimeConfig.getRuntimeConfig(configuration || {});\n        super(_config_0);\n        this.initConfig = _config_0;\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = middlewareUserAgent.resolveUserAgentConfig(_config_1);\n        const _config_3 = middlewareRetry.resolveRetryConfig(_config_2);\n        const _config_4 = configResolver.resolveRegionConfig(_config_3);\n        const _config_5 = middlewareHostHeader.resolveHostHeaderConfig(_config_4);\n        const _config_6 = middlewareEndpoint.resolveEndpointConfig(_config_5);\n        const _config_7 = httpAuthSchemeProvider.resolveHttpAuthSchemeConfig(_config_6);\n        const _config_8 = resolveRuntimeExtensions(_config_7, configuration?.extensions || []);\n        this.config = _config_8;\n        this.middlewareStack.use(middlewareUserAgent.getUserAgentPlugin(this.config));\n        this.middlewareStack.use(middlewareRetry.getRetryPlugin(this.config));\n        this.middlewareStack.use(middlewareContentLength.getContentLengthPlugin(this.config));\n        this.middlewareStack.use(middlewareHostHeader.getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(middlewareLogger.getLoggerPlugin(this.config));\n        this.middlewareStack.use(middlewareRecursionDetection.getRecursionDetectionPlugin(this.config));\n        this.middlewareStack.use(core.getHttpAuthSchemeEndpointRuleSetPlugin(this.config, {\n            httpAuthSchemeParametersProvider: httpAuthSchemeProvider.defaultSSOHttpAuthSchemeParametersProvider,\n            identityProviderConfigProvider: async (config) => new core.DefaultIdentityProviderConfig({\n                \"aws.auth#sigv4\": config.credentials,\n            }),\n        }));\n        this.middlewareStack.use(core.getHttpSigningPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\n\nclass SSOServiceException extends smithyClient.ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, SSOServiceException.prototype);\n    }\n}\n\nclass InvalidRequestException extends SSOServiceException {\n    name = \"InvalidRequestException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"InvalidRequestException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InvalidRequestException.prototype);\n    }\n}\nclass ResourceNotFoundException extends SSOServiceException {\n    name = \"ResourceNotFoundException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"ResourceNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);\n    }\n}\nclass TooManyRequestsException extends SSOServiceException {\n    name = \"TooManyRequestsException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"TooManyRequestsException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, TooManyRequestsException.prototype);\n    }\n}\nclass UnauthorizedException extends SSOServiceException {\n    name = \"UnauthorizedException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"UnauthorizedException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, UnauthorizedException.prototype);\n    }\n}\nconst GetRoleCredentialsRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.accessToken && { accessToken: smithyClient.SENSITIVE_STRING }),\n});\nconst RoleCredentialsFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.secretAccessKey && { secretAccessKey: smithyClient.SENSITIVE_STRING }),\n    ...(obj.sessionToken && { sessionToken: smithyClient.SENSITIVE_STRING }),\n});\nconst GetRoleCredentialsResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.roleCredentials && { roleCredentials: RoleCredentialsFilterSensitiveLog(obj.roleCredentials) }),\n});\nconst ListAccountRolesRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.accessToken && { accessToken: smithyClient.SENSITIVE_STRING }),\n});\nconst ListAccountsRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.accessToken && { accessToken: smithyClient.SENSITIVE_STRING }),\n});\nconst LogoutRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.accessToken && { accessToken: smithyClient.SENSITIVE_STRING }),\n});\n\nconst se_GetRoleCredentialsCommand = async (input, context) => {\n    const b = core.requestBuilder(input, context);\n    const headers = smithyClient.map({}, smithyClient.isSerializableHeaderValue, {\n        [_xasbt]: input[_aT],\n    });\n    b.bp(\"/federation/credentials\");\n    const query = smithyClient.map({\n        [_rn]: [, smithyClient.expectNonNull(input[_rN], `roleName`)],\n        [_ai]: [, smithyClient.expectNonNull(input[_aI], `accountId`)],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nconst se_ListAccountRolesCommand = async (input, context) => {\n    const b = core.requestBuilder(input, context);\n    const headers = smithyClient.map({}, smithyClient.isSerializableHeaderValue, {\n        [_xasbt]: input[_aT],\n    });\n    b.bp(\"/assignment/roles\");\n    const query = smithyClient.map({\n        [_nt]: [, input[_nT]],\n        [_mr]: [() => input.maxResults !== void 0, () => input[_mR].toString()],\n        [_ai]: [, smithyClient.expectNonNull(input[_aI], `accountId`)],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nconst se_ListAccountsCommand = async (input, context) => {\n    const b = core.requestBuilder(input, context);\n    const headers = smithyClient.map({}, smithyClient.isSerializableHeaderValue, {\n        [_xasbt]: input[_aT],\n    });\n    b.bp(\"/assignment/accounts\");\n    const query = smithyClient.map({\n        [_nt]: [, input[_nT]],\n        [_mr]: [() => input.maxResults !== void 0, () => input[_mR].toString()],\n    });\n    let body;\n    b.m(\"GET\").h(headers).q(query).b(body);\n    return b.build();\n};\nconst se_LogoutCommand = async (input, context) => {\n    const b = core.requestBuilder(input, context);\n    const headers = smithyClient.map({}, smithyClient.isSerializableHeaderValue, {\n        [_xasbt]: input[_aT],\n    });\n    b.bp(\"/logout\");\n    let body;\n    b.m(\"POST\").h(headers).b(body);\n    return b.build();\n};\nconst de_GetRoleCredentialsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = smithyClient.map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = smithyClient.expectNonNull(smithyClient.expectObject(await core$1.parseJsonBody(output.body, context)), \"body\");\n    const doc = smithyClient.take(data, {\n        roleCredentials: smithyClient._json,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nconst de_ListAccountRolesCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = smithyClient.map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = smithyClient.expectNonNull(smithyClient.expectObject(await core$1.parseJsonBody(output.body, context)), \"body\");\n    const doc = smithyClient.take(data, {\n        nextToken: smithyClient.expectString,\n        roleList: smithyClient._json,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nconst de_ListAccountsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = smithyClient.map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = smithyClient.expectNonNull(smithyClient.expectObject(await core$1.parseJsonBody(output.body, context)), \"body\");\n    const doc = smithyClient.take(data, {\n        accountList: smithyClient._json,\n        nextToken: smithyClient.expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nconst de_LogoutCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const contents = smithyClient.map({\n        $metadata: deserializeMetadata(output),\n    });\n    await smithyClient.collectBody(output.body, context);\n    return contents;\n};\nconst de_CommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await core$1.parseJsonErrorBody(output.body, context),\n    };\n    const errorCode = core$1.loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.sso#InvalidRequestException\":\n            throw await de_InvalidRequestExceptionRes(parsedOutput);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.sso#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.sso#TooManyRequestsException\":\n            throw await de_TooManyRequestsExceptionRes(parsedOutput);\n        case \"UnauthorizedException\":\n        case \"com.amazonaws.sso#UnauthorizedException\":\n            throw await de_UnauthorizedExceptionRes(parsedOutput);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nconst throwDefaultError = smithyClient.withBaseException(SSOServiceException);\nconst de_InvalidRequestExceptionRes = async (parsedOutput, context) => {\n    const contents = smithyClient.map({});\n    const data = parsedOutput.body;\n    const doc = smithyClient.take(data, {\n        message: smithyClient.expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new InvalidRequestException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return smithyClient.decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ResourceNotFoundExceptionRes = async (parsedOutput, context) => {\n    const contents = smithyClient.map({});\n    const data = parsedOutput.body;\n    const doc = smithyClient.take(data, {\n        message: smithyClient.expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new ResourceNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return smithyClient.decorateServiceException(exception, parsedOutput.body);\n};\nconst de_TooManyRequestsExceptionRes = async (parsedOutput, context) => {\n    const contents = smithyClient.map({});\n    const data = parsedOutput.body;\n    const doc = smithyClient.take(data, {\n        message: smithyClient.expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new TooManyRequestsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return smithyClient.decorateServiceException(exception, parsedOutput.body);\n};\nconst de_UnauthorizedExceptionRes = async (parsedOutput, context) => {\n    const contents = smithyClient.map({});\n    const data = parsedOutput.body;\n    const doc = smithyClient.take(data, {\n        message: smithyClient.expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new UnauthorizedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return smithyClient.decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst _aI = \"accountId\";\nconst _aT = \"accessToken\";\nconst _ai = \"account_id\";\nconst _mR = \"maxResults\";\nconst _mr = \"max_result\";\nconst _nT = \"nextToken\";\nconst _nt = \"next_token\";\nconst _rN = \"roleName\";\nconst _rn = \"role_name\";\nconst _xasbt = \"x-amz-sso_bearer_token\";\n\nclass GetRoleCredentialsCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"SWBPortalService\", \"GetRoleCredentials\", {})\n    .n(\"SSOClient\", \"GetRoleCredentialsCommand\")\n    .f(GetRoleCredentialsRequestFilterSensitiveLog, GetRoleCredentialsResponseFilterSensitiveLog)\n    .ser(se_GetRoleCredentialsCommand)\n    .de(de_GetRoleCredentialsCommand)\n    .build() {\n}\n\nclass ListAccountRolesCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"SWBPortalService\", \"ListAccountRoles\", {})\n    .n(\"SSOClient\", \"ListAccountRolesCommand\")\n    .f(ListAccountRolesRequestFilterSensitiveLog, void 0)\n    .ser(se_ListAccountRolesCommand)\n    .de(de_ListAccountRolesCommand)\n    .build() {\n}\n\nclass ListAccountsCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"SWBPortalService\", \"ListAccounts\", {})\n    .n(\"SSOClient\", \"ListAccountsCommand\")\n    .f(ListAccountsRequestFilterSensitiveLog, void 0)\n    .ser(se_ListAccountsCommand)\n    .de(de_ListAccountsCommand)\n    .build() {\n}\n\nclass LogoutCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"SWBPortalService\", \"Logout\", {})\n    .n(\"SSOClient\", \"LogoutCommand\")\n    .f(LogoutRequestFilterSensitiveLog, void 0)\n    .ser(se_LogoutCommand)\n    .de(de_LogoutCommand)\n    .build() {\n}\n\nconst commands = {\n    GetRoleCredentialsCommand,\n    ListAccountRolesCommand,\n    ListAccountsCommand,\n    LogoutCommand,\n};\nclass SSO extends SSOClient {\n}\nsmithyClient.createAggregatedClient(commands, SSO);\n\nconst paginateListAccountRoles = core.createPaginator(SSOClient, ListAccountRolesCommand, \"nextToken\", \"nextToken\", \"maxResults\");\n\nconst paginateListAccounts = core.createPaginator(SSOClient, ListAccountsCommand, \"nextToken\", \"nextToken\", \"maxResults\");\n\nObject.defineProperty(exports, \"$Command\", {\n    enumerable: true,\n    get: function () { return smithyClient.Command; }\n});\nObject.defineProperty(exports, \"__Client\", {\n    enumerable: true,\n    get: function () { return smithyClient.Client; }\n});\nexports.GetRoleCredentialsCommand = GetRoleCredentialsCommand;\nexports.GetRoleCredentialsRequestFilterSensitiveLog = GetRoleCredentialsRequestFilterSensitiveLog;\nexports.GetRoleCredentialsResponseFilterSensitiveLog = GetRoleCredentialsResponseFilterSensitiveLog;\nexports.InvalidRequestException = InvalidRequestException;\nexports.ListAccountRolesCommand = ListAccountRolesCommand;\nexports.ListAccountRolesRequestFilterSensitiveLog = ListAccountRolesRequestFilterSensitiveLog;\nexports.ListAccountsCommand = ListAccountsCommand;\nexports.ListAccountsRequestFilterSensitiveLog = ListAccountsRequestFilterSensitiveLog;\nexports.LogoutCommand = LogoutCommand;\nexports.LogoutRequestFilterSensitiveLog = LogoutRequestFilterSensitiveLog;\nexports.ResourceNotFoundException = ResourceNotFoundException;\nexports.RoleCredentialsFilterSensitiveLog = RoleCredentialsFilterSensitiveLog;\nexports.SSO = SSO;\nexports.SSOClient = SSOClient;\nexports.SSOServiceException = SSOServiceException;\nexports.TooManyRequestsException = TooManyRequestsException;\nexports.UnauthorizedException = UnauthorizedException;\nexports.paginateListAccountRoles = paginateListAccountRoles;\nexports.paginateListAccounts = paginateListAccounts;\n", "'use strict';\n\nvar clientSso = require('@aws-sdk/client-sso');\n\n\n\nObject.defineProperty(exports, \"GetRoleCredentialsCommand\", {\n\tenumerable: true,\n\tget: function () { return clientSso.GetRoleCredentialsCommand; }\n});\nObject.defineProperty(exports, \"SSOClient\", {\n\tenumerable: true,\n\tget: function () { return clientSso.SSOClient; }\n});\n", "'use strict';\n\nvar propertyProvider = require('@smithy/property-provider');\nvar sharedIniFileLoader = require('@smithy/shared-ini-file-loader');\nvar client = require('@aws-sdk/core/client');\nvar tokenProviders = require('@aws-sdk/token-providers');\n\nconst isSsoProfile = (arg) => arg &&\n    (typeof arg.sso_start_url === \"string\" ||\n        typeof arg.sso_account_id === \"string\" ||\n        typeof arg.sso_session === \"string\" ||\n        typeof arg.sso_region === \"string\" ||\n        typeof arg.sso_role_name === \"string\");\n\nconst SHOULD_FAIL_CREDENTIAL_CHAIN = false;\nconst resolveSSOCredentials = async ({ ssoStartUrl, ssoSession, ssoAccountId, ssoRegion, ssoRoleName, ssoClient, clientConfig, parentClientConfig, profile, filepath, configFilepath, ignoreCache, logger, }) => {\n    let token;\n    const refreshMessage = `To refresh this SSO session run aws sso login with the corresponding profile.`;\n    if (ssoSession) {\n        try {\n            const _token = await tokenProviders.fromSso({\n                profile,\n                filepath,\n                configFilepath,\n                ignoreCache,\n            })();\n            token = {\n                accessToken: _token.token,\n                expiresAt: new Date(_token.expiration).toISOString(),\n            };\n        }\n        catch (e) {\n            throw new propertyProvider.CredentialsProviderError(e.message, {\n                tryNextLink: SHOULD_FAIL_CREDENTIAL_CHAIN,\n                logger,\n            });\n        }\n    }\n    else {\n        try {\n            token = await sharedIniFileLoader.getSSOTokenFromFile(ssoStartUrl);\n        }\n        catch (e) {\n            throw new propertyProvider.CredentialsProviderError(`The SSO session associated with this profile is invalid. ${refreshMessage}`, {\n                tryNextLink: SHOULD_FAIL_CREDENTIAL_CHAIN,\n                logger,\n            });\n        }\n    }\n    if (new Date(token.expiresAt).getTime() - Date.now() <= 0) {\n        throw new propertyProvider.CredentialsProviderError(`The SSO session associated with this profile has expired. ${refreshMessage}`, {\n            tryNextLink: SHOULD_FAIL_CREDENTIAL_CHAIN,\n            logger,\n        });\n    }\n    const { accessToken } = token;\n    const { SSOClient, GetRoleCredentialsCommand } = await Promise.resolve().then(function () { return require('./loadSso-CVy8iqsZ.js'); });\n    const sso = ssoClient ||\n        new SSOClient(Object.assign({}, clientConfig ?? {}, {\n            logger: clientConfig?.logger ?? parentClientConfig?.logger,\n            region: clientConfig?.region ?? ssoRegion,\n        }));\n    let ssoResp;\n    try {\n        ssoResp = await sso.send(new GetRoleCredentialsCommand({\n            accountId: ssoAccountId,\n            roleName: ssoRoleName,\n            accessToken,\n        }));\n    }\n    catch (e) {\n        throw new propertyProvider.CredentialsProviderError(e, {\n            tryNextLink: SHOULD_FAIL_CREDENTIAL_CHAIN,\n            logger,\n        });\n    }\n    const { roleCredentials: { accessKeyId, secretAccessKey, sessionToken, expiration, credentialScope, accountId } = {}, } = ssoResp;\n    if (!accessKeyId || !secretAccessKey || !sessionToken || !expiration) {\n        throw new propertyProvider.CredentialsProviderError(\"SSO returns an invalid temporary credential.\", {\n            tryNextLink: SHOULD_FAIL_CREDENTIAL_CHAIN,\n            logger,\n        });\n    }\n    const credentials = {\n        accessKeyId,\n        secretAccessKey,\n        sessionToken,\n        expiration: new Date(expiration),\n        ...(credentialScope && { credentialScope }),\n        ...(accountId && { accountId }),\n    };\n    if (ssoSession) {\n        client.setCredentialFeature(credentials, \"CREDENTIALS_SSO\", \"s\");\n    }\n    else {\n        client.setCredentialFeature(credentials, \"CREDENTIALS_SSO_LEGACY\", \"u\");\n    }\n    return credentials;\n};\n\nconst validateSsoProfile = (profile, logger) => {\n    const { sso_start_url, sso_account_id, sso_region, sso_role_name } = profile;\n    if (!sso_start_url || !sso_account_id || !sso_region || !sso_role_name) {\n        throw new propertyProvider.CredentialsProviderError(`Profile is configured with invalid SSO credentials. Required parameters \"sso_account_id\", ` +\n            `\"sso_region\", \"sso_role_name\", \"sso_start_url\". Got ${Object.keys(profile).join(\", \")}\\nReference: https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-sso.html`, { tryNextLink: false, logger });\n    }\n    return profile;\n};\n\nconst fromSSO = (init = {}) => async ({ callerClientConfig } = {}) => {\n    init.logger?.debug(\"@aws-sdk/credential-provider-sso - fromSSO\");\n    const { ssoStartUrl, ssoAccountId, ssoRegion, ssoRoleName, ssoSession } = init;\n    const { ssoClient } = init;\n    const profileName = sharedIniFileLoader.getProfileName({\n        profile: init.profile ?? callerClientConfig?.profile,\n    });\n    if (!ssoStartUrl && !ssoAccountId && !ssoRegion && !ssoRoleName && !ssoSession) {\n        const profiles = await sharedIniFileLoader.parseKnownFiles(init);\n        const profile = profiles[profileName];\n        if (!profile) {\n            throw new propertyProvider.CredentialsProviderError(`Profile ${profileName} was not found.`, { logger: init.logger });\n        }\n        if (!isSsoProfile(profile)) {\n            throw new propertyProvider.CredentialsProviderError(`Profile ${profileName} is not configured with SSO credentials.`, {\n                logger: init.logger,\n            });\n        }\n        if (profile?.sso_session) {\n            const ssoSessions = await sharedIniFileLoader.loadSsoSessionData(init);\n            const session = ssoSessions[profile.sso_session];\n            const conflictMsg = ` configurations in profile ${profileName} and sso-session ${profile.sso_session}`;\n            if (ssoRegion && ssoRegion !== session.sso_region) {\n                throw new propertyProvider.CredentialsProviderError(`Conflicting SSO region` + conflictMsg, {\n                    tryNextLink: false,\n                    logger: init.logger,\n                });\n            }\n            if (ssoStartUrl && ssoStartUrl !== session.sso_start_url) {\n                throw new propertyProvider.CredentialsProviderError(`Conflicting SSO start_url` + conflictMsg, {\n                    tryNextLink: false,\n                    logger: init.logger,\n                });\n            }\n            profile.sso_region = session.sso_region;\n            profile.sso_start_url = session.sso_start_url;\n        }\n        const { sso_start_url, sso_account_id, sso_region, sso_role_name, sso_session } = validateSsoProfile(profile, init.logger);\n        return resolveSSOCredentials({\n            ssoStartUrl: sso_start_url,\n            ssoSession: sso_session,\n            ssoAccountId: sso_account_id,\n            ssoRegion: sso_region,\n            ssoRoleName: sso_role_name,\n            ssoClient: ssoClient,\n            clientConfig: init.clientConfig,\n            parentClientConfig: init.parentClientConfig,\n            profile: profileName,\n            filepath: init.filepath,\n            configFilepath: init.configFilepath,\n            ignoreCache: init.ignoreCache,\n            logger: init.logger,\n        });\n    }\n    else if (!ssoStartUrl || !ssoAccountId || !ssoRegion || !ssoRoleName) {\n        throw new propertyProvider.CredentialsProviderError(\"Incomplete configuration. The fromSSO() argument hash must include \" +\n            '\"ssoStartUrl\", \"ssoAccountId\", \"ssoRegion\", \"ssoRoleName\"', { tryNextLink: false, logger: init.logger });\n    }\n    else {\n        return resolveSSOCredentials({\n            ssoStartUrl,\n            ssoSession,\n            ssoAccountId,\n            ssoRegion,\n            ssoRoleName,\n            ssoClient,\n            clientConfig: init.clientConfig,\n            parentClientConfig: init.parentClientConfig,\n            profile: profileName,\n            filepath: init.filepath,\n            configFilepath: init.configFilepath,\n            ignoreCache: init.ignoreCache,\n            logger: init.logger,\n        });\n    }\n};\n\nexports.fromSSO = fromSSO;\nexports.isSsoProfile = isSsoProfile;\nexports.validateSsoProfile = validateSsoProfile;\n", "import { resolveAwsSdkSigV4Config, } from \"@aws-sdk/core\";\nimport { getSmithyContext, normalizeProvider } from \"@smithy/util-middleware\";\nimport { STSClient } from \"../STSClient\";\nexport const defaultSTSHttpAuthSchemeParametersProvider = async (config, context, input) => {\n    return {\n        operation: getSmithyContext(context).operation,\n        region: (await normalizeProvider(config.region)()) ||\n            (() => {\n                throw new Error(\"expected `region` to be configured for `aws.auth#sigv4`\");\n            })(),\n    };\n};\nfunction createAwsAuthSigv4HttpAuthOption(authParameters) {\n    return {\n        schemeId: \"aws.auth#sigv4\",\n        signingProperties: {\n            name: \"sts\",\n            region: authParameters.region,\n        },\n        propertiesExtractor: (config, context) => ({\n            signingProperties: {\n                config,\n                context,\n            },\n        }),\n    };\n}\nfunction createSmithyApiNoAuthHttpAuthOption(authParameters) {\n    return {\n        schemeId: \"smithy.api#noAuth\",\n    };\n}\nexport const defaultSTSHttpAuthSchemeProvider = (authParameters) => {\n    const options = [];\n    switch (authParameters.operation) {\n        case \"AssumeRoleWithWebIdentity\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        default: {\n            options.push(createAwsAuthSigv4HttpAuthOption(authParameters));\n        }\n    }\n    return options;\n};\nexport const resolveStsAuthConfig = (input) => Object.assign(input, {\n    stsClientCtor: STSClient,\n});\nexport const resolveHttpAuthSchemeConfig = (config) => {\n    const config_0 = resolveStsAuthConfig(config);\n    const config_1 = resolveAwsSdkSigV4Config(config_0);\n    return Object.assign(config_1, {\n        authSchemePreference: normalizeProvider(config.authSchemePreference ?? []),\n    });\n};\n", "export const resolveClientEndpointParameters = (options) => {\n    return Object.assign(options, {\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        useGlobalEndpoint: options.useGlobalEndpoint ?? false,\n        defaultSigningName: \"sts\",\n    });\n};\nexport const commonParams = {\n    UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n    UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n    Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n    Region: { type: \"builtInParams\", name: \"region\" },\n    UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n};\n", "const F = \"required\", G = \"type\", H = \"fn\", I = \"argv\", J = \"ref\";\nconst a = false, b = true, c = \"booleanEquals\", d = \"stringEquals\", e = \"sigv4\", f = \"sts\", g = \"us-east-1\", h = \"endpoint\", i = \"https://sts.{Region}.{PartitionResult#dnsSuffix}\", j = \"tree\", k = \"error\", l = \"getAttr\", m = { [F]: false, [G]: \"String\" }, n = { [F]: true, \"default\": false, [G]: \"Boolean\" }, o = { [J]: \"Endpoint\" }, p = { [H]: \"isSet\", [I]: [{ [J]: \"Region\" }] }, q = { [J]: \"Region\" }, r = { [H]: \"aws.partition\", [I]: [q], \"assign\": \"PartitionResult\" }, s = { [J]: \"UseFIPS\" }, t = { [J]: \"UseDualStack\" }, u = { \"url\": \"https://sts.amazonaws.com\", \"properties\": { \"authSchemes\": [{ \"name\": e, \"signingName\": f, \"signingRegion\": g }] }, \"headers\": {} }, v = {}, w = { \"conditions\": [{ [H]: d, [I]: [q, \"aws-global\"] }], [h]: u, [G]: h }, x = { [H]: c, [I]: [s, true] }, y = { [H]: c, [I]: [t, true] }, z = { [H]: l, [I]: [{ [J]: \"PartitionResult\" }, \"supportsFIPS\"] }, A = { [J]: \"PartitionResult\" }, B = { [H]: c, [I]: [true, { [H]: l, [I]: [A, \"supportsDualStack\"] }] }, C = [{ [H]: \"isSet\", [I]: [o] }], D = [x], E = [y];\nconst _data = { version: \"1.0\", parameters: { Region: m, UseDualStack: n, UseFIPS: n, Endpoint: m, UseGlobalEndpoint: n }, rules: [{ conditions: [{ [H]: c, [I]: [{ [J]: \"UseGlobalEndpoint\" }, b] }, { [H]: \"not\", [I]: C }, p, r, { [H]: c, [I]: [s, a] }, { [H]: c, [I]: [t, a] }], rules: [{ conditions: [{ [H]: d, [I]: [q, \"ap-northeast-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"ap-south-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"ap-southeast-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"ap-southeast-2\"] }], endpoint: u, [G]: h }, w, { conditions: [{ [H]: d, [I]: [q, \"ca-central-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-central-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-north-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-west-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-west-2\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-west-3\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"sa-east-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, g] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"us-east-2\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"us-west-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"us-west-2\"] }], endpoint: u, [G]: h }, { endpoint: { url: i, properties: { authSchemes: [{ name: e, signingName: f, signingRegion: \"{Region}\" }] }, headers: v }, [G]: h }], [G]: j }, { conditions: C, rules: [{ conditions: D, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", [G]: k }, { conditions: E, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", [G]: k }, { endpoint: { url: o, properties: v, headers: v }, [G]: h }], [G]: j }, { conditions: [p], rules: [{ conditions: [r], rules: [{ conditions: [x, y], rules: [{ conditions: [{ [H]: c, [I]: [b, z] }, B], rules: [{ endpoint: { url: \"https://sts-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: v, headers: v }, [G]: h }], [G]: j }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", [G]: k }], [G]: j }, { conditions: D, rules: [{ conditions: [{ [H]: c, [I]: [z, b] }], rules: [{ conditions: [{ [H]: d, [I]: [{ [H]: l, [I]: [A, \"name\"] }, \"aws-us-gov\"] }], endpoint: { url: \"https://sts.{Region}.amazonaws.com\", properties: v, headers: v }, [G]: h }, { endpoint: { url: \"https://sts-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: v, headers: v }, [G]: h }], [G]: j }, { error: \"FIPS is enabled but this partition does not support FIPS\", [G]: k }], [G]: j }, { conditions: E, rules: [{ conditions: [B], rules: [{ endpoint: { url: \"https://sts.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: v, headers: v }, [G]: h }], [G]: j }, { error: \"DualStack is enabled but this partition does not support DualStack\", [G]: k }], [G]: j }, w, { endpoint: { url: i, properties: v, headers: v }, [G]: h }], [G]: j }], [G]: j }, { error: \"Invalid Configuration: Missing Region\", [G]: k }] };\nexport const ruleSet = _data;\n", "import { awsEndpointFunctions } from \"@aws-sdk/util-endpoints\";\nimport { customEndpointFunctions, EndpointCache, resolveEndpoint } from \"@smithy/util-endpoints\";\nimport { ruleSet } from \"./ruleset\";\nconst cache = new EndpointCache({\n    size: 50,\n    params: [\"Endpoint\", \"Region\", \"UseDualStack\", \"UseFIPS\", \"UseGlobalEndpoint\"],\n});\nexport const defaultEndpointResolver = (endpointParams, context = {}) => {\n    return cache.get(endpointParams, () => resolveEndpoint(ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    }));\n};\ncustomEndpointFunctions.aws = awsEndpointFunctions;\n", "import { AwsSdkSigV4Signer } from \"@aws-sdk/core\";\nimport { NoAuthSigner } from \"@smithy/core\";\nimport { NoOpLogger } from \"@smithy/smithy-client\";\nimport { parseUrl } from \"@smithy/url-parser\";\nimport { fromBase64, toBase64 } from \"@smithy/util-base64\";\nimport { fromUtf8, toUtf8 } from \"@smithy/util-utf8\";\nimport { defaultSTSHttpAuthSchemeProvider } from \"./auth/httpAuthSchemeProvider\";\nimport { defaultEndpointResolver } from \"./endpoint/endpointResolver\";\nexport const getRuntimeConfig = (config) => {\n    return {\n        apiVersion: \"2011-06-15\",\n        base64Decoder: config?.base64Decoder ?? fromBase64,\n        base64Encoder: config?.base64Encoder ?? toBase64,\n        disableHostPrefix: config?.disableHostPrefix ?? false,\n        endpointProvider: config?.endpointProvider ?? defaultEndpointResolver,\n        extensions: config?.extensions ?? [],\n        httpAuthSchemeProvider: config?.httpAuthSchemeProvider ?? defaultSTSHttpAuthSchemeProvider,\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"aws.auth#sigv4\"),\n                signer: new AwsSdkSigV4Signer(),\n            },\n            {\n                schemeId: \"smithy.api#noAuth\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"smithy.api#noAuth\") || (async () => ({})),\n                signer: new NoAuthSigner(),\n            },\n        ],\n        logger: config?.logger ?? new NoOpLogger(),\n        serviceId: config?.serviceId ?? \"STS\",\n        urlParser: config?.urlParser ?? parseUrl,\n        utf8Decoder: config?.utf8Decoder ?? fromUtf8,\n        utf8Encoder: config?.utf8Encoder ?? toUtf8,\n    };\n};\n", "import packageInfo from \"../../../package.json\";\nimport { AwsSdkSigV4Signer, NODE_AUTH_SCHEME_PREFERENCE_OPTIONS, emitWarningIfUnsupportedVersion as awsCheckVersion, } from \"@aws-sdk/core\";\nimport { NODE_APP_ID_CONFIG_OPTIONS, createDefaultUserAgentProvider } from \"@aws-sdk/util-user-agent-node\";\nimport { NODE_REGION_CONFIG_FILE_OPTIONS, NODE_REGION_CONFIG_OPTIONS, NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, } from \"@smithy/config-resolver\";\nimport { NoAuthSigner } from \"@smithy/core\";\nimport { Hash } from \"@smithy/hash-node\";\nimport { NODE_MAX_ATTEMPT_CONFIG_OPTIONS, NODE_RETRY_MODE_CONFIG_OPTIONS } from \"@smithy/middleware-retry\";\nimport { loadConfig as loadNodeConfig } from \"@smithy/node-config-provider\";\nimport { NodeHttpHandler as RequestHandler, streamCollector } from \"@smithy/node-http-handler\";\nimport { calculateBodyLength } from \"@smithy/util-body-length-node\";\nimport { DEFAULT_RETRY_MODE } from \"@smithy/util-retry\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@smithy/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@smithy/util-defaults-mode-node\";\nimport { emitWarningIfUnsupportedVersion } from \"@smithy/smithy-client\";\nexport const getRuntimeConfig = (config) => {\n    emitWarningIfUnsupportedVersion(process.version);\n    const defaultsMode = resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n    const clientSharedValues = getSharedRuntimeConfig(config);\n    awsCheckVersion(process.version);\n    const loaderConfig = {\n        profile: config?.profile,\n        logger: clientSharedValues.logger,\n    };\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        authSchemePreference: config?.authSchemePreference ?? loadNodeConfig(NODE_AUTH_SCHEME_PREFERENCE_OPTIONS, loaderConfig),\n        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            createDefaultUserAgentProvider({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"aws.auth#sigv4\") ||\n                    (async (idProps) => await config.credentialDefaultProvider(idProps?.__config || {})()),\n                signer: new AwsSdkSigV4Signer(),\n            },\n            {\n                schemeId: \"smithy.api#noAuth\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"smithy.api#noAuth\") || (async () => ({})),\n                signer: new NoAuthSigner(),\n            },\n        ],\n        maxAttempts: config?.maxAttempts ?? loadNodeConfig(NODE_MAX_ATTEMPT_CONFIG_OPTIONS, config),\n        region: config?.region ??\n            loadNodeConfig(NODE_REGION_CONFIG_OPTIONS, { ...NODE_REGION_CONFIG_FILE_OPTIONS, ...loaderConfig }),\n        requestHandler: RequestHandler.create(config?.requestHandler ?? defaultConfigProvider),\n        retryMode: config?.retryMode ??\n            loadNodeConfig({\n                ...NODE_RETRY_MODE_CONFIG_OPTIONS,\n                default: async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE,\n            }, config),\n        sha256: config?.sha256 ?? Hash.bind(null, \"sha256\"),\n        streamCollector: config?.streamCollector ?? streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? loadNodeConfig(NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, loaderConfig),\n        useFipsEndpoint: config?.useFipsEndpoint ?? loadNodeConfig(NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, loaderConfig),\n        userAgentAppId: config?.userAgentAppId ?? loadNodeConfig(NODE_APP_ID_CONFIG_OPTIONS, loaderConfig),\n    };\n};\n", "export const getHttpAuthExtensionConfiguration = (runtimeConfig) => {\n    const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;\n    let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;\n    let _credentials = runtimeConfig.credentials;\n    return {\n        setHttpAuthScheme(httpAuthScheme) {\n            const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);\n            if (index === -1) {\n                _httpAuthSchemes.push(httpAuthScheme);\n            }\n            else {\n                _httpAuthSchemes.splice(index, 1, httpAuthScheme);\n            }\n        },\n        httpAuthSchemes() {\n            return _httpAuthSchemes;\n        },\n        setHttpAuthSchemeProvider(httpAuthSchemeProvider) {\n            _httpAuthSchemeProvider = httpAuthSchemeProvider;\n        },\n        httpAuthSchemeProvider() {\n            return _httpAuthSchemeProvider;\n        },\n        setCredentials(credentials) {\n            _credentials = credentials;\n        },\n        credentials() {\n            return _credentials;\n        },\n    };\n};\nexport const resolveHttpAuthRuntimeConfig = (config) => {\n    return {\n        httpAuthSchemes: config.httpAuthSchemes(),\n        httpAuthSchemeProvider: config.httpAuthSchemeProvider(),\n        credentials: config.credentials(),\n    };\n};\n", "import { getAwsRegionExtensionConfiguration, resolveAwsRegionExtensionConfiguration, } from \"@aws-sdk/region-config-resolver\";\nimport { getHttpHandlerExtensionConfiguration, resolveHttpHandlerRuntimeConfig } from \"@smithy/protocol-http\";\nimport { getDefaultExtensionConfiguration, resolveDefaultRuntimeConfig } from \"@smithy/smithy-client\";\nimport { getHttpAuthExtensionConfiguration, resolveHttpAuthRuntimeConfig } from \"./auth/httpAuthExtensionConfiguration\";\nexport const resolveRuntimeExtensions = (runtimeConfig, extensions) => {\n    const extensionConfiguration = Object.assign(getAwsRegionExtensionConfiguration(runtimeConfig), getDefaultExtensionConfiguration(runtimeConfig), getHttpHandlerExtensionConfiguration(runtimeConfig), getHttpAuthExtensionConfiguration(runtimeConfig));\n    extensions.forEach((extension) => extension.configure(extensionConfiguration));\n    return Object.assign(runtimeConfig, resolveAwsRegionExtensionConfiguration(extensionConfiguration), resolveDefaultRuntimeConfig(extensionConfiguration), resolveHttpHandlerRuntimeConfig(extensionConfiguration), resolveHttpAuthRuntimeConfig(extensionConfiguration));\n};\n", "import { getHostHeaderPlugin, resolveHostHeaderConfig, } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRecursionDetectionPlugin } from \"@aws-sdk/middleware-recursion-detection\";\nimport { getUserAgentPlugin, resolveUserAgentConfig, } from \"@aws-sdk/middleware-user-agent\";\nimport { resolveRegionConfig } from \"@smithy/config-resolver\";\nimport { DefaultIdentityProviderConfig, getHttpAuthSchemeEndpointRuleSetPlugin, getHttpSigningPlugin, } from \"@smithy/core\";\nimport { getContentLengthPlugin } from \"@smithy/middleware-content-length\";\nimport { resolveEndpointConfig } from \"@smithy/middleware-endpoint\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@smithy/middleware-retry\";\nimport { Client as __Client, } from \"@smithy/smithy-client\";\nimport { defaultSTSHttpAuthSchemeParametersProvider, resolveHttpAuthSchemeConfig, } from \"./auth/httpAuthSchemeProvider\";\nimport { resolveClientEndpointParameters, } from \"./endpoint/EndpointParameters\";\nimport { getRuntimeConfig as __getRuntimeConfig } from \"./runtimeConfig\";\nimport { resolveRuntimeExtensions } from \"./runtimeExtensions\";\nexport { __Client };\nexport class STSClient extends __Client {\n    config;\n    constructor(...[configuration]) {\n        const _config_0 = __getRuntimeConfig(configuration || {});\n        super(_config_0);\n        this.initConfig = _config_0;\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = resolveUserAgentConfig(_config_1);\n        const _config_3 = resolveRetryConfig(_config_2);\n        const _config_4 = resolveRegionConfig(_config_3);\n        const _config_5 = resolveHostHeaderConfig(_config_4);\n        const _config_6 = resolveEndpointConfig(_config_5);\n        const _config_7 = resolveHttpAuthSchemeConfig(_config_6);\n        const _config_8 = resolveRuntimeExtensions(_config_7, configuration?.extensions || []);\n        this.config = _config_8;\n        this.middlewareStack.use(getUserAgentPlugin(this.config));\n        this.middlewareStack.use(getRetryPlugin(this.config));\n        this.middlewareStack.use(getContentLengthPlugin(this.config));\n        this.middlewareStack.use(getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(getLoggerPlugin(this.config));\n        this.middlewareStack.use(getRecursionDetectionPlugin(this.config));\n        this.middlewareStack.use(getHttpAuthSchemeEndpointRuleSetPlugin(this.config, {\n            httpAuthSchemeParametersProvider: defaultSTSHttpAuthSchemeParametersProvider,\n            identityProviderConfigProvider: async (config) => new DefaultIdentityProviderConfig({\n                \"aws.auth#sigv4\": config.credentials,\n            }),\n        }));\n        this.middlewareStack.use(getHttpSigningPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\n", "import { ServiceException as __ServiceException, } from \"@smithy/smithy-client\";\nexport { __ServiceException };\nexport class STSServiceException extends __ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, STSServiceException.prototype);\n    }\n}\n", "import { SENSITIVE_STRING } from \"@smithy/smithy-client\";\nimport { STSServiceException as __BaseException } from \"./STSServiceException\";\nexport const CredentialsFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SecretAccessKey && { SecretAccessKey: SENSITIVE_STRING }),\n});\nexport const AssumeRoleResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Credentials && { Credentials: CredentialsFilterSensitiveLog(obj.Credentials) }),\n});\nexport class ExpiredTokenException extends __BaseException {\n    name = \"ExpiredTokenException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"ExpiredTokenException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, ExpiredTokenException.prototype);\n    }\n}\nexport class MalformedPolicyDocumentException extends __BaseException {\n    name = \"MalformedPolicyDocumentException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"MalformedPolicyDocumentException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, MalformedPolicyDocumentException.prototype);\n    }\n}\nexport class PackedPolicyTooLargeException extends __BaseException {\n    name = \"PackedPolicyTooLargeException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"PackedPolicyTooLargeException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, PackedPolicyTooLargeException.prototype);\n    }\n}\nexport class RegionDisabledException extends __BaseException {\n    name = \"RegionDisabledException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"RegionDisabledException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, RegionDisabledException.prototype);\n    }\n}\nexport class IDPRejectedClaimException extends __BaseException {\n    name = \"IDPRejectedClaimException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"IDPRejectedClaimException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, IDPRejectedClaimException.prototype);\n    }\n}\nexport class InvalidIdentityTokenException extends __BaseException {\n    name = \"InvalidIdentityTokenException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"InvalidIdentityTokenException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InvalidIdentityTokenException.prototype);\n    }\n}\nexport const AssumeRoleWithWebIdentityRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.WebIdentityToken && { WebIdentityToken: SENSITIVE_STRING }),\n});\nexport const AssumeRoleWithWebIdentityResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Credentials && { Credentials: CredentialsFilterSensitiveLog(obj.Credentials) }),\n});\nexport class IDPCommunicationErrorException extends __BaseException {\n    name = \"IDPCommunicationErrorException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"IDPCommunicationErrorException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, IDPCommunicationErrorException.prototype);\n    }\n}\n", "import { parseXmlBody as parseBody, parseXmlErrorBody as parseErrorBody } from \"@aws-sdk/core\";\nimport { HttpRequest as __HttpRequest } from \"@smithy/protocol-http\";\nimport { collectBody, decorateServiceException as __decorateServiceException, expectNonNull as __expectNonNull, expectString as __expectString, extendedEncodeURIComponent as __extendedEncodeURIComponent, parseRfc3339DateTimeWithOffset as __parseRfc3339DateTimeWithOffset, strictParseInt32 as __strictParseInt32, withBaseException, } from \"@smithy/smithy-client\";\nimport { ExpiredTokenException, IDPCommunicationErrorException, IDPRejectedClaimException, InvalidIdentityTokenException, MalformedPolicyDocumentException, PackedPolicyTooLargeException, RegionDisabledException, } from \"../models/models_0\";\nimport { STSServiceException as __BaseException } from \"../models/STSServiceException\";\nexport const se_AssumeRoleCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_AssumeRoleRequest(input, context),\n        [_A]: _AR,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_AssumeRoleWithWebIdentityCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_AssumeRoleWithWebIdentityRequest(input, context),\n        [_A]: _ARWWI,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const de_AssumeRoleCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_AssumeRoleResponse(data.AssumeRoleResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_AssumeRoleWithWebIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_AssumeRoleWithWebIdentityResponse(data.AssumeRoleWithWebIdentityResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_CommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExpiredTokenException\":\n        case \"com.amazonaws.sts#ExpiredTokenException\":\n            throw await de_ExpiredTokenExceptionRes(parsedOutput, context);\n        case \"MalformedPolicyDocument\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            throw await de_MalformedPolicyDocumentExceptionRes(parsedOutput, context);\n        case \"PackedPolicyTooLarge\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            throw await de_PackedPolicyTooLargeExceptionRes(parsedOutput, context);\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            throw await de_RegionDisabledExceptionRes(parsedOutput, context);\n        case \"IDPCommunicationError\":\n        case \"com.amazonaws.sts#IDPCommunicationErrorException\":\n            throw await de_IDPCommunicationErrorExceptionRes(parsedOutput, context);\n        case \"IDPRejectedClaim\":\n        case \"com.amazonaws.sts#IDPRejectedClaimException\":\n            throw await de_IDPRejectedClaimExceptionRes(parsedOutput, context);\n        case \"InvalidIdentityToken\":\n        case \"com.amazonaws.sts#InvalidIdentityTokenException\":\n            throw await de_InvalidIdentityTokenExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_ExpiredTokenExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_ExpiredTokenException(body.Error, context);\n    const exception = new ExpiredTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_IDPCommunicationErrorExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_IDPCommunicationErrorException(body.Error, context);\n    const exception = new IDPCommunicationErrorException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_IDPRejectedClaimExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_IDPRejectedClaimException(body.Error, context);\n    const exception = new IDPRejectedClaimException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidIdentityTokenExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_InvalidIdentityTokenException(body.Error, context);\n    const exception = new InvalidIdentityTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_MalformedPolicyDocumentExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_MalformedPolicyDocumentException(body.Error, context);\n    const exception = new MalformedPolicyDocumentException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_PackedPolicyTooLargeExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_PackedPolicyTooLargeException(body.Error, context);\n    const exception = new PackedPolicyTooLargeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_RegionDisabledExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_RegionDisabledException(body.Error, context);\n    const exception = new RegionDisabledException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst se_AssumeRoleRequest = (input, context) => {\n    const entries = {};\n    if (input[_RA] != null) {\n        entries[_RA] = input[_RA];\n    }\n    if (input[_RSN] != null) {\n        entries[_RSN] = input[_RSN];\n    }\n    if (input[_PA] != null) {\n        const memberEntries = se_policyDescriptorListType(input[_PA], context);\n        if (input[_PA]?.length === 0) {\n            entries.PolicyArns = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_P] != null) {\n        entries[_P] = input[_P];\n    }\n    if (input[_DS] != null) {\n        entries[_DS] = input[_DS];\n    }\n    if (input[_T] != null) {\n        const memberEntries = se_tagListType(input[_T], context);\n        if (input[_T]?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_TTK] != null) {\n        const memberEntries = se_tagKeyListType(input[_TTK], context);\n        if (input[_TTK]?.length === 0) {\n            entries.TransitiveTagKeys = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `TransitiveTagKeys.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_EI] != null) {\n        entries[_EI] = input[_EI];\n    }\n    if (input[_SN] != null) {\n        entries[_SN] = input[_SN];\n    }\n    if (input[_TC] != null) {\n        entries[_TC] = input[_TC];\n    }\n    if (input[_SI] != null) {\n        entries[_SI] = input[_SI];\n    }\n    if (input[_PC] != null) {\n        const memberEntries = se_ProvidedContextsListType(input[_PC], context);\n        if (input[_PC]?.length === 0) {\n            entries.ProvidedContexts = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `ProvidedContexts.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst se_AssumeRoleWithWebIdentityRequest = (input, context) => {\n    const entries = {};\n    if (input[_RA] != null) {\n        entries[_RA] = input[_RA];\n    }\n    if (input[_RSN] != null) {\n        entries[_RSN] = input[_RSN];\n    }\n    if (input[_WIT] != null) {\n        entries[_WIT] = input[_WIT];\n    }\n    if (input[_PI] != null) {\n        entries[_PI] = input[_PI];\n    }\n    if (input[_PA] != null) {\n        const memberEntries = se_policyDescriptorListType(input[_PA], context);\n        if (input[_PA]?.length === 0) {\n            entries.PolicyArns = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_P] != null) {\n        entries[_P] = input[_P];\n    }\n    if (input[_DS] != null) {\n        entries[_DS] = input[_DS];\n    }\n    return entries;\n};\nconst se_policyDescriptorListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_PolicyDescriptorType(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst se_PolicyDescriptorType = (input, context) => {\n    const entries = {};\n    if (input[_a] != null) {\n        entries[_a] = input[_a];\n    }\n    return entries;\n};\nconst se_ProvidedContext = (input, context) => {\n    const entries = {};\n    if (input[_PAr] != null) {\n        entries[_PAr] = input[_PAr];\n    }\n    if (input[_CA] != null) {\n        entries[_CA] = input[_CA];\n    }\n    return entries;\n};\nconst se_ProvidedContextsListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_ProvidedContext(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst se_Tag = (input, context) => {\n    const entries = {};\n    if (input[_K] != null) {\n        entries[_K] = input[_K];\n    }\n    if (input[_Va] != null) {\n        entries[_Va] = input[_Va];\n    }\n    return entries;\n};\nconst se_tagKeyListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst se_tagListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_Tag(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst de_AssumedRoleUser = (output, context) => {\n    const contents = {};\n    if (output[_ARI] != null) {\n        contents[_ARI] = __expectString(output[_ARI]);\n    }\n    if (output[_Ar] != null) {\n        contents[_Ar] = __expectString(output[_Ar]);\n    }\n    return contents;\n};\nconst de_AssumeRoleResponse = (output, context) => {\n    const contents = {};\n    if (output[_C] != null) {\n        contents[_C] = de_Credentials(output[_C], context);\n    }\n    if (output[_ARU] != null) {\n        contents[_ARU] = de_AssumedRoleUser(output[_ARU], context);\n    }\n    if (output[_PPS] != null) {\n        contents[_PPS] = __strictParseInt32(output[_PPS]);\n    }\n    if (output[_SI] != null) {\n        contents[_SI] = __expectString(output[_SI]);\n    }\n    return contents;\n};\nconst de_AssumeRoleWithWebIdentityResponse = (output, context) => {\n    const contents = {};\n    if (output[_C] != null) {\n        contents[_C] = de_Credentials(output[_C], context);\n    }\n    if (output[_SFWIT] != null) {\n        contents[_SFWIT] = __expectString(output[_SFWIT]);\n    }\n    if (output[_ARU] != null) {\n        contents[_ARU] = de_AssumedRoleUser(output[_ARU], context);\n    }\n    if (output[_PPS] != null) {\n        contents[_PPS] = __strictParseInt32(output[_PPS]);\n    }\n    if (output[_Pr] != null) {\n        contents[_Pr] = __expectString(output[_Pr]);\n    }\n    if (output[_Au] != null) {\n        contents[_Au] = __expectString(output[_Au]);\n    }\n    if (output[_SI] != null) {\n        contents[_SI] = __expectString(output[_SI]);\n    }\n    return contents;\n};\nconst de_Credentials = (output, context) => {\n    const contents = {};\n    if (output[_AKI] != null) {\n        contents[_AKI] = __expectString(output[_AKI]);\n    }\n    if (output[_SAK] != null) {\n        contents[_SAK] = __expectString(output[_SAK]);\n    }\n    if (output[_ST] != null) {\n        contents[_ST] = __expectString(output[_ST]);\n    }\n    if (output[_E] != null) {\n        contents[_E] = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[_E]));\n    }\n    return contents;\n};\nconst de_ExpiredTokenException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_IDPCommunicationErrorException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_IDPRejectedClaimException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_InvalidIdentityTokenException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_MalformedPolicyDocumentException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_PackedPolicyTooLargeException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_RegionDisabledException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst throwDefaultError = withBaseException(__BaseException);\nconst buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const contents = {\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        path: basePath.endsWith(\"/\") ? basePath.slice(0, -1) + path : basePath + path,\n        headers,\n    };\n    if (resolvedHostname !== undefined) {\n        contents.hostname = resolvedHostname;\n    }\n    if (body !== undefined) {\n        contents.body = body;\n    }\n    return new __HttpRequest(contents);\n};\nconst SHARED_HEADERS = {\n    \"content-type\": \"application/x-www-form-urlencoded\",\n};\nconst _ = \"2011-06-15\";\nconst _A = \"Action\";\nconst _AKI = \"AccessKeyId\";\nconst _AR = \"AssumeRole\";\nconst _ARI = \"AssumedRoleId\";\nconst _ARU = \"AssumedRoleUser\";\nconst _ARWWI = \"AssumeRoleWithWebIdentity\";\nconst _Ar = \"Arn\";\nconst _Au = \"Audience\";\nconst _C = \"Credentials\";\nconst _CA = \"ContextAssertion\";\nconst _DS = \"DurationSeconds\";\nconst _E = \"Expiration\";\nconst _EI = \"ExternalId\";\nconst _K = \"Key\";\nconst _P = \"Policy\";\nconst _PA = \"PolicyArns\";\nconst _PAr = \"ProviderArn\";\nconst _PC = \"ProvidedContexts\";\nconst _PI = \"ProviderId\";\nconst _PPS = \"PackedPolicySize\";\nconst _Pr = \"Provider\";\nconst _RA = \"RoleArn\";\nconst _RSN = \"RoleSessionName\";\nconst _SAK = \"SecretAccessKey\";\nconst _SFWIT = \"SubjectFromWebIdentityToken\";\nconst _SI = \"SourceIdentity\";\nconst _SN = \"SerialNumber\";\nconst _ST = \"SessionToken\";\nconst _T = \"Tags\";\nconst _TC = \"TokenCode\";\nconst _TTK = \"TransitiveTagKeys\";\nconst _V = \"Version\";\nconst _Va = \"Value\";\nconst _WIT = \"WebIdentityToken\";\nconst _a = \"arn\";\nconst _m = \"message\";\nconst buildFormUrlencodedString = (formEntries) => Object.entries(formEntries)\n    .map(([key, value]) => __extendedEncodeURIComponent(key) + \"=\" + __extendedEncodeURIComponent(value))\n    .join(\"&\");\nconst loadQueryErrorCode = (output, data) => {\n    if (data.Error?.Code !== undefined) {\n        return data.Error.Code;\n    }\n    if (output.statusCode == 404) {\n        return \"NotFound\";\n    }\n};\n", "import { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { AssumeRoleResponseFilterSensitiveLog } from \"../models/models_0\";\nimport { de_AssumeRoleCommand, se_AssumeRoleCommand } from \"../protocols/Aws_query\";\nexport { $Command };\nexport class AssumeRoleCommand extends $Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        getSerdePlugin(config, this.serialize, this.deserialize),\n        getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"AWSSecurityTokenServiceV20110615\", \"AssumeRole\", {})\n    .n(\"STSClient\", \"AssumeRoleCommand\")\n    .f(void 0, AssumeRoleResponseFilterSensitiveLog)\n    .ser(se_AssumeRoleCommand)\n    .de(de_AssumeRoleCommand)\n    .build() {\n}\n", "import { getEndpointPlugin } from \"@smithy/middleware-endpoint\";\nimport { getSerdePlugin } from \"@smithy/middleware-serde\";\nimport { Command as $Command } from \"@smithy/smithy-client\";\nimport { commonParams } from \"../endpoint/EndpointParameters\";\nimport { AssumeRoleWithWebIdentityRequestFilterSensitiveLog, AssumeRoleWithWebIdentityResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { de_AssumeRoleWithWebIdentityCommand, se_AssumeRoleWithWebIdentityCommand } from \"../protocols/Aws_query\";\nexport { $Command };\nexport class AssumeRoleWithWebIdentityCommand extends $Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        getSerdePlugin(config, this.serialize, this.deserialize),\n        getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"AWSSecurityTokenServiceV20110615\", \"AssumeRoleWithWebIdentity\", {})\n    .n(\"STSClient\", \"AssumeRoleWithWebIdentityCommand\")\n    .f(AssumeRoleWithWebIdentityRequestFilterSensitiveLog, AssumeRoleWithWebIdentityResponseFilterSensitiveLog)\n    .ser(se_AssumeRoleWithWebIdentityCommand)\n    .de(de_AssumeRoleWithWebIdentityCommand)\n    .build() {\n}\n", "import { createAggregatedClient } from \"@smithy/smithy-client\";\nimport { AssumeRoleCommand } from \"./commands/AssumeRoleCommand\";\nimport { AssumeRoleWithWebIdentityCommand, } from \"./commands/AssumeRoleWithWebIdentityCommand\";\nimport { STSClient } from \"./STSClient\";\nconst commands = {\n    AssumeRoleCommand,\n    AssumeRoleWithWebIdentityCommand,\n};\nexport class STS extends STSClient {\n}\ncreateAggregatedClient(commands, STS);\n", "export * from \"./AssumeRoleCommand\";\nexport * from \"./AssumeRoleWithWebIdentityCommand\";\n", "export * from \"./models_0\";\n", "import { setCredentialFeature } from \"@aws-sdk/core/client\";\nimport { AssumeRoleCommand } from \"./commands/AssumeRoleCommand\";\nimport { AssumeRoleWithWebIdentityCommand, } from \"./commands/AssumeRoleWithWebIdentityCommand\";\nconst ASSUME_ROLE_DEFAULT_REGION = \"us-east-1\";\nconst getAccountIdFromAssumedRoleUser = (assumedRoleUser) => {\n    if (typeof assumedRoleUser?.Arn === \"string\") {\n        const arnComponents = assumedRoleUser.Arn.split(\":\");\n        if (arnComponents.length > 4 && arnComponents[4] !== \"\") {\n            return arnComponents[4];\n        }\n    }\n    return undefined;\n};\nconst resolveRegion = async (_region, _parentRegion, credentialProviderLogger) => {\n    const region = typeof _region === \"function\" ? await _region() : _region;\n    const parentRegion = typeof _parentRegion === \"function\" ? await _parentRegion() : _parentRegion;\n    credentialProviderLogger?.debug?.(\"@aws-sdk/client-sts::resolveRegion\", \"accepting first of:\", `${region} (provider)`, `${parentRegion} (parent client)`, `${ASSUME_ROLE_DEFAULT_REGION} (STS default)`);\n    return region ?? parentRegion ?? ASSUME_ROLE_DEFAULT_REGION;\n};\nexport const getDefaultRoleAssumer = (stsOptions, STSClient) => {\n    let stsClient;\n    let closureSourceCreds;\n    return async (sourceCreds, params) => {\n        closureSourceCreds = sourceCreds;\n        if (!stsClient) {\n            const { logger = stsOptions?.parentClientConfig?.logger, region, requestHandler = stsOptions?.parentClientConfig?.requestHandler, credentialProviderLogger, } = stsOptions;\n            const resolvedRegion = await resolveRegion(region, stsOptions?.parentClientConfig?.region, credentialProviderLogger);\n            const isCompatibleRequestHandler = !isH2(requestHandler);\n            stsClient = new STSClient({\n                profile: stsOptions?.parentClientConfig?.profile,\n                credentialDefaultProvider: () => async () => closureSourceCreds,\n                region: resolvedRegion,\n                requestHandler: isCompatibleRequestHandler ? requestHandler : undefined,\n                logger: logger,\n            });\n        }\n        const { Credentials, AssumedRoleUser } = await stsClient.send(new AssumeRoleCommand(params));\n        if (!Credentials || !Credentials.AccessKeyId || !Credentials.SecretAccessKey) {\n            throw new Error(`Invalid response from STS.assumeRole call with role ${params.RoleArn}`);\n        }\n        const accountId = getAccountIdFromAssumedRoleUser(AssumedRoleUser);\n        const credentials = {\n            accessKeyId: Credentials.AccessKeyId,\n            secretAccessKey: Credentials.SecretAccessKey,\n            sessionToken: Credentials.SessionToken,\n            expiration: Credentials.Expiration,\n            ...(Credentials.CredentialScope && { credentialScope: Credentials.CredentialScope }),\n            ...(accountId && { accountId }),\n        };\n        setCredentialFeature(credentials, \"CREDENTIALS_STS_ASSUME_ROLE\", \"i\");\n        return credentials;\n    };\n};\nexport const getDefaultRoleAssumerWithWebIdentity = (stsOptions, STSClient) => {\n    let stsClient;\n    return async (params) => {\n        if (!stsClient) {\n            const { logger = stsOptions?.parentClientConfig?.logger, region, requestHandler = stsOptions?.parentClientConfig?.requestHandler, credentialProviderLogger, } = stsOptions;\n            const resolvedRegion = await resolveRegion(region, stsOptions?.parentClientConfig?.region, credentialProviderLogger);\n            const isCompatibleRequestHandler = !isH2(requestHandler);\n            stsClient = new STSClient({\n                profile: stsOptions?.parentClientConfig?.profile,\n                region: resolvedRegion,\n                requestHandler: isCompatibleRequestHandler ? requestHandler : undefined,\n                logger: logger,\n            });\n        }\n        const { Credentials, AssumedRoleUser } = await stsClient.send(new AssumeRoleWithWebIdentityCommand(params));\n        if (!Credentials || !Credentials.AccessKeyId || !Credentials.SecretAccessKey) {\n            throw new Error(`Invalid response from STS.assumeRoleWithWebIdentity call with role ${params.RoleArn}`);\n        }\n        const accountId = getAccountIdFromAssumedRoleUser(AssumedRoleUser);\n        const credentials = {\n            accessKeyId: Credentials.AccessKeyId,\n            secretAccessKey: Credentials.SecretAccessKey,\n            sessionToken: Credentials.SessionToken,\n            expiration: Credentials.Expiration,\n            ...(Credentials.CredentialScope && { credentialScope: Credentials.CredentialScope }),\n            ...(accountId && { accountId }),\n        };\n        if (accountId) {\n            setCredentialFeature(credentials, \"RESOLVED_ACCOUNT_ID\", \"T\");\n        }\n        setCredentialFeature(credentials, \"CREDENTIALS_STS_ASSUME_ROLE_WEB_ID\", \"k\");\n        return credentials;\n    };\n};\nexport const decorateDefaultCredentialProvider = (provider) => (input) => provider({\n    roleAssumer: getDefaultRoleAssumer(input, input.stsClientCtor),\n    roleAssumerWithWebIdentity: getDefaultRoleAssumerWithWebIdentity(input, input.stsClientCtor),\n    ...input,\n});\nconst isH2 = (requestHandler) => {\n    return requestHandler?.metadata?.handlerProtocol === \"h2\";\n};\n", "import { getDefaultRoleAssumer as StsGetDefaultRoleAssumer, getDefaultRoleAssumerWithWebIdentity as StsGetDefaultRoleAssumerWithWebIdentity, } from \"./defaultStsRoleAssumers\";\nimport { STSClient } from \"./STSClient\";\nconst getCustomizableStsClientCtor = (baseCtor, customizations) => {\n    if (!customizations)\n        return baseCtor;\n    else\n        return class CustomizableSTSClient extends baseCtor {\n            constructor(config) {\n                super(config);\n                for (const customization of customizations) {\n                    this.middlewareStack.use(customization);\n                }\n            }\n        };\n};\nexport const getDefaultRoleAssumer = (stsOptions = {}, stsPlugins) => StsGetDefaultRoleAssumer(stsOptions, getCustomizableStsClientCtor(STSClient, stsPlugins));\nexport const getDefaultRoleAssumerWithWebIdentity = (stsOptions = {}, stsPlugins) => StsGetDefaultRoleAssumerWithWebIdentity(stsOptions, getCustomizableStsClientCtor(STSClient, stsPlugins));\nexport const decorateDefaultCredentialProvider = (provider) => (input) => provider({\n    roleAssumer: getDefaultRoleAssumer(input),\n    roleAssumerWithWebIdentity: getDefaultRoleAssumerWithWebIdentity(input),\n    ...input,\n});\n", "export * from \"./STSClient\";\nexport * from \"./STS\";\nexport * from \"./commands\";\nexport * from \"./models\";\nexport * from \"./defaultRoleAssumers\";\nexport { STSServiceException } from \"./models/STSServiceException\";\n", "'use strict';\n\nvar sharedIniFileLoader = require('@smithy/shared-ini-file-loader');\nvar propertyProvider = require('@smithy/property-provider');\nvar child_process = require('child_process');\nvar util = require('util');\nvar client = require('@aws-sdk/core/client');\n\nconst getValidatedProcessCredentials = (profileName, data, profiles) => {\n    if (data.Version !== 1) {\n        throw Error(`Profile ${profileName} credential_process did not return Version 1.`);\n    }\n    if (data.AccessKeyId === undefined || data.SecretAccessKey === undefined) {\n        throw Error(`Profile ${profileName} credential_process returned invalid credentials.`);\n    }\n    if (data.Expiration) {\n        const currentTime = new Date();\n        const expireTime = new Date(data.Expiration);\n        if (expireTime < currentTime) {\n            throw Error(`Profile ${profileName} credential_process returned expired credentials.`);\n        }\n    }\n    let accountId = data.AccountId;\n    if (!accountId && profiles?.[profileName]?.aws_account_id) {\n        accountId = profiles[profileName].aws_account_id;\n    }\n    const credentials = {\n        accessKeyId: data.AccessKeyId,\n        secretAccessKey: data.SecretAccessKey,\n        ...(data.SessionToken && { sessionToken: data.SessionToken }),\n        ...(data.Expiration && { expiration: new Date(data.Expiration) }),\n        ...(data.CredentialScope && { credentialScope: data.CredentialScope }),\n        ...(accountId && { accountId }),\n    };\n    client.setCredentialFeature(credentials, \"CREDENTIALS_PROCESS\", \"w\");\n    return credentials;\n};\n\nconst resolveProcessCredentials = async (profileName, profiles, logger) => {\n    const profile = profiles[profileName];\n    if (profiles[profileName]) {\n        const credentialProcess = profile[\"credential_process\"];\n        if (credentialProcess !== undefined) {\n            const execPromise = util.promisify(sharedIniFileLoader.externalDataInterceptor?.getTokenRecord?.().exec ?? child_process.exec);\n            try {\n                const { stdout } = await execPromise(credentialProcess);\n                let data;\n                try {\n                    data = JSON.parse(stdout.trim());\n                }\n                catch {\n                    throw Error(`Profile ${profileName} credential_process returned invalid JSON.`);\n                }\n                return getValidatedProcessCredentials(profileName, data, profiles);\n            }\n            catch (error) {\n                throw new propertyProvider.CredentialsProviderError(error.message, { logger });\n            }\n        }\n        else {\n            throw new propertyProvider.CredentialsProviderError(`Profile ${profileName} did not contain credential_process.`, { logger });\n        }\n    }\n    else {\n        throw new propertyProvider.CredentialsProviderError(`Profile ${profileName} could not be found in shared credentials file.`, {\n            logger,\n        });\n    }\n};\n\nconst fromProcess = (init = {}) => async ({ callerClientConfig } = {}) => {\n    init.logger?.debug(\"@aws-sdk/credential-provider-process - fromProcess\");\n    const profiles = await sharedIniFileLoader.parseKnownFiles(init);\n    return resolveProcessCredentials(sharedIniFileLoader.getProfileName({\n        profile: init.profile ?? callerClientConfig?.profile,\n    }), profiles, init.logger);\n};\n\nexports.fromProcess = fromProcess;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromWebToken = void 0;\nconst fromWebToken = (init) => async (awsIdentityProperties) => {\n    init.logger?.debug(\"@aws-sdk/credential-provider-web-identity - fromWebToken\");\n    const { roleArn, roleSessionName, webIdentityToken, providerId, policyArns, policy, durationSeconds } = init;\n    let { roleAssumerWithWebIdentity } = init;\n    if (!roleAssumerWithWebIdentity) {\n        const { getDefaultRoleAssumerWithWebIdentity } = await Promise.resolve().then(() => __importStar(require(\"@aws-sdk/nested-clients/sts\")));\n        roleAssumerWithWebIdentity = getDefaultRoleAssumerWithWebIdentity({\n            ...init.clientConfig,\n            credentialProviderLogger: init.logger,\n            parentClientConfig: {\n                ...awsIdentityProperties?.callerClientConfig,\n                ...init.parentClientConfig,\n            },\n        }, init.clientPlugins);\n    }\n    return roleAssumerWithWebIdentity({\n        RoleArn: roleArn,\n        RoleSessionName: roleSessionName ?? `aws-sdk-js-session-${Date.now()}`,\n        WebIdentityToken: webIdentityToken,\n        ProviderId: providerId,\n        PolicyArns: policyArns,\n        Policy: policy,\n        DurationSeconds: durationSeconds,\n    });\n};\nexports.fromWebToken = fromWebToken;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromTokenFile = void 0;\nconst client_1 = require(\"@aws-sdk/core/client\");\nconst property_provider_1 = require(\"@smithy/property-provider\");\nconst shared_ini_file_loader_1 = require(\"@smithy/shared-ini-file-loader\");\nconst fs_1 = require(\"fs\");\nconst fromWebToken_1 = require(\"./fromWebToken\");\nconst ENV_TOKEN_FILE = \"AWS_WEB_IDENTITY_TOKEN_FILE\";\nconst ENV_ROLE_ARN = \"AWS_ROLE_ARN\";\nconst ENV_ROLE_SESSION_NAME = \"AWS_ROLE_SESSION_NAME\";\nconst fromTokenFile = (init = {}) => async () => {\n    init.logger?.debug(\"@aws-sdk/credential-provider-web-identity - fromTokenFile\");\n    const webIdentityTokenFile = init?.webIdentityTokenFile ?? process.env[ENV_TOKEN_FILE];\n    const roleArn = init?.roleArn ?? process.env[ENV_ROLE_ARN];\n    const roleSessionName = init?.roleSessionName ?? process.env[ENV_ROLE_SESSION_NAME];\n    if (!webIdentityTokenFile || !roleArn) {\n        throw new property_provider_1.CredentialsProviderError(\"Web identity configuration not specified\", {\n            logger: init.logger,\n        });\n    }\n    const credentials = await (0, fromWebToken_1.fromWebToken)({\n        ...init,\n        webIdentityToken: shared_ini_file_loader_1.externalDataInterceptor?.getTokenRecord?.()[webIdentityTokenFile] ??\n            (0, fs_1.readFileSync)(webIdentityTokenFile, { encoding: \"ascii\" }),\n        roleArn,\n        roleSessionName,\n    })();\n    if (webIdentityTokenFile === process.env[ENV_TOKEN_FILE]) {\n        (0, client_1.setCredentialFeature)(credentials, \"CREDENTIALS_ENV_VARS_STS_WEB_ID_TOKEN\", \"h\");\n    }\n    return credentials;\n};\nexports.fromTokenFile = fromTokenFile;\n", "'use strict';\n\nvar fromTokenFile = require('./fromTokenFile');\nvar fromWebToken = require('./fromWebToken');\n\n\n\nObject.keys(fromTokenFile).forEach(function (k) {\n\tif (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () { return fromTokenFile[k]; }\n\t});\n});\nObject.keys(fromWebToken).forEach(function (k) {\n\tif (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () { return fromWebToken[k]; }\n\t});\n});\n", "'use strict';\n\nvar sharedIniFileLoader = require('@smithy/shared-ini-file-loader');\nvar propertyProvider = require('@smithy/property-provider');\nvar client = require('@aws-sdk/core/client');\n\nconst resolveCredentialSource = (credentialSource, profileName, logger) => {\n    const sourceProvidersMap = {\n        EcsContainer: async (options) => {\n            const { fromHttp } = await import('@aws-sdk/credential-provider-http');\n            const { fromContainerMetadata } = await import('@smithy/credential-provider-imds');\n            logger?.debug(\"@aws-sdk/credential-provider-ini - credential_source is EcsContainer\");\n            return async () => propertyProvider.chain(fromHttp(options ?? {}), fromContainerMetadata(options))().then(setNamedProvider);\n        },\n        Ec2InstanceMetadata: async (options) => {\n            logger?.debug(\"@aws-sdk/credential-provider-ini - credential_source is Ec2InstanceMetadata\");\n            const { fromInstanceMetadata } = await import('@smithy/credential-provider-imds');\n            return async () => fromInstanceMetadata(options)().then(setNamedProvider);\n        },\n        Environment: async (options) => {\n            logger?.debug(\"@aws-sdk/credential-provider-ini - credential_source is Environment\");\n            const { fromEnv } = await import('@aws-sdk/credential-provider-env');\n            return async () => fromEnv(options)().then(setNamedProvider);\n        },\n    };\n    if (credentialSource in sourceProvidersMap) {\n        return sourceProvidersMap[credentialSource];\n    }\n    else {\n        throw new propertyProvider.CredentialsProviderError(`Unsupported credential source in profile ${profileName}. Got ${credentialSource}, ` +\n            `expected EcsContainer or Ec2InstanceMetadata or Environment.`, { logger });\n    }\n};\nconst setNamedProvider = (creds) => client.setCredentialFeature(creds, \"CREDENTIALS_PROFILE_NAMED_PROVIDER\", \"p\");\n\nconst isAssumeRoleProfile = (arg, { profile = \"default\", logger } = {}) => {\n    return (Boolean(arg) &&\n        typeof arg === \"object\" &&\n        typeof arg.role_arn === \"string\" &&\n        [\"undefined\", \"string\"].indexOf(typeof arg.role_session_name) > -1 &&\n        [\"undefined\", \"string\"].indexOf(typeof arg.external_id) > -1 &&\n        [\"undefined\", \"string\"].indexOf(typeof arg.mfa_serial) > -1 &&\n        (isAssumeRoleWithSourceProfile(arg, { profile, logger }) || isCredentialSourceProfile(arg, { profile, logger })));\n};\nconst isAssumeRoleWithSourceProfile = (arg, { profile, logger }) => {\n    const withSourceProfile = typeof arg.source_profile === \"string\" && typeof arg.credential_source === \"undefined\";\n    if (withSourceProfile) {\n        logger?.debug?.(`    ${profile} isAssumeRoleWithSourceProfile source_profile=${arg.source_profile}`);\n    }\n    return withSourceProfile;\n};\nconst isCredentialSourceProfile = (arg, { profile, logger }) => {\n    const withProviderProfile = typeof arg.credential_source === \"string\" && typeof arg.source_profile === \"undefined\";\n    if (withProviderProfile) {\n        logger?.debug?.(`    ${profile} isCredentialSourceProfile credential_source=${arg.credential_source}`);\n    }\n    return withProviderProfile;\n};\nconst resolveAssumeRoleCredentials = async (profileName, profiles, options, visitedProfiles = {}) => {\n    options.logger?.debug(\"@aws-sdk/credential-provider-ini - resolveAssumeRoleCredentials (STS)\");\n    const profileData = profiles[profileName];\n    const { source_profile, region } = profileData;\n    if (!options.roleAssumer) {\n        const { getDefaultRoleAssumer } = await import('@aws-sdk/nested-clients/sts');\n        options.roleAssumer = getDefaultRoleAssumer({\n            ...options.clientConfig,\n            credentialProviderLogger: options.logger,\n            parentClientConfig: {\n                ...options?.parentClientConfig,\n                region: region ?? options?.parentClientConfig?.region,\n            },\n        }, options.clientPlugins);\n    }\n    if (source_profile && source_profile in visitedProfiles) {\n        throw new propertyProvider.CredentialsProviderError(`Detected a cycle attempting to resolve credentials for profile` +\n            ` ${sharedIniFileLoader.getProfileName(options)}. Profiles visited: ` +\n            Object.keys(visitedProfiles).join(\", \"), { logger: options.logger });\n    }\n    options.logger?.debug(`@aws-sdk/credential-provider-ini - finding credential resolver using ${source_profile ? `source_profile=[${source_profile}]` : `profile=[${profileName}]`}`);\n    const sourceCredsProvider = source_profile\n        ? resolveProfileData(source_profile, profiles, options, {\n            ...visitedProfiles,\n            [source_profile]: true,\n        }, isCredentialSourceWithoutRoleArn(profiles[source_profile] ?? {}))\n        : (await resolveCredentialSource(profileData.credential_source, profileName, options.logger)(options))();\n    if (isCredentialSourceWithoutRoleArn(profileData)) {\n        return sourceCredsProvider.then((creds) => client.setCredentialFeature(creds, \"CREDENTIALS_PROFILE_SOURCE_PROFILE\", \"o\"));\n    }\n    else {\n        const params = {\n            RoleArn: profileData.role_arn,\n            RoleSessionName: profileData.role_session_name || `aws-sdk-js-${Date.now()}`,\n            ExternalId: profileData.external_id,\n            DurationSeconds: parseInt(profileData.duration_seconds || \"3600\", 10),\n        };\n        const { mfa_serial } = profileData;\n        if (mfa_serial) {\n            if (!options.mfaCodeProvider) {\n                throw new propertyProvider.CredentialsProviderError(`Profile ${profileName} requires multi-factor authentication, but no MFA code callback was provided.`, { logger: options.logger, tryNextLink: false });\n            }\n            params.SerialNumber = mfa_serial;\n            params.TokenCode = await options.mfaCodeProvider(mfa_serial);\n        }\n        const sourceCreds = await sourceCredsProvider;\n        return options.roleAssumer(sourceCreds, params).then((creds) => client.setCredentialFeature(creds, \"CREDENTIALS_PROFILE_SOURCE_PROFILE\", \"o\"));\n    }\n};\nconst isCredentialSourceWithoutRoleArn = (section) => {\n    return !section.role_arn && !!section.credential_source;\n};\n\nconst isProcessProfile = (arg) => Boolean(arg) && typeof arg === \"object\" && typeof arg.credential_process === \"string\";\nconst resolveProcessCredentials = async (options, profile) => import('@aws-sdk/credential-provider-process').then(({ fromProcess }) => fromProcess({\n    ...options,\n    profile,\n})().then((creds) => client.setCredentialFeature(creds, \"CREDENTIALS_PROFILE_PROCESS\", \"v\")));\n\nconst resolveSsoCredentials = async (profile, profileData, options = {}) => {\n    const { fromSSO } = await import('@aws-sdk/credential-provider-sso');\n    return fromSSO({\n        profile,\n        logger: options.logger,\n        parentClientConfig: options.parentClientConfig,\n        clientConfig: options.clientConfig,\n    })().then((creds) => {\n        if (profileData.sso_session) {\n            return client.setCredentialFeature(creds, \"CREDENTIALS_PROFILE_SSO\", \"r\");\n        }\n        else {\n            return client.setCredentialFeature(creds, \"CREDENTIALS_PROFILE_SSO_LEGACY\", \"t\");\n        }\n    });\n};\nconst isSsoProfile = (arg) => arg &&\n    (typeof arg.sso_start_url === \"string\" ||\n        typeof arg.sso_account_id === \"string\" ||\n        typeof arg.sso_session === \"string\" ||\n        typeof arg.sso_region === \"string\" ||\n        typeof arg.sso_role_name === \"string\");\n\nconst isStaticCredsProfile = (arg) => Boolean(arg) &&\n    typeof arg === \"object\" &&\n    typeof arg.aws_access_key_id === \"string\" &&\n    typeof arg.aws_secret_access_key === \"string\" &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.aws_session_token) > -1 &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.aws_account_id) > -1;\nconst resolveStaticCredentials = async (profile, options) => {\n    options?.logger?.debug(\"@aws-sdk/credential-provider-ini - resolveStaticCredentials\");\n    const credentials = {\n        accessKeyId: profile.aws_access_key_id,\n        secretAccessKey: profile.aws_secret_access_key,\n        sessionToken: profile.aws_session_token,\n        ...(profile.aws_credential_scope && { credentialScope: profile.aws_credential_scope }),\n        ...(profile.aws_account_id && { accountId: profile.aws_account_id }),\n    };\n    return client.setCredentialFeature(credentials, \"CREDENTIALS_PROFILE\", \"n\");\n};\n\nconst isWebIdentityProfile = (arg) => Boolean(arg) &&\n    typeof arg === \"object\" &&\n    typeof arg.web_identity_token_file === \"string\" &&\n    typeof arg.role_arn === \"string\" &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.role_session_name) > -1;\nconst resolveWebIdentityCredentials = async (profile, options) => import('@aws-sdk/credential-provider-web-identity').then(({ fromTokenFile }) => fromTokenFile({\n    webIdentityTokenFile: profile.web_identity_token_file,\n    roleArn: profile.role_arn,\n    roleSessionName: profile.role_session_name,\n    roleAssumerWithWebIdentity: options.roleAssumerWithWebIdentity,\n    logger: options.logger,\n    parentClientConfig: options.parentClientConfig,\n})().then((creds) => client.setCredentialFeature(creds, \"CREDENTIALS_PROFILE_STS_WEB_ID_TOKEN\", \"q\")));\n\nconst resolveProfileData = async (profileName, profiles, options, visitedProfiles = {}, isAssumeRoleRecursiveCall = false) => {\n    const data = profiles[profileName];\n    if (Object.keys(visitedProfiles).length > 0 && isStaticCredsProfile(data)) {\n        return resolveStaticCredentials(data, options);\n    }\n    if (isAssumeRoleRecursiveCall || isAssumeRoleProfile(data, { profile: profileName, logger: options.logger })) {\n        return resolveAssumeRoleCredentials(profileName, profiles, options, visitedProfiles);\n    }\n    if (isStaticCredsProfile(data)) {\n        return resolveStaticCredentials(data, options);\n    }\n    if (isWebIdentityProfile(data)) {\n        return resolveWebIdentityCredentials(data, options);\n    }\n    if (isProcessProfile(data)) {\n        return resolveProcessCredentials(options, profileName);\n    }\n    if (isSsoProfile(data)) {\n        return await resolveSsoCredentials(profileName, data, options);\n    }\n    throw new propertyProvider.CredentialsProviderError(`Could not resolve credentials using profile: [${profileName}] in configuration/credentials file(s).`, { logger: options.logger });\n};\n\nconst fromIni = (_init = {}) => async ({ callerClientConfig } = {}) => {\n    const init = {\n        ..._init,\n        parentClientConfig: {\n            ...callerClientConfig,\n            ..._init.parentClientConfig,\n        },\n    };\n    init.logger?.debug(\"@aws-sdk/credential-provider-ini - fromIni\");\n    const profiles = await sharedIniFileLoader.parseKnownFiles(init);\n    return resolveProfileData(sharedIniFileLoader.getProfileName({\n        profile: _init.profile ?? callerClientConfig?.profile,\n    }), profiles, init);\n};\n\nexports.fromIni = fromIni;\n", "'use strict';\n\nvar credentialProviderEnv = require('@aws-sdk/credential-provider-env');\nvar propertyProvider = require('@smithy/property-provider');\nvar sharedIniFileLoader = require('@smithy/shared-ini-file-loader');\n\nconst ENV_IMDS_DISABLED = \"AWS_EC2_METADATA_DISABLED\";\nconst remoteProvider = async (init) => {\n    const { ENV_CMDS_FULL_URI, ENV_CMDS_RELATIVE_URI, fromContainerMetadata, fromInstanceMetadata } = await import('@smithy/credential-provider-imds');\n    if (process.env[ENV_CMDS_RELATIVE_URI] || process.env[ENV_CMDS_FULL_URI]) {\n        init.logger?.debug(\"@aws-sdk/credential-provider-node - remoteProvider::fromHttp/fromContainerMetadata\");\n        const { fromHttp } = await import('@aws-sdk/credential-provider-http');\n        return propertyProvider.chain(fromHttp(init), fromContainerMetadata(init));\n    }\n    if (process.env[ENV_IMDS_DISABLED] && process.env[ENV_IMDS_DISABLED] !== \"false\") {\n        return async () => {\n            throw new propertyProvider.CredentialsProviderError(\"EC2 Instance Metadata Service access disabled\", { logger: init.logger });\n        };\n    }\n    init.logger?.debug(\"@aws-sdk/credential-provider-node - remoteProvider::fromInstanceMetadata\");\n    return fromInstanceMetadata(init);\n};\n\nlet multipleCredentialSourceWarningEmitted = false;\nconst defaultProvider = (init = {}) => propertyProvider.memoize(propertyProvider.chain(async () => {\n    const profile = init.profile ?? process.env[sharedIniFileLoader.ENV_PROFILE];\n    if (profile) {\n        const envStaticCredentialsAreSet = process.env[credentialProviderEnv.ENV_KEY] && process.env[credentialProviderEnv.ENV_SECRET];\n        if (envStaticCredentialsAreSet) {\n            if (!multipleCredentialSourceWarningEmitted) {\n                const warnFn = init.logger?.warn && init.logger?.constructor?.name !== \"NoOpLogger\"\n                    ? init.logger.warn.bind(init.logger)\n                    : console.warn;\n                warnFn(`@aws-sdk/credential-provider-node - defaultProvider::fromEnv WARNING:\n    Multiple credential sources detected: \n    Both AWS_PROFILE and the pair AWS_ACCESS_KEY_ID/AWS_SECRET_ACCESS_KEY static credentials are set.\n    This SDK will proceed with the AWS_PROFILE value.\n    \n    However, a future version may change this behavior to prefer the ENV static credentials.\n    Please ensure that your environment only sets either the AWS_PROFILE or the\n    AWS_ACCESS_KEY_ID/AWS_SECRET_ACCESS_KEY pair.\n`);\n                multipleCredentialSourceWarningEmitted = true;\n            }\n        }\n        throw new propertyProvider.CredentialsProviderError(\"AWS_PROFILE is set, skipping fromEnv provider.\", {\n            logger: init.logger,\n            tryNextLink: true,\n        });\n    }\n    init.logger?.debug(\"@aws-sdk/credential-provider-node - defaultProvider::fromEnv\");\n    return credentialProviderEnv.fromEnv(init)();\n}, async () => {\n    init.logger?.debug(\"@aws-sdk/credential-provider-node - defaultProvider::fromSSO\");\n    const { ssoStartUrl, ssoAccountId, ssoRegion, ssoRoleName, ssoSession } = init;\n    if (!ssoStartUrl && !ssoAccountId && !ssoRegion && !ssoRoleName && !ssoSession) {\n        throw new propertyProvider.CredentialsProviderError(\"Skipping SSO provider in default chain (inputs do not include SSO fields).\", { logger: init.logger });\n    }\n    const { fromSSO } = await import('@aws-sdk/credential-provider-sso');\n    return fromSSO(init)();\n}, async () => {\n    init.logger?.debug(\"@aws-sdk/credential-provider-node - defaultProvider::fromIni\");\n    const { fromIni } = await import('@aws-sdk/credential-provider-ini');\n    return fromIni(init)();\n}, async () => {\n    init.logger?.debug(\"@aws-sdk/credential-provider-node - defaultProvider::fromProcess\");\n    const { fromProcess } = await import('@aws-sdk/credential-provider-process');\n    return fromProcess(init)();\n}, async () => {\n    init.logger?.debug(\"@aws-sdk/credential-provider-node - defaultProvider::fromTokenFile\");\n    const { fromTokenFile } = await import('@aws-sdk/credential-provider-web-identity');\n    return fromTokenFile(init)();\n}, async () => {\n    init.logger?.debug(\"@aws-sdk/credential-provider-node - defaultProvider::remoteProvider\");\n    return (await remoteProvider(init))();\n}, async () => {\n    throw new propertyProvider.CredentialsProviderError(\"Could not load credentials from any providers\", {\n        tryNextLink: false,\n        logger: init.logger,\n    });\n}), credentialsTreatedAsExpired, credentialsWillNeedRefresh);\nconst credentialsWillNeedRefresh = (credentials) => credentials?.expiration !== undefined;\nconst credentialsTreatedAsExpired = (credentials) => credentials?.expiration !== undefined && credentials.expiration.getTime() - Date.now() < 300000;\n\nexports.credentialsTreatedAsExpired = credentialsTreatedAsExpired;\nexports.credentialsWillNeedRefresh = credentialsWillNeedRefresh;\nexports.defaultProvider = defaultProvider;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromBase64 = void 0;\nconst util_buffer_from_1 = require(\"@smithy/util-buffer-from\");\nconst BASE64_REGEX = /^[A-Za-z0-9+/]*={0,2}$/;\nconst fromBase64 = (input) => {\n    if ((input.length * 3) % 4 !== 0) {\n        throw new TypeError(`Incorrect padding on base64 string.`);\n    }\n    if (!BASE64_REGEX.exec(input)) {\n        throw new TypeError(`Invalid base64 string.`);\n    }\n    const buffer = (0, util_buffer_from_1.fromString)(input, \"base64\");\n    return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n};\nexports.fromBase64 = fromBase64;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toBase64 = void 0;\nconst util_buffer_from_1 = require(\"@smithy/util-buffer-from\");\nconst util_utf8_1 = require(\"@smithy/util-utf8\");\nconst toBase64 = (_input) => {\n    let input;\n    if (typeof _input === \"string\") {\n        input = (0, util_utf8_1.fromUtf8)(_input);\n    }\n    else {\n        input = _input;\n    }\n    if (typeof input !== \"object\" || typeof input.byteOffset !== \"number\" || typeof input.byteLength !== \"number\") {\n        throw new Error(\"@smithy/util-base64: toBase64 encoder function only accepts string | Uint8Array.\");\n    }\n    return (0, util_buffer_from_1.fromArrayBuffer)(input.buffer, input.byteOffset, input.byteLength).toString(\"base64\");\n};\nexports.toBase64 = toBase64;\n", "'use strict';\n\nvar fromBase64 = require('./fromBase64');\nvar toBase64 = require('./toBase64');\n\n\n\nObject.keys(fromBase64).forEach(function (k) {\n\tif (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () { return fromBase64[k]; }\n\t});\n});\nObject.keys(toBase64).forEach(function (k) {\n\tif (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () { return toBase64[k]; }\n\t});\n});\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ruleSet = void 0;\nconst s = \"required\", t = \"fn\", u = \"argv\", v = \"ref\";\nconst a = true, b = \"isSet\", c = \"booleanEquals\", d = \"error\", e = \"endpoint\", f = \"tree\", g = \"PartitionResult\", h = { [s]: false, \"type\": \"String\" }, i = { [s]: true, \"default\": false, \"type\": \"Boolean\" }, j = { [v]: \"Endpoint\" }, k = { [t]: c, [u]: [{ [v]: \"UseFIPS\" }, true] }, l = { [t]: c, [u]: [{ [v]: \"UseDualStack\" }, true] }, m = {}, n = { [t]: \"getAttr\", [u]: [{ [v]: g }, \"supportsFIPS\"] }, o = { [t]: c, [u]: [true, { [t]: \"getAttr\", [u]: [{ [v]: g }, \"supportsDualStack\"] }] }, p = [k], q = [l], r = [{ [v]: \"Region\" }];\nconst _data = { version: \"1.0\", parameters: { Region: h, UseDualStack: i, UseFIPS: i, Endpoint: h }, rules: [{ conditions: [{ [t]: b, [u]: [j] }], rules: [{ conditions: p, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", type: d }, { conditions: q, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", type: d }, { endpoint: { url: j, properties: m, headers: m }, type: e }], type: f }, { conditions: [{ [t]: b, [u]: r }], rules: [{ conditions: [{ [t]: \"aws.partition\", [u]: r, assign: g }], rules: [{ conditions: [k, l], rules: [{ conditions: [{ [t]: c, [u]: [a, n] }, o], rules: [{ endpoint: { url: \"https://kms-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: m, headers: m }, type: e }], type: f }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", type: d }], type: f }, { conditions: p, rules: [{ conditions: [{ [t]: c, [u]: [n, a] }], rules: [{ endpoint: { url: \"https://kms-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: m, headers: m }, type: e }], type: f }, { error: \"FIPS is enabled but this partition does not support FIPS\", type: d }], type: f }, { conditions: q, rules: [{ conditions: [o], rules: [{ endpoint: { url: \"https://kms.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: m, headers: m }, type: e }], type: f }, { error: \"DualStack is enabled but this partition does not support DualStack\", type: d }], type: f }, { endpoint: { url: \"https://kms.{Region}.{PartitionResult#dnsSuffix}\", properties: m, headers: m }, type: e }], type: f }], type: f }, { error: \"Invalid Configuration: Missing Region\", type: d }] };\nexports.ruleSet = _data;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultEndpointResolver = void 0;\nconst util_endpoints_1 = require(\"@aws-sdk/util-endpoints\");\nconst util_endpoints_2 = require(\"@smithy/util-endpoints\");\nconst ruleset_1 = require(\"./ruleset\");\nconst cache = new util_endpoints_2.EndpointCache({\n    size: 50,\n    params: [\"Endpoint\", \"Region\", \"UseDualStack\", \"UseFIPS\"],\n});\nconst defaultEndpointResolver = (endpointParams, context = {}) => {\n    return cache.get(endpointParams, () => (0, util_endpoints_2.resolveEndpoint)(ruleset_1.ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    }));\n};\nexports.defaultEndpointResolver = defaultEndpointResolver;\nutil_endpoints_2.customEndpointFunctions.aws = util_endpoints_1.awsEndpointFunctions;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst core_1 = require(\"@aws-sdk/core\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst url_parser_1 = require(\"@smithy/url-parser\");\nconst util_base64_1 = require(\"@smithy/util-base64\");\nconst util_utf8_1 = require(\"@smithy/util-utf8\");\nconst httpAuthSchemeProvider_1 = require(\"./auth/httpAuthSchemeProvider\");\nconst endpointResolver_1 = require(\"./endpoint/endpointResolver\");\nconst getRuntimeConfig = (config) => {\n    return {\n        apiVersion: \"2014-11-01\",\n        base64Decoder: config?.base64Decoder ?? util_base64_1.fromBase64,\n        base64Encoder: config?.base64Encoder ?? util_base64_1.toBase64,\n        disableHostPrefix: config?.disableHostPrefix ?? false,\n        endpointProvider: config?.endpointProvider ?? endpointResolver_1.defaultEndpointResolver,\n        extensions: config?.extensions ?? [],\n        httpAuthSchemeProvider: config?.httpAuthSchemeProvider ?? httpAuthSchemeProvider_1.defaultKMSHttpAuthSchemeProvider,\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"aws.auth#sigv4\"),\n                signer: new core_1.AwsSdkSigV4Signer(),\n            },\n        ],\n        logger: config?.logger ?? new smithy_client_1.NoOpLogger(),\n        serviceId: config?.serviceId ?? \"KMS\",\n        urlParser: config?.urlParser ?? url_parser_1.parseUrl,\n        utf8Decoder: config?.utf8Decoder ?? util_utf8_1.fromUtf8,\n        utf8Encoder: config?.utf8Encoder ?? util_utf8_1.toUtf8,\n    };\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst tslib_1 = require(\"tslib\");\nconst package_json_1 = tslib_1.__importDefault(require(\"../package.json\"));\nconst core_1 = require(\"@aws-sdk/core\");\nconst credential_provider_node_1 = require(\"@aws-sdk/credential-provider-node\");\nconst util_user_agent_node_1 = require(\"@aws-sdk/util-user-agent-node\");\nconst config_resolver_1 = require(\"@smithy/config-resolver\");\nconst hash_node_1 = require(\"@smithy/hash-node\");\nconst middleware_retry_1 = require(\"@smithy/middleware-retry\");\nconst node_config_provider_1 = require(\"@smithy/node-config-provider\");\nconst node_http_handler_1 = require(\"@smithy/node-http-handler\");\nconst util_body_length_node_1 = require(\"@smithy/util-body-length-node\");\nconst util_retry_1 = require(\"@smithy/util-retry\");\nconst runtimeConfig_shared_1 = require(\"./runtimeConfig.shared\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst util_defaults_mode_node_1 = require(\"@smithy/util-defaults-mode-node\");\nconst smithy_client_2 = require(\"@smithy/smithy-client\");\nconst getRuntimeConfig = (config) => {\n    (0, smithy_client_2.emitWarningIfUnsupportedVersion)(process.version);\n    const defaultsMode = (0, util_defaults_mode_node_1.resolveDefaultsModeConfig)(config);\n    const defaultConfigProvider = () => defaultsMode().then(smithy_client_1.loadConfigsForDefaultMode);\n    const clientSharedValues = (0, runtimeConfig_shared_1.getRuntimeConfig)(config);\n    (0, core_1.emitWarningIfUnsupportedVersion)(process.version);\n    const loaderConfig = {\n        profile: config?.profile,\n        logger: clientSharedValues.logger,\n    };\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        authSchemePreference: config?.authSchemePreference ?? (0, node_config_provider_1.loadConfig)(core_1.NODE_AUTH_SCHEME_PREFERENCE_OPTIONS, loaderConfig),\n        bodyLengthChecker: config?.bodyLengthChecker ?? util_body_length_node_1.calculateBodyLength,\n        credentialDefaultProvider: config?.credentialDefaultProvider ?? credential_provider_node_1.defaultProvider,\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            (0, util_user_agent_node_1.createDefaultUserAgentProvider)({ serviceId: clientSharedValues.serviceId, clientVersion: package_json_1.default.version }),\n        maxAttempts: config?.maxAttempts ?? (0, node_config_provider_1.loadConfig)(middleware_retry_1.NODE_MAX_ATTEMPT_CONFIG_OPTIONS, config),\n        region: config?.region ??\n            (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_REGION_CONFIG_OPTIONS, { ...config_resolver_1.NODE_REGION_CONFIG_FILE_OPTIONS, ...loaderConfig }),\n        requestHandler: node_http_handler_1.NodeHttpHandler.create(config?.requestHandler ?? defaultConfigProvider),\n        retryMode: config?.retryMode ??\n            (0, node_config_provider_1.loadConfig)({\n                ...middleware_retry_1.NODE_RETRY_MODE_CONFIG_OPTIONS,\n                default: async () => (await defaultConfigProvider()).retryMode || util_retry_1.DEFAULT_RETRY_MODE,\n            }, config),\n        sha256: config?.sha256 ?? hash_node_1.Hash.bind(null, \"sha256\"),\n        streamCollector: config?.streamCollector ?? node_http_handler_1.streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, loaderConfig),\n        useFipsEndpoint: config?.useFipsEndpoint ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, loaderConfig),\n        userAgentAppId: config?.userAgentAppId ?? (0, node_config_provider_1.loadConfig)(util_user_agent_node_1.NODE_APP_ID_CONFIG_OPTIONS, loaderConfig),\n    };\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n", "'use strict';\n\nvar middlewareHostHeader = require('@aws-sdk/middleware-host-header');\nvar middlewareLogger = require('@aws-sdk/middleware-logger');\nvar middlewareRecursionDetection = require('@aws-sdk/middleware-recursion-detection');\nvar middlewareUserAgent = require('@aws-sdk/middleware-user-agent');\nvar configResolver = require('@smithy/config-resolver');\nvar core = require('@smithy/core');\nvar middlewareContentLength = require('@smithy/middleware-content-length');\nvar middlewareEndpoint = require('@smithy/middleware-endpoint');\nvar middlewareRetry = require('@smithy/middleware-retry');\nvar smithyClient = require('@smithy/smithy-client');\nvar httpAuthSchemeProvider = require('./auth/httpAuthSchemeProvider');\nvar runtimeConfig = require('./runtimeConfig');\nvar regionConfigResolver = require('@aws-sdk/region-config-resolver');\nvar protocolHttp = require('@smithy/protocol-http');\nvar middlewareSerde = require('@smithy/middleware-serde');\nvar core$1 = require('@aws-sdk/core');\n\nconst resolveClientEndpointParameters = (options) => {\n    return Object.assign(options, {\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        defaultSigningName: \"kms\",\n    });\n};\nconst commonParams = {\n    UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n    Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n    Region: { type: \"builtInParams\", name: \"region\" },\n    UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n};\n\nconst getHttpAuthExtensionConfiguration = (runtimeConfig) => {\n    const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;\n    let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;\n    let _credentials = runtimeConfig.credentials;\n    return {\n        setHttpAuthScheme(httpAuthScheme) {\n            const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);\n            if (index === -1) {\n                _httpAuthSchemes.push(httpAuthScheme);\n            }\n            else {\n                _httpAuthSchemes.splice(index, 1, httpAuthScheme);\n            }\n        },\n        httpAuthSchemes() {\n            return _httpAuthSchemes;\n        },\n        setHttpAuthSchemeProvider(httpAuthSchemeProvider) {\n            _httpAuthSchemeProvider = httpAuthSchemeProvider;\n        },\n        httpAuthSchemeProvider() {\n            return _httpAuthSchemeProvider;\n        },\n        setCredentials(credentials) {\n            _credentials = credentials;\n        },\n        credentials() {\n            return _credentials;\n        },\n    };\n};\nconst resolveHttpAuthRuntimeConfig = (config) => {\n    return {\n        httpAuthSchemes: config.httpAuthSchemes(),\n        httpAuthSchemeProvider: config.httpAuthSchemeProvider(),\n        credentials: config.credentials(),\n    };\n};\n\nconst resolveRuntimeExtensions = (runtimeConfig, extensions) => {\n    const extensionConfiguration = Object.assign(regionConfigResolver.getAwsRegionExtensionConfiguration(runtimeConfig), smithyClient.getDefaultExtensionConfiguration(runtimeConfig), protocolHttp.getHttpHandlerExtensionConfiguration(runtimeConfig), getHttpAuthExtensionConfiguration(runtimeConfig));\n    extensions.forEach((extension) => extension.configure(extensionConfiguration));\n    return Object.assign(runtimeConfig, regionConfigResolver.resolveAwsRegionExtensionConfiguration(extensionConfiguration), smithyClient.resolveDefaultRuntimeConfig(extensionConfiguration), protocolHttp.resolveHttpHandlerRuntimeConfig(extensionConfiguration), resolveHttpAuthRuntimeConfig(extensionConfiguration));\n};\n\nclass KMSClient extends smithyClient.Client {\n    config;\n    constructor(...[configuration]) {\n        const _config_0 = runtimeConfig.getRuntimeConfig(configuration || {});\n        super(_config_0);\n        this.initConfig = _config_0;\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = middlewareUserAgent.resolveUserAgentConfig(_config_1);\n        const _config_3 = middlewareRetry.resolveRetryConfig(_config_2);\n        const _config_4 = configResolver.resolveRegionConfig(_config_3);\n        const _config_5 = middlewareHostHeader.resolveHostHeaderConfig(_config_4);\n        const _config_6 = middlewareEndpoint.resolveEndpointConfig(_config_5);\n        const _config_7 = httpAuthSchemeProvider.resolveHttpAuthSchemeConfig(_config_6);\n        const _config_8 = resolveRuntimeExtensions(_config_7, configuration?.extensions || []);\n        this.config = _config_8;\n        this.middlewareStack.use(middlewareUserAgent.getUserAgentPlugin(this.config));\n        this.middlewareStack.use(middlewareRetry.getRetryPlugin(this.config));\n        this.middlewareStack.use(middlewareContentLength.getContentLengthPlugin(this.config));\n        this.middlewareStack.use(middlewareHostHeader.getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(middlewareLogger.getLoggerPlugin(this.config));\n        this.middlewareStack.use(middlewareRecursionDetection.getRecursionDetectionPlugin(this.config));\n        this.middlewareStack.use(core.getHttpAuthSchemeEndpointRuleSetPlugin(this.config, {\n            httpAuthSchemeParametersProvider: httpAuthSchemeProvider.defaultKMSHttpAuthSchemeParametersProvider,\n            identityProviderConfigProvider: async (config) => new core.DefaultIdentityProviderConfig({\n                \"aws.auth#sigv4\": config.credentials,\n            }),\n        }));\n        this.middlewareStack.use(core.getHttpSigningPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\n\nclass KMSServiceException extends smithyClient.ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, KMSServiceException.prototype);\n    }\n}\n\nconst AlgorithmSpec = {\n    RSAES_OAEP_SHA_1: \"RSAES_OAEP_SHA_1\",\n    RSAES_OAEP_SHA_256: \"RSAES_OAEP_SHA_256\",\n    RSAES_PKCS1_V1_5: \"RSAES_PKCS1_V1_5\",\n    RSA_AES_KEY_WRAP_SHA_1: \"RSA_AES_KEY_WRAP_SHA_1\",\n    RSA_AES_KEY_WRAP_SHA_256: \"RSA_AES_KEY_WRAP_SHA_256\",\n    SM2PKE: \"SM2PKE\",\n};\nclass AlreadyExistsException extends KMSServiceException {\n    name = \"AlreadyExistsException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"AlreadyExistsException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, AlreadyExistsException.prototype);\n    }\n}\nclass DependencyTimeoutException extends KMSServiceException {\n    name = \"DependencyTimeoutException\";\n    $fault = \"server\";\n    constructor(opts) {\n        super({\n            name: \"DependencyTimeoutException\",\n            $fault: \"server\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, DependencyTimeoutException.prototype);\n    }\n}\nclass InvalidArnException extends KMSServiceException {\n    name = \"InvalidArnException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"InvalidArnException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InvalidArnException.prototype);\n    }\n}\nclass KMSInternalException extends KMSServiceException {\n    name = \"KMSInternalException\";\n    $fault = \"server\";\n    constructor(opts) {\n        super({\n            name: \"KMSInternalException\",\n            $fault: \"server\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, KMSInternalException.prototype);\n    }\n}\nclass KMSInvalidStateException extends KMSServiceException {\n    name = \"KMSInvalidStateException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"KMSInvalidStateException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, KMSInvalidStateException.prototype);\n    }\n}\nclass NotFoundException extends KMSServiceException {\n    name = \"NotFoundException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"NotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, NotFoundException.prototype);\n    }\n}\nclass CloudHsmClusterInUseException extends KMSServiceException {\n    name = \"CloudHsmClusterInUseException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"CloudHsmClusterInUseException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, CloudHsmClusterInUseException.prototype);\n    }\n}\nclass CloudHsmClusterInvalidConfigurationException extends KMSServiceException {\n    name = \"CloudHsmClusterInvalidConfigurationException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"CloudHsmClusterInvalidConfigurationException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, CloudHsmClusterInvalidConfigurationException.prototype);\n    }\n}\nclass CloudHsmClusterNotActiveException extends KMSServiceException {\n    name = \"CloudHsmClusterNotActiveException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"CloudHsmClusterNotActiveException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, CloudHsmClusterNotActiveException.prototype);\n    }\n}\nclass CloudHsmClusterNotFoundException extends KMSServiceException {\n    name = \"CloudHsmClusterNotFoundException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"CloudHsmClusterNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, CloudHsmClusterNotFoundException.prototype);\n    }\n}\nclass CloudHsmClusterNotRelatedException extends KMSServiceException {\n    name = \"CloudHsmClusterNotRelatedException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"CloudHsmClusterNotRelatedException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, CloudHsmClusterNotRelatedException.prototype);\n    }\n}\nclass ConflictException extends KMSServiceException {\n    name = \"ConflictException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"ConflictException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, ConflictException.prototype);\n    }\n}\nclass CustomKeyStoreInvalidStateException extends KMSServiceException {\n    name = \"CustomKeyStoreInvalidStateException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"CustomKeyStoreInvalidStateException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, CustomKeyStoreInvalidStateException.prototype);\n    }\n}\nclass CustomKeyStoreNotFoundException extends KMSServiceException {\n    name = \"CustomKeyStoreNotFoundException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"CustomKeyStoreNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, CustomKeyStoreNotFoundException.prototype);\n    }\n}\nconst ConnectionErrorCodeType = {\n    CLUSTER_NOT_FOUND: \"CLUSTER_NOT_FOUND\",\n    INSUFFICIENT_CLOUDHSM_HSMS: \"INSUFFICIENT_CLOUDHSM_HSMS\",\n    INSUFFICIENT_FREE_ADDRESSES_IN_SUBNET: \"INSUFFICIENT_FREE_ADDRESSES_IN_SUBNET\",\n    INTERNAL_ERROR: \"INTERNAL_ERROR\",\n    INVALID_CREDENTIALS: \"INVALID_CREDENTIALS\",\n    NETWORK_ERRORS: \"NETWORK_ERRORS\",\n    SUBNET_NOT_FOUND: \"SUBNET_NOT_FOUND\",\n    USER_LOCKED_OUT: \"USER_LOCKED_OUT\",\n    USER_LOGGED_IN: \"USER_LOGGED_IN\",\n    USER_NOT_FOUND: \"USER_NOT_FOUND\",\n    XKS_PROXY_ACCESS_DENIED: \"XKS_PROXY_ACCESS_DENIED\",\n    XKS_PROXY_INVALID_CONFIGURATION: \"XKS_PROXY_INVALID_CONFIGURATION\",\n    XKS_PROXY_INVALID_RESPONSE: \"XKS_PROXY_INVALID_RESPONSE\",\n    XKS_PROXY_INVALID_TLS_CONFIGURATION: \"XKS_PROXY_INVALID_TLS_CONFIGURATION\",\n    XKS_PROXY_NOT_REACHABLE: \"XKS_PROXY_NOT_REACHABLE\",\n    XKS_PROXY_TIMED_OUT: \"XKS_PROXY_TIMED_OUT\",\n    XKS_VPC_ENDPOINT_SERVICE_INVALID_CONFIGURATION: \"XKS_VPC_ENDPOINT_SERVICE_INVALID_CONFIGURATION\",\n    XKS_VPC_ENDPOINT_SERVICE_NOT_FOUND: \"XKS_VPC_ENDPOINT_SERVICE_NOT_FOUND\",\n};\nconst ConnectionStateType = {\n    CONNECTED: \"CONNECTED\",\n    CONNECTING: \"CONNECTING\",\n    DISCONNECTED: \"DISCONNECTED\",\n    DISCONNECTING: \"DISCONNECTING\",\n    FAILED: \"FAILED\",\n};\nclass InvalidAliasNameException extends KMSServiceException {\n    name = \"InvalidAliasNameException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"InvalidAliasNameException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InvalidAliasNameException.prototype);\n    }\n}\nclass LimitExceededException extends KMSServiceException {\n    name = \"LimitExceededException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"LimitExceededException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, LimitExceededException.prototype);\n    }\n}\nconst CustomKeyStoreType = {\n    AWS_CLOUDHSM: \"AWS_CLOUDHSM\",\n    EXTERNAL_KEY_STORE: \"EXTERNAL_KEY_STORE\",\n};\nconst XksProxyConnectivityType = {\n    PUBLIC_ENDPOINT: \"PUBLIC_ENDPOINT\",\n    VPC_ENDPOINT_SERVICE: \"VPC_ENDPOINT_SERVICE\",\n};\nclass CustomKeyStoreNameInUseException extends KMSServiceException {\n    name = \"CustomKeyStoreNameInUseException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"CustomKeyStoreNameInUseException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, CustomKeyStoreNameInUseException.prototype);\n    }\n}\nclass IncorrectTrustAnchorException extends KMSServiceException {\n    name = \"IncorrectTrustAnchorException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"IncorrectTrustAnchorException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, IncorrectTrustAnchorException.prototype);\n    }\n}\nclass XksProxyIncorrectAuthenticationCredentialException extends KMSServiceException {\n    name = \"XksProxyIncorrectAuthenticationCredentialException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"XksProxyIncorrectAuthenticationCredentialException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, XksProxyIncorrectAuthenticationCredentialException.prototype);\n    }\n}\nclass XksProxyInvalidConfigurationException extends KMSServiceException {\n    name = \"XksProxyInvalidConfigurationException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"XksProxyInvalidConfigurationException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, XksProxyInvalidConfigurationException.prototype);\n    }\n}\nclass XksProxyInvalidResponseException extends KMSServiceException {\n    name = \"XksProxyInvalidResponseException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"XksProxyInvalidResponseException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, XksProxyInvalidResponseException.prototype);\n    }\n}\nclass XksProxyUriEndpointInUseException extends KMSServiceException {\n    name = \"XksProxyUriEndpointInUseException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"XksProxyUriEndpointInUseException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, XksProxyUriEndpointInUseException.prototype);\n    }\n}\nclass XksProxyUriInUseException extends KMSServiceException {\n    name = \"XksProxyUriInUseException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"XksProxyUriInUseException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, XksProxyUriInUseException.prototype);\n    }\n}\nclass XksProxyUriUnreachableException extends KMSServiceException {\n    name = \"XksProxyUriUnreachableException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"XksProxyUriUnreachableException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, XksProxyUriUnreachableException.prototype);\n    }\n}\nclass XksProxyVpcEndpointServiceInUseException extends KMSServiceException {\n    name = \"XksProxyVpcEndpointServiceInUseException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"XksProxyVpcEndpointServiceInUseException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, XksProxyVpcEndpointServiceInUseException.prototype);\n    }\n}\nclass XksProxyVpcEndpointServiceInvalidConfigurationException extends KMSServiceException {\n    name = \"XksProxyVpcEndpointServiceInvalidConfigurationException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"XksProxyVpcEndpointServiceInvalidConfigurationException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, XksProxyVpcEndpointServiceInvalidConfigurationException.prototype);\n    }\n}\nclass XksProxyVpcEndpointServiceNotFoundException extends KMSServiceException {\n    name = \"XksProxyVpcEndpointServiceNotFoundException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"XksProxyVpcEndpointServiceNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, XksProxyVpcEndpointServiceNotFoundException.prototype);\n    }\n}\nconst GrantOperation = {\n    CreateGrant: \"CreateGrant\",\n    Decrypt: \"Decrypt\",\n    DeriveSharedSecret: \"DeriveSharedSecret\",\n    DescribeKey: \"DescribeKey\",\n    Encrypt: \"Encrypt\",\n    GenerateDataKey: \"GenerateDataKey\",\n    GenerateDataKeyPair: \"GenerateDataKeyPair\",\n    GenerateDataKeyPairWithoutPlaintext: \"GenerateDataKeyPairWithoutPlaintext\",\n    GenerateDataKeyWithoutPlaintext: \"GenerateDataKeyWithoutPlaintext\",\n    GenerateMac: \"GenerateMac\",\n    GetPublicKey: \"GetPublicKey\",\n    ReEncryptFrom: \"ReEncryptFrom\",\n    ReEncryptTo: \"ReEncryptTo\",\n    RetireGrant: \"RetireGrant\",\n    Sign: \"Sign\",\n    Verify: \"Verify\",\n    VerifyMac: \"VerifyMac\",\n};\nclass DisabledException extends KMSServiceException {\n    name = \"DisabledException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"DisabledException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, DisabledException.prototype);\n    }\n}\nclass DryRunOperationException extends KMSServiceException {\n    name = \"DryRunOperationException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"DryRunOperationException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, DryRunOperationException.prototype);\n    }\n}\nclass InvalidGrantTokenException extends KMSServiceException {\n    name = \"InvalidGrantTokenException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"InvalidGrantTokenException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InvalidGrantTokenException.prototype);\n    }\n}\nconst CustomerMasterKeySpec = {\n    ECC_NIST_P256: \"ECC_NIST_P256\",\n    ECC_NIST_P384: \"ECC_NIST_P384\",\n    ECC_NIST_P521: \"ECC_NIST_P521\",\n    ECC_SECG_P256K1: \"ECC_SECG_P256K1\",\n    HMAC_224: \"HMAC_224\",\n    HMAC_256: \"HMAC_256\",\n    HMAC_384: \"HMAC_384\",\n    HMAC_512: \"HMAC_512\",\n    RSA_2048: \"RSA_2048\",\n    RSA_3072: \"RSA_3072\",\n    RSA_4096: \"RSA_4096\",\n    SM2: \"SM2\",\n    SYMMETRIC_DEFAULT: \"SYMMETRIC_DEFAULT\",\n};\nconst KeySpec = {\n    ECC_NIST_P256: \"ECC_NIST_P256\",\n    ECC_NIST_P384: \"ECC_NIST_P384\",\n    ECC_NIST_P521: \"ECC_NIST_P521\",\n    ECC_SECG_P256K1: \"ECC_SECG_P256K1\",\n    HMAC_224: \"HMAC_224\",\n    HMAC_256: \"HMAC_256\",\n    HMAC_384: \"HMAC_384\",\n    HMAC_512: \"HMAC_512\",\n    ML_DSA_44: \"ML_DSA_44\",\n    ML_DSA_65: \"ML_DSA_65\",\n    ML_DSA_87: \"ML_DSA_87\",\n    RSA_2048: \"RSA_2048\",\n    RSA_3072: \"RSA_3072\",\n    RSA_4096: \"RSA_4096\",\n    SM2: \"SM2\",\n    SYMMETRIC_DEFAULT: \"SYMMETRIC_DEFAULT\",\n};\nconst KeyUsageType = {\n    ENCRYPT_DECRYPT: \"ENCRYPT_DECRYPT\",\n    GENERATE_VERIFY_MAC: \"GENERATE_VERIFY_MAC\",\n    KEY_AGREEMENT: \"KEY_AGREEMENT\",\n    SIGN_VERIFY: \"SIGN_VERIFY\",\n};\nconst OriginType = {\n    AWS_CLOUDHSM: \"AWS_CLOUDHSM\",\n    AWS_KMS: \"AWS_KMS\",\n    EXTERNAL: \"EXTERNAL\",\n    EXTERNAL_KEY_STORE: \"EXTERNAL_KEY_STORE\",\n};\nconst EncryptionAlgorithmSpec = {\n    RSAES_OAEP_SHA_1: \"RSAES_OAEP_SHA_1\",\n    RSAES_OAEP_SHA_256: \"RSAES_OAEP_SHA_256\",\n    SM2PKE: \"SM2PKE\",\n    SYMMETRIC_DEFAULT: \"SYMMETRIC_DEFAULT\",\n};\nconst ExpirationModelType = {\n    KEY_MATERIAL_DOES_NOT_EXPIRE: \"KEY_MATERIAL_DOES_NOT_EXPIRE\",\n    KEY_MATERIAL_EXPIRES: \"KEY_MATERIAL_EXPIRES\",\n};\nconst KeyAgreementAlgorithmSpec = {\n    ECDH: \"ECDH\",\n};\nconst KeyManagerType = {\n    AWS: \"AWS\",\n    CUSTOMER: \"CUSTOMER\",\n};\nconst KeyState = {\n    Creating: \"Creating\",\n    Disabled: \"Disabled\",\n    Enabled: \"Enabled\",\n    PendingDeletion: \"PendingDeletion\",\n    PendingImport: \"PendingImport\",\n    PendingReplicaDeletion: \"PendingReplicaDeletion\",\n    Unavailable: \"Unavailable\",\n    Updating: \"Updating\",\n};\nconst MacAlgorithmSpec = {\n    HMAC_SHA_224: \"HMAC_SHA_224\",\n    HMAC_SHA_256: \"HMAC_SHA_256\",\n    HMAC_SHA_384: \"HMAC_SHA_384\",\n    HMAC_SHA_512: \"HMAC_SHA_512\",\n};\nconst MultiRegionKeyType = {\n    PRIMARY: \"PRIMARY\",\n    REPLICA: \"REPLICA\",\n};\nconst SigningAlgorithmSpec = {\n    ECDSA_SHA_256: \"ECDSA_SHA_256\",\n    ECDSA_SHA_384: \"ECDSA_SHA_384\",\n    ECDSA_SHA_512: \"ECDSA_SHA_512\",\n    ML_DSA_SHAKE_256: \"ML_DSA_SHAKE_256\",\n    RSASSA_PKCS1_V1_5_SHA_256: \"RSASSA_PKCS1_V1_5_SHA_256\",\n    RSASSA_PKCS1_V1_5_SHA_384: \"RSASSA_PKCS1_V1_5_SHA_384\",\n    RSASSA_PKCS1_V1_5_SHA_512: \"RSASSA_PKCS1_V1_5_SHA_512\",\n    RSASSA_PSS_SHA_256: \"RSASSA_PSS_SHA_256\",\n    RSASSA_PSS_SHA_384: \"RSASSA_PSS_SHA_384\",\n    RSASSA_PSS_SHA_512: \"RSASSA_PSS_SHA_512\",\n    SM2DSA: \"SM2DSA\",\n};\nclass MalformedPolicyDocumentException extends KMSServiceException {\n    name = \"MalformedPolicyDocumentException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"MalformedPolicyDocumentException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, MalformedPolicyDocumentException.prototype);\n    }\n}\nclass TagException extends KMSServiceException {\n    name = \"TagException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"TagException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, TagException.prototype);\n    }\n}\nclass UnsupportedOperationException extends KMSServiceException {\n    name = \"UnsupportedOperationException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"UnsupportedOperationException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, UnsupportedOperationException.prototype);\n    }\n}\nclass XksKeyAlreadyInUseException extends KMSServiceException {\n    name = \"XksKeyAlreadyInUseException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"XksKeyAlreadyInUseException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, XksKeyAlreadyInUseException.prototype);\n    }\n}\nclass XksKeyInvalidConfigurationException extends KMSServiceException {\n    name = \"XksKeyInvalidConfigurationException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"XksKeyInvalidConfigurationException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, XksKeyInvalidConfigurationException.prototype);\n    }\n}\nclass XksKeyNotFoundException extends KMSServiceException {\n    name = \"XksKeyNotFoundException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"XksKeyNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, XksKeyNotFoundException.prototype);\n    }\n}\nclass CustomKeyStoreHasCMKsException extends KMSServiceException {\n    name = \"CustomKeyStoreHasCMKsException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"CustomKeyStoreHasCMKsException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, CustomKeyStoreHasCMKsException.prototype);\n    }\n}\nconst DataKeyPairSpec = {\n    ECC_NIST_P256: \"ECC_NIST_P256\",\n    ECC_NIST_P384: \"ECC_NIST_P384\",\n    ECC_NIST_P521: \"ECC_NIST_P521\",\n    ECC_SECG_P256K1: \"ECC_SECG_P256K1\",\n    RSA_2048: \"RSA_2048\",\n    RSA_3072: \"RSA_3072\",\n    RSA_4096: \"RSA_4096\",\n    SM2: \"SM2\",\n};\nconst DataKeySpec = {\n    AES_128: \"AES_128\",\n    AES_256: \"AES_256\",\n};\nconst KeyEncryptionMechanism = {\n    RSAES_OAEP_SHA_256: \"RSAES_OAEP_SHA_256\",\n};\nclass IncorrectKeyException extends KMSServiceException {\n    name = \"IncorrectKeyException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"IncorrectKeyException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, IncorrectKeyException.prototype);\n    }\n}\nclass InvalidCiphertextException extends KMSServiceException {\n    name = \"InvalidCiphertextException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"InvalidCiphertextException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InvalidCiphertextException.prototype);\n    }\n}\nclass InvalidKeyUsageException extends KMSServiceException {\n    name = \"InvalidKeyUsageException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"InvalidKeyUsageException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InvalidKeyUsageException.prototype);\n    }\n}\nclass KeyUnavailableException extends KMSServiceException {\n    name = \"KeyUnavailableException\";\n    $fault = \"server\";\n    constructor(opts) {\n        super({\n            name: \"KeyUnavailableException\",\n            $fault: \"server\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, KeyUnavailableException.prototype);\n    }\n}\nclass InvalidMarkerException extends KMSServiceException {\n    name = \"InvalidMarkerException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"InvalidMarkerException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InvalidMarkerException.prototype);\n    }\n}\nclass ExpiredImportTokenException extends KMSServiceException {\n    name = \"ExpiredImportTokenException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"ExpiredImportTokenException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, ExpiredImportTokenException.prototype);\n    }\n}\nconst WrappingKeySpec = {\n    RSA_2048: \"RSA_2048\",\n    RSA_3072: \"RSA_3072\",\n    RSA_4096: \"RSA_4096\",\n    SM2: \"SM2\",\n};\nconst ImportType = {\n    EXISTING_KEY_MATERIAL: \"EXISTING_KEY_MATERIAL\",\n    NEW_KEY_MATERIAL: \"NEW_KEY_MATERIAL\",\n};\nclass IncorrectKeyMaterialException extends KMSServiceException {\n    name = \"IncorrectKeyMaterialException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"IncorrectKeyMaterialException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, IncorrectKeyMaterialException.prototype);\n    }\n}\nclass InvalidImportTokenException extends KMSServiceException {\n    name = \"InvalidImportTokenException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"InvalidImportTokenException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InvalidImportTokenException.prototype);\n    }\n}\nconst ImportState = {\n    IMPORTED: \"IMPORTED\",\n    PENDING_IMPORT: \"PENDING_IMPORT\",\n};\nconst IncludeKeyMaterial = {\n    ALL_KEY_MATERIAL: \"ALL_KEY_MATERIAL\",\n    ROTATIONS_ONLY: \"ROTATIONS_ONLY\",\n};\nclass InvalidGrantIdException extends KMSServiceException {\n    name = \"InvalidGrantIdException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"InvalidGrantIdException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InvalidGrantIdException.prototype);\n    }\n}\nconst KeyMaterialState = {\n    CURRENT: \"CURRENT\",\n    NON_CURRENT: \"NON_CURRENT\",\n    PENDING_ROTATION: \"PENDING_ROTATION\",\n};\nclass KMSInvalidMacException extends KMSServiceException {\n    name = \"KMSInvalidMacException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"KMSInvalidMacException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, KMSInvalidMacException.prototype);\n    }\n}\nclass KMSInvalidSignatureException extends KMSServiceException {\n    name = \"KMSInvalidSignatureException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"KMSInvalidSignatureException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, KMSInvalidSignatureException.prototype);\n    }\n}\nconst RotationType = {\n    AUTOMATIC: \"AUTOMATIC\",\n    ON_DEMAND: \"ON_DEMAND\",\n};\nconst MessageType = {\n    DIGEST: \"DIGEST\",\n    EXTERNAL_MU: \"EXTERNAL_MU\",\n    RAW: \"RAW\",\n};\nconst XksProxyAuthenticationCredentialTypeFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.AccessKeyId && { AccessKeyId: smithyClient.SENSITIVE_STRING }),\n    ...(obj.RawSecretAccessKey && { RawSecretAccessKey: smithyClient.SENSITIVE_STRING }),\n});\nconst CreateCustomKeyStoreRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.KeyStorePassword && { KeyStorePassword: smithyClient.SENSITIVE_STRING }),\n    ...(obj.XksProxyAuthenticationCredential && {\n        XksProxyAuthenticationCredential: XksProxyAuthenticationCredentialTypeFilterSensitiveLog(obj.XksProxyAuthenticationCredential),\n    }),\n});\nconst XksProxyConfigurationTypeFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.AccessKeyId && { AccessKeyId: smithyClient.SENSITIVE_STRING }),\n});\nconst CustomKeyStoresListEntryFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.XksProxyConfiguration && {\n        XksProxyConfiguration: XksProxyConfigurationTypeFilterSensitiveLog(obj.XksProxyConfiguration),\n    }),\n});\nconst DecryptResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Plaintext && { Plaintext: smithyClient.SENSITIVE_STRING }),\n});\nconst DeriveSharedSecretResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SharedSecret && { SharedSecret: smithyClient.SENSITIVE_STRING }),\n});\nconst DescribeCustomKeyStoresResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.CustomKeyStores && {\n        CustomKeyStores: obj.CustomKeyStores.map((item) => CustomKeyStoresListEntryFilterSensitiveLog(item)),\n    }),\n});\nconst EncryptRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Plaintext && { Plaintext: smithyClient.SENSITIVE_STRING }),\n});\nconst GenerateDataKeyResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Plaintext && { Plaintext: smithyClient.SENSITIVE_STRING }),\n});\nconst GenerateDataKeyPairResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.PrivateKeyPlaintext && { PrivateKeyPlaintext: smithyClient.SENSITIVE_STRING }),\n});\nconst GenerateMacRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Message && { Message: smithyClient.SENSITIVE_STRING }),\n});\nconst GenerateRandomResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Plaintext && { Plaintext: smithyClient.SENSITIVE_STRING }),\n});\nconst GetParametersForImportResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.PublicKey && { PublicKey: smithyClient.SENSITIVE_STRING }),\n});\nconst SignRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Message && { Message: smithyClient.SENSITIVE_STRING }),\n});\nconst UpdateCustomKeyStoreRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.KeyStorePassword && { KeyStorePassword: smithyClient.SENSITIVE_STRING }),\n    ...(obj.XksProxyAuthenticationCredential && {\n        XksProxyAuthenticationCredential: XksProxyAuthenticationCredentialTypeFilterSensitiveLog(obj.XksProxyAuthenticationCredential),\n    }),\n});\nconst VerifyRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Message && { Message: smithyClient.SENSITIVE_STRING }),\n});\nconst VerifyMacRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Message && { Message: smithyClient.SENSITIVE_STRING }),\n});\n\nconst se_CancelKeyDeletionCommand = async (input, context) => {\n    const headers = sharedHeaders(\"CancelKeyDeletion\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_ConnectCustomKeyStoreCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ConnectCustomKeyStore\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_CreateAliasCommand = async (input, context) => {\n    const headers = sharedHeaders(\"CreateAlias\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_CreateCustomKeyStoreCommand = async (input, context) => {\n    const headers = sharedHeaders(\"CreateCustomKeyStore\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_CreateGrantCommand = async (input, context) => {\n    const headers = sharedHeaders(\"CreateGrant\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_CreateKeyCommand = async (input, context) => {\n    const headers = sharedHeaders(\"CreateKey\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DecryptCommand = async (input, context) => {\n    const headers = sharedHeaders(\"Decrypt\");\n    let body;\n    body = JSON.stringify(se_DecryptRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DeleteAliasCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DeleteAlias\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DeleteCustomKeyStoreCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DeleteCustomKeyStore\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DeleteImportedKeyMaterialCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DeleteImportedKeyMaterial\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DeriveSharedSecretCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DeriveSharedSecret\");\n    let body;\n    body = JSON.stringify(se_DeriveSharedSecretRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DescribeCustomKeyStoresCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeCustomKeyStores\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DescribeKeyCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeKey\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DisableKeyCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DisableKey\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DisableKeyRotationCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DisableKeyRotation\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DisconnectCustomKeyStoreCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DisconnectCustomKeyStore\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_EnableKeyCommand = async (input, context) => {\n    const headers = sharedHeaders(\"EnableKey\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_EnableKeyRotationCommand = async (input, context) => {\n    const headers = sharedHeaders(\"EnableKeyRotation\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_EncryptCommand = async (input, context) => {\n    const headers = sharedHeaders(\"Encrypt\");\n    let body;\n    body = JSON.stringify(se_EncryptRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_GenerateDataKeyCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GenerateDataKey\");\n    let body;\n    body = JSON.stringify(se_GenerateDataKeyRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_GenerateDataKeyPairCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GenerateDataKeyPair\");\n    let body;\n    body = JSON.stringify(se_GenerateDataKeyPairRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_GenerateDataKeyPairWithoutPlaintextCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GenerateDataKeyPairWithoutPlaintext\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_GenerateDataKeyWithoutPlaintextCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GenerateDataKeyWithoutPlaintext\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_GenerateMacCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GenerateMac\");\n    let body;\n    body = JSON.stringify(se_GenerateMacRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_GenerateRandomCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GenerateRandom\");\n    let body;\n    body = JSON.stringify(se_GenerateRandomRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_GetKeyPolicyCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetKeyPolicy\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_GetKeyRotationStatusCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetKeyRotationStatus\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_GetParametersForImportCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetParametersForImport\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_GetPublicKeyCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetPublicKey\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_ImportKeyMaterialCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ImportKeyMaterial\");\n    let body;\n    body = JSON.stringify(se_ImportKeyMaterialRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_ListAliasesCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListAliases\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_ListGrantsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListGrants\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_ListKeyPoliciesCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListKeyPolicies\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_ListKeyRotationsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListKeyRotations\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_ListKeysCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListKeys\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_ListResourceTagsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListResourceTags\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_ListRetirableGrantsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListRetirableGrants\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_PutKeyPolicyCommand = async (input, context) => {\n    const headers = sharedHeaders(\"PutKeyPolicy\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_ReEncryptCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ReEncrypt\");\n    let body;\n    body = JSON.stringify(se_ReEncryptRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_ReplicateKeyCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ReplicateKey\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_RetireGrantCommand = async (input, context) => {\n    const headers = sharedHeaders(\"RetireGrant\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_RevokeGrantCommand = async (input, context) => {\n    const headers = sharedHeaders(\"RevokeGrant\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_RotateKeyOnDemandCommand = async (input, context) => {\n    const headers = sharedHeaders(\"RotateKeyOnDemand\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_ScheduleKeyDeletionCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ScheduleKeyDeletion\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_SignCommand = async (input, context) => {\n    const headers = sharedHeaders(\"Sign\");\n    let body;\n    body = JSON.stringify(se_SignRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_TagResourceCommand = async (input, context) => {\n    const headers = sharedHeaders(\"TagResource\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_UntagResourceCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UntagResource\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_UpdateAliasCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UpdateAlias\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_UpdateCustomKeyStoreCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UpdateCustomKeyStore\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_UpdateKeyDescriptionCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UpdateKeyDescription\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_UpdatePrimaryRegionCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UpdatePrimaryRegion\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_VerifyCommand = async (input, context) => {\n    const headers = sharedHeaders(\"Verify\");\n    let body;\n    body = JSON.stringify(se_VerifyRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_VerifyMacCommand = async (input, context) => {\n    const headers = sharedHeaders(\"VerifyMac\");\n    let body;\n    body = JSON.stringify(se_VerifyMacRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst de_CancelKeyDeletionCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = smithyClient._json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ConnectCustomKeyStoreCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = smithyClient._json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_CreateAliasCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await smithyClient.collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return response;\n};\nconst de_CreateCustomKeyStoreCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = smithyClient._json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_CreateGrantCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = smithyClient._json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_CreateKeyCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = de_CreateKeyResponse(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DecryptCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = de_DecryptResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DeleteAliasCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await smithyClient.collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return response;\n};\nconst de_DeleteCustomKeyStoreCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = smithyClient._json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DeleteImportedKeyMaterialCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = smithyClient._json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DeriveSharedSecretCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = de_DeriveSharedSecretResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeCustomKeyStoresCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeCustomKeyStoresResponse(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeKeyCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeKeyResponse(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DisableKeyCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await smithyClient.collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return response;\n};\nconst de_DisableKeyRotationCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await smithyClient.collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return response;\n};\nconst de_DisconnectCustomKeyStoreCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = smithyClient._json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_EnableKeyCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await smithyClient.collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return response;\n};\nconst de_EnableKeyRotationCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await smithyClient.collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return response;\n};\nconst de_EncryptCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = de_EncryptResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GenerateDataKeyCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = de_GenerateDataKeyResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GenerateDataKeyPairCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = de_GenerateDataKeyPairResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GenerateDataKeyPairWithoutPlaintextCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = de_GenerateDataKeyPairWithoutPlaintextResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GenerateDataKeyWithoutPlaintextCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = de_GenerateDataKeyWithoutPlaintextResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GenerateMacCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = de_GenerateMacResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GenerateRandomCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = de_GenerateRandomResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetKeyPolicyCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = smithyClient._json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetKeyRotationStatusCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = de_GetKeyRotationStatusResponse(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetParametersForImportCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = de_GetParametersForImportResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetPublicKeyCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = de_GetPublicKeyResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ImportKeyMaterialCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = smithyClient._json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ListAliasesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = de_ListAliasesResponse(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ListGrantsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = de_ListGrantsResponse(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ListKeyPoliciesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = smithyClient._json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ListKeyRotationsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = de_ListKeyRotationsResponse(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ListKeysCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = smithyClient._json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ListResourceTagsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = smithyClient._json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ListRetirableGrantsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = de_ListGrantsResponse(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_PutKeyPolicyCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await smithyClient.collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return response;\n};\nconst de_ReEncryptCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = de_ReEncryptResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ReplicateKeyCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = de_ReplicateKeyResponse(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_RetireGrantCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await smithyClient.collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return response;\n};\nconst de_RevokeGrantCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await smithyClient.collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return response;\n};\nconst de_RotateKeyOnDemandCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = smithyClient._json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ScheduleKeyDeletionCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = de_ScheduleKeyDeletionResponse(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_SignCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = de_SignResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_TagResourceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await smithyClient.collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return response;\n};\nconst de_UntagResourceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await smithyClient.collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return response;\n};\nconst de_UpdateAliasCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await smithyClient.collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return response;\n};\nconst de_UpdateCustomKeyStoreCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = smithyClient._json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_UpdateKeyDescriptionCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await smithyClient.collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return response;\n};\nconst de_UpdatePrimaryRegionCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await smithyClient.collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return response;\n};\nconst de_VerifyCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = smithyClient._json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_VerifyMacCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = smithyClient._json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_CommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await core$1.parseJsonErrorBody(output.body, context),\n    };\n    const errorCode = core$1.loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"DependencyTimeoutException\":\n        case \"com.amazonaws.kms#DependencyTimeoutException\":\n            throw await de_DependencyTimeoutExceptionRes(parsedOutput);\n        case \"InvalidArnException\":\n        case \"com.amazonaws.kms#InvalidArnException\":\n            throw await de_InvalidArnExceptionRes(parsedOutput);\n        case \"KMSInternalException\":\n        case \"com.amazonaws.kms#KMSInternalException\":\n            throw await de_KMSInternalExceptionRes(parsedOutput);\n        case \"KMSInvalidStateException\":\n        case \"com.amazonaws.kms#KMSInvalidStateException\":\n            throw await de_KMSInvalidStateExceptionRes(parsedOutput);\n        case \"NotFoundException\":\n        case \"com.amazonaws.kms#NotFoundException\":\n            throw await de_NotFoundExceptionRes(parsedOutput);\n        case \"CloudHsmClusterInvalidConfigurationException\":\n        case \"com.amazonaws.kms#CloudHsmClusterInvalidConfigurationException\":\n            throw await de_CloudHsmClusterInvalidConfigurationExceptionRes(parsedOutput);\n        case \"CloudHsmClusterNotActiveException\":\n        case \"com.amazonaws.kms#CloudHsmClusterNotActiveException\":\n            throw await de_CloudHsmClusterNotActiveExceptionRes(parsedOutput);\n        case \"CustomKeyStoreInvalidStateException\":\n        case \"com.amazonaws.kms#CustomKeyStoreInvalidStateException\":\n            throw await de_CustomKeyStoreInvalidStateExceptionRes(parsedOutput);\n        case \"CustomKeyStoreNotFoundException\":\n        case \"com.amazonaws.kms#CustomKeyStoreNotFoundException\":\n            throw await de_CustomKeyStoreNotFoundExceptionRes(parsedOutput);\n        case \"AlreadyExistsException\":\n        case \"com.amazonaws.kms#AlreadyExistsException\":\n            throw await de_AlreadyExistsExceptionRes(parsedOutput);\n        case \"InvalidAliasNameException\":\n        case \"com.amazonaws.kms#InvalidAliasNameException\":\n            throw await de_InvalidAliasNameExceptionRes(parsedOutput);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.kms#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput);\n        case \"CloudHsmClusterInUseException\":\n        case \"com.amazonaws.kms#CloudHsmClusterInUseException\":\n            throw await de_CloudHsmClusterInUseExceptionRes(parsedOutput);\n        case \"CloudHsmClusterNotFoundException\":\n        case \"com.amazonaws.kms#CloudHsmClusterNotFoundException\":\n            throw await de_CloudHsmClusterNotFoundExceptionRes(parsedOutput);\n        case \"CustomKeyStoreNameInUseException\":\n        case \"com.amazonaws.kms#CustomKeyStoreNameInUseException\":\n            throw await de_CustomKeyStoreNameInUseExceptionRes(parsedOutput);\n        case \"IncorrectTrustAnchorException\":\n        case \"com.amazonaws.kms#IncorrectTrustAnchorException\":\n            throw await de_IncorrectTrustAnchorExceptionRes(parsedOutput);\n        case \"XksProxyIncorrectAuthenticationCredentialException\":\n        case \"com.amazonaws.kms#XksProxyIncorrectAuthenticationCredentialException\":\n            throw await de_XksProxyIncorrectAuthenticationCredentialExceptionRes(parsedOutput);\n        case \"XksProxyInvalidConfigurationException\":\n        case \"com.amazonaws.kms#XksProxyInvalidConfigurationException\":\n            throw await de_XksProxyInvalidConfigurationExceptionRes(parsedOutput);\n        case \"XksProxyInvalidResponseException\":\n        case \"com.amazonaws.kms#XksProxyInvalidResponseException\":\n            throw await de_XksProxyInvalidResponseExceptionRes(parsedOutput);\n        case \"XksProxyUriEndpointInUseException\":\n        case \"com.amazonaws.kms#XksProxyUriEndpointInUseException\":\n            throw await de_XksProxyUriEndpointInUseExceptionRes(parsedOutput);\n        case \"XksProxyUriInUseException\":\n        case \"com.amazonaws.kms#XksProxyUriInUseException\":\n            throw await de_XksProxyUriInUseExceptionRes(parsedOutput);\n        case \"XksProxyUriUnreachableException\":\n        case \"com.amazonaws.kms#XksProxyUriUnreachableException\":\n            throw await de_XksProxyUriUnreachableExceptionRes(parsedOutput);\n        case \"XksProxyVpcEndpointServiceInUseException\":\n        case \"com.amazonaws.kms#XksProxyVpcEndpointServiceInUseException\":\n            throw await de_XksProxyVpcEndpointServiceInUseExceptionRes(parsedOutput);\n        case \"XksProxyVpcEndpointServiceInvalidConfigurationException\":\n        case \"com.amazonaws.kms#XksProxyVpcEndpointServiceInvalidConfigurationException\":\n            throw await de_XksProxyVpcEndpointServiceInvalidConfigurationExceptionRes(parsedOutput);\n        case \"XksProxyVpcEndpointServiceNotFoundException\":\n        case \"com.amazonaws.kms#XksProxyVpcEndpointServiceNotFoundException\":\n            throw await de_XksProxyVpcEndpointServiceNotFoundExceptionRes(parsedOutput);\n        case \"DisabledException\":\n        case \"com.amazonaws.kms#DisabledException\":\n            throw await de_DisabledExceptionRes(parsedOutput);\n        case \"DryRunOperationException\":\n        case \"com.amazonaws.kms#DryRunOperationException\":\n            throw await de_DryRunOperationExceptionRes(parsedOutput);\n        case \"InvalidGrantTokenException\":\n        case \"com.amazonaws.kms#InvalidGrantTokenException\":\n            throw await de_InvalidGrantTokenExceptionRes(parsedOutput);\n        case \"MalformedPolicyDocumentException\":\n        case \"com.amazonaws.kms#MalformedPolicyDocumentException\":\n            throw await de_MalformedPolicyDocumentExceptionRes(parsedOutput);\n        case \"TagException\":\n        case \"com.amazonaws.kms#TagException\":\n            throw await de_TagExceptionRes(parsedOutput);\n        case \"UnsupportedOperationException\":\n        case \"com.amazonaws.kms#UnsupportedOperationException\":\n            throw await de_UnsupportedOperationExceptionRes(parsedOutput);\n        case \"XksKeyAlreadyInUseException\":\n        case \"com.amazonaws.kms#XksKeyAlreadyInUseException\":\n            throw await de_XksKeyAlreadyInUseExceptionRes(parsedOutput);\n        case \"XksKeyInvalidConfigurationException\":\n        case \"com.amazonaws.kms#XksKeyInvalidConfigurationException\":\n            throw await de_XksKeyInvalidConfigurationExceptionRes(parsedOutput);\n        case \"XksKeyNotFoundException\":\n        case \"com.amazonaws.kms#XksKeyNotFoundException\":\n            throw await de_XksKeyNotFoundExceptionRes(parsedOutput);\n        case \"IncorrectKeyException\":\n        case \"com.amazonaws.kms#IncorrectKeyException\":\n            throw await de_IncorrectKeyExceptionRes(parsedOutput);\n        case \"InvalidCiphertextException\":\n        case \"com.amazonaws.kms#InvalidCiphertextException\":\n            throw await de_InvalidCiphertextExceptionRes(parsedOutput);\n        case \"InvalidKeyUsageException\":\n        case \"com.amazonaws.kms#InvalidKeyUsageException\":\n            throw await de_InvalidKeyUsageExceptionRes(parsedOutput);\n        case \"KeyUnavailableException\":\n        case \"com.amazonaws.kms#KeyUnavailableException\":\n            throw await de_KeyUnavailableExceptionRes(parsedOutput);\n        case \"CustomKeyStoreHasCMKsException\":\n        case \"com.amazonaws.kms#CustomKeyStoreHasCMKsException\":\n            throw await de_CustomKeyStoreHasCMKsExceptionRes(parsedOutput);\n        case \"InvalidMarkerException\":\n        case \"com.amazonaws.kms#InvalidMarkerException\":\n            throw await de_InvalidMarkerExceptionRes(parsedOutput);\n        case \"ExpiredImportTokenException\":\n        case \"com.amazonaws.kms#ExpiredImportTokenException\":\n            throw await de_ExpiredImportTokenExceptionRes(parsedOutput);\n        case \"IncorrectKeyMaterialException\":\n        case \"com.amazonaws.kms#IncorrectKeyMaterialException\":\n            throw await de_IncorrectKeyMaterialExceptionRes(parsedOutput);\n        case \"InvalidImportTokenException\":\n        case \"com.amazonaws.kms#InvalidImportTokenException\":\n            throw await de_InvalidImportTokenExceptionRes(parsedOutput);\n        case \"InvalidGrantIdException\":\n        case \"com.amazonaws.kms#InvalidGrantIdException\":\n            throw await de_InvalidGrantIdExceptionRes(parsedOutput);\n        case \"ConflictException\":\n        case \"com.amazonaws.kms#ConflictException\":\n            throw await de_ConflictExceptionRes(parsedOutput);\n        case \"CloudHsmClusterNotRelatedException\":\n        case \"com.amazonaws.kms#CloudHsmClusterNotRelatedException\":\n            throw await de_CloudHsmClusterNotRelatedExceptionRes(parsedOutput);\n        case \"KMSInvalidSignatureException\":\n        case \"com.amazonaws.kms#KMSInvalidSignatureException\":\n            throw await de_KMSInvalidSignatureExceptionRes(parsedOutput);\n        case \"KMSInvalidMacException\":\n        case \"com.amazonaws.kms#KMSInvalidMacException\":\n            throw await de_KMSInvalidMacExceptionRes(parsedOutput);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nconst de_AlreadyExistsExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new AlreadyExistsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_CloudHsmClusterInUseExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new CloudHsmClusterInUseException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_CloudHsmClusterInvalidConfigurationExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new CloudHsmClusterInvalidConfigurationException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_CloudHsmClusterNotActiveExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new CloudHsmClusterNotActiveException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_CloudHsmClusterNotFoundExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new CloudHsmClusterNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_CloudHsmClusterNotRelatedExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new CloudHsmClusterNotRelatedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_ConflictExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new ConflictException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_CustomKeyStoreHasCMKsExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new CustomKeyStoreHasCMKsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_CustomKeyStoreInvalidStateExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new CustomKeyStoreInvalidStateException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_CustomKeyStoreNameInUseExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new CustomKeyStoreNameInUseException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_CustomKeyStoreNotFoundExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new CustomKeyStoreNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_DependencyTimeoutExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new DependencyTimeoutException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_DisabledExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new DisabledException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_DryRunOperationExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new DryRunOperationException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_ExpiredImportTokenExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new ExpiredImportTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_IncorrectKeyExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new IncorrectKeyException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_IncorrectKeyMaterialExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new IncorrectKeyMaterialException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_IncorrectTrustAnchorExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new IncorrectTrustAnchorException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_InvalidAliasNameExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new InvalidAliasNameException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_InvalidArnExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new InvalidArnException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_InvalidCiphertextExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new InvalidCiphertextException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_InvalidGrantIdExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new InvalidGrantIdException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_InvalidGrantTokenExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new InvalidGrantTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_InvalidImportTokenExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new InvalidImportTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_InvalidKeyUsageExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new InvalidKeyUsageException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_InvalidMarkerExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new InvalidMarkerException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_KeyUnavailableExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new KeyUnavailableException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_KMSInternalExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new KMSInternalException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_KMSInvalidMacExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new KMSInvalidMacException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_KMSInvalidSignatureExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new KMSInvalidSignatureException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_KMSInvalidStateExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new KMSInvalidStateException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_LimitExceededExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new LimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_MalformedPolicyDocumentExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new MalformedPolicyDocumentException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_NotFoundExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new NotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_TagExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new TagException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_UnsupportedOperationExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new UnsupportedOperationException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_XksKeyAlreadyInUseExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new XksKeyAlreadyInUseException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_XksKeyInvalidConfigurationExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new XksKeyInvalidConfigurationException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_XksKeyNotFoundExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new XksKeyNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_XksProxyIncorrectAuthenticationCredentialExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new XksProxyIncorrectAuthenticationCredentialException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_XksProxyInvalidConfigurationExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new XksProxyInvalidConfigurationException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_XksProxyInvalidResponseExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new XksProxyInvalidResponseException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_XksProxyUriEndpointInUseExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new XksProxyUriEndpointInUseException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_XksProxyUriInUseExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new XksProxyUriInUseException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_XksProxyUriUnreachableExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new XksProxyUriUnreachableException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_XksProxyVpcEndpointServiceInUseExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new XksProxyVpcEndpointServiceInUseException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_XksProxyVpcEndpointServiceInvalidConfigurationExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new XksProxyVpcEndpointServiceInvalidConfigurationException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_XksProxyVpcEndpointServiceNotFoundExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new XksProxyVpcEndpointServiceNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst se_DecryptRequest = (input, context) => {\n    return smithyClient.take(input, {\n        CiphertextBlob: context.base64Encoder,\n        DryRun: [],\n        EncryptionAlgorithm: [],\n        EncryptionContext: smithyClient._json,\n        GrantTokens: smithyClient._json,\n        KeyId: [],\n        Recipient: (_) => se_RecipientInfo(_, context),\n    });\n};\nconst se_DeriveSharedSecretRequest = (input, context) => {\n    return smithyClient.take(input, {\n        DryRun: [],\n        GrantTokens: smithyClient._json,\n        KeyAgreementAlgorithm: [],\n        KeyId: [],\n        PublicKey: context.base64Encoder,\n        Recipient: (_) => se_RecipientInfo(_, context),\n    });\n};\nconst se_EncryptRequest = (input, context) => {\n    return smithyClient.take(input, {\n        DryRun: [],\n        EncryptionAlgorithm: [],\n        EncryptionContext: smithyClient._json,\n        GrantTokens: smithyClient._json,\n        KeyId: [],\n        Plaintext: context.base64Encoder,\n    });\n};\nconst se_GenerateDataKeyPairRequest = (input, context) => {\n    return smithyClient.take(input, {\n        DryRun: [],\n        EncryptionContext: smithyClient._json,\n        GrantTokens: smithyClient._json,\n        KeyId: [],\n        KeyPairSpec: [],\n        Recipient: (_) => se_RecipientInfo(_, context),\n    });\n};\nconst se_GenerateDataKeyRequest = (input, context) => {\n    return smithyClient.take(input, {\n        DryRun: [],\n        EncryptionContext: smithyClient._json,\n        GrantTokens: smithyClient._json,\n        KeyId: [],\n        KeySpec: [],\n        NumberOfBytes: [],\n        Recipient: (_) => se_RecipientInfo(_, context),\n    });\n};\nconst se_GenerateMacRequest = (input, context) => {\n    return smithyClient.take(input, {\n        DryRun: [],\n        GrantTokens: smithyClient._json,\n        KeyId: [],\n        MacAlgorithm: [],\n        Message: context.base64Encoder,\n    });\n};\nconst se_GenerateRandomRequest = (input, context) => {\n    return smithyClient.take(input, {\n        CustomKeyStoreId: [],\n        NumberOfBytes: [],\n        Recipient: (_) => se_RecipientInfo(_, context),\n    });\n};\nconst se_ImportKeyMaterialRequest = (input, context) => {\n    return smithyClient.take(input, {\n        EncryptedKeyMaterial: context.base64Encoder,\n        ExpirationModel: [],\n        ImportToken: context.base64Encoder,\n        ImportType: [],\n        KeyId: [],\n        KeyMaterialDescription: [],\n        KeyMaterialId: [],\n        ValidTo: (_) => _.getTime() / 1_000,\n    });\n};\nconst se_RecipientInfo = (input, context) => {\n    return smithyClient.take(input, {\n        AttestationDocument: context.base64Encoder,\n        KeyEncryptionAlgorithm: [],\n    });\n};\nconst se_ReEncryptRequest = (input, context) => {\n    return smithyClient.take(input, {\n        CiphertextBlob: context.base64Encoder,\n        DestinationEncryptionAlgorithm: [],\n        DestinationEncryptionContext: smithyClient._json,\n        DestinationKeyId: [],\n        DryRun: [],\n        GrantTokens: smithyClient._json,\n        SourceEncryptionAlgorithm: [],\n        SourceEncryptionContext: smithyClient._json,\n        SourceKeyId: [],\n    });\n};\nconst se_SignRequest = (input, context) => {\n    return smithyClient.take(input, {\n        DryRun: [],\n        GrantTokens: smithyClient._json,\n        KeyId: [],\n        Message: context.base64Encoder,\n        MessageType: [],\n        SigningAlgorithm: [],\n    });\n};\nconst se_VerifyMacRequest = (input, context) => {\n    return smithyClient.take(input, {\n        DryRun: [],\n        GrantTokens: smithyClient._json,\n        KeyId: [],\n        Mac: context.base64Encoder,\n        MacAlgorithm: [],\n        Message: context.base64Encoder,\n    });\n};\nconst se_VerifyRequest = (input, context) => {\n    return smithyClient.take(input, {\n        DryRun: [],\n        GrantTokens: smithyClient._json,\n        KeyId: [],\n        Message: context.base64Encoder,\n        MessageType: [],\n        Signature: context.base64Encoder,\n        SigningAlgorithm: [],\n    });\n};\nconst de_AliasList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_AliasListEntry(entry);\n    });\n    return retVal;\n};\nconst de_AliasListEntry = (output, context) => {\n    return smithyClient.take(output, {\n        AliasArn: smithyClient.expectString,\n        AliasName: smithyClient.expectString,\n        CreationDate: (_) => smithyClient.expectNonNull(smithyClient.parseEpochTimestamp(smithyClient.expectNumber(_))),\n        LastUpdatedDate: (_) => smithyClient.expectNonNull(smithyClient.parseEpochTimestamp(smithyClient.expectNumber(_))),\n        TargetKeyId: smithyClient.expectString,\n    });\n};\nconst de_CreateKeyResponse = (output, context) => {\n    return smithyClient.take(output, {\n        KeyMetadata: (_) => de_KeyMetadata(_),\n    });\n};\nconst de_CustomKeyStoresList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_CustomKeyStoresListEntry(entry);\n    });\n    return retVal;\n};\nconst de_CustomKeyStoresListEntry = (output, context) => {\n    return smithyClient.take(output, {\n        CloudHsmClusterId: smithyClient.expectString,\n        ConnectionErrorCode: smithyClient.expectString,\n        ConnectionState: smithyClient.expectString,\n        CreationDate: (_) => smithyClient.expectNonNull(smithyClient.parseEpochTimestamp(smithyClient.expectNumber(_))),\n        CustomKeyStoreId: smithyClient.expectString,\n        CustomKeyStoreName: smithyClient.expectString,\n        CustomKeyStoreType: smithyClient.expectString,\n        TrustAnchorCertificate: smithyClient.expectString,\n        XksProxyConfiguration: smithyClient._json,\n    });\n};\nconst de_DecryptResponse = (output, context) => {\n    return smithyClient.take(output, {\n        CiphertextForRecipient: context.base64Decoder,\n        EncryptionAlgorithm: smithyClient.expectString,\n        KeyId: smithyClient.expectString,\n        KeyMaterialId: smithyClient.expectString,\n        Plaintext: context.base64Decoder,\n    });\n};\nconst de_DeriveSharedSecretResponse = (output, context) => {\n    return smithyClient.take(output, {\n        CiphertextForRecipient: context.base64Decoder,\n        KeyAgreementAlgorithm: smithyClient.expectString,\n        KeyId: smithyClient.expectString,\n        KeyOrigin: smithyClient.expectString,\n        SharedSecret: context.base64Decoder,\n    });\n};\nconst de_DescribeCustomKeyStoresResponse = (output, context) => {\n    return smithyClient.take(output, {\n        CustomKeyStores: (_) => de_CustomKeyStoresList(_),\n        NextMarker: smithyClient.expectString,\n        Truncated: smithyClient.expectBoolean,\n    });\n};\nconst de_DescribeKeyResponse = (output, context) => {\n    return smithyClient.take(output, {\n        KeyMetadata: (_) => de_KeyMetadata(_),\n    });\n};\nconst de_EncryptResponse = (output, context) => {\n    return smithyClient.take(output, {\n        CiphertextBlob: context.base64Decoder,\n        EncryptionAlgorithm: smithyClient.expectString,\n        KeyId: smithyClient.expectString,\n    });\n};\nconst de_GenerateDataKeyPairResponse = (output, context) => {\n    return smithyClient.take(output, {\n        CiphertextForRecipient: context.base64Decoder,\n        KeyId: smithyClient.expectString,\n        KeyMaterialId: smithyClient.expectString,\n        KeyPairSpec: smithyClient.expectString,\n        PrivateKeyCiphertextBlob: context.base64Decoder,\n        PrivateKeyPlaintext: context.base64Decoder,\n        PublicKey: context.base64Decoder,\n    });\n};\nconst de_GenerateDataKeyPairWithoutPlaintextResponse = (output, context) => {\n    return smithyClient.take(output, {\n        KeyId: smithyClient.expectString,\n        KeyMaterialId: smithyClient.expectString,\n        KeyPairSpec: smithyClient.expectString,\n        PrivateKeyCiphertextBlob: context.base64Decoder,\n        PublicKey: context.base64Decoder,\n    });\n};\nconst de_GenerateDataKeyResponse = (output, context) => {\n    return smithyClient.take(output, {\n        CiphertextBlob: context.base64Decoder,\n        CiphertextForRecipient: context.base64Decoder,\n        KeyId: smithyClient.expectString,\n        KeyMaterialId: smithyClient.expectString,\n        Plaintext: context.base64Decoder,\n    });\n};\nconst de_GenerateDataKeyWithoutPlaintextResponse = (output, context) => {\n    return smithyClient.take(output, {\n        CiphertextBlob: context.base64Decoder,\n        KeyId: smithyClient.expectString,\n        KeyMaterialId: smithyClient.expectString,\n    });\n};\nconst de_GenerateMacResponse = (output, context) => {\n    return smithyClient.take(output, {\n        KeyId: smithyClient.expectString,\n        Mac: context.base64Decoder,\n        MacAlgorithm: smithyClient.expectString,\n    });\n};\nconst de_GenerateRandomResponse = (output, context) => {\n    return smithyClient.take(output, {\n        CiphertextForRecipient: context.base64Decoder,\n        Plaintext: context.base64Decoder,\n    });\n};\nconst de_GetKeyRotationStatusResponse = (output, context) => {\n    return smithyClient.take(output, {\n        KeyId: smithyClient.expectString,\n        KeyRotationEnabled: smithyClient.expectBoolean,\n        NextRotationDate: (_) => smithyClient.expectNonNull(smithyClient.parseEpochTimestamp(smithyClient.expectNumber(_))),\n        OnDemandRotationStartDate: (_) => smithyClient.expectNonNull(smithyClient.parseEpochTimestamp(smithyClient.expectNumber(_))),\n        RotationPeriodInDays: smithyClient.expectInt32,\n    });\n};\nconst de_GetParametersForImportResponse = (output, context) => {\n    return smithyClient.take(output, {\n        ImportToken: context.base64Decoder,\n        KeyId: smithyClient.expectString,\n        ParametersValidTo: (_) => smithyClient.expectNonNull(smithyClient.parseEpochTimestamp(smithyClient.expectNumber(_))),\n        PublicKey: context.base64Decoder,\n    });\n};\nconst de_GetPublicKeyResponse = (output, context) => {\n    return smithyClient.take(output, {\n        CustomerMasterKeySpec: smithyClient.expectString,\n        EncryptionAlgorithms: smithyClient._json,\n        KeyAgreementAlgorithms: smithyClient._json,\n        KeyId: smithyClient.expectString,\n        KeySpec: smithyClient.expectString,\n        KeyUsage: smithyClient.expectString,\n        PublicKey: context.base64Decoder,\n        SigningAlgorithms: smithyClient._json,\n    });\n};\nconst de_GrantList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_GrantListEntry(entry);\n    });\n    return retVal;\n};\nconst de_GrantListEntry = (output, context) => {\n    return smithyClient.take(output, {\n        Constraints: smithyClient._json,\n        CreationDate: (_) => smithyClient.expectNonNull(smithyClient.parseEpochTimestamp(smithyClient.expectNumber(_))),\n        GrantId: smithyClient.expectString,\n        GranteePrincipal: smithyClient.expectString,\n        IssuingAccount: smithyClient.expectString,\n        KeyId: smithyClient.expectString,\n        Name: smithyClient.expectString,\n        Operations: smithyClient._json,\n        RetiringPrincipal: smithyClient.expectString,\n    });\n};\nconst de_KeyMetadata = (output, context) => {\n    return smithyClient.take(output, {\n        AWSAccountId: smithyClient.expectString,\n        Arn: smithyClient.expectString,\n        CloudHsmClusterId: smithyClient.expectString,\n        CreationDate: (_) => smithyClient.expectNonNull(smithyClient.parseEpochTimestamp(smithyClient.expectNumber(_))),\n        CurrentKeyMaterialId: smithyClient.expectString,\n        CustomKeyStoreId: smithyClient.expectString,\n        CustomerMasterKeySpec: smithyClient.expectString,\n        DeletionDate: (_) => smithyClient.expectNonNull(smithyClient.parseEpochTimestamp(smithyClient.expectNumber(_))),\n        Description: smithyClient.expectString,\n        Enabled: smithyClient.expectBoolean,\n        EncryptionAlgorithms: smithyClient._json,\n        ExpirationModel: smithyClient.expectString,\n        KeyAgreementAlgorithms: smithyClient._json,\n        KeyId: smithyClient.expectString,\n        KeyManager: smithyClient.expectString,\n        KeySpec: smithyClient.expectString,\n        KeyState: smithyClient.expectString,\n        KeyUsage: smithyClient.expectString,\n        MacAlgorithms: smithyClient._json,\n        MultiRegion: smithyClient.expectBoolean,\n        MultiRegionConfiguration: smithyClient._json,\n        Origin: smithyClient.expectString,\n        PendingDeletionWindowInDays: smithyClient.expectInt32,\n        SigningAlgorithms: smithyClient._json,\n        ValidTo: (_) => smithyClient.expectNonNull(smithyClient.parseEpochTimestamp(smithyClient.expectNumber(_))),\n        XksKeyConfiguration: smithyClient._json,\n    });\n};\nconst de_ListAliasesResponse = (output, context) => {\n    return smithyClient.take(output, {\n        Aliases: (_) => de_AliasList(_),\n        NextMarker: smithyClient.expectString,\n        Truncated: smithyClient.expectBoolean,\n    });\n};\nconst de_ListGrantsResponse = (output, context) => {\n    return smithyClient.take(output, {\n        Grants: (_) => de_GrantList(_),\n        NextMarker: smithyClient.expectString,\n        Truncated: smithyClient.expectBoolean,\n    });\n};\nconst de_ListKeyRotationsResponse = (output, context) => {\n    return smithyClient.take(output, {\n        NextMarker: smithyClient.expectString,\n        Rotations: (_) => de_RotationsList(_),\n        Truncated: smithyClient.expectBoolean,\n    });\n};\nconst de_ReEncryptResponse = (output, context) => {\n    return smithyClient.take(output, {\n        CiphertextBlob: context.base64Decoder,\n        DestinationEncryptionAlgorithm: smithyClient.expectString,\n        DestinationKeyMaterialId: smithyClient.expectString,\n        KeyId: smithyClient.expectString,\n        SourceEncryptionAlgorithm: smithyClient.expectString,\n        SourceKeyId: smithyClient.expectString,\n        SourceKeyMaterialId: smithyClient.expectString,\n    });\n};\nconst de_ReplicateKeyResponse = (output, context) => {\n    return smithyClient.take(output, {\n        ReplicaKeyMetadata: (_) => de_KeyMetadata(_),\n        ReplicaPolicy: smithyClient.expectString,\n        ReplicaTags: smithyClient._json,\n    });\n};\nconst de_RotationsList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_RotationsListEntry(entry);\n    });\n    return retVal;\n};\nconst de_RotationsListEntry = (output, context) => {\n    return smithyClient.take(output, {\n        ExpirationModel: smithyClient.expectString,\n        ImportState: smithyClient.expectString,\n        KeyId: smithyClient.expectString,\n        KeyMaterialDescription: smithyClient.expectString,\n        KeyMaterialId: smithyClient.expectString,\n        KeyMaterialState: smithyClient.expectString,\n        RotationDate: (_) => smithyClient.expectNonNull(smithyClient.parseEpochTimestamp(smithyClient.expectNumber(_))),\n        RotationType: smithyClient.expectString,\n        ValidTo: (_) => smithyClient.expectNonNull(smithyClient.parseEpochTimestamp(smithyClient.expectNumber(_))),\n    });\n};\nconst de_ScheduleKeyDeletionResponse = (output, context) => {\n    return smithyClient.take(output, {\n        DeletionDate: (_) => smithyClient.expectNonNull(smithyClient.parseEpochTimestamp(smithyClient.expectNumber(_))),\n        KeyId: smithyClient.expectString,\n        KeyState: smithyClient.expectString,\n        PendingWindowInDays: smithyClient.expectInt32,\n    });\n};\nconst de_SignResponse = (output, context) => {\n    return smithyClient.take(output, {\n        KeyId: smithyClient.expectString,\n        Signature: context.base64Decoder,\n        SigningAlgorithm: smithyClient.expectString,\n    });\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst throwDefaultError = smithyClient.withBaseException(KMSServiceException);\nconst buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const contents = {\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        path: basePath.endsWith(\"/\") ? basePath.slice(0, -1) + path : basePath + path,\n        headers,\n    };\n    if (body !== undefined) {\n        contents.body = body;\n    }\n    return new protocolHttp.HttpRequest(contents);\n};\nfunction sharedHeaders(operation) {\n    return {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": `TrentService.${operation}`,\n    };\n}\n\nclass CancelKeyDeletionCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"CancelKeyDeletion\", {})\n    .n(\"KMSClient\", \"CancelKeyDeletionCommand\")\n    .f(void 0, void 0)\n    .ser(se_CancelKeyDeletionCommand)\n    .de(de_CancelKeyDeletionCommand)\n    .build() {\n}\n\nclass ConnectCustomKeyStoreCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"ConnectCustomKeyStore\", {})\n    .n(\"KMSClient\", \"ConnectCustomKeyStoreCommand\")\n    .f(void 0, void 0)\n    .ser(se_ConnectCustomKeyStoreCommand)\n    .de(de_ConnectCustomKeyStoreCommand)\n    .build() {\n}\n\nclass CreateAliasCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"CreateAlias\", {})\n    .n(\"KMSClient\", \"CreateAliasCommand\")\n    .f(void 0, void 0)\n    .ser(se_CreateAliasCommand)\n    .de(de_CreateAliasCommand)\n    .build() {\n}\n\nclass CreateCustomKeyStoreCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"CreateCustomKeyStore\", {})\n    .n(\"KMSClient\", \"CreateCustomKeyStoreCommand\")\n    .f(CreateCustomKeyStoreRequestFilterSensitiveLog, void 0)\n    .ser(se_CreateCustomKeyStoreCommand)\n    .de(de_CreateCustomKeyStoreCommand)\n    .build() {\n}\n\nclass CreateGrantCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"CreateGrant\", {})\n    .n(\"KMSClient\", \"CreateGrantCommand\")\n    .f(void 0, void 0)\n    .ser(se_CreateGrantCommand)\n    .de(de_CreateGrantCommand)\n    .build() {\n}\n\nclass CreateKeyCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"CreateKey\", {})\n    .n(\"KMSClient\", \"CreateKeyCommand\")\n    .f(void 0, void 0)\n    .ser(se_CreateKeyCommand)\n    .de(de_CreateKeyCommand)\n    .build() {\n}\n\nclass DecryptCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"Decrypt\", {})\n    .n(\"KMSClient\", \"DecryptCommand\")\n    .f(void 0, DecryptResponseFilterSensitiveLog)\n    .ser(se_DecryptCommand)\n    .de(de_DecryptCommand)\n    .build() {\n}\n\nclass DeleteAliasCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"DeleteAlias\", {})\n    .n(\"KMSClient\", \"DeleteAliasCommand\")\n    .f(void 0, void 0)\n    .ser(se_DeleteAliasCommand)\n    .de(de_DeleteAliasCommand)\n    .build() {\n}\n\nclass DeleteCustomKeyStoreCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"DeleteCustomKeyStore\", {})\n    .n(\"KMSClient\", \"DeleteCustomKeyStoreCommand\")\n    .f(void 0, void 0)\n    .ser(se_DeleteCustomKeyStoreCommand)\n    .de(de_DeleteCustomKeyStoreCommand)\n    .build() {\n}\n\nclass DeleteImportedKeyMaterialCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"DeleteImportedKeyMaterial\", {})\n    .n(\"KMSClient\", \"DeleteImportedKeyMaterialCommand\")\n    .f(void 0, void 0)\n    .ser(se_DeleteImportedKeyMaterialCommand)\n    .de(de_DeleteImportedKeyMaterialCommand)\n    .build() {\n}\n\nclass DeriveSharedSecretCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"DeriveSharedSecret\", {})\n    .n(\"KMSClient\", \"DeriveSharedSecretCommand\")\n    .f(void 0, DeriveSharedSecretResponseFilterSensitiveLog)\n    .ser(se_DeriveSharedSecretCommand)\n    .de(de_DeriveSharedSecretCommand)\n    .build() {\n}\n\nclass DescribeCustomKeyStoresCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"DescribeCustomKeyStores\", {})\n    .n(\"KMSClient\", \"DescribeCustomKeyStoresCommand\")\n    .f(void 0, DescribeCustomKeyStoresResponseFilterSensitiveLog)\n    .ser(se_DescribeCustomKeyStoresCommand)\n    .de(de_DescribeCustomKeyStoresCommand)\n    .build() {\n}\n\nclass DescribeKeyCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"DescribeKey\", {})\n    .n(\"KMSClient\", \"DescribeKeyCommand\")\n    .f(void 0, void 0)\n    .ser(se_DescribeKeyCommand)\n    .de(de_DescribeKeyCommand)\n    .build() {\n}\n\nclass DisableKeyCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"DisableKey\", {})\n    .n(\"KMSClient\", \"DisableKeyCommand\")\n    .f(void 0, void 0)\n    .ser(se_DisableKeyCommand)\n    .de(de_DisableKeyCommand)\n    .build() {\n}\n\nclass DisableKeyRotationCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"DisableKeyRotation\", {})\n    .n(\"KMSClient\", \"DisableKeyRotationCommand\")\n    .f(void 0, void 0)\n    .ser(se_DisableKeyRotationCommand)\n    .de(de_DisableKeyRotationCommand)\n    .build() {\n}\n\nclass DisconnectCustomKeyStoreCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"DisconnectCustomKeyStore\", {})\n    .n(\"KMSClient\", \"DisconnectCustomKeyStoreCommand\")\n    .f(void 0, void 0)\n    .ser(se_DisconnectCustomKeyStoreCommand)\n    .de(de_DisconnectCustomKeyStoreCommand)\n    .build() {\n}\n\nclass EnableKeyCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"EnableKey\", {})\n    .n(\"KMSClient\", \"EnableKeyCommand\")\n    .f(void 0, void 0)\n    .ser(se_EnableKeyCommand)\n    .de(de_EnableKeyCommand)\n    .build() {\n}\n\nclass EnableKeyRotationCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"EnableKeyRotation\", {})\n    .n(\"KMSClient\", \"EnableKeyRotationCommand\")\n    .f(void 0, void 0)\n    .ser(se_EnableKeyRotationCommand)\n    .de(de_EnableKeyRotationCommand)\n    .build() {\n}\n\nclass EncryptCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"Encrypt\", {})\n    .n(\"KMSClient\", \"EncryptCommand\")\n    .f(EncryptRequestFilterSensitiveLog, void 0)\n    .ser(se_EncryptCommand)\n    .de(de_EncryptCommand)\n    .build() {\n}\n\nclass GenerateDataKeyCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"GenerateDataKey\", {})\n    .n(\"KMSClient\", \"GenerateDataKeyCommand\")\n    .f(void 0, GenerateDataKeyResponseFilterSensitiveLog)\n    .ser(se_GenerateDataKeyCommand)\n    .de(de_GenerateDataKeyCommand)\n    .build() {\n}\n\nclass GenerateDataKeyPairCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"GenerateDataKeyPair\", {})\n    .n(\"KMSClient\", \"GenerateDataKeyPairCommand\")\n    .f(void 0, GenerateDataKeyPairResponseFilterSensitiveLog)\n    .ser(se_GenerateDataKeyPairCommand)\n    .de(de_GenerateDataKeyPairCommand)\n    .build() {\n}\n\nclass GenerateDataKeyPairWithoutPlaintextCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"GenerateDataKeyPairWithoutPlaintext\", {})\n    .n(\"KMSClient\", \"GenerateDataKeyPairWithoutPlaintextCommand\")\n    .f(void 0, void 0)\n    .ser(se_GenerateDataKeyPairWithoutPlaintextCommand)\n    .de(de_GenerateDataKeyPairWithoutPlaintextCommand)\n    .build() {\n}\n\nclass GenerateDataKeyWithoutPlaintextCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"GenerateDataKeyWithoutPlaintext\", {})\n    .n(\"KMSClient\", \"GenerateDataKeyWithoutPlaintextCommand\")\n    .f(void 0, void 0)\n    .ser(se_GenerateDataKeyWithoutPlaintextCommand)\n    .de(de_GenerateDataKeyWithoutPlaintextCommand)\n    .build() {\n}\n\nclass GenerateMacCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"GenerateMac\", {})\n    .n(\"KMSClient\", \"GenerateMacCommand\")\n    .f(GenerateMacRequestFilterSensitiveLog, void 0)\n    .ser(se_GenerateMacCommand)\n    .de(de_GenerateMacCommand)\n    .build() {\n}\n\nclass GenerateRandomCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"GenerateRandom\", {})\n    .n(\"KMSClient\", \"GenerateRandomCommand\")\n    .f(void 0, GenerateRandomResponseFilterSensitiveLog)\n    .ser(se_GenerateRandomCommand)\n    .de(de_GenerateRandomCommand)\n    .build() {\n}\n\nclass GetKeyPolicyCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"GetKeyPolicy\", {})\n    .n(\"KMSClient\", \"GetKeyPolicyCommand\")\n    .f(void 0, void 0)\n    .ser(se_GetKeyPolicyCommand)\n    .de(de_GetKeyPolicyCommand)\n    .build() {\n}\n\nclass GetKeyRotationStatusCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"GetKeyRotationStatus\", {})\n    .n(\"KMSClient\", \"GetKeyRotationStatusCommand\")\n    .f(void 0, void 0)\n    .ser(se_GetKeyRotationStatusCommand)\n    .de(de_GetKeyRotationStatusCommand)\n    .build() {\n}\n\nclass GetParametersForImportCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"GetParametersForImport\", {})\n    .n(\"KMSClient\", \"GetParametersForImportCommand\")\n    .f(void 0, GetParametersForImportResponseFilterSensitiveLog)\n    .ser(se_GetParametersForImportCommand)\n    .de(de_GetParametersForImportCommand)\n    .build() {\n}\n\nclass GetPublicKeyCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"GetPublicKey\", {})\n    .n(\"KMSClient\", \"GetPublicKeyCommand\")\n    .f(void 0, void 0)\n    .ser(se_GetPublicKeyCommand)\n    .de(de_GetPublicKeyCommand)\n    .build() {\n}\n\nclass ImportKeyMaterialCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"ImportKeyMaterial\", {})\n    .n(\"KMSClient\", \"ImportKeyMaterialCommand\")\n    .f(void 0, void 0)\n    .ser(se_ImportKeyMaterialCommand)\n    .de(de_ImportKeyMaterialCommand)\n    .build() {\n}\n\nclass ListAliasesCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"ListAliases\", {})\n    .n(\"KMSClient\", \"ListAliasesCommand\")\n    .f(void 0, void 0)\n    .ser(se_ListAliasesCommand)\n    .de(de_ListAliasesCommand)\n    .build() {\n}\n\nclass ListGrantsCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"ListGrants\", {})\n    .n(\"KMSClient\", \"ListGrantsCommand\")\n    .f(void 0, void 0)\n    .ser(se_ListGrantsCommand)\n    .de(de_ListGrantsCommand)\n    .build() {\n}\n\nclass ListKeyPoliciesCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"ListKeyPolicies\", {})\n    .n(\"KMSClient\", \"ListKeyPoliciesCommand\")\n    .f(void 0, void 0)\n    .ser(se_ListKeyPoliciesCommand)\n    .de(de_ListKeyPoliciesCommand)\n    .build() {\n}\n\nclass ListKeyRotationsCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"ListKeyRotations\", {})\n    .n(\"KMSClient\", \"ListKeyRotationsCommand\")\n    .f(void 0, void 0)\n    .ser(se_ListKeyRotationsCommand)\n    .de(de_ListKeyRotationsCommand)\n    .build() {\n}\n\nclass ListKeysCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"ListKeys\", {})\n    .n(\"KMSClient\", \"ListKeysCommand\")\n    .f(void 0, void 0)\n    .ser(se_ListKeysCommand)\n    .de(de_ListKeysCommand)\n    .build() {\n}\n\nclass ListResourceTagsCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"ListResourceTags\", {})\n    .n(\"KMSClient\", \"ListResourceTagsCommand\")\n    .f(void 0, void 0)\n    .ser(se_ListResourceTagsCommand)\n    .de(de_ListResourceTagsCommand)\n    .build() {\n}\n\nclass ListRetirableGrantsCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"ListRetirableGrants\", {})\n    .n(\"KMSClient\", \"ListRetirableGrantsCommand\")\n    .f(void 0, void 0)\n    .ser(se_ListRetirableGrantsCommand)\n    .de(de_ListRetirableGrantsCommand)\n    .build() {\n}\n\nclass PutKeyPolicyCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"PutKeyPolicy\", {})\n    .n(\"KMSClient\", \"PutKeyPolicyCommand\")\n    .f(void 0, void 0)\n    .ser(se_PutKeyPolicyCommand)\n    .de(de_PutKeyPolicyCommand)\n    .build() {\n}\n\nclass ReEncryptCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"ReEncrypt\", {})\n    .n(\"KMSClient\", \"ReEncryptCommand\")\n    .f(void 0, void 0)\n    .ser(se_ReEncryptCommand)\n    .de(de_ReEncryptCommand)\n    .build() {\n}\n\nclass ReplicateKeyCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"ReplicateKey\", {})\n    .n(\"KMSClient\", \"ReplicateKeyCommand\")\n    .f(void 0, void 0)\n    .ser(se_ReplicateKeyCommand)\n    .de(de_ReplicateKeyCommand)\n    .build() {\n}\n\nclass RetireGrantCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"RetireGrant\", {})\n    .n(\"KMSClient\", \"RetireGrantCommand\")\n    .f(void 0, void 0)\n    .ser(se_RetireGrantCommand)\n    .de(de_RetireGrantCommand)\n    .build() {\n}\n\nclass RevokeGrantCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"RevokeGrant\", {})\n    .n(\"KMSClient\", \"RevokeGrantCommand\")\n    .f(void 0, void 0)\n    .ser(se_RevokeGrantCommand)\n    .de(de_RevokeGrantCommand)\n    .build() {\n}\n\nclass RotateKeyOnDemandCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"RotateKeyOnDemand\", {})\n    .n(\"KMSClient\", \"RotateKeyOnDemandCommand\")\n    .f(void 0, void 0)\n    .ser(se_RotateKeyOnDemandCommand)\n    .de(de_RotateKeyOnDemandCommand)\n    .build() {\n}\n\nclass ScheduleKeyDeletionCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"ScheduleKeyDeletion\", {})\n    .n(\"KMSClient\", \"ScheduleKeyDeletionCommand\")\n    .f(void 0, void 0)\n    .ser(se_ScheduleKeyDeletionCommand)\n    .de(de_ScheduleKeyDeletionCommand)\n    .build() {\n}\n\nclass SignCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"Sign\", {})\n    .n(\"KMSClient\", \"SignCommand\")\n    .f(SignRequestFilterSensitiveLog, void 0)\n    .ser(se_SignCommand)\n    .de(de_SignCommand)\n    .build() {\n}\n\nclass TagResourceCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"TagResource\", {})\n    .n(\"KMSClient\", \"TagResourceCommand\")\n    .f(void 0, void 0)\n    .ser(se_TagResourceCommand)\n    .de(de_TagResourceCommand)\n    .build() {\n}\n\nclass UntagResourceCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"UntagResource\", {})\n    .n(\"KMSClient\", \"UntagResourceCommand\")\n    .f(void 0, void 0)\n    .ser(se_UntagResourceCommand)\n    .de(de_UntagResourceCommand)\n    .build() {\n}\n\nclass UpdateAliasCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"UpdateAlias\", {})\n    .n(\"KMSClient\", \"UpdateAliasCommand\")\n    .f(void 0, void 0)\n    .ser(se_UpdateAliasCommand)\n    .de(de_UpdateAliasCommand)\n    .build() {\n}\n\nclass UpdateCustomKeyStoreCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"UpdateCustomKeyStore\", {})\n    .n(\"KMSClient\", \"UpdateCustomKeyStoreCommand\")\n    .f(UpdateCustomKeyStoreRequestFilterSensitiveLog, void 0)\n    .ser(se_UpdateCustomKeyStoreCommand)\n    .de(de_UpdateCustomKeyStoreCommand)\n    .build() {\n}\n\nclass UpdateKeyDescriptionCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"UpdateKeyDescription\", {})\n    .n(\"KMSClient\", \"UpdateKeyDescriptionCommand\")\n    .f(void 0, void 0)\n    .ser(se_UpdateKeyDescriptionCommand)\n    .de(de_UpdateKeyDescriptionCommand)\n    .build() {\n}\n\nclass UpdatePrimaryRegionCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"UpdatePrimaryRegion\", {})\n    .n(\"KMSClient\", \"UpdatePrimaryRegionCommand\")\n    .f(void 0, void 0)\n    .ser(se_UpdatePrimaryRegionCommand)\n    .de(de_UpdatePrimaryRegionCommand)\n    .build() {\n}\n\nclass VerifyCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"Verify\", {})\n    .n(\"KMSClient\", \"VerifyCommand\")\n    .f(VerifyRequestFilterSensitiveLog, void 0)\n    .ser(se_VerifyCommand)\n    .de(de_VerifyCommand)\n    .build() {\n}\n\nclass VerifyMacCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"TrentService\", \"VerifyMac\", {})\n    .n(\"KMSClient\", \"VerifyMacCommand\")\n    .f(VerifyMacRequestFilterSensitiveLog, void 0)\n    .ser(se_VerifyMacCommand)\n    .de(de_VerifyMacCommand)\n    .build() {\n}\n\nconst commands = {\n    CancelKeyDeletionCommand,\n    ConnectCustomKeyStoreCommand,\n    CreateAliasCommand,\n    CreateCustomKeyStoreCommand,\n    CreateGrantCommand,\n    CreateKeyCommand,\n    DecryptCommand,\n    DeleteAliasCommand,\n    DeleteCustomKeyStoreCommand,\n    DeleteImportedKeyMaterialCommand,\n    DeriveSharedSecretCommand,\n    DescribeCustomKeyStoresCommand,\n    DescribeKeyCommand,\n    DisableKeyCommand,\n    DisableKeyRotationCommand,\n    DisconnectCustomKeyStoreCommand,\n    EnableKeyCommand,\n    EnableKeyRotationCommand,\n    EncryptCommand,\n    GenerateDataKeyCommand,\n    GenerateDataKeyPairCommand,\n    GenerateDataKeyPairWithoutPlaintextCommand,\n    GenerateDataKeyWithoutPlaintextCommand,\n    GenerateMacCommand,\n    GenerateRandomCommand,\n    GetKeyPolicyCommand,\n    GetKeyRotationStatusCommand,\n    GetParametersForImportCommand,\n    GetPublicKeyCommand,\n    ImportKeyMaterialCommand,\n    ListAliasesCommand,\n    ListGrantsCommand,\n    ListKeyPoliciesCommand,\n    ListKeyRotationsCommand,\n    ListKeysCommand,\n    ListResourceTagsCommand,\n    ListRetirableGrantsCommand,\n    PutKeyPolicyCommand,\n    ReEncryptCommand,\n    ReplicateKeyCommand,\n    RetireGrantCommand,\n    RevokeGrantCommand,\n    RotateKeyOnDemandCommand,\n    ScheduleKeyDeletionCommand,\n    SignCommand,\n    TagResourceCommand,\n    UntagResourceCommand,\n    UpdateAliasCommand,\n    UpdateCustomKeyStoreCommand,\n    UpdateKeyDescriptionCommand,\n    UpdatePrimaryRegionCommand,\n    VerifyCommand,\n    VerifyMacCommand,\n};\nclass KMS extends KMSClient {\n}\nsmithyClient.createAggregatedClient(commands, KMS);\n\nconst paginateDescribeCustomKeyStores = core.createPaginator(KMSClient, DescribeCustomKeyStoresCommand, \"Marker\", \"NextMarker\", \"Limit\");\n\nconst paginateListAliases = core.createPaginator(KMSClient, ListAliasesCommand, \"Marker\", \"NextMarker\", \"Limit\");\n\nconst paginateListGrants = core.createPaginator(KMSClient, ListGrantsCommand, \"Marker\", \"NextMarker\", \"Limit\");\n\nconst paginateListKeyPolicies = core.createPaginator(KMSClient, ListKeyPoliciesCommand, \"Marker\", \"NextMarker\", \"Limit\");\n\nconst paginateListKeyRotations = core.createPaginator(KMSClient, ListKeyRotationsCommand, \"Marker\", \"NextMarker\", \"Limit\");\n\nconst paginateListKeys = core.createPaginator(KMSClient, ListKeysCommand, \"Marker\", \"NextMarker\", \"Limit\");\n\nconst paginateListResourceTags = core.createPaginator(KMSClient, ListResourceTagsCommand, \"Marker\", \"NextMarker\", \"Limit\");\n\nconst paginateListRetirableGrants = core.createPaginator(KMSClient, ListRetirableGrantsCommand, \"Marker\", \"NextMarker\", \"Limit\");\n\nObject.defineProperty(exports, \"$Command\", {\n    enumerable: true,\n    get: function () { return smithyClient.Command; }\n});\nObject.defineProperty(exports, \"__Client\", {\n    enumerable: true,\n    get: function () { return smithyClient.Client; }\n});\nexports.AlgorithmSpec = AlgorithmSpec;\nexports.AlreadyExistsException = AlreadyExistsException;\nexports.CancelKeyDeletionCommand = CancelKeyDeletionCommand;\nexports.CloudHsmClusterInUseException = CloudHsmClusterInUseException;\nexports.CloudHsmClusterInvalidConfigurationException = CloudHsmClusterInvalidConfigurationException;\nexports.CloudHsmClusterNotActiveException = CloudHsmClusterNotActiveException;\nexports.CloudHsmClusterNotFoundException = CloudHsmClusterNotFoundException;\nexports.CloudHsmClusterNotRelatedException = CloudHsmClusterNotRelatedException;\nexports.ConflictException = ConflictException;\nexports.ConnectCustomKeyStoreCommand = ConnectCustomKeyStoreCommand;\nexports.ConnectionErrorCodeType = ConnectionErrorCodeType;\nexports.ConnectionStateType = ConnectionStateType;\nexports.CreateAliasCommand = CreateAliasCommand;\nexports.CreateCustomKeyStoreCommand = CreateCustomKeyStoreCommand;\nexports.CreateCustomKeyStoreRequestFilterSensitiveLog = CreateCustomKeyStoreRequestFilterSensitiveLog;\nexports.CreateGrantCommand = CreateGrantCommand;\nexports.CreateKeyCommand = CreateKeyCommand;\nexports.CustomKeyStoreHasCMKsException = CustomKeyStoreHasCMKsException;\nexports.CustomKeyStoreInvalidStateException = CustomKeyStoreInvalidStateException;\nexports.CustomKeyStoreNameInUseException = CustomKeyStoreNameInUseException;\nexports.CustomKeyStoreNotFoundException = CustomKeyStoreNotFoundException;\nexports.CustomKeyStoreType = CustomKeyStoreType;\nexports.CustomKeyStoresListEntryFilterSensitiveLog = CustomKeyStoresListEntryFilterSensitiveLog;\nexports.CustomerMasterKeySpec = CustomerMasterKeySpec;\nexports.DataKeyPairSpec = DataKeyPairSpec;\nexports.DataKeySpec = DataKeySpec;\nexports.DecryptCommand = DecryptCommand;\nexports.DecryptResponseFilterSensitiveLog = DecryptResponseFilterSensitiveLog;\nexports.DeleteAliasCommand = DeleteAliasCommand;\nexports.DeleteCustomKeyStoreCommand = DeleteCustomKeyStoreCommand;\nexports.DeleteImportedKeyMaterialCommand = DeleteImportedKeyMaterialCommand;\nexports.DependencyTimeoutException = DependencyTimeoutException;\nexports.DeriveSharedSecretCommand = DeriveSharedSecretCommand;\nexports.DeriveSharedSecretResponseFilterSensitiveLog = DeriveSharedSecretResponseFilterSensitiveLog;\nexports.DescribeCustomKeyStoresCommand = DescribeCustomKeyStoresCommand;\nexports.DescribeCustomKeyStoresResponseFilterSensitiveLog = DescribeCustomKeyStoresResponseFilterSensitiveLog;\nexports.DescribeKeyCommand = DescribeKeyCommand;\nexports.DisableKeyCommand = DisableKeyCommand;\nexports.DisableKeyRotationCommand = DisableKeyRotationCommand;\nexports.DisabledException = DisabledException;\nexports.DisconnectCustomKeyStoreCommand = DisconnectCustomKeyStoreCommand;\nexports.DryRunOperationException = DryRunOperationException;\nexports.EnableKeyCommand = EnableKeyCommand;\nexports.EnableKeyRotationCommand = EnableKeyRotationCommand;\nexports.EncryptCommand = EncryptCommand;\nexports.EncryptRequestFilterSensitiveLog = EncryptRequestFilterSensitiveLog;\nexports.EncryptionAlgorithmSpec = EncryptionAlgorithmSpec;\nexports.ExpirationModelType = ExpirationModelType;\nexports.ExpiredImportTokenException = ExpiredImportTokenException;\nexports.GenerateDataKeyCommand = GenerateDataKeyCommand;\nexports.GenerateDataKeyPairCommand = GenerateDataKeyPairCommand;\nexports.GenerateDataKeyPairResponseFilterSensitiveLog = GenerateDataKeyPairResponseFilterSensitiveLog;\nexports.GenerateDataKeyPairWithoutPlaintextCommand = GenerateDataKeyPairWithoutPlaintextCommand;\nexports.GenerateDataKeyResponseFilterSensitiveLog = GenerateDataKeyResponseFilterSensitiveLog;\nexports.GenerateDataKeyWithoutPlaintextCommand = GenerateDataKeyWithoutPlaintextCommand;\nexports.GenerateMacCommand = GenerateMacCommand;\nexports.GenerateMacRequestFilterSensitiveLog = GenerateMacRequestFilterSensitiveLog;\nexports.GenerateRandomCommand = GenerateRandomCommand;\nexports.GenerateRandomResponseFilterSensitiveLog = GenerateRandomResponseFilterSensitiveLog;\nexports.GetKeyPolicyCommand = GetKeyPolicyCommand;\nexports.GetKeyRotationStatusCommand = GetKeyRotationStatusCommand;\nexports.GetParametersForImportCommand = GetParametersForImportCommand;\nexports.GetParametersForImportResponseFilterSensitiveLog = GetParametersForImportResponseFilterSensitiveLog;\nexports.GetPublicKeyCommand = GetPublicKeyCommand;\nexports.GrantOperation = GrantOperation;\nexports.ImportKeyMaterialCommand = ImportKeyMaterialCommand;\nexports.ImportState = ImportState;\nexports.ImportType = ImportType;\nexports.IncludeKeyMaterial = IncludeKeyMaterial;\nexports.IncorrectKeyException = IncorrectKeyException;\nexports.IncorrectKeyMaterialException = IncorrectKeyMaterialException;\nexports.IncorrectTrustAnchorException = IncorrectTrustAnchorException;\nexports.InvalidAliasNameException = InvalidAliasNameException;\nexports.InvalidArnException = InvalidArnException;\nexports.InvalidCiphertextException = InvalidCiphertextException;\nexports.InvalidGrantIdException = InvalidGrantIdException;\nexports.InvalidGrantTokenException = InvalidGrantTokenException;\nexports.InvalidImportTokenException = InvalidImportTokenException;\nexports.InvalidKeyUsageException = InvalidKeyUsageException;\nexports.InvalidMarkerException = InvalidMarkerException;\nexports.KMS = KMS;\nexports.KMSClient = KMSClient;\nexports.KMSInternalException = KMSInternalException;\nexports.KMSInvalidMacException = KMSInvalidMacException;\nexports.KMSInvalidSignatureException = KMSInvalidSignatureException;\nexports.KMSInvalidStateException = KMSInvalidStateException;\nexports.KMSServiceException = KMSServiceException;\nexports.KeyAgreementAlgorithmSpec = KeyAgreementAlgorithmSpec;\nexports.KeyEncryptionMechanism = KeyEncryptionMechanism;\nexports.KeyManagerType = KeyManagerType;\nexports.KeyMaterialState = KeyMaterialState;\nexports.KeySpec = KeySpec;\nexports.KeyState = KeyState;\nexports.KeyUnavailableException = KeyUnavailableException;\nexports.KeyUsageType = KeyUsageType;\nexports.LimitExceededException = LimitExceededException;\nexports.ListAliasesCommand = ListAliasesCommand;\nexports.ListGrantsCommand = ListGrantsCommand;\nexports.ListKeyPoliciesCommand = ListKeyPoliciesCommand;\nexports.ListKeyRotationsCommand = ListKeyRotationsCommand;\nexports.ListKeysCommand = ListKeysCommand;\nexports.ListResourceTagsCommand = ListResourceTagsCommand;\nexports.ListRetirableGrantsCommand = ListRetirableGrantsCommand;\nexports.MacAlgorithmSpec = MacAlgorithmSpec;\nexports.MalformedPolicyDocumentException = MalformedPolicyDocumentException;\nexports.MessageType = MessageType;\nexports.MultiRegionKeyType = MultiRegionKeyType;\nexports.NotFoundException = NotFoundException;\nexports.OriginType = OriginType;\nexports.PutKeyPolicyCommand = PutKeyPolicyCommand;\nexports.ReEncryptCommand = ReEncryptCommand;\nexports.ReplicateKeyCommand = ReplicateKeyCommand;\nexports.RetireGrantCommand = RetireGrantCommand;\nexports.RevokeGrantCommand = RevokeGrantCommand;\nexports.RotateKeyOnDemandCommand = RotateKeyOnDemandCommand;\nexports.RotationType = RotationType;\nexports.ScheduleKeyDeletionCommand = ScheduleKeyDeletionCommand;\nexports.SignCommand = SignCommand;\nexports.SignRequestFilterSensitiveLog = SignRequestFilterSensitiveLog;\nexports.SigningAlgorithmSpec = SigningAlgorithmSpec;\nexports.TagException = TagException;\nexports.TagResourceCommand = TagResourceCommand;\nexports.UnsupportedOperationException = UnsupportedOperationException;\nexports.UntagResourceCommand = UntagResourceCommand;\nexports.UpdateAliasCommand = UpdateAliasCommand;\nexports.UpdateCustomKeyStoreCommand = UpdateCustomKeyStoreCommand;\nexports.UpdateCustomKeyStoreRequestFilterSensitiveLog = UpdateCustomKeyStoreRequestFilterSensitiveLog;\nexports.UpdateKeyDescriptionCommand = UpdateKeyDescriptionCommand;\nexports.UpdatePrimaryRegionCommand = UpdatePrimaryRegionCommand;\nexports.VerifyCommand = VerifyCommand;\nexports.VerifyMacCommand = VerifyMacCommand;\nexports.VerifyMacRequestFilterSensitiveLog = VerifyMacRequestFilterSensitiveLog;\nexports.VerifyRequestFilterSensitiveLog = VerifyRequestFilterSensitiveLog;\nexports.WrappingKeySpec = WrappingKeySpec;\nexports.XksKeyAlreadyInUseException = XksKeyAlreadyInUseException;\nexports.XksKeyInvalidConfigurationException = XksKeyInvalidConfigurationException;\nexports.XksKeyNotFoundException = XksKeyNotFoundException;\nexports.XksProxyAuthenticationCredentialTypeFilterSensitiveLog = XksProxyAuthenticationCredentialTypeFilterSensitiveLog;\nexports.XksProxyConfigurationTypeFilterSensitiveLog = XksProxyConfigurationTypeFilterSensitiveLog;\nexports.XksProxyConnectivityType = XksProxyConnectivityType;\nexports.XksProxyIncorrectAuthenticationCredentialException = XksProxyIncorrectAuthenticationCredentialException;\nexports.XksProxyInvalidConfigurationException = XksProxyInvalidConfigurationException;\nexports.XksProxyInvalidResponseException = XksProxyInvalidResponseException;\nexports.XksProxyUriEndpointInUseException = XksProxyUriEndpointInUseException;\nexports.XksProxyUriInUseException = XksProxyUriInUseException;\nexports.XksProxyUriUnreachableException = XksProxyUriUnreachableException;\nexports.XksProxyVpcEndpointServiceInUseException = XksProxyVpcEndpointServiceInUseException;\nexports.XksProxyVpcEndpointServiceInvalidConfigurationException = XksProxyVpcEndpointServiceInvalidConfigurationException;\nexports.XksProxyVpcEndpointServiceNotFoundException = XksProxyVpcEndpointServiceNotFoundException;\nexports.paginateDescribeCustomKeyStores = paginateDescribeCustomKeyStores;\nexports.paginateListAliases = paginateListAliases;\nexports.paginateListGrants = paginateListGrants;\nexports.paginateListKeyPolicies = paginateListKeyPolicies;\nexports.paginateListKeyRotations = paginateListKeyRotations;\nexports.paginateListKeys = paginateListKeys;\nexports.paginateListResourceTags = paginateListResourceTags;\nexports.paginateListRetirableGrants = paginateListRetirableGrants;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveHttpAuthSchemeConfig = exports.defaultSecretsManagerHttpAuthSchemeProvider = exports.defaultSecretsManagerHttpAuthSchemeParametersProvider = void 0;\nconst core_1 = require(\"@aws-sdk/core\");\nconst util_middleware_1 = require(\"@smithy/util-middleware\");\nconst defaultSecretsManagerHttpAuthSchemeParametersProvider = async (config, context, input) => {\n    return {\n        operation: (0, util_middleware_1.getSmithyContext)(context).operation,\n        region: (await (0, util_middleware_1.normalizeProvider)(config.region)()) ||\n            (() => {\n                throw new Error(\"expected `region` to be configured for `aws.auth#sigv4`\");\n            })(),\n    };\n};\nexports.defaultSecretsManagerHttpAuthSchemeParametersProvider = defaultSecretsManagerHttpAuthSchemeParametersProvider;\nfunction createAwsAuthSigv4HttpAuthOption(authParameters) {\n    return {\n        schemeId: \"aws.auth#sigv4\",\n        signingProperties: {\n            name: \"secretsmanager\",\n            region: authParameters.region,\n        },\n        propertiesExtractor: (config, context) => ({\n            signingProperties: {\n                config,\n                context,\n            },\n        }),\n    };\n}\nconst defaultSecretsManagerHttpAuthSchemeProvider = (authParameters) => {\n    const options = [];\n    switch (authParameters.operation) {\n        default: {\n            options.push(createAwsAuthSigv4HttpAuthOption(authParameters));\n        }\n    }\n    return options;\n};\nexports.defaultSecretsManagerHttpAuthSchemeProvider = defaultSecretsManagerHttpAuthSchemeProvider;\nconst resolveHttpAuthSchemeConfig = (config) => {\n    const config_0 = (0, core_1.resolveAwsSdkSigV4Config)(config);\n    return Object.assign(config_0, {\n        authSchemePreference: (0, util_middleware_1.normalizeProvider)(config.authSchemePreference ?? []),\n    });\n};\nexports.resolveHttpAuthSchemeConfig = resolveHttpAuthSchemeConfig;\n", "{\n  \"name\": \"@aws-sdk/client-secrets-manager\",\n  \"description\": \"AWS SDK for JavaScript Secrets Manager Client for Node.js, Browser and React Native\",\n  \"version\": \"3.908.0\",\n  \"scripts\": {\n    \"build\": \"concurrently 'yarn:build:cjs' 'yarn:build:es' 'yarn:build:types'\",\n    \"build:cjs\": \"node ../../scripts/compilation/inline client-secrets-manager\",\n    \"build:es\": \"tsc -p tsconfig.es.json\",\n    \"build:include:deps\": \"lerna run --scope $npm_package_name --include-dependencies build\",\n    \"build:types\": \"tsc -p tsconfig.types.json\",\n    \"build:types:downlevel\": \"downlevel-dts dist-types dist-types/ts3.4\",\n    \"clean\": \"rimraf ./dist-* && rimraf *.tsbuildinfo\",\n    \"extract:docs\": \"api-extractor run --local\",\n    \"generate:client\": \"node ../../scripts/generate-clients/single-service --solo secrets-manager\"\n  },\n  \"main\": \"./dist-cjs/index.js\",\n  \"types\": \"./dist-types/index.d.ts\",\n  \"module\": \"./dist-es/index.js\",\n  \"sideEffects\": false,\n  \"dependencies\": {\n    \"@aws-crypto/sha256-browser\": \"5.2.0\",\n    \"@aws-crypto/sha256-js\": \"5.2.0\",\n    \"@aws-sdk/core\": \"3.908.0\",\n    \"@aws-sdk/credential-provider-node\": \"3.908.0\",\n    \"@aws-sdk/middleware-host-header\": \"3.901.0\",\n    \"@aws-sdk/middleware-logger\": \"3.901.0\",\n    \"@aws-sdk/middleware-recursion-detection\": \"3.901.0\",\n    \"@aws-sdk/middleware-user-agent\": \"3.908.0\",\n    \"@aws-sdk/region-config-resolver\": \"3.901.0\",\n    \"@aws-sdk/types\": \"3.901.0\",\n    \"@aws-sdk/util-endpoints\": \"3.901.0\",\n    \"@aws-sdk/util-user-agent-browser\": \"3.907.0\",\n    \"@aws-sdk/util-user-agent-node\": \"3.908.0\",\n    \"@smithy/config-resolver\": \"^4.3.0\",\n    \"@smithy/core\": \"^3.15.0\",\n    \"@smithy/fetch-http-handler\": \"^5.3.1\",\n    \"@smithy/hash-node\": \"^4.2.0\",\n    \"@smithy/invalid-dependency\": \"^4.2.0\",\n    \"@smithy/middleware-content-length\": \"^4.2.0\",\n    \"@smithy/middleware-endpoint\": \"^4.3.1\",\n    \"@smithy/middleware-retry\": \"^4.4.1\",\n    \"@smithy/middleware-serde\": \"^4.2.0\",\n    \"@smithy/middleware-stack\": \"^4.2.0\",\n    \"@smithy/node-config-provider\": \"^4.3.0\",\n    \"@smithy/node-http-handler\": \"^4.3.0\",\n    \"@smithy/protocol-http\": \"^5.3.0\",\n    \"@smithy/smithy-client\": \"^4.7.1\",\n    \"@smithy/types\": \"^4.6.0\",\n    \"@smithy/url-parser\": \"^4.2.0\",\n    \"@smithy/util-base64\": \"^4.3.0\",\n    \"@smithy/util-body-length-browser\": \"^4.2.0\",\n    \"@smithy/util-body-length-node\": \"^4.2.1\",\n    \"@smithy/util-defaults-mode-browser\": \"^4.3.0\",\n    \"@smithy/util-defaults-mode-node\": \"^4.2.1\",\n    \"@smithy/util-endpoints\": \"^3.2.0\",\n    \"@smithy/util-middleware\": \"^4.2.0\",\n    \"@smithy/util-retry\": \"^4.2.0\",\n    \"@smithy/util-utf8\": \"^4.2.0\",\n    \"@smithy/uuid\": \"^1.1.0\",\n    \"tslib\": \"^2.6.2\"\n  },\n  \"devDependencies\": {\n    \"@tsconfig/node18\": \"18.2.4\",\n    \"@types/node\": \"^18.19.69\",\n    \"concurrently\": \"7.0.0\",\n    \"downlevel-dts\": \"0.10.1\",\n    \"rimraf\": \"3.0.2\",\n    \"typescript\": \"~5.8.3\"\n  },\n  \"engines\": {\n    \"node\": \">=18.0.0\"\n  },\n  \"typesVersions\": {\n    \"<4.0\": {\n      \"dist-types/*\": [\n        \"dist-types/ts3.4/*\"\n      ]\n    }\n  },\n  \"files\": [\n    \"dist-*/**\"\n  ],\n  \"author\": {\n    \"name\": \"AWS SDK for JavaScript Team\",\n    \"url\": \"https://aws.amazon.com/javascript/\"\n  },\n  \"license\": \"Apache-2.0\",\n  \"browser\": {\n    \"./dist-es/runtimeConfig\": \"./dist-es/runtimeConfig.browser\"\n  },\n  \"react-native\": {\n    \"./dist-es/runtimeConfig\": \"./dist-es/runtimeConfig.native\"\n  },\n  \"homepage\": \"https://github.com/aws/aws-sdk-js-v3/tree/main/clients/client-secrets-manager\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/aws/aws-sdk-js-v3.git\",\n    \"directory\": \"clients/client-secrets-manager\"\n  }\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromBase64 = void 0;\nconst util_buffer_from_1 = require(\"@smithy/util-buffer-from\");\nconst BASE64_REGEX = /^[A-Za-z0-9+/]*={0,2}$/;\nconst fromBase64 = (input) => {\n    if ((input.length * 3) % 4 !== 0) {\n        throw new TypeError(`Incorrect padding on base64 string.`);\n    }\n    if (!BASE64_REGEX.exec(input)) {\n        throw new TypeError(`Invalid base64 string.`);\n    }\n    const buffer = (0, util_buffer_from_1.fromString)(input, \"base64\");\n    return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n};\nexports.fromBase64 = fromBase64;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toBase64 = void 0;\nconst util_buffer_from_1 = require(\"@smithy/util-buffer-from\");\nconst util_utf8_1 = require(\"@smithy/util-utf8\");\nconst toBase64 = (_input) => {\n    let input;\n    if (typeof _input === \"string\") {\n        input = (0, util_utf8_1.fromUtf8)(_input);\n    }\n    else {\n        input = _input;\n    }\n    if (typeof input !== \"object\" || typeof input.byteOffset !== \"number\" || typeof input.byteLength !== \"number\") {\n        throw new Error(\"@smithy/util-base64: toBase64 encoder function only accepts string | Uint8Array.\");\n    }\n    return (0, util_buffer_from_1.fromArrayBuffer)(input.buffer, input.byteOffset, input.byteLength).toString(\"base64\");\n};\nexports.toBase64 = toBase64;\n", "'use strict';\n\nvar fromBase64 = require('./fromBase64');\nvar toBase64 = require('./toBase64');\n\n\n\nObject.keys(fromBase64).forEach(function (k) {\n\tif (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () { return fromBase64[k]; }\n\t});\n});\nObject.keys(toBase64).forEach(function (k) {\n\tif (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () { return toBase64[k]; }\n\t});\n});\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ruleSet = void 0;\nconst y = \"required\", z = \"fn\", A = \"argv\", B = \"ref\", C = \"properties\", D = \"headers\";\nconst a = true, b = \"isSet\", c = \"booleanEquals\", d = \"error\", e = \"endpoint\", f = \"tree\", g = \"PartitionResult\", h = \"stringEquals\", i = { [y]: false, \"type\": \"String\" }, j = { [y]: true, \"default\": false, \"type\": \"Boolean\" }, k = { [B]: \"Endpoint\" }, l = { [z]: c, [A]: [{ [B]: \"UseFIPS\" }, true] }, m = { [z]: c, [A]: [{ [B]: \"UseDualStack\" }, true] }, n = {}, o = { [z]: \"getAttr\", [A]: [{ [B]: g }, \"supportsFIPS\"] }, p = { [z]: c, [A]: [true, { [z]: \"getAttr\", [A]: [{ [B]: g }, \"supportsDualStack\"] }] }, q = { [z]: \"getAttr\", [A]: [{ [B]: g }, \"name\"] }, r = { \"url\": \"https://secretsmanager-fips.{Region}.amazonaws.com\", [C]: {}, [D]: {} }, s = { \"url\": \"https://secretsmanager.{Region}.amazonaws.com\", [C]: {}, [D]: {} }, t = [l], u = [m], v = [{ [B]: \"Region\" }], w = [{ [z]: h, [A]: [\"aws\", q] }], x = [{ [z]: h, [A]: [\"aws-us-gov\", q] }];\nconst _data = { version: \"1.0\", parameters: { Region: i, UseDualStack: j, UseFIPS: j, Endpoint: i }, rules: [{ conditions: [{ [z]: b, [A]: [k] }], rules: [{ conditions: t, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", type: d }, { conditions: u, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", type: d }, { endpoint: { url: k, [C]: n, [D]: n }, type: e }], type: f }, { conditions: [{ [z]: b, [A]: v }], rules: [{ conditions: [{ [z]: \"aws.partition\", [A]: v, assign: g }], rules: [{ conditions: [l, m], rules: [{ conditions: [{ [z]: c, [A]: [a, o] }, p], rules: [{ conditions: w, endpoint: r, type: e }, { conditions: x, endpoint: r, type: e }, { endpoint: { url: \"https://secretsmanager-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", [C]: n, [D]: n }, type: e }], type: f }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", type: d }], type: f }, { conditions: t, rules: [{ conditions: [{ [z]: c, [A]: [o, a] }], rules: [{ endpoint: { url: \"https://secretsmanager-fips.{Region}.{PartitionResult#dnsSuffix}\", [C]: n, [D]: n }, type: e }], type: f }, { error: \"FIPS is enabled but this partition does not support FIPS\", type: d }], type: f }, { conditions: u, rules: [{ conditions: [p], rules: [{ conditions: w, endpoint: s, type: e }, { conditions: [{ [z]: h, [A]: [\"aws-cn\", q] }], endpoint: { url: \"https://secretsmanager.{Region}.amazonaws.com.cn\", [C]: n, [D]: n }, type: e }, { conditions: x, endpoint: s, type: e }, { endpoint: { url: \"https://secretsmanager.{Region}.{PartitionResult#dualStackDnsSuffix}\", [C]: n, [D]: n }, type: e }], type: f }, { error: \"DualStack is enabled but this partition does not support DualStack\", type: d }], type: f }, { endpoint: { url: \"https://secretsmanager.{Region}.{PartitionResult#dnsSuffix}\", [C]: n, [D]: n }, type: e }], type: f }], type: f }, { error: \"Invalid Configuration: Missing Region\", type: d }] };\nexports.ruleSet = _data;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultEndpointResolver = void 0;\nconst util_endpoints_1 = require(\"@aws-sdk/util-endpoints\");\nconst util_endpoints_2 = require(\"@smithy/util-endpoints\");\nconst ruleset_1 = require(\"./ruleset\");\nconst cache = new util_endpoints_2.EndpointCache({\n    size: 50,\n    params: [\"Endpoint\", \"Region\", \"UseDualStack\", \"UseFIPS\"],\n});\nconst defaultEndpointResolver = (endpointParams, context = {}) => {\n    return cache.get(endpointParams, () => (0, util_endpoints_2.resolveEndpoint)(ruleset_1.ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    }));\n};\nexports.defaultEndpointResolver = defaultEndpointResolver;\nutil_endpoints_2.customEndpointFunctions.aws = util_endpoints_1.awsEndpointFunctions;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst core_1 = require(\"@aws-sdk/core\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst url_parser_1 = require(\"@smithy/url-parser\");\nconst util_base64_1 = require(\"@smithy/util-base64\");\nconst util_utf8_1 = require(\"@smithy/util-utf8\");\nconst httpAuthSchemeProvider_1 = require(\"./auth/httpAuthSchemeProvider\");\nconst endpointResolver_1 = require(\"./endpoint/endpointResolver\");\nconst getRuntimeConfig = (config) => {\n    return {\n        apiVersion: \"2017-10-17\",\n        base64Decoder: config?.base64Decoder ?? util_base64_1.fromBase64,\n        base64Encoder: config?.base64Encoder ?? util_base64_1.toBase64,\n        disableHostPrefix: config?.disableHostPrefix ?? false,\n        endpointProvider: config?.endpointProvider ?? endpointResolver_1.defaultEndpointResolver,\n        extensions: config?.extensions ?? [],\n        httpAuthSchemeProvider: config?.httpAuthSchemeProvider ?? httpAuthSchemeProvider_1.defaultSecretsManagerHttpAuthSchemeProvider,\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"aws.auth#sigv4\"),\n                signer: new core_1.AwsSdkSigV4Signer(),\n            },\n        ],\n        logger: config?.logger ?? new smithy_client_1.NoOpLogger(),\n        serviceId: config?.serviceId ?? \"Secrets Manager\",\n        urlParser: config?.urlParser ?? url_parser_1.parseUrl,\n        utf8Decoder: config?.utf8Decoder ?? util_utf8_1.fromUtf8,\n        utf8Encoder: config?.utf8Encoder ?? util_utf8_1.toUtf8,\n    };\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst tslib_1 = require(\"tslib\");\nconst package_json_1 = tslib_1.__importDefault(require(\"../package.json\"));\nconst core_1 = require(\"@aws-sdk/core\");\nconst credential_provider_node_1 = require(\"@aws-sdk/credential-provider-node\");\nconst util_user_agent_node_1 = require(\"@aws-sdk/util-user-agent-node\");\nconst config_resolver_1 = require(\"@smithy/config-resolver\");\nconst hash_node_1 = require(\"@smithy/hash-node\");\nconst middleware_retry_1 = require(\"@smithy/middleware-retry\");\nconst node_config_provider_1 = require(\"@smithy/node-config-provider\");\nconst node_http_handler_1 = require(\"@smithy/node-http-handler\");\nconst util_body_length_node_1 = require(\"@smithy/util-body-length-node\");\nconst util_retry_1 = require(\"@smithy/util-retry\");\nconst runtimeConfig_shared_1 = require(\"./runtimeConfig.shared\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst util_defaults_mode_node_1 = require(\"@smithy/util-defaults-mode-node\");\nconst smithy_client_2 = require(\"@smithy/smithy-client\");\nconst getRuntimeConfig = (config) => {\n    (0, smithy_client_2.emitWarningIfUnsupportedVersion)(process.version);\n    const defaultsMode = (0, util_defaults_mode_node_1.resolveDefaultsModeConfig)(config);\n    const defaultConfigProvider = () => defaultsMode().then(smithy_client_1.loadConfigsForDefaultMode);\n    const clientSharedValues = (0, runtimeConfig_shared_1.getRuntimeConfig)(config);\n    (0, core_1.emitWarningIfUnsupportedVersion)(process.version);\n    const loaderConfig = {\n        profile: config?.profile,\n        logger: clientSharedValues.logger,\n    };\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        authSchemePreference: config?.authSchemePreference ?? (0, node_config_provider_1.loadConfig)(core_1.NODE_AUTH_SCHEME_PREFERENCE_OPTIONS, loaderConfig),\n        bodyLengthChecker: config?.bodyLengthChecker ?? util_body_length_node_1.calculateBodyLength,\n        credentialDefaultProvider: config?.credentialDefaultProvider ?? credential_provider_node_1.defaultProvider,\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            (0, util_user_agent_node_1.createDefaultUserAgentProvider)({ serviceId: clientSharedValues.serviceId, clientVersion: package_json_1.default.version }),\n        maxAttempts: config?.maxAttempts ?? (0, node_config_provider_1.loadConfig)(middleware_retry_1.NODE_MAX_ATTEMPT_CONFIG_OPTIONS, config),\n        region: config?.region ??\n            (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_REGION_CONFIG_OPTIONS, { ...config_resolver_1.NODE_REGION_CONFIG_FILE_OPTIONS, ...loaderConfig }),\n        requestHandler: node_http_handler_1.NodeHttpHandler.create(config?.requestHandler ?? defaultConfigProvider),\n        retryMode: config?.retryMode ??\n            (0, node_config_provider_1.loadConfig)({\n                ...middleware_retry_1.NODE_RETRY_MODE_CONFIG_OPTIONS,\n                default: async () => (await defaultConfigProvider()).retryMode || util_retry_1.DEFAULT_RETRY_MODE,\n            }, config),\n        sha256: config?.sha256 ?? hash_node_1.Hash.bind(null, \"sha256\"),\n        streamCollector: config?.streamCollector ?? node_http_handler_1.streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, loaderConfig),\n        useFipsEndpoint: config?.useFipsEndpoint ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, loaderConfig),\n        userAgentAppId: config?.userAgentAppId ?? (0, node_config_provider_1.loadConfig)(util_user_agent_node_1.NODE_APP_ID_CONFIG_OPTIONS, loaderConfig),\n    };\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n", "'use strict';\n\nvar middlewareHostHeader = require('@aws-sdk/middleware-host-header');\nvar middlewareLogger = require('@aws-sdk/middleware-logger');\nvar middlewareRecursionDetection = require('@aws-sdk/middleware-recursion-detection');\nvar middlewareUserAgent = require('@aws-sdk/middleware-user-agent');\nvar configResolver = require('@smithy/config-resolver');\nvar core = require('@smithy/core');\nvar middlewareContentLength = require('@smithy/middleware-content-length');\nvar middlewareEndpoint = require('@smithy/middleware-endpoint');\nvar middlewareRetry = require('@smithy/middleware-retry');\nvar smithyClient = require('@smithy/smithy-client');\nvar httpAuthSchemeProvider = require('./auth/httpAuthSchemeProvider');\nvar runtimeConfig = require('./runtimeConfig');\nvar regionConfigResolver = require('@aws-sdk/region-config-resolver');\nvar protocolHttp = require('@smithy/protocol-http');\nvar middlewareSerde = require('@smithy/middleware-serde');\nvar core$1 = require('@aws-sdk/core');\nvar uuid = require('@smithy/uuid');\n\nconst resolveClientEndpointParameters = (options) => {\n    return Object.assign(options, {\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        defaultSigningName: \"secretsmanager\",\n    });\n};\nconst commonParams = {\n    UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n    Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n    Region: { type: \"builtInParams\", name: \"region\" },\n    UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n};\n\nconst getHttpAuthExtensionConfiguration = (runtimeConfig) => {\n    const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;\n    let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;\n    let _credentials = runtimeConfig.credentials;\n    return {\n        setHttpAuthScheme(httpAuthScheme) {\n            const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);\n            if (index === -1) {\n                _httpAuthSchemes.push(httpAuthScheme);\n            }\n            else {\n                _httpAuthSchemes.splice(index, 1, httpAuthScheme);\n            }\n        },\n        httpAuthSchemes() {\n            return _httpAuthSchemes;\n        },\n        setHttpAuthSchemeProvider(httpAuthSchemeProvider) {\n            _httpAuthSchemeProvider = httpAuthSchemeProvider;\n        },\n        httpAuthSchemeProvider() {\n            return _httpAuthSchemeProvider;\n        },\n        setCredentials(credentials) {\n            _credentials = credentials;\n        },\n        credentials() {\n            return _credentials;\n        },\n    };\n};\nconst resolveHttpAuthRuntimeConfig = (config) => {\n    return {\n        httpAuthSchemes: config.httpAuthSchemes(),\n        httpAuthSchemeProvider: config.httpAuthSchemeProvider(),\n        credentials: config.credentials(),\n    };\n};\n\nconst resolveRuntimeExtensions = (runtimeConfig, extensions) => {\n    const extensionConfiguration = Object.assign(regionConfigResolver.getAwsRegionExtensionConfiguration(runtimeConfig), smithyClient.getDefaultExtensionConfiguration(runtimeConfig), protocolHttp.getHttpHandlerExtensionConfiguration(runtimeConfig), getHttpAuthExtensionConfiguration(runtimeConfig));\n    extensions.forEach((extension) => extension.configure(extensionConfiguration));\n    return Object.assign(runtimeConfig, regionConfigResolver.resolveAwsRegionExtensionConfiguration(extensionConfiguration), smithyClient.resolveDefaultRuntimeConfig(extensionConfiguration), protocolHttp.resolveHttpHandlerRuntimeConfig(extensionConfiguration), resolveHttpAuthRuntimeConfig(extensionConfiguration));\n};\n\nclass SecretsManagerClient extends smithyClient.Client {\n    config;\n    constructor(...[configuration]) {\n        const _config_0 = runtimeConfig.getRuntimeConfig(configuration || {});\n        super(_config_0);\n        this.initConfig = _config_0;\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = middlewareUserAgent.resolveUserAgentConfig(_config_1);\n        const _config_3 = middlewareRetry.resolveRetryConfig(_config_2);\n        const _config_4 = configResolver.resolveRegionConfig(_config_3);\n        const _config_5 = middlewareHostHeader.resolveHostHeaderConfig(_config_4);\n        const _config_6 = middlewareEndpoint.resolveEndpointConfig(_config_5);\n        const _config_7 = httpAuthSchemeProvider.resolveHttpAuthSchemeConfig(_config_6);\n        const _config_8 = resolveRuntimeExtensions(_config_7, configuration?.extensions || []);\n        this.config = _config_8;\n        this.middlewareStack.use(middlewareUserAgent.getUserAgentPlugin(this.config));\n        this.middlewareStack.use(middlewareRetry.getRetryPlugin(this.config));\n        this.middlewareStack.use(middlewareContentLength.getContentLengthPlugin(this.config));\n        this.middlewareStack.use(middlewareHostHeader.getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(middlewareLogger.getLoggerPlugin(this.config));\n        this.middlewareStack.use(middlewareRecursionDetection.getRecursionDetectionPlugin(this.config));\n        this.middlewareStack.use(core.getHttpAuthSchemeEndpointRuleSetPlugin(this.config, {\n            httpAuthSchemeParametersProvider: httpAuthSchemeProvider.defaultSecretsManagerHttpAuthSchemeParametersProvider,\n            identityProviderConfigProvider: async (config) => new core.DefaultIdentityProviderConfig({\n                \"aws.auth#sigv4\": config.credentials,\n            }),\n        }));\n        this.middlewareStack.use(core.getHttpSigningPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\n\nclass SecretsManagerServiceException extends smithyClient.ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, SecretsManagerServiceException.prototype);\n    }\n}\n\nconst FilterNameStringType = {\n    all: \"all\",\n    description: \"description\",\n    name: \"name\",\n    owning_service: \"owning-service\",\n    primary_region: \"primary-region\",\n    tag_key: \"tag-key\",\n    tag_value: \"tag-value\",\n};\nclass DecryptionFailure extends SecretsManagerServiceException {\n    name = \"DecryptionFailure\";\n    $fault = \"client\";\n    Message;\n    constructor(opts) {\n        super({\n            name: \"DecryptionFailure\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, DecryptionFailure.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass InternalServiceError extends SecretsManagerServiceException {\n    name = \"InternalServiceError\";\n    $fault = \"server\";\n    Message;\n    constructor(opts) {\n        super({\n            name: \"InternalServiceError\",\n            $fault: \"server\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InternalServiceError.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass InvalidNextTokenException extends SecretsManagerServiceException {\n    name = \"InvalidNextTokenException\";\n    $fault = \"client\";\n    Message;\n    constructor(opts) {\n        super({\n            name: \"InvalidNextTokenException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InvalidNextTokenException.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass InvalidParameterException extends SecretsManagerServiceException {\n    name = \"InvalidParameterException\";\n    $fault = \"client\";\n    Message;\n    constructor(opts) {\n        super({\n            name: \"InvalidParameterException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InvalidParameterException.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass InvalidRequestException extends SecretsManagerServiceException {\n    name = \"InvalidRequestException\";\n    $fault = \"client\";\n    Message;\n    constructor(opts) {\n        super({\n            name: \"InvalidRequestException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InvalidRequestException.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass ResourceNotFoundException extends SecretsManagerServiceException {\n    name = \"ResourceNotFoundException\";\n    $fault = \"client\";\n    Message;\n    constructor(opts) {\n        super({\n            name: \"ResourceNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);\n        this.Message = opts.Message;\n    }\n}\nconst StatusType = {\n    Failed: \"Failed\",\n    InProgress: \"InProgress\",\n    InSync: \"InSync\",\n};\nclass EncryptionFailure extends SecretsManagerServiceException {\n    name = \"EncryptionFailure\";\n    $fault = \"client\";\n    Message;\n    constructor(opts) {\n        super({\n            name: \"EncryptionFailure\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, EncryptionFailure.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass LimitExceededException extends SecretsManagerServiceException {\n    name = \"LimitExceededException\";\n    $fault = \"client\";\n    Message;\n    constructor(opts) {\n        super({\n            name: \"LimitExceededException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, LimitExceededException.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass MalformedPolicyDocumentException extends SecretsManagerServiceException {\n    name = \"MalformedPolicyDocumentException\";\n    $fault = \"client\";\n    Message;\n    constructor(opts) {\n        super({\n            name: \"MalformedPolicyDocumentException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, MalformedPolicyDocumentException.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass PreconditionNotMetException extends SecretsManagerServiceException {\n    name = \"PreconditionNotMetException\";\n    $fault = \"client\";\n    Message;\n    constructor(opts) {\n        super({\n            name: \"PreconditionNotMetException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, PreconditionNotMetException.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass ResourceExistsException extends SecretsManagerServiceException {\n    name = \"ResourceExistsException\";\n    $fault = \"client\";\n    Message;\n    constructor(opts) {\n        super({\n            name: \"ResourceExistsException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, ResourceExistsException.prototype);\n        this.Message = opts.Message;\n    }\n}\nconst SortOrderType = {\n    asc: \"asc\",\n    desc: \"desc\",\n};\nclass PublicPolicyException extends SecretsManagerServiceException {\n    name = \"PublicPolicyException\";\n    $fault = \"client\";\n    Message;\n    constructor(opts) {\n        super({\n            name: \"PublicPolicyException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, PublicPolicyException.prototype);\n        this.Message = opts.Message;\n    }\n}\nconst SecretValueEntryFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SecretBinary && { SecretBinary: smithyClient.SENSITIVE_STRING }),\n    ...(obj.SecretString && { SecretString: smithyClient.SENSITIVE_STRING }),\n});\nconst BatchGetSecretValueResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SecretValues && { SecretValues: obj.SecretValues.map((item) => SecretValueEntryFilterSensitiveLog(item)) }),\n});\nconst CreateSecretRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SecretBinary && { SecretBinary: smithyClient.SENSITIVE_STRING }),\n    ...(obj.SecretString && { SecretString: smithyClient.SENSITIVE_STRING }),\n});\nconst GetRandomPasswordResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.RandomPassword && { RandomPassword: smithyClient.SENSITIVE_STRING }),\n});\nconst GetSecretValueResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SecretBinary && { SecretBinary: smithyClient.SENSITIVE_STRING }),\n    ...(obj.SecretString && { SecretString: smithyClient.SENSITIVE_STRING }),\n});\nconst PutSecretValueRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SecretBinary && { SecretBinary: smithyClient.SENSITIVE_STRING }),\n    ...(obj.SecretString && { SecretString: smithyClient.SENSITIVE_STRING }),\n    ...(obj.RotationToken && { RotationToken: smithyClient.SENSITIVE_STRING }),\n});\nconst UpdateSecretRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SecretBinary && { SecretBinary: smithyClient.SENSITIVE_STRING }),\n    ...(obj.SecretString && { SecretString: smithyClient.SENSITIVE_STRING }),\n});\n\nconst se_BatchGetSecretValueCommand = async (input, context) => {\n    const headers = sharedHeaders(\"BatchGetSecretValue\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_CancelRotateSecretCommand = async (input, context) => {\n    const headers = sharedHeaders(\"CancelRotateSecret\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_CreateSecretCommand = async (input, context) => {\n    const headers = sharedHeaders(\"CreateSecret\");\n    let body;\n    body = JSON.stringify(se_CreateSecretRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DeleteResourcePolicyCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DeleteResourcePolicy\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DeleteSecretCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DeleteSecret\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DescribeSecretCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeSecret\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_GetRandomPasswordCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetRandomPassword\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_GetResourcePolicyCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetResourcePolicy\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_GetSecretValueCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetSecretValue\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_ListSecretsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListSecrets\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_ListSecretVersionIdsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListSecretVersionIds\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_PutResourcePolicyCommand = async (input, context) => {\n    const headers = sharedHeaders(\"PutResourcePolicy\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_PutSecretValueCommand = async (input, context) => {\n    const headers = sharedHeaders(\"PutSecretValue\");\n    let body;\n    body = JSON.stringify(se_PutSecretValueRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_RemoveRegionsFromReplicationCommand = async (input, context) => {\n    const headers = sharedHeaders(\"RemoveRegionsFromReplication\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_ReplicateSecretToRegionsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ReplicateSecretToRegions\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_RestoreSecretCommand = async (input, context) => {\n    const headers = sharedHeaders(\"RestoreSecret\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_RotateSecretCommand = async (input, context) => {\n    const headers = sharedHeaders(\"RotateSecret\");\n    let body;\n    body = JSON.stringify(se_RotateSecretRequest(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_StopReplicationToReplicaCommand = async (input, context) => {\n    const headers = sharedHeaders(\"StopReplicationToReplica\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_TagResourceCommand = async (input, context) => {\n    const headers = sharedHeaders(\"TagResource\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_UntagResourceCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UntagResource\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_UpdateSecretCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UpdateSecret\");\n    let body;\n    body = JSON.stringify(se_UpdateSecretRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_UpdateSecretVersionStageCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UpdateSecretVersionStage\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_ValidateResourcePolicyCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ValidateResourcePolicy\");\n    let body;\n    body = JSON.stringify(smithyClient._json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst de_BatchGetSecretValueCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = de_BatchGetSecretValueResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_CancelRotateSecretCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = smithyClient._json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_CreateSecretCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = de_CreateSecretResponse(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DeleteResourcePolicyCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = smithyClient._json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DeleteSecretCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = de_DeleteSecretResponse(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeSecretCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeSecretResponse(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetRandomPasswordCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = smithyClient._json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetResourcePolicyCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = smithyClient._json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetSecretValueCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = de_GetSecretValueResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ListSecretsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = de_ListSecretsResponse(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ListSecretVersionIdsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = de_ListSecretVersionIdsResponse(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_PutResourcePolicyCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = smithyClient._json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_PutSecretValueCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = smithyClient._json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_RemoveRegionsFromReplicationCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = de_RemoveRegionsFromReplicationResponse(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ReplicateSecretToRegionsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = de_ReplicateSecretToRegionsResponse(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_RestoreSecretCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = smithyClient._json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_RotateSecretCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = smithyClient._json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_StopReplicationToReplicaCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = smithyClient._json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_TagResourceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await smithyClient.collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return response;\n};\nconst de_UntagResourceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await smithyClient.collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return response;\n};\nconst de_UpdateSecretCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = smithyClient._json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_UpdateSecretVersionStageCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = smithyClient._json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ValidateResourcePolicyCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseJsonBody(output.body, context);\n    let contents = {};\n    contents = smithyClient._json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_CommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await core$1.parseJsonErrorBody(output.body, context),\n    };\n    const errorCode = core$1.loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"DecryptionFailure\":\n        case \"com.amazonaws.secretsmanager#DecryptionFailure\":\n            throw await de_DecryptionFailureRes(parsedOutput);\n        case \"InternalServiceError\":\n        case \"com.amazonaws.secretsmanager#InternalServiceError\":\n            throw await de_InternalServiceErrorRes(parsedOutput);\n        case \"InvalidNextTokenException\":\n        case \"com.amazonaws.secretsmanager#InvalidNextTokenException\":\n            throw await de_InvalidNextTokenExceptionRes(parsedOutput);\n        case \"InvalidParameterException\":\n        case \"com.amazonaws.secretsmanager#InvalidParameterException\":\n            throw await de_InvalidParameterExceptionRes(parsedOutput);\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.secretsmanager#InvalidRequestException\":\n            throw await de_InvalidRequestExceptionRes(parsedOutput);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.secretsmanager#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput);\n        case \"EncryptionFailure\":\n        case \"com.amazonaws.secretsmanager#EncryptionFailure\":\n            throw await de_EncryptionFailureRes(parsedOutput);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.secretsmanager#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput);\n        case \"MalformedPolicyDocumentException\":\n        case \"com.amazonaws.secretsmanager#MalformedPolicyDocumentException\":\n            throw await de_MalformedPolicyDocumentExceptionRes(parsedOutput);\n        case \"PreconditionNotMetException\":\n        case \"com.amazonaws.secretsmanager#PreconditionNotMetException\":\n            throw await de_PreconditionNotMetExceptionRes(parsedOutput);\n        case \"ResourceExistsException\":\n        case \"com.amazonaws.secretsmanager#ResourceExistsException\":\n            throw await de_ResourceExistsExceptionRes(parsedOutput);\n        case \"PublicPolicyException\":\n        case \"com.amazonaws.secretsmanager#PublicPolicyException\":\n            throw await de_PublicPolicyExceptionRes(parsedOutput);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nconst de_DecryptionFailureRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new DecryptionFailure({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_EncryptionFailureRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new EncryptionFailure({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_InternalServiceErrorRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new InternalServiceError({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_InvalidNextTokenExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new InvalidNextTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_InvalidParameterExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new InvalidParameterException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_InvalidRequestExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new InvalidRequestException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_LimitExceededExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new LimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_MalformedPolicyDocumentExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new MalformedPolicyDocumentException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_PreconditionNotMetExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new PreconditionNotMetException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_PublicPolicyExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new PublicPolicyException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_ResourceExistsExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new ResourceExistsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_ResourceNotFoundExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = smithyClient._json(body);\n    const exception = new ResourceNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst se_CreateSecretRequest = (input, context) => {\n    return smithyClient.take(input, {\n        AddReplicaRegions: smithyClient._json,\n        ClientRequestToken: [true, (_) => _ ?? uuid.v4()],\n        Description: [],\n        ForceOverwriteReplicaSecret: [],\n        KmsKeyId: [],\n        Name: [],\n        SecretBinary: context.base64Encoder,\n        SecretString: [],\n        Tags: smithyClient._json,\n    });\n};\nconst se_PutSecretValueRequest = (input, context) => {\n    return smithyClient.take(input, {\n        ClientRequestToken: [true, (_) => _ ?? uuid.v4()],\n        RotationToken: [],\n        SecretBinary: context.base64Encoder,\n        SecretId: [],\n        SecretString: [],\n        VersionStages: smithyClient._json,\n    });\n};\nconst se_RotateSecretRequest = (input, context) => {\n    return smithyClient.take(input, {\n        ClientRequestToken: [true, (_) => _ ?? uuid.v4()],\n        RotateImmediately: [],\n        RotationLambdaARN: [],\n        RotationRules: smithyClient._json,\n        SecretId: [],\n    });\n};\nconst se_UpdateSecretRequest = (input, context) => {\n    return smithyClient.take(input, {\n        ClientRequestToken: [true, (_) => _ ?? uuid.v4()],\n        Description: [],\n        KmsKeyId: [],\n        SecretBinary: context.base64Encoder,\n        SecretId: [],\n        SecretString: [],\n    });\n};\nconst de_BatchGetSecretValueResponse = (output, context) => {\n    return smithyClient.take(output, {\n        Errors: smithyClient._json,\n        NextToken: smithyClient.expectString,\n        SecretValues: (_) => de_SecretValuesType(_, context),\n    });\n};\nconst de_CreateSecretResponse = (output, context) => {\n    return smithyClient.take(output, {\n        ARN: smithyClient.expectString,\n        Name: smithyClient.expectString,\n        ReplicationStatus: (_) => de_ReplicationStatusListType(_),\n        VersionId: smithyClient.expectString,\n    });\n};\nconst de_DeleteSecretResponse = (output, context) => {\n    return smithyClient.take(output, {\n        ARN: smithyClient.expectString,\n        DeletionDate: (_) => smithyClient.expectNonNull(smithyClient.parseEpochTimestamp(smithyClient.expectNumber(_))),\n        Name: smithyClient.expectString,\n    });\n};\nconst de_DescribeSecretResponse = (output, context) => {\n    return smithyClient.take(output, {\n        ARN: smithyClient.expectString,\n        CreatedDate: (_) => smithyClient.expectNonNull(smithyClient.parseEpochTimestamp(smithyClient.expectNumber(_))),\n        DeletedDate: (_) => smithyClient.expectNonNull(smithyClient.parseEpochTimestamp(smithyClient.expectNumber(_))),\n        Description: smithyClient.expectString,\n        KmsKeyId: smithyClient.expectString,\n        LastAccessedDate: (_) => smithyClient.expectNonNull(smithyClient.parseEpochTimestamp(smithyClient.expectNumber(_))),\n        LastChangedDate: (_) => smithyClient.expectNonNull(smithyClient.parseEpochTimestamp(smithyClient.expectNumber(_))),\n        LastRotatedDate: (_) => smithyClient.expectNonNull(smithyClient.parseEpochTimestamp(smithyClient.expectNumber(_))),\n        Name: smithyClient.expectString,\n        NextRotationDate: (_) => smithyClient.expectNonNull(smithyClient.parseEpochTimestamp(smithyClient.expectNumber(_))),\n        OwningService: smithyClient.expectString,\n        PrimaryRegion: smithyClient.expectString,\n        ReplicationStatus: (_) => de_ReplicationStatusListType(_),\n        RotationEnabled: smithyClient.expectBoolean,\n        RotationLambdaARN: smithyClient.expectString,\n        RotationRules: smithyClient._json,\n        Tags: smithyClient._json,\n        VersionIdsToStages: smithyClient._json,\n    });\n};\nconst de_GetSecretValueResponse = (output, context) => {\n    return smithyClient.take(output, {\n        ARN: smithyClient.expectString,\n        CreatedDate: (_) => smithyClient.expectNonNull(smithyClient.parseEpochTimestamp(smithyClient.expectNumber(_))),\n        Name: smithyClient.expectString,\n        SecretBinary: context.base64Decoder,\n        SecretString: smithyClient.expectString,\n        VersionId: smithyClient.expectString,\n        VersionStages: smithyClient._json,\n    });\n};\nconst de_ListSecretsResponse = (output, context) => {\n    return smithyClient.take(output, {\n        NextToken: smithyClient.expectString,\n        SecretList: (_) => de_SecretListType(_),\n    });\n};\nconst de_ListSecretVersionIdsResponse = (output, context) => {\n    return smithyClient.take(output, {\n        ARN: smithyClient.expectString,\n        Name: smithyClient.expectString,\n        NextToken: smithyClient.expectString,\n        Versions: (_) => de_SecretVersionsListType(_),\n    });\n};\nconst de_RemoveRegionsFromReplicationResponse = (output, context) => {\n    return smithyClient.take(output, {\n        ARN: smithyClient.expectString,\n        ReplicationStatus: (_) => de_ReplicationStatusListType(_),\n    });\n};\nconst de_ReplicateSecretToRegionsResponse = (output, context) => {\n    return smithyClient.take(output, {\n        ARN: smithyClient.expectString,\n        ReplicationStatus: (_) => de_ReplicationStatusListType(_),\n    });\n};\nconst de_ReplicationStatusListType = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ReplicationStatusType(entry);\n    });\n    return retVal;\n};\nconst de_ReplicationStatusType = (output, context) => {\n    return smithyClient.take(output, {\n        KmsKeyId: smithyClient.expectString,\n        LastAccessedDate: (_) => smithyClient.expectNonNull(smithyClient.parseEpochTimestamp(smithyClient.expectNumber(_))),\n        Region: smithyClient.expectString,\n        Status: smithyClient.expectString,\n        StatusMessage: smithyClient.expectString,\n    });\n};\nconst de_SecretListEntry = (output, context) => {\n    return smithyClient.take(output, {\n        ARN: smithyClient.expectString,\n        CreatedDate: (_) => smithyClient.expectNonNull(smithyClient.parseEpochTimestamp(smithyClient.expectNumber(_))),\n        DeletedDate: (_) => smithyClient.expectNonNull(smithyClient.parseEpochTimestamp(smithyClient.expectNumber(_))),\n        Description: smithyClient.expectString,\n        KmsKeyId: smithyClient.expectString,\n        LastAccessedDate: (_) => smithyClient.expectNonNull(smithyClient.parseEpochTimestamp(smithyClient.expectNumber(_))),\n        LastChangedDate: (_) => smithyClient.expectNonNull(smithyClient.parseEpochTimestamp(smithyClient.expectNumber(_))),\n        LastRotatedDate: (_) => smithyClient.expectNonNull(smithyClient.parseEpochTimestamp(smithyClient.expectNumber(_))),\n        Name: smithyClient.expectString,\n        NextRotationDate: (_) => smithyClient.expectNonNull(smithyClient.parseEpochTimestamp(smithyClient.expectNumber(_))),\n        OwningService: smithyClient.expectString,\n        PrimaryRegion: smithyClient.expectString,\n        RotationEnabled: smithyClient.expectBoolean,\n        RotationLambdaARN: smithyClient.expectString,\n        RotationRules: smithyClient._json,\n        SecretVersionsToStages: smithyClient._json,\n        Tags: smithyClient._json,\n    });\n};\nconst de_SecretListType = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_SecretListEntry(entry);\n    });\n    return retVal;\n};\nconst de_SecretValueEntry = (output, context) => {\n    return smithyClient.take(output, {\n        ARN: smithyClient.expectString,\n        CreatedDate: (_) => smithyClient.expectNonNull(smithyClient.parseEpochTimestamp(smithyClient.expectNumber(_))),\n        Name: smithyClient.expectString,\n        SecretBinary: context.base64Decoder,\n        SecretString: smithyClient.expectString,\n        VersionId: smithyClient.expectString,\n        VersionStages: smithyClient._json,\n    });\n};\nconst de_SecretValuesType = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_SecretValueEntry(entry, context);\n    });\n    return retVal;\n};\nconst de_SecretVersionsListEntry = (output, context) => {\n    return smithyClient.take(output, {\n        CreatedDate: (_) => smithyClient.expectNonNull(smithyClient.parseEpochTimestamp(smithyClient.expectNumber(_))),\n        KmsKeyIds: smithyClient._json,\n        LastAccessedDate: (_) => smithyClient.expectNonNull(smithyClient.parseEpochTimestamp(smithyClient.expectNumber(_))),\n        VersionId: smithyClient.expectString,\n        VersionStages: smithyClient._json,\n    });\n};\nconst de_SecretVersionsListType = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_SecretVersionsListEntry(entry);\n    });\n    return retVal;\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst throwDefaultError = smithyClient.withBaseException(SecretsManagerServiceException);\nconst buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const contents = {\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        path: basePath.endsWith(\"/\") ? basePath.slice(0, -1) + path : basePath + path,\n        headers,\n    };\n    if (body !== undefined) {\n        contents.body = body;\n    }\n    return new protocolHttp.HttpRequest(contents);\n};\nfunction sharedHeaders(operation) {\n    return {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": `secretsmanager.${operation}`,\n    };\n}\n\nclass BatchGetSecretValueCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"secretsmanager\", \"BatchGetSecretValue\", {})\n    .n(\"SecretsManagerClient\", \"BatchGetSecretValueCommand\")\n    .f(void 0, BatchGetSecretValueResponseFilterSensitiveLog)\n    .ser(se_BatchGetSecretValueCommand)\n    .de(de_BatchGetSecretValueCommand)\n    .build() {\n}\n\nclass CancelRotateSecretCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"secretsmanager\", \"CancelRotateSecret\", {})\n    .n(\"SecretsManagerClient\", \"CancelRotateSecretCommand\")\n    .f(void 0, void 0)\n    .ser(se_CancelRotateSecretCommand)\n    .de(de_CancelRotateSecretCommand)\n    .build() {\n}\n\nclass CreateSecretCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"secretsmanager\", \"CreateSecret\", {})\n    .n(\"SecretsManagerClient\", \"CreateSecretCommand\")\n    .f(CreateSecretRequestFilterSensitiveLog, void 0)\n    .ser(se_CreateSecretCommand)\n    .de(de_CreateSecretCommand)\n    .build() {\n}\n\nclass DeleteResourcePolicyCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"secretsmanager\", \"DeleteResourcePolicy\", {})\n    .n(\"SecretsManagerClient\", \"DeleteResourcePolicyCommand\")\n    .f(void 0, void 0)\n    .ser(se_DeleteResourcePolicyCommand)\n    .de(de_DeleteResourcePolicyCommand)\n    .build() {\n}\n\nclass DeleteSecretCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"secretsmanager\", \"DeleteSecret\", {})\n    .n(\"SecretsManagerClient\", \"DeleteSecretCommand\")\n    .f(void 0, void 0)\n    .ser(se_DeleteSecretCommand)\n    .de(de_DeleteSecretCommand)\n    .build() {\n}\n\nclass DescribeSecretCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"secretsmanager\", \"DescribeSecret\", {})\n    .n(\"SecretsManagerClient\", \"DescribeSecretCommand\")\n    .f(void 0, void 0)\n    .ser(se_DescribeSecretCommand)\n    .de(de_DescribeSecretCommand)\n    .build() {\n}\n\nclass GetRandomPasswordCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"secretsmanager\", \"GetRandomPassword\", {})\n    .n(\"SecretsManagerClient\", \"GetRandomPasswordCommand\")\n    .f(void 0, GetRandomPasswordResponseFilterSensitiveLog)\n    .ser(se_GetRandomPasswordCommand)\n    .de(de_GetRandomPasswordCommand)\n    .build() {\n}\n\nclass GetResourcePolicyCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"secretsmanager\", \"GetResourcePolicy\", {})\n    .n(\"SecretsManagerClient\", \"GetResourcePolicyCommand\")\n    .f(void 0, void 0)\n    .ser(se_GetResourcePolicyCommand)\n    .de(de_GetResourcePolicyCommand)\n    .build() {\n}\n\nclass GetSecretValueCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"secretsmanager\", \"GetSecretValue\", {})\n    .n(\"SecretsManagerClient\", \"GetSecretValueCommand\")\n    .f(void 0, GetSecretValueResponseFilterSensitiveLog)\n    .ser(se_GetSecretValueCommand)\n    .de(de_GetSecretValueCommand)\n    .build() {\n}\n\nclass ListSecretsCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"secretsmanager\", \"ListSecrets\", {})\n    .n(\"SecretsManagerClient\", \"ListSecretsCommand\")\n    .f(void 0, void 0)\n    .ser(se_ListSecretsCommand)\n    .de(de_ListSecretsCommand)\n    .build() {\n}\n\nclass ListSecretVersionIdsCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"secretsmanager\", \"ListSecretVersionIds\", {})\n    .n(\"SecretsManagerClient\", \"ListSecretVersionIdsCommand\")\n    .f(void 0, void 0)\n    .ser(se_ListSecretVersionIdsCommand)\n    .de(de_ListSecretVersionIdsCommand)\n    .build() {\n}\n\nclass PutResourcePolicyCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"secretsmanager\", \"PutResourcePolicy\", {})\n    .n(\"SecretsManagerClient\", \"PutResourcePolicyCommand\")\n    .f(void 0, void 0)\n    .ser(se_PutResourcePolicyCommand)\n    .de(de_PutResourcePolicyCommand)\n    .build() {\n}\n\nclass PutSecretValueCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"secretsmanager\", \"PutSecretValue\", {})\n    .n(\"SecretsManagerClient\", \"PutSecretValueCommand\")\n    .f(PutSecretValueRequestFilterSensitiveLog, void 0)\n    .ser(se_PutSecretValueCommand)\n    .de(de_PutSecretValueCommand)\n    .build() {\n}\n\nclass RemoveRegionsFromReplicationCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"secretsmanager\", \"RemoveRegionsFromReplication\", {})\n    .n(\"SecretsManagerClient\", \"RemoveRegionsFromReplicationCommand\")\n    .f(void 0, void 0)\n    .ser(se_RemoveRegionsFromReplicationCommand)\n    .de(de_RemoveRegionsFromReplicationCommand)\n    .build() {\n}\n\nclass ReplicateSecretToRegionsCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"secretsmanager\", \"ReplicateSecretToRegions\", {})\n    .n(\"SecretsManagerClient\", \"ReplicateSecretToRegionsCommand\")\n    .f(void 0, void 0)\n    .ser(se_ReplicateSecretToRegionsCommand)\n    .de(de_ReplicateSecretToRegionsCommand)\n    .build() {\n}\n\nclass RestoreSecretCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"secretsmanager\", \"RestoreSecret\", {})\n    .n(\"SecretsManagerClient\", \"RestoreSecretCommand\")\n    .f(void 0, void 0)\n    .ser(se_RestoreSecretCommand)\n    .de(de_RestoreSecretCommand)\n    .build() {\n}\n\nclass RotateSecretCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"secretsmanager\", \"RotateSecret\", {})\n    .n(\"SecretsManagerClient\", \"RotateSecretCommand\")\n    .f(void 0, void 0)\n    .ser(se_RotateSecretCommand)\n    .de(de_RotateSecretCommand)\n    .build() {\n}\n\nclass StopReplicationToReplicaCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"secretsmanager\", \"StopReplicationToReplica\", {})\n    .n(\"SecretsManagerClient\", \"StopReplicationToReplicaCommand\")\n    .f(void 0, void 0)\n    .ser(se_StopReplicationToReplicaCommand)\n    .de(de_StopReplicationToReplicaCommand)\n    .build() {\n}\n\nclass TagResourceCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"secretsmanager\", \"TagResource\", {})\n    .n(\"SecretsManagerClient\", \"TagResourceCommand\")\n    .f(void 0, void 0)\n    .ser(se_TagResourceCommand)\n    .de(de_TagResourceCommand)\n    .build() {\n}\n\nclass UntagResourceCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"secretsmanager\", \"UntagResource\", {})\n    .n(\"SecretsManagerClient\", \"UntagResourceCommand\")\n    .f(void 0, void 0)\n    .ser(se_UntagResourceCommand)\n    .de(de_UntagResourceCommand)\n    .build() {\n}\n\nclass UpdateSecretCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"secretsmanager\", \"UpdateSecret\", {})\n    .n(\"SecretsManagerClient\", \"UpdateSecretCommand\")\n    .f(UpdateSecretRequestFilterSensitiveLog, void 0)\n    .ser(se_UpdateSecretCommand)\n    .de(de_UpdateSecretCommand)\n    .build() {\n}\n\nclass UpdateSecretVersionStageCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"secretsmanager\", \"UpdateSecretVersionStage\", {})\n    .n(\"SecretsManagerClient\", \"UpdateSecretVersionStageCommand\")\n    .f(void 0, void 0)\n    .ser(se_UpdateSecretVersionStageCommand)\n    .de(de_UpdateSecretVersionStageCommand)\n    .build() {\n}\n\nclass ValidateResourcePolicyCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"secretsmanager\", \"ValidateResourcePolicy\", {})\n    .n(\"SecretsManagerClient\", \"ValidateResourcePolicyCommand\")\n    .f(void 0, void 0)\n    .ser(se_ValidateResourcePolicyCommand)\n    .de(de_ValidateResourcePolicyCommand)\n    .build() {\n}\n\nconst commands = {\n    BatchGetSecretValueCommand,\n    CancelRotateSecretCommand,\n    CreateSecretCommand,\n    DeleteResourcePolicyCommand,\n    DeleteSecretCommand,\n    DescribeSecretCommand,\n    GetRandomPasswordCommand,\n    GetResourcePolicyCommand,\n    GetSecretValueCommand,\n    ListSecretsCommand,\n    ListSecretVersionIdsCommand,\n    PutResourcePolicyCommand,\n    PutSecretValueCommand,\n    RemoveRegionsFromReplicationCommand,\n    ReplicateSecretToRegionsCommand,\n    RestoreSecretCommand,\n    RotateSecretCommand,\n    StopReplicationToReplicaCommand,\n    TagResourceCommand,\n    UntagResourceCommand,\n    UpdateSecretCommand,\n    UpdateSecretVersionStageCommand,\n    ValidateResourcePolicyCommand,\n};\nclass SecretsManager extends SecretsManagerClient {\n}\nsmithyClient.createAggregatedClient(commands, SecretsManager);\n\nconst paginateBatchGetSecretValue = core.createPaginator(SecretsManagerClient, BatchGetSecretValueCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\nconst paginateListSecretVersionIds = core.createPaginator(SecretsManagerClient, ListSecretVersionIdsCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\nconst paginateListSecrets = core.createPaginator(SecretsManagerClient, ListSecretsCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\nObject.defineProperty(exports, \"$Command\", {\n    enumerable: true,\n    get: function () { return smithyClient.Command; }\n});\nObject.defineProperty(exports, \"__Client\", {\n    enumerable: true,\n    get: function () { return smithyClient.Client; }\n});\nexports.BatchGetSecretValueCommand = BatchGetSecretValueCommand;\nexports.BatchGetSecretValueResponseFilterSensitiveLog = BatchGetSecretValueResponseFilterSensitiveLog;\nexports.CancelRotateSecretCommand = CancelRotateSecretCommand;\nexports.CreateSecretCommand = CreateSecretCommand;\nexports.CreateSecretRequestFilterSensitiveLog = CreateSecretRequestFilterSensitiveLog;\nexports.DecryptionFailure = DecryptionFailure;\nexports.DeleteResourcePolicyCommand = DeleteResourcePolicyCommand;\nexports.DeleteSecretCommand = DeleteSecretCommand;\nexports.DescribeSecretCommand = DescribeSecretCommand;\nexports.EncryptionFailure = EncryptionFailure;\nexports.FilterNameStringType = FilterNameStringType;\nexports.GetRandomPasswordCommand = GetRandomPasswordCommand;\nexports.GetRandomPasswordResponseFilterSensitiveLog = GetRandomPasswordResponseFilterSensitiveLog;\nexports.GetResourcePolicyCommand = GetResourcePolicyCommand;\nexports.GetSecretValueCommand = GetSecretValueCommand;\nexports.GetSecretValueResponseFilterSensitiveLog = GetSecretValueResponseFilterSensitiveLog;\nexports.InternalServiceError = InternalServiceError;\nexports.InvalidNextTokenException = InvalidNextTokenException;\nexports.InvalidParameterException = InvalidParameterException;\nexports.InvalidRequestException = InvalidRequestException;\nexports.LimitExceededException = LimitExceededException;\nexports.ListSecretVersionIdsCommand = ListSecretVersionIdsCommand;\nexports.ListSecretsCommand = ListSecretsCommand;\nexports.MalformedPolicyDocumentException = MalformedPolicyDocumentException;\nexports.PreconditionNotMetException = PreconditionNotMetException;\nexports.PublicPolicyException = PublicPolicyException;\nexports.PutResourcePolicyCommand = PutResourcePolicyCommand;\nexports.PutSecretValueCommand = PutSecretValueCommand;\nexports.PutSecretValueRequestFilterSensitiveLog = PutSecretValueRequestFilterSensitiveLog;\nexports.RemoveRegionsFromReplicationCommand = RemoveRegionsFromReplicationCommand;\nexports.ReplicateSecretToRegionsCommand = ReplicateSecretToRegionsCommand;\nexports.ResourceExistsException = ResourceExistsException;\nexports.ResourceNotFoundException = ResourceNotFoundException;\nexports.RestoreSecretCommand = RestoreSecretCommand;\nexports.RotateSecretCommand = RotateSecretCommand;\nexports.SecretValueEntryFilterSensitiveLog = SecretValueEntryFilterSensitiveLog;\nexports.SecretsManager = SecretsManager;\nexports.SecretsManagerClient = SecretsManagerClient;\nexports.SecretsManagerServiceException = SecretsManagerServiceException;\nexports.SortOrderType = SortOrderType;\nexports.StatusType = StatusType;\nexports.StopReplicationToReplicaCommand = StopReplicationToReplicaCommand;\nexports.TagResourceCommand = TagResourceCommand;\nexports.UntagResourceCommand = UntagResourceCommand;\nexports.UpdateSecretCommand = UpdateSecretCommand;\nexports.UpdateSecretRequestFilterSensitiveLog = UpdateSecretRequestFilterSensitiveLog;\nexports.UpdateSecretVersionStageCommand = UpdateSecretVersionStageCommand;\nexports.ValidateResourcePolicyCommand = ValidateResourcePolicyCommand;\nexports.paginateBatchGetSecretValue = paginateBatchGetSecretValue;\nexports.paginateListSecretVersionIds = paginateListSecretVersionIds;\nexports.paginateListSecrets = paginateListSecrets;\n", "'use strict';\n\nvar utilConfigProvider = require('@smithy/util-config-provider');\nvar core = require('@smithy/core');\nvar protocolHttp = require('@smithy/protocol-http');\nvar zlib = require('zlib');\nvar utilUtf8 = require('@smithy/util-utf8');\nvar util = require('util');\nvar isArrayBuffer = require('@smithy/is-array-buffer');\nvar utilMiddleware = require('@smithy/util-middleware');\n\nconst NODE_DISABLE_REQUEST_COMPRESSION_ENV_NAME = \"AWS_DISABLE_REQUEST_COMPRESSION\";\nconst NODE_DISABLE_REQUEST_COMPRESSION_INI_NAME = \"disable_request_compression\";\nconst DEFAULT_DISABLE_REQUEST_COMPRESSION = false;\nconst NODE_DISABLE_REQUEST_COMPRESSION_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => utilConfigProvider.booleanSelector(env, NODE_DISABLE_REQUEST_COMPRESSION_ENV_NAME, utilConfigProvider.SelectorType.ENV),\n    configFileSelector: (profile) => utilConfigProvider.booleanSelector(profile, NODE_DISABLE_REQUEST_COMPRESSION_INI_NAME, utilConfigProvider.SelectorType.CONFIG),\n    default: DEFAULT_DISABLE_REQUEST_COMPRESSION,\n};\n\nconst NODE_REQUEST_MIN_COMPRESSION_SIZE_BYTES_ENV_NAME = \"AWS_REQUEST_MIN_COMPRESSION_SIZE_BYTES\";\nconst NODE_REQUEST_MIN_COMPRESSION_SIZE_BYTES_INI_NAME = \"request_min_compression_size_bytes\";\nconst DEFAULT_NODE_REQUEST_MIN_COMPRESSION_SIZE_BYTES = 10240;\nconst NODE_REQUEST_MIN_COMPRESSION_SIZE_BYTES_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => utilConfigProvider.numberSelector(env, NODE_REQUEST_MIN_COMPRESSION_SIZE_BYTES_ENV_NAME, utilConfigProvider.SelectorType.ENV),\n    configFileSelector: (profile) => utilConfigProvider.numberSelector(profile, NODE_REQUEST_MIN_COMPRESSION_SIZE_BYTES_INI_NAME, utilConfigProvider.SelectorType.CONFIG),\n    default: DEFAULT_NODE_REQUEST_MIN_COMPRESSION_SIZE_BYTES,\n};\n\nconst compressStream = async (body) => body.pipe(zlib.createGzip());\n\nconst gzipAsync = util.promisify(zlib.gzip);\nconst compressString = async (body) => {\n    try {\n        const compressedBuffer = await gzipAsync(utilUtf8.toUint8Array(body || \"\"));\n        return utilUtf8.toUint8Array(compressedBuffer);\n    }\n    catch (err) {\n        throw new Error(\"Failure during compression: \" + err.message);\n    }\n};\n\nvar CompressionAlgorithm;\n(function (CompressionAlgorithm) {\n    CompressionAlgorithm[\"GZIP\"] = \"gzip\";\n})(CompressionAlgorithm || (CompressionAlgorithm = {}));\nconst CLIENT_SUPPORTED_ALGORITHMS = [CompressionAlgorithm.GZIP];\n\nconst isStreaming = (body) => body !== undefined && typeof body !== \"string\" && !ArrayBuffer.isView(body) && !isArrayBuffer.isArrayBuffer(body);\n\nconst compressionMiddleware = (config, middlewareConfig) => (next, context) => async (args) => {\n    if (!protocolHttp.HttpRequest.isInstance(args.request)) {\n        return next(args);\n    }\n    const disableRequestCompression = await config.disableRequestCompression();\n    if (disableRequestCompression) {\n        return next(args);\n    }\n    const { request } = args;\n    const { body, headers } = request;\n    const { encodings, streamRequiresLength } = middlewareConfig;\n    let updatedBody = body;\n    let updatedHeaders = headers;\n    for (const algorithm of encodings) {\n        if (CLIENT_SUPPORTED_ALGORITHMS.includes(algorithm)) {\n            let isRequestCompressed = false;\n            if (isStreaming(body)) {\n                if (!streamRequiresLength) {\n                    updatedBody = await compressStream(body);\n                    isRequestCompressed = true;\n                }\n                else {\n                    throw new Error(\"Compression is not supported for streaming blobs that require a length.\");\n                }\n            }\n            else {\n                const bodyLength = config.bodyLengthChecker(body);\n                const requestMinCompressionSizeBytes = await config.requestMinCompressionSizeBytes();\n                if (bodyLength && bodyLength >= requestMinCompressionSizeBytes) {\n                    updatedBody = await compressString(body);\n                    isRequestCompressed = true;\n                }\n            }\n            if (isRequestCompressed) {\n                if (headers[\"content-encoding\"]) {\n                    updatedHeaders = {\n                        ...headers,\n                        \"content-encoding\": `${headers[\"content-encoding\"]}, ${algorithm}`,\n                    };\n                }\n                else {\n                    updatedHeaders = { ...headers, \"content-encoding\": algorithm };\n                }\n                if (updatedHeaders[\"content-encoding\"].includes(\"gzip\")) {\n                    core.setFeature(context, \"GZIP_REQUEST_COMPRESSION\", \"L\");\n                }\n                break;\n            }\n        }\n    }\n    return next({\n        ...args,\n        request: {\n            ...request,\n            body: updatedBody,\n            headers: updatedHeaders,\n        },\n    });\n};\nconst compressionMiddlewareOptions = {\n    name: \"compressionMiddleware\",\n    step: \"build\",\n    tags: [\"REQUEST_BODY_COMPRESSION\", \"GZIP\"],\n    override: true,\n    priority: \"high\",\n};\n\nconst getCompressionPlugin = (config, middlewareConfig) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(compressionMiddleware(config, middlewareConfig), compressionMiddlewareOptions);\n    },\n});\n\nconst resolveCompressionConfig = (input) => {\n    const { disableRequestCompression, requestMinCompressionSizeBytes: _requestMinCompressionSizeBytes } = input;\n    return Object.assign(input, {\n        disableRequestCompression: utilMiddleware.normalizeProvider(disableRequestCompression),\n        requestMinCompressionSizeBytes: async () => {\n            const requestMinCompressionSizeBytes = await utilMiddleware.normalizeProvider(_requestMinCompressionSizeBytes)();\n            if (requestMinCompressionSizeBytes < 0 || requestMinCompressionSizeBytes > 10485760) {\n                throw new RangeError(\"The value for requestMinCompressionSizeBytes must be between 0 and 10485760 inclusive. \" +\n                    `The provided value ${requestMinCompressionSizeBytes} is outside this range.\"`);\n            }\n            return requestMinCompressionSizeBytes;\n        },\n    });\n};\n\nexports.DEFAULT_DISABLE_REQUEST_COMPRESSION = DEFAULT_DISABLE_REQUEST_COMPRESSION;\nexports.DEFAULT_NODE_REQUEST_MIN_COMPRESSION_SIZE_BYTES = DEFAULT_NODE_REQUEST_MIN_COMPRESSION_SIZE_BYTES;\nexports.NODE_DISABLE_REQUEST_COMPRESSION_CONFIG_OPTIONS = NODE_DISABLE_REQUEST_COMPRESSION_CONFIG_OPTIONS;\nexports.NODE_DISABLE_REQUEST_COMPRESSION_ENV_NAME = NODE_DISABLE_REQUEST_COMPRESSION_ENV_NAME;\nexports.NODE_DISABLE_REQUEST_COMPRESSION_INI_NAME = NODE_DISABLE_REQUEST_COMPRESSION_INI_NAME;\nexports.NODE_REQUEST_MIN_COMPRESSION_SIZE_BYTES_CONFIG_OPTIONS = NODE_REQUEST_MIN_COMPRESSION_SIZE_BYTES_CONFIG_OPTIONS;\nexports.NODE_REQUEST_MIN_COMPRESSION_SIZE_BYTES_ENV_NAME = NODE_REQUEST_MIN_COMPRESSION_SIZE_BYTES_ENV_NAME;\nexports.NODE_REQUEST_MIN_COMPRESSION_SIZE_BYTES_INI_NAME = NODE_REQUEST_MIN_COMPRESSION_SIZE_BYTES_INI_NAME;\nexports.compressionMiddleware = compressionMiddleware;\nexports.compressionMiddlewareOptions = compressionMiddlewareOptions;\nexports.getCompressionPlugin = getCompressionPlugin;\nexports.resolveCompressionConfig = resolveCompressionConfig;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveHttpAuthSchemeConfig = exports.defaultCloudWatchHttpAuthSchemeProvider = exports.defaultCloudWatchHttpAuthSchemeParametersProvider = void 0;\nconst core_1 = require(\"@aws-sdk/core\");\nconst util_middleware_1 = require(\"@smithy/util-middleware\");\nconst defaultCloudWatchHttpAuthSchemeParametersProvider = async (config, context, input) => {\n    return {\n        operation: (0, util_middleware_1.getSmithyContext)(context).operation,\n        region: (await (0, util_middleware_1.normalizeProvider)(config.region)()) ||\n            (() => {\n                throw new Error(\"expected `region` to be configured for `aws.auth#sigv4`\");\n            })(),\n    };\n};\nexports.defaultCloudWatchHttpAuthSchemeParametersProvider = defaultCloudWatchHttpAuthSchemeParametersProvider;\nfunction createAwsAuthSigv4HttpAuthOption(authParameters) {\n    return {\n        schemeId: \"aws.auth#sigv4\",\n        signingProperties: {\n            name: \"monitoring\",\n            region: authParameters.region,\n        },\n        propertiesExtractor: (config, context) => ({\n            signingProperties: {\n                config,\n                context,\n            },\n        }),\n    };\n}\nconst defaultCloudWatchHttpAuthSchemeProvider = (authParameters) => {\n    const options = [];\n    switch (authParameters.operation) {\n        default: {\n            options.push(createAwsAuthSigv4HttpAuthOption(authParameters));\n        }\n    }\n    return options;\n};\nexports.defaultCloudWatchHttpAuthSchemeProvider = defaultCloudWatchHttpAuthSchemeProvider;\nconst resolveHttpAuthSchemeConfig = (config) => {\n    const config_0 = (0, core_1.resolveAwsSdkSigV4Config)(config);\n    return Object.assign(config_0, {\n        authSchemePreference: (0, util_middleware_1.normalizeProvider)(config.authSchemePreference ?? []),\n    });\n};\nexports.resolveHttpAuthSchemeConfig = resolveHttpAuthSchemeConfig;\n", "{\n  \"name\": \"@aws-sdk/client-cloudwatch\",\n  \"description\": \"AWS SDK for JavaScript Cloudwatch Client for Node.js, Browser and React Native\",\n  \"version\": \"3.908.0\",\n  \"scripts\": {\n    \"build\": \"concurrently 'yarn:build:cjs' 'yarn:build:es' 'yarn:build:types'\",\n    \"build:cjs\": \"node ../../scripts/compilation/inline client-cloudwatch\",\n    \"build:es\": \"tsc -p tsconfig.es.json\",\n    \"build:include:deps\": \"lerna run --scope $npm_package_name --include-dependencies build\",\n    \"build:types\": \"tsc -p tsconfig.types.json\",\n    \"build:types:downlevel\": \"downlevel-dts dist-types dist-types/ts3.4\",\n    \"clean\": \"rimraf ./dist-* && rimraf *.tsbuildinfo\",\n    \"extract:docs\": \"api-extractor run --local\",\n    \"generate:client\": \"node ../../scripts/generate-clients/single-service --solo cloudwatch\",\n    \"test:e2e\": \"yarn g:vitest run -c vitest.config.e2e.mts\",\n    \"test:e2e:watch\": \"yarn g:vitest watch -c vitest.config.e2e.mts\"\n  },\n  \"main\": \"./dist-cjs/index.js\",\n  \"types\": \"./dist-types/index.d.ts\",\n  \"module\": \"./dist-es/index.js\",\n  \"sideEffects\": false,\n  \"dependencies\": {\n    \"@aws-crypto/sha256-browser\": \"5.2.0\",\n    \"@aws-crypto/sha256-js\": \"5.2.0\",\n    \"@aws-sdk/core\": \"3.908.0\",\n    \"@aws-sdk/credential-provider-node\": \"3.908.0\",\n    \"@aws-sdk/middleware-host-header\": \"3.901.0\",\n    \"@aws-sdk/middleware-logger\": \"3.901.0\",\n    \"@aws-sdk/middleware-recursion-detection\": \"3.901.0\",\n    \"@aws-sdk/middleware-user-agent\": \"3.908.0\",\n    \"@aws-sdk/region-config-resolver\": \"3.901.0\",\n    \"@aws-sdk/types\": \"3.901.0\",\n    \"@aws-sdk/util-endpoints\": \"3.901.0\",\n    \"@aws-sdk/util-user-agent-browser\": \"3.907.0\",\n    \"@aws-sdk/util-user-agent-node\": \"3.908.0\",\n    \"@smithy/config-resolver\": \"^4.3.0\",\n    \"@smithy/core\": \"^3.15.0\",\n    \"@smithy/fetch-http-handler\": \"^5.3.1\",\n    \"@smithy/hash-node\": \"^4.2.0\",\n    \"@smithy/invalid-dependency\": \"^4.2.0\",\n    \"@smithy/middleware-compression\": \"^4.3.1\",\n    \"@smithy/middleware-content-length\": \"^4.2.0\",\n    \"@smithy/middleware-endpoint\": \"^4.3.1\",\n    \"@smithy/middleware-retry\": \"^4.4.1\",\n    \"@smithy/middleware-serde\": \"^4.2.0\",\n    \"@smithy/middleware-stack\": \"^4.2.0\",\n    \"@smithy/node-config-provider\": \"^4.3.0\",\n    \"@smithy/node-http-handler\": \"^4.3.0\",\n    \"@smithy/protocol-http\": \"^5.3.0\",\n    \"@smithy/smithy-client\": \"^4.7.1\",\n    \"@smithy/types\": \"^4.6.0\",\n    \"@smithy/url-parser\": \"^4.2.0\",\n    \"@smithy/util-base64\": \"^4.3.0\",\n    \"@smithy/util-body-length-browser\": \"^4.2.0\",\n    \"@smithy/util-body-length-node\": \"^4.2.1\",\n    \"@smithy/util-defaults-mode-browser\": \"^4.3.0\",\n    \"@smithy/util-defaults-mode-node\": \"^4.2.1\",\n    \"@smithy/util-endpoints\": \"^3.2.0\",\n    \"@smithy/util-middleware\": \"^4.2.0\",\n    \"@smithy/util-retry\": \"^4.2.0\",\n    \"@smithy/util-utf8\": \"^4.2.0\",\n    \"@smithy/util-waiter\": \"^4.2.0\",\n    \"tslib\": \"^2.6.2\"\n  },\n  \"devDependencies\": {\n    \"@tsconfig/node18\": \"18.2.4\",\n    \"@types/node\": \"^18.19.69\",\n    \"concurrently\": \"7.0.0\",\n    \"downlevel-dts\": \"0.10.1\",\n    \"rimraf\": \"3.0.2\",\n    \"typescript\": \"~5.8.3\"\n  },\n  \"engines\": {\n    \"node\": \">=18.0.0\"\n  },\n  \"typesVersions\": {\n    \"<4.0\": {\n      \"dist-types/*\": [\n        \"dist-types/ts3.4/*\"\n      ]\n    }\n  },\n  \"files\": [\n    \"dist-*/**\"\n  ],\n  \"author\": {\n    \"name\": \"AWS SDK for JavaScript Team\",\n    \"url\": \"https://aws.amazon.com/javascript/\"\n  },\n  \"license\": \"Apache-2.0\",\n  \"browser\": {\n    \"./dist-es/runtimeConfig\": \"./dist-es/runtimeConfig.browser\"\n  },\n  \"react-native\": {\n    \"./dist-es/runtimeConfig\": \"./dist-es/runtimeConfig.native\"\n  },\n  \"homepage\": \"https://github.com/aws/aws-sdk-js-v3/tree/main/clients/client-cloudwatch\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/aws/aws-sdk-js-v3.git\",\n    \"directory\": \"clients/client-cloudwatch\"\n  }\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromBase64 = void 0;\nconst util_buffer_from_1 = require(\"@smithy/util-buffer-from\");\nconst BASE64_REGEX = /^[A-Za-z0-9+/]*={0,2}$/;\nconst fromBase64 = (input) => {\n    if ((input.length * 3) % 4 !== 0) {\n        throw new TypeError(`Incorrect padding on base64 string.`);\n    }\n    if (!BASE64_REGEX.exec(input)) {\n        throw new TypeError(`Invalid base64 string.`);\n    }\n    const buffer = (0, util_buffer_from_1.fromString)(input, \"base64\");\n    return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n};\nexports.fromBase64 = fromBase64;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toBase64 = void 0;\nconst util_buffer_from_1 = require(\"@smithy/util-buffer-from\");\nconst util_utf8_1 = require(\"@smithy/util-utf8\");\nconst toBase64 = (_input) => {\n    let input;\n    if (typeof _input === \"string\") {\n        input = (0, util_utf8_1.fromUtf8)(_input);\n    }\n    else {\n        input = _input;\n    }\n    if (typeof input !== \"object\" || typeof input.byteOffset !== \"number\" || typeof input.byteLength !== \"number\") {\n        throw new Error(\"@smithy/util-base64: toBase64 encoder function only accepts string | Uint8Array.\");\n    }\n    return (0, util_buffer_from_1.fromArrayBuffer)(input.buffer, input.byteOffset, input.byteLength).toString(\"base64\");\n};\nexports.toBase64 = toBase64;\n", "'use strict';\n\nvar fromBase64 = require('./fromBase64');\nvar toBase64 = require('./toBase64');\n\n\n\nObject.keys(fromBase64).forEach(function (k) {\n\tif (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () { return fromBase64[k]; }\n\t});\n});\nObject.keys(toBase64).forEach(function (k) {\n\tif (k !== 'default' && !Object.prototype.hasOwnProperty.call(exports, k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () { return toBase64[k]; }\n\t});\n});\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ruleSet = void 0;\nconst w = \"required\", x = \"fn\", y = \"argv\", z = \"ref\", A = \"properties\", B = \"headers\";\nconst a = true, b = false, c = \"isSet\", d = \"booleanEquals\", e = \"error\", f = \"endpoint\", g = \"tree\", h = \"PartitionResult\", i = { [w]: true, \"default\": false, \"type\": \"Boolean\" }, j = { [w]: false, \"type\": \"String\" }, k = { [z]: \"Endpoint\" }, l = { [x]: d, [y]: [{ [z]: \"UseFIPS\" }, true] }, m = { [z]: \"UseFIPS\" }, n = { [x]: d, [y]: [{ [z]: \"UseDualStack\" }, true] }, o = {}, p = { [x]: \"stringEquals\", [y]: [{ [x]: \"getAttr\", [y]: [{ [z]: h }, \"name\"] }, \"aws-us-gov\"] }, q = { [x]: d, [y]: [{ [z]: \"UseDualStack\" }, false] }, r = { \"url\": \"https://monitoring.{Region}.{PartitionResult#dnsSuffix}\", [A]: {}, [B]: {} }, s = { \"url\": \"https://monitoring.{Region}.{PartitionResult#dualStackDnsSuffix}\", [A]: {}, [B]: {} }, t = { [x]: \"getAttr\", [y]: [{ [z]: h }, \"supportsFIPS\"] }, u = { [x]: d, [y]: [true, { [x]: \"getAttr\", [y]: [{ [z]: h }, \"supportsDualStack\"] }] }, v = [{ [z]: \"Region\" }];\nconst _data = { version: \"1.0\", parameters: { UseDualStack: i, UseFIPS: i, Endpoint: j, Region: j }, rules: [{ conditions: [{ [x]: c, [y]: [k] }], rules: [{ conditions: [l], error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", type: e }, { rules: [{ conditions: [n], error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", type: e }, { endpoint: { url: k, [A]: o, [B]: o }, type: f }], type: g }], type: g }, { rules: [{ conditions: [{ [x]: c, [y]: v }], rules: [{ conditions: [{ [x]: \"aws.partition\", [y]: v, assign: h }], rules: [{ conditions: [p, l, q], endpoint: r, type: f }, { conditions: [p, l, n], endpoint: s, type: f }, { conditions: [l, n], rules: [{ conditions: [{ [x]: d, [y]: [a, t] }, u], rules: [{ endpoint: { url: \"https://monitoring-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", [A]: o, [B]: o }, type: f }], type: g }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", type: e }], type: g }, { conditions: [l, q], rules: [{ conditions: [{ [x]: d, [y]: [t, a] }], rules: [{ endpoint: { url: \"https://monitoring-fips.{Region}.{PartitionResult#dnsSuffix}\", [A]: o, [B]: o }, type: f }], type: g }, { error: \"FIPS is enabled but this partition does not support FIPS\", type: e }], type: g }, { conditions: [{ [x]: d, [y]: [m, b] }, n], rules: [{ conditions: [u], rules: [{ endpoint: s, type: f }], type: g }, { error: \"DualStack is enabled but this partition does not support DualStack\", type: e }], type: g }, { endpoint: r, type: f }], type: g }], type: g }, { error: \"Invalid Configuration: Missing Region\", type: e }], type: g }] };\nexports.ruleSet = _data;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultEndpointResolver = void 0;\nconst util_endpoints_1 = require(\"@aws-sdk/util-endpoints\");\nconst util_endpoints_2 = require(\"@smithy/util-endpoints\");\nconst ruleset_1 = require(\"./ruleset\");\nconst cache = new util_endpoints_2.EndpointCache({\n    size: 50,\n    params: [\"Endpoint\", \"Region\", \"UseDualStack\", \"UseFIPS\"],\n});\nconst defaultEndpointResolver = (endpointParams, context = {}) => {\n    return cache.get(endpointParams, () => (0, util_endpoints_2.resolveEndpoint)(ruleset_1.ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    }));\n};\nexports.defaultEndpointResolver = defaultEndpointResolver;\nutil_endpoints_2.customEndpointFunctions.aws = util_endpoints_1.awsEndpointFunctions;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst core_1 = require(\"@aws-sdk/core\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst url_parser_1 = require(\"@smithy/url-parser\");\nconst util_base64_1 = require(\"@smithy/util-base64\");\nconst util_utf8_1 = require(\"@smithy/util-utf8\");\nconst httpAuthSchemeProvider_1 = require(\"./auth/httpAuthSchemeProvider\");\nconst endpointResolver_1 = require(\"./endpoint/endpointResolver\");\nconst getRuntimeConfig = (config) => {\n    return {\n        apiVersion: \"2010-08-01\",\n        base64Decoder: config?.base64Decoder ?? util_base64_1.fromBase64,\n        base64Encoder: config?.base64Encoder ?? util_base64_1.toBase64,\n        disableHostPrefix: config?.disableHostPrefix ?? false,\n        endpointProvider: config?.endpointProvider ?? endpointResolver_1.defaultEndpointResolver,\n        extensions: config?.extensions ?? [],\n        httpAuthSchemeProvider: config?.httpAuthSchemeProvider ?? httpAuthSchemeProvider_1.defaultCloudWatchHttpAuthSchemeProvider,\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"aws.auth#sigv4\"),\n                signer: new core_1.AwsSdkSigV4Signer(),\n            },\n        ],\n        logger: config?.logger ?? new smithy_client_1.NoOpLogger(),\n        serviceId: config?.serviceId ?? \"CloudWatch\",\n        urlParser: config?.urlParser ?? url_parser_1.parseUrl,\n        utf8Decoder: config?.utf8Decoder ?? util_utf8_1.fromUtf8,\n        utf8Encoder: config?.utf8Encoder ?? util_utf8_1.toUtf8,\n    };\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst tslib_1 = require(\"tslib\");\nconst package_json_1 = tslib_1.__importDefault(require(\"../package.json\"));\nconst core_1 = require(\"@aws-sdk/core\");\nconst credential_provider_node_1 = require(\"@aws-sdk/credential-provider-node\");\nconst util_user_agent_node_1 = require(\"@aws-sdk/util-user-agent-node\");\nconst config_resolver_1 = require(\"@smithy/config-resolver\");\nconst hash_node_1 = require(\"@smithy/hash-node\");\nconst middleware_compression_1 = require(\"@smithy/middleware-compression\");\nconst middleware_retry_1 = require(\"@smithy/middleware-retry\");\nconst node_config_provider_1 = require(\"@smithy/node-config-provider\");\nconst node_http_handler_1 = require(\"@smithy/node-http-handler\");\nconst util_body_length_node_1 = require(\"@smithy/util-body-length-node\");\nconst util_retry_1 = require(\"@smithy/util-retry\");\nconst runtimeConfig_shared_1 = require(\"./runtimeConfig.shared\");\nconst smithy_client_1 = require(\"@smithy/smithy-client\");\nconst util_defaults_mode_node_1 = require(\"@smithy/util-defaults-mode-node\");\nconst smithy_client_2 = require(\"@smithy/smithy-client\");\nconst getRuntimeConfig = (config) => {\n    (0, smithy_client_2.emitWarningIfUnsupportedVersion)(process.version);\n    const defaultsMode = (0, util_defaults_mode_node_1.resolveDefaultsModeConfig)(config);\n    const defaultConfigProvider = () => defaultsMode().then(smithy_client_1.loadConfigsForDefaultMode);\n    const clientSharedValues = (0, runtimeConfig_shared_1.getRuntimeConfig)(config);\n    (0, core_1.emitWarningIfUnsupportedVersion)(process.version);\n    const loaderConfig = {\n        profile: config?.profile,\n        logger: clientSharedValues.logger,\n    };\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        authSchemePreference: config?.authSchemePreference ?? (0, node_config_provider_1.loadConfig)(core_1.NODE_AUTH_SCHEME_PREFERENCE_OPTIONS, loaderConfig),\n        bodyLengthChecker: config?.bodyLengthChecker ?? util_body_length_node_1.calculateBodyLength,\n        credentialDefaultProvider: config?.credentialDefaultProvider ?? credential_provider_node_1.defaultProvider,\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            (0, util_user_agent_node_1.createDefaultUserAgentProvider)({ serviceId: clientSharedValues.serviceId, clientVersion: package_json_1.default.version }),\n        disableRequestCompression: config?.disableRequestCompression ?? (0, node_config_provider_1.loadConfig)(middleware_compression_1.NODE_DISABLE_REQUEST_COMPRESSION_CONFIG_OPTIONS, config),\n        maxAttempts: config?.maxAttempts ?? (0, node_config_provider_1.loadConfig)(middleware_retry_1.NODE_MAX_ATTEMPT_CONFIG_OPTIONS, config),\n        region: config?.region ??\n            (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_REGION_CONFIG_OPTIONS, { ...config_resolver_1.NODE_REGION_CONFIG_FILE_OPTIONS, ...loaderConfig }),\n        requestHandler: node_http_handler_1.NodeHttpHandler.create(config?.requestHandler ?? defaultConfigProvider),\n        requestMinCompressionSizeBytes: config?.requestMinCompressionSizeBytes ??\n            (0, node_config_provider_1.loadConfig)(middleware_compression_1.NODE_REQUEST_MIN_COMPRESSION_SIZE_BYTES_CONFIG_OPTIONS, config),\n        retryMode: config?.retryMode ??\n            (0, node_config_provider_1.loadConfig)({\n                ...middleware_retry_1.NODE_RETRY_MODE_CONFIG_OPTIONS,\n                default: async () => (await defaultConfigProvider()).retryMode || util_retry_1.DEFAULT_RETRY_MODE,\n            }, config),\n        sha256: config?.sha256 ?? hash_node_1.Hash.bind(null, \"sha256\"),\n        streamCollector: config?.streamCollector ?? node_http_handler_1.streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, loaderConfig),\n        useFipsEndpoint: config?.useFipsEndpoint ?? (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, loaderConfig),\n        userAgentAppId: config?.userAgentAppId ?? (0, node_config_provider_1.loadConfig)(util_user_agent_node_1.NODE_APP_ID_CONFIG_OPTIONS, loaderConfig),\n    };\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n", "'use strict';\n\nconst sleep = (seconds) => {\n    return new Promise((resolve) => setTimeout(resolve, seconds * 1000));\n};\n\nconst waiterServiceDefaults = {\n    minDelay: 2,\n    maxDelay: 120,\n};\nexports.WaiterState = void 0;\n(function (WaiterState) {\n    WaiterState[\"ABORTED\"] = \"ABORTED\";\n    WaiterState[\"FAILURE\"] = \"FAILURE\";\n    WaiterState[\"SUCCESS\"] = \"SUCCESS\";\n    WaiterState[\"RETRY\"] = \"RETRY\";\n    WaiterState[\"TIMEOUT\"] = \"TIMEOUT\";\n})(exports.WaiterState || (exports.WaiterState = {}));\nconst checkExceptions = (result) => {\n    if (result.state === exports.WaiterState.ABORTED) {\n        const abortError = new Error(`${JSON.stringify({\n            ...result,\n            reason: \"Request was aborted\",\n        })}`);\n        abortError.name = \"AbortError\";\n        throw abortError;\n    }\n    else if (result.state === exports.WaiterState.TIMEOUT) {\n        const timeoutError = new Error(`${JSON.stringify({\n            ...result,\n            reason: \"Waiter has timed out\",\n        })}`);\n        timeoutError.name = \"TimeoutError\";\n        throw timeoutError;\n    }\n    else if (result.state !== exports.WaiterState.SUCCESS) {\n        throw new Error(`${JSON.stringify(result)}`);\n    }\n    return result;\n};\n\nconst exponentialBackoffWithJitter = (minDelay, maxDelay, attemptCeiling, attempt) => {\n    if (attempt > attemptCeiling)\n        return maxDelay;\n    const delay = minDelay * 2 ** (attempt - 1);\n    return randomInRange(minDelay, delay);\n};\nconst randomInRange = (min, max) => min + Math.random() * (max - min);\nconst runPolling = async ({ minDelay, maxDelay, maxWaitTime, abortController, client, abortSignal }, input, acceptorChecks) => {\n    const observedResponses = {};\n    const { state, reason } = await acceptorChecks(client, input);\n    if (reason) {\n        const message = createMessageFromResponse(reason);\n        observedResponses[message] |= 0;\n        observedResponses[message] += 1;\n    }\n    if (state !== exports.WaiterState.RETRY) {\n        return { state, reason, observedResponses };\n    }\n    let currentAttempt = 1;\n    const waitUntil = Date.now() + maxWaitTime * 1000;\n    const attemptCeiling = Math.log(maxDelay / minDelay) / Math.log(2) + 1;\n    while (true) {\n        if (abortController?.signal?.aborted || abortSignal?.aborted) {\n            const message = \"AbortController signal aborted.\";\n            observedResponses[message] |= 0;\n            observedResponses[message] += 1;\n            return { state: exports.WaiterState.ABORTED, observedResponses };\n        }\n        const delay = exponentialBackoffWithJitter(minDelay, maxDelay, attemptCeiling, currentAttempt);\n        if (Date.now() + delay * 1000 > waitUntil) {\n            return { state: exports.WaiterState.TIMEOUT, observedResponses };\n        }\n        await sleep(delay);\n        const { state, reason } = await acceptorChecks(client, input);\n        if (reason) {\n            const message = createMessageFromResponse(reason);\n            observedResponses[message] |= 0;\n            observedResponses[message] += 1;\n        }\n        if (state !== exports.WaiterState.RETRY) {\n            return { state, reason, observedResponses };\n        }\n        currentAttempt += 1;\n    }\n};\nconst createMessageFromResponse = (reason) => {\n    if (reason?.$responseBodyText) {\n        return `Deserialization error for body: ${reason.$responseBodyText}`;\n    }\n    if (reason?.$metadata?.httpStatusCode) {\n        if (reason.$response || reason.message) {\n            return `${reason.$response.statusCode ?? reason.$metadata.httpStatusCode ?? \"Unknown\"}: ${reason.message}`;\n        }\n        return `${reason.$metadata.httpStatusCode}: OK`;\n    }\n    return String(reason?.message ?? JSON.stringify(reason) ?? \"Unknown\");\n};\n\nconst validateWaiterOptions = (options) => {\n    if (options.maxWaitTime <= 0) {\n        throw new Error(`WaiterConfiguration.maxWaitTime must be greater than 0`);\n    }\n    else if (options.minDelay <= 0) {\n        throw new Error(`WaiterConfiguration.minDelay must be greater than 0`);\n    }\n    else if (options.maxDelay <= 0) {\n        throw new Error(`WaiterConfiguration.maxDelay must be greater than 0`);\n    }\n    else if (options.maxWaitTime <= options.minDelay) {\n        throw new Error(`WaiterConfiguration.maxWaitTime [${options.maxWaitTime}] must be greater than WaiterConfiguration.minDelay [${options.minDelay}] for this waiter`);\n    }\n    else if (options.maxDelay < options.minDelay) {\n        throw new Error(`WaiterConfiguration.maxDelay [${options.maxDelay}] must be greater than WaiterConfiguration.minDelay [${options.minDelay}] for this waiter`);\n    }\n};\n\nconst abortTimeout = (abortSignal) => {\n    let onAbort;\n    const promise = new Promise((resolve) => {\n        onAbort = () => resolve({ state: exports.WaiterState.ABORTED });\n        if (typeof abortSignal.addEventListener === \"function\") {\n            abortSignal.addEventListener(\"abort\", onAbort);\n        }\n        else {\n            abortSignal.onabort = onAbort;\n        }\n    });\n    return {\n        clearListener() {\n            if (typeof abortSignal.removeEventListener === \"function\") {\n                abortSignal.removeEventListener(\"abort\", onAbort);\n            }\n        },\n        aborted: promise,\n    };\n};\nconst createWaiter = async (options, input, acceptorChecks) => {\n    const params = {\n        ...waiterServiceDefaults,\n        ...options,\n    };\n    validateWaiterOptions(params);\n    const exitConditions = [runPolling(params, input, acceptorChecks)];\n    const finalize = [];\n    if (options.abortSignal) {\n        const { aborted, clearListener } = abortTimeout(options.abortSignal);\n        finalize.push(clearListener);\n        exitConditions.push(aborted);\n    }\n    if (options.abortController?.signal) {\n        const { aborted, clearListener } = abortTimeout(options.abortController.signal);\n        finalize.push(clearListener);\n        exitConditions.push(aborted);\n    }\n    return Promise.race(exitConditions).then((result) => {\n        for (const fn of finalize) {\n            fn();\n        }\n        return result;\n    });\n};\n\nexports.checkExceptions = checkExceptions;\nexports.createWaiter = createWaiter;\nexports.waiterServiceDefaults = waiterServiceDefaults;\n", "'use strict';\n\nvar middlewareHostHeader = require('@aws-sdk/middleware-host-header');\nvar middlewareLogger = require('@aws-sdk/middleware-logger');\nvar middlewareRecursionDetection = require('@aws-sdk/middleware-recursion-detection');\nvar middlewareUserAgent = require('@aws-sdk/middleware-user-agent');\nvar configResolver = require('@smithy/config-resolver');\nvar core = require('@smithy/core');\nvar middlewareCompression = require('@smithy/middleware-compression');\nvar middlewareContentLength = require('@smithy/middleware-content-length');\nvar middlewareEndpoint = require('@smithy/middleware-endpoint');\nvar middlewareRetry = require('@smithy/middleware-retry');\nvar smithyClient = require('@smithy/smithy-client');\nvar httpAuthSchemeProvider = require('./auth/httpAuthSchemeProvider');\nvar runtimeConfig = require('./runtimeConfig');\nvar regionConfigResolver = require('@aws-sdk/region-config-resolver');\nvar protocolHttp = require('@smithy/protocol-http');\nvar middlewareSerde = require('@smithy/middleware-serde');\nvar core$1 = require('@aws-sdk/core');\nvar utilWaiter = require('@smithy/util-waiter');\n\nconst resolveClientEndpointParameters = (options) => {\n    return Object.assign(options, {\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        defaultSigningName: \"monitoring\",\n    });\n};\nconst commonParams = {\n    UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n    Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n    Region: { type: \"builtInParams\", name: \"region\" },\n    UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n};\n\nconst getHttpAuthExtensionConfiguration = (runtimeConfig) => {\n    const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;\n    let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;\n    let _credentials = runtimeConfig.credentials;\n    return {\n        setHttpAuthScheme(httpAuthScheme) {\n            const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);\n            if (index === -1) {\n                _httpAuthSchemes.push(httpAuthScheme);\n            }\n            else {\n                _httpAuthSchemes.splice(index, 1, httpAuthScheme);\n            }\n        },\n        httpAuthSchemes() {\n            return _httpAuthSchemes;\n        },\n        setHttpAuthSchemeProvider(httpAuthSchemeProvider) {\n            _httpAuthSchemeProvider = httpAuthSchemeProvider;\n        },\n        httpAuthSchemeProvider() {\n            return _httpAuthSchemeProvider;\n        },\n        setCredentials(credentials) {\n            _credentials = credentials;\n        },\n        credentials() {\n            return _credentials;\n        },\n    };\n};\nconst resolveHttpAuthRuntimeConfig = (config) => {\n    return {\n        httpAuthSchemes: config.httpAuthSchemes(),\n        httpAuthSchemeProvider: config.httpAuthSchemeProvider(),\n        credentials: config.credentials(),\n    };\n};\n\nconst resolveRuntimeExtensions = (runtimeConfig, extensions) => {\n    const extensionConfiguration = Object.assign(regionConfigResolver.getAwsRegionExtensionConfiguration(runtimeConfig), smithyClient.getDefaultExtensionConfiguration(runtimeConfig), protocolHttp.getHttpHandlerExtensionConfiguration(runtimeConfig), getHttpAuthExtensionConfiguration(runtimeConfig));\n    extensions.forEach((extension) => extension.configure(extensionConfiguration));\n    return Object.assign(runtimeConfig, regionConfigResolver.resolveAwsRegionExtensionConfiguration(extensionConfiguration), smithyClient.resolveDefaultRuntimeConfig(extensionConfiguration), protocolHttp.resolveHttpHandlerRuntimeConfig(extensionConfiguration), resolveHttpAuthRuntimeConfig(extensionConfiguration));\n};\n\nclass CloudWatchClient extends smithyClient.Client {\n    config;\n    constructor(...[configuration]) {\n        const _config_0 = runtimeConfig.getRuntimeConfig(configuration || {});\n        super(_config_0);\n        this.initConfig = _config_0;\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = middlewareUserAgent.resolveUserAgentConfig(_config_1);\n        const _config_3 = middlewareRetry.resolveRetryConfig(_config_2);\n        const _config_4 = configResolver.resolveRegionConfig(_config_3);\n        const _config_5 = middlewareHostHeader.resolveHostHeaderConfig(_config_4);\n        const _config_6 = middlewareEndpoint.resolveEndpointConfig(_config_5);\n        const _config_7 = httpAuthSchemeProvider.resolveHttpAuthSchemeConfig(_config_6);\n        const _config_8 = middlewareCompression.resolveCompressionConfig(_config_7);\n        const _config_9 = resolveRuntimeExtensions(_config_8, configuration?.extensions || []);\n        this.config = _config_9;\n        this.middlewareStack.use(middlewareUserAgent.getUserAgentPlugin(this.config));\n        this.middlewareStack.use(middlewareRetry.getRetryPlugin(this.config));\n        this.middlewareStack.use(middlewareContentLength.getContentLengthPlugin(this.config));\n        this.middlewareStack.use(middlewareHostHeader.getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(middlewareLogger.getLoggerPlugin(this.config));\n        this.middlewareStack.use(middlewareRecursionDetection.getRecursionDetectionPlugin(this.config));\n        this.middlewareStack.use(core.getHttpAuthSchemeEndpointRuleSetPlugin(this.config, {\n            httpAuthSchemeParametersProvider: httpAuthSchemeProvider.defaultCloudWatchHttpAuthSchemeParametersProvider,\n            identityProviderConfigProvider: async (config) => new core.DefaultIdentityProviderConfig({\n                \"aws.auth#sigv4\": config.credentials,\n            }),\n        }));\n        this.middlewareStack.use(core.getHttpSigningPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\n\nclass CloudWatchServiceException extends smithyClient.ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, CloudWatchServiceException.prototype);\n    }\n}\n\nconst ActionsSuppressedBy = {\n    Alarm: \"Alarm\",\n    ExtensionPeriod: \"ExtensionPeriod\",\n    WaitPeriod: \"WaitPeriod\",\n};\nconst AlarmType = {\n    CompositeAlarm: \"CompositeAlarm\",\n    MetricAlarm: \"MetricAlarm\",\n};\nconst HistoryItemType = {\n    Action: \"Action\",\n    AlarmContributorAction: \"AlarmContributorAction\",\n    AlarmContributorStateUpdate: \"AlarmContributorStateUpdate\",\n    ConfigurationUpdate: \"ConfigurationUpdate\",\n    StateUpdate: \"StateUpdate\",\n};\nconst StandardUnit = {\n    Bits: \"Bits\",\n    Bits_Second: \"Bits/Second\",\n    Bytes: \"Bytes\",\n    Bytes_Second: \"Bytes/Second\",\n    Count: \"Count\",\n    Count_Second: \"Count/Second\",\n    Gigabits: \"Gigabits\",\n    Gigabits_Second: \"Gigabits/Second\",\n    Gigabytes: \"Gigabytes\",\n    Gigabytes_Second: \"Gigabytes/Second\",\n    Kilobits: \"Kilobits\",\n    Kilobits_Second: \"Kilobits/Second\",\n    Kilobytes: \"Kilobytes\",\n    Kilobytes_Second: \"Kilobytes/Second\",\n    Megabits: \"Megabits\",\n    Megabits_Second: \"Megabits/Second\",\n    Megabytes: \"Megabytes\",\n    Megabytes_Second: \"Megabytes/Second\",\n    Microseconds: \"Microseconds\",\n    Milliseconds: \"Milliseconds\",\n    None: \"None\",\n    Percent: \"Percent\",\n    Seconds: \"Seconds\",\n    Terabits: \"Terabits\",\n    Terabits_Second: \"Terabits/Second\",\n    Terabytes: \"Terabytes\",\n    Terabytes_Second: \"Terabytes/Second\",\n};\nconst AnomalyDetectorStateValue = {\n    PENDING_TRAINING: \"PENDING_TRAINING\",\n    TRAINED: \"TRAINED\",\n    TRAINED_INSUFFICIENT_DATA: \"TRAINED_INSUFFICIENT_DATA\",\n};\nconst AnomalyDetectorType = {\n    METRIC_MATH: \"METRIC_MATH\",\n    SINGLE_METRIC: \"SINGLE_METRIC\",\n};\nconst ComparisonOperator = {\n    GreaterThanOrEqualToThreshold: \"GreaterThanOrEqualToThreshold\",\n    GreaterThanThreshold: \"GreaterThanThreshold\",\n    GreaterThanUpperThreshold: \"GreaterThanUpperThreshold\",\n    LessThanLowerOrGreaterThanUpperThreshold: \"LessThanLowerOrGreaterThanUpperThreshold\",\n    LessThanLowerThreshold: \"LessThanLowerThreshold\",\n    LessThanOrEqualToThreshold: \"LessThanOrEqualToThreshold\",\n    LessThanThreshold: \"LessThanThreshold\",\n};\nconst StateValue = {\n    ALARM: \"ALARM\",\n    INSUFFICIENT_DATA: \"INSUFFICIENT_DATA\",\n    OK: \"OK\",\n};\nclass ConcurrentModificationException extends CloudWatchServiceException {\n    name = \"ConcurrentModificationException\";\n    $fault = \"client\";\n    Message;\n    constructor(opts) {\n        super({\n            name: \"ConcurrentModificationException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, ConcurrentModificationException.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass ConflictException extends CloudWatchServiceException {\n    name = \"ConflictException\";\n    $fault = \"client\";\n    Message;\n    constructor(opts) {\n        super({\n            name: \"ConflictException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, ConflictException.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass DashboardInvalidInputError extends CloudWatchServiceException {\n    name = \"DashboardInvalidInputError\";\n    $fault = \"client\";\n    dashboardValidationMessages;\n    constructor(opts) {\n        super({\n            name: \"DashboardInvalidInputError\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, DashboardInvalidInputError.prototype);\n        this.dashboardValidationMessages = opts.dashboardValidationMessages;\n    }\n}\nclass DashboardNotFoundError extends CloudWatchServiceException {\n    name = \"DashboardNotFoundError\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"DashboardNotFoundError\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, DashboardNotFoundError.prototype);\n    }\n}\nclass ResourceNotFound extends CloudWatchServiceException {\n    name = \"ResourceNotFound\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"ResourceNotFound\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, ResourceNotFound.prototype);\n    }\n}\nclass InternalServiceFault extends CloudWatchServiceException {\n    name = \"InternalServiceFault\";\n    $fault = \"server\";\n    Message;\n    constructor(opts) {\n        super({\n            name: \"InternalServiceFault\",\n            $fault: \"server\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InternalServiceFault.prototype);\n        this.Message = opts.Message;\n    }\n}\nclass InvalidParameterCombinationException extends CloudWatchServiceException {\n    name = \"InvalidParameterCombinationException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"InvalidParameterCombinationException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InvalidParameterCombinationException.prototype);\n    }\n}\nclass InvalidParameterValueException extends CloudWatchServiceException {\n    name = \"InvalidParameterValueException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"InvalidParameterValueException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InvalidParameterValueException.prototype);\n    }\n}\nclass MissingRequiredParameterException extends CloudWatchServiceException {\n    name = \"MissingRequiredParameterException\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"MissingRequiredParameterException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, MissingRequiredParameterException.prototype);\n    }\n}\nclass ResourceNotFoundException extends CloudWatchServiceException {\n    name = \"ResourceNotFoundException\";\n    $fault = \"client\";\n    ResourceType;\n    ResourceId;\n    Message;\n    constructor(opts) {\n        super({\n            name: \"ResourceNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);\n        this.ResourceType = opts.ResourceType;\n        this.ResourceId = opts.ResourceId;\n        this.Message = opts.Message;\n    }\n}\nclass InvalidNextToken extends CloudWatchServiceException {\n    name = \"InvalidNextToken\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"InvalidNextToken\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InvalidNextToken.prototype);\n    }\n}\nconst ScanBy = {\n    TIMESTAMP_ASCENDING: \"TimestampAscending\",\n    TIMESTAMP_DESCENDING: \"TimestampDescending\",\n};\nconst EvaluationState = {\n    PARTIAL_DATA: \"PARTIAL_DATA\",\n};\nconst Statistic = {\n    Average: \"Average\",\n    Maximum: \"Maximum\",\n    Minimum: \"Minimum\",\n    SampleCount: \"SampleCount\",\n    Sum: \"Sum\",\n};\nclass LimitExceededException extends CloudWatchServiceException {\n    name = \"LimitExceededException\";\n    $fault = \"client\";\n    Message;\n    constructor(opts) {\n        super({\n            name: \"LimitExceededException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, LimitExceededException.prototype);\n        this.Message = opts.Message;\n    }\n}\nconst StatusCode = {\n    COMPLETE: \"Complete\",\n    FORBIDDEN: \"Forbidden\",\n    INTERNAL_ERROR: \"InternalError\",\n    PARTIAL_DATA: \"PartialData\",\n};\nconst MetricStreamOutputFormat = {\n    JSON: \"json\",\n    OPEN_TELEMETRY_0_7: \"opentelemetry0.7\",\n    OPEN_TELEMETRY_1_0: \"opentelemetry1.0\",\n};\nconst RecentlyActive = {\n    PT3H: \"PT3H\",\n};\nclass LimitExceededFault extends CloudWatchServiceException {\n    name = \"LimitExceededFault\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"LimitExceededFault\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, LimitExceededFault.prototype);\n    }\n}\nclass InvalidFormatFault extends CloudWatchServiceException {\n    name = \"InvalidFormatFault\";\n    $fault = \"client\";\n    constructor(opts) {\n        super({\n            name: \"InvalidFormatFault\",\n            $fault: \"client\",\n            ...opts,\n        });\n        Object.setPrototypeOf(this, InvalidFormatFault.prototype);\n    }\n}\n\nconst se_DeleteAlarmsCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DeleteAlarmsInput(input),\n        [_A]: _DA,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DeleteAnomalyDetectorCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DeleteAnomalyDetectorInput(input),\n        [_A]: _DAD,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DeleteDashboardsCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DeleteDashboardsInput(input),\n        [_A]: _DD,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DeleteInsightRulesCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DeleteInsightRulesInput(input),\n        [_A]: _DIR,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DeleteMetricStreamCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DeleteMetricStreamInput(input),\n        [_A]: _DMS,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DescribeAlarmContributorsCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DescribeAlarmContributorsInput(input),\n        [_A]: _DAC,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DescribeAlarmHistoryCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DescribeAlarmHistoryInput(input),\n        [_A]: _DAH,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DescribeAlarmsCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DescribeAlarmsInput(input),\n        [_A]: _DAe,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DescribeAlarmsForMetricCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DescribeAlarmsForMetricInput(input),\n        [_A]: _DAFM,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DescribeAnomalyDetectorsCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DescribeAnomalyDetectorsInput(input),\n        [_A]: _DADe,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DescribeInsightRulesCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DescribeInsightRulesInput(input),\n        [_A]: _DIRe,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DisableAlarmActionsCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DisableAlarmActionsInput(input),\n        [_A]: _DAA,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_DisableInsightRulesCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DisableInsightRulesInput(input),\n        [_A]: _DIRi,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_EnableAlarmActionsCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_EnableAlarmActionsInput(input),\n        [_A]: _EAA,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_EnableInsightRulesCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_EnableInsightRulesInput(input),\n        [_A]: _EIR,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_GetDashboardCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetDashboardInput(input),\n        [_A]: _GD,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_GetInsightRuleReportCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetInsightRuleReportInput(input),\n        [_A]: _GIRR,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_GetMetricDataCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetMetricDataInput(input),\n        [_A]: _GMD,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_GetMetricStatisticsCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetMetricStatisticsInput(input),\n        [_A]: _GMS,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_GetMetricStreamCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetMetricStreamInput(input),\n        [_A]: _GMSe,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_GetMetricWidgetImageCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetMetricWidgetImageInput(input),\n        [_A]: _GMWI,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_ListDashboardsCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_ListDashboardsInput(input),\n        [_A]: _LD,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_ListManagedInsightRulesCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_ListManagedInsightRulesInput(input),\n        [_A]: _LMIR,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_ListMetricsCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_ListMetricsInput(input),\n        [_A]: _LM,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_ListMetricStreamsCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_ListMetricStreamsInput(input),\n        [_A]: _LMS,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_ListTagsForResourceCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_ListTagsForResourceInput(input),\n        [_A]: _LTFR,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_PutAnomalyDetectorCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_PutAnomalyDetectorInput(input),\n        [_A]: _PAD,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_PutCompositeAlarmCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_PutCompositeAlarmInput(input),\n        [_A]: _PCA,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_PutDashboardCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_PutDashboardInput(input),\n        [_A]: _PD,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_PutInsightRuleCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_PutInsightRuleInput(input),\n        [_A]: _PIR,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_PutManagedInsightRulesCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_PutManagedInsightRulesInput(input),\n        [_A]: _PMIR,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_PutMetricAlarmCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_PutMetricAlarmInput(input),\n        [_A]: _PMA,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_PutMetricDataCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_PutMetricDataInput(input),\n        [_A]: _PMD,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_PutMetricStreamCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_PutMetricStreamInput(input),\n        [_A]: _PMS,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_SetAlarmStateCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_SetAlarmStateInput(input),\n        [_A]: _SAS,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_StartMetricStreamsCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_StartMetricStreamsInput(input),\n        [_A]: _SMS,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_StopMetricStreamsCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_StopMetricStreamsInput(input),\n        [_A]: _SMSt,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_TagResourceCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_TagResourceInput(input),\n        [_A]: _TR,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst se_UntagResourceCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_UntagResourceInput(input),\n        [_A]: _UR,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nconst de_DeleteAlarmsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await smithyClient.collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return response;\n};\nconst de_DeleteAnomalyDetectorCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseXmlBody(output.body, context);\n    let contents = {};\n    contents = de_DeleteAnomalyDetectorOutput(data.DeleteAnomalyDetectorResult);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DeleteDashboardsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseXmlBody(output.body, context);\n    let contents = {};\n    contents = de_DeleteDashboardsOutput(data.DeleteDashboardsResult);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DeleteInsightRulesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseXmlBody(output.body, context);\n    let contents = {};\n    contents = de_DeleteInsightRulesOutput(data.DeleteInsightRulesResult);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DeleteMetricStreamCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseXmlBody(output.body, context);\n    let contents = {};\n    contents = de_DeleteMetricStreamOutput(data.DeleteMetricStreamResult);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeAlarmContributorsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseXmlBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeAlarmContributorsOutput(data.DescribeAlarmContributorsResult);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeAlarmHistoryCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseXmlBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeAlarmHistoryOutput(data.DescribeAlarmHistoryResult);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeAlarmsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseXmlBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeAlarmsOutput(data.DescribeAlarmsResult);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeAlarmsForMetricCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseXmlBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeAlarmsForMetricOutput(data.DescribeAlarmsForMetricResult);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeAnomalyDetectorsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseXmlBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeAnomalyDetectorsOutput(data.DescribeAnomalyDetectorsResult);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeInsightRulesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseXmlBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeInsightRulesOutput(data.DescribeInsightRulesResult);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DisableAlarmActionsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await smithyClient.collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return response;\n};\nconst de_DisableInsightRulesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseXmlBody(output.body, context);\n    let contents = {};\n    contents = de_DisableInsightRulesOutput(data.DisableInsightRulesResult);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_EnableAlarmActionsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await smithyClient.collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return response;\n};\nconst de_EnableInsightRulesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseXmlBody(output.body, context);\n    let contents = {};\n    contents = de_EnableInsightRulesOutput(data.EnableInsightRulesResult);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetDashboardCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseXmlBody(output.body, context);\n    let contents = {};\n    contents = de_GetDashboardOutput(data.GetDashboardResult);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetInsightRuleReportCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseXmlBody(output.body, context);\n    let contents = {};\n    contents = de_GetInsightRuleReportOutput(data.GetInsightRuleReportResult);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetMetricDataCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseXmlBody(output.body, context);\n    let contents = {};\n    contents = de_GetMetricDataOutput(data.GetMetricDataResult);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetMetricStatisticsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseXmlBody(output.body, context);\n    let contents = {};\n    contents = de_GetMetricStatisticsOutput(data.GetMetricStatisticsResult);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetMetricStreamCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseXmlBody(output.body, context);\n    let contents = {};\n    contents = de_GetMetricStreamOutput(data.GetMetricStreamResult);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetMetricWidgetImageCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseXmlBody(output.body, context);\n    let contents = {};\n    contents = de_GetMetricWidgetImageOutput(data.GetMetricWidgetImageResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ListDashboardsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseXmlBody(output.body, context);\n    let contents = {};\n    contents = de_ListDashboardsOutput(data.ListDashboardsResult);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ListManagedInsightRulesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseXmlBody(output.body, context);\n    let contents = {};\n    contents = de_ListManagedInsightRulesOutput(data.ListManagedInsightRulesResult);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ListMetricsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseXmlBody(output.body, context);\n    let contents = {};\n    contents = de_ListMetricsOutput(data.ListMetricsResult);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ListMetricStreamsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseXmlBody(output.body, context);\n    let contents = {};\n    contents = de_ListMetricStreamsOutput(data.ListMetricStreamsResult);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ListTagsForResourceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseXmlBody(output.body, context);\n    let contents = {};\n    contents = de_ListTagsForResourceOutput(data.ListTagsForResourceResult);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_PutAnomalyDetectorCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseXmlBody(output.body, context);\n    let contents = {};\n    contents = de_PutAnomalyDetectorOutput(data.PutAnomalyDetectorResult);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_PutCompositeAlarmCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await smithyClient.collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return response;\n};\nconst de_PutDashboardCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseXmlBody(output.body, context);\n    let contents = {};\n    contents = de_PutDashboardOutput(data.PutDashboardResult);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_PutInsightRuleCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseXmlBody(output.body, context);\n    let contents = {};\n    contents = de_PutInsightRuleOutput(data.PutInsightRuleResult);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_PutManagedInsightRulesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseXmlBody(output.body, context);\n    let contents = {};\n    contents = de_PutManagedInsightRulesOutput(data.PutManagedInsightRulesResult);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_PutMetricAlarmCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await smithyClient.collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return response;\n};\nconst de_PutMetricDataCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await smithyClient.collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return response;\n};\nconst de_PutMetricStreamCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseXmlBody(output.body, context);\n    let contents = {};\n    contents = de_PutMetricStreamOutput(data.PutMetricStreamResult);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_SetAlarmStateCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    await smithyClient.collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return response;\n};\nconst de_StartMetricStreamsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseXmlBody(output.body, context);\n    let contents = {};\n    contents = de_StartMetricStreamsOutput(data.StartMetricStreamsResult);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_StopMetricStreamsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseXmlBody(output.body, context);\n    let contents = {};\n    contents = de_StopMetricStreamsOutput(data.StopMetricStreamsResult);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_TagResourceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseXmlBody(output.body, context);\n    let contents = {};\n    contents = de_TagResourceOutput(data.TagResourceResult);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_UntagResourceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await core$1.parseXmlBody(output.body, context);\n    let contents = {};\n    contents = de_UntagResourceOutput(data.UntagResourceResult);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_CommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await core$1.parseXmlErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ResourceNotFound\":\n        case \"com.amazonaws.cloudwatch#ResourceNotFound\":\n            throw await de_ResourceNotFoundRes(parsedOutput);\n        case \"InternalServiceError\":\n        case \"com.amazonaws.cloudwatch#InternalServiceFault\":\n            throw await de_InternalServiceFaultRes(parsedOutput);\n        case \"InvalidParameterCombination\":\n        case \"com.amazonaws.cloudwatch#InvalidParameterCombinationException\":\n            throw await de_InvalidParameterCombinationExceptionRes(parsedOutput);\n        case \"InvalidParameterValue\":\n        case \"com.amazonaws.cloudwatch#InvalidParameterValueException\":\n            throw await de_InvalidParameterValueExceptionRes(parsedOutput);\n        case \"MissingParameter\":\n        case \"com.amazonaws.cloudwatch#MissingRequiredParameterException\":\n            throw await de_MissingRequiredParameterExceptionRes(parsedOutput);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.cloudwatch#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput);\n        case \"ConflictException\":\n        case \"com.amazonaws.cloudwatch#ConflictException\":\n            throw await de_ConflictExceptionRes(parsedOutput);\n        case \"InvalidNextToken\":\n        case \"com.amazonaws.cloudwatch#InvalidNextToken\":\n            throw await de_InvalidNextTokenRes(parsedOutput);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.cloudwatch#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput);\n        case \"LimitExceeded\":\n        case \"com.amazonaws.cloudwatch#LimitExceededFault\":\n            throw await de_LimitExceededFaultRes(parsedOutput);\n        case \"InvalidParameterInput\":\n        case \"com.amazonaws.cloudwatch#DashboardInvalidInputError\":\n            throw await de_DashboardInvalidInputErrorRes(parsedOutput);\n        case \"ConcurrentModificationException\":\n        case \"com.amazonaws.cloudwatch#ConcurrentModificationException\":\n            throw await de_ConcurrentModificationExceptionRes(parsedOutput);\n        case \"InvalidFormat\":\n        case \"com.amazonaws.cloudwatch#InvalidFormatFault\":\n            throw await de_InvalidFormatFaultRes(parsedOutput);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_ConcurrentModificationExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_ConcurrentModificationException(body.Error);\n    const exception = new ConcurrentModificationException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_ConflictExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_ConflictException(body.Error);\n    const exception = new ConflictException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_DashboardInvalidInputErrorRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_DashboardInvalidInputError(body.Error);\n    const exception = new DashboardInvalidInputError({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_InternalServiceFaultRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_InternalServiceFault(body.Error);\n    const exception = new InternalServiceFault({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_InvalidFormatFaultRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_InvalidFormatFault(body.Error);\n    const exception = new InvalidFormatFault({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_InvalidNextTokenRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_InvalidNextToken(body.Error);\n    const exception = new InvalidNextToken({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_InvalidParameterCombinationExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_InvalidParameterCombinationException(body.Error);\n    const exception = new InvalidParameterCombinationException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_InvalidParameterValueExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_InvalidParameterValueException(body.Error);\n    const exception = new InvalidParameterValueException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_LimitExceededExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_LimitExceededException(body.Error);\n    const exception = new LimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_LimitExceededFaultRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_LimitExceededFault(body.Error);\n    const exception = new LimitExceededFault({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_MissingRequiredParameterExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_MissingRequiredParameterException(body.Error);\n    const exception = new MissingRequiredParameterException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_ResourceNotFoundRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_ResourceNotFound(body.Error);\n    const exception = new ResourceNotFound({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst de_ResourceNotFoundExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_ResourceNotFoundException(body.Error);\n    const exception = new ResourceNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithyClient.decorateServiceException(exception, body);\n};\nconst se_AlarmNames = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst se_AlarmTypes = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst se_AnomalyDetectorConfiguration = (input, context) => {\n    const entries = {};\n    if (input[_ETR] != null) {\n        const memberEntries = se_AnomalyDetectorExcludedTimeRanges(input[_ETR]);\n        if (input[_ETR]?.length === 0) {\n            entries.ExcludedTimeRanges = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `ExcludedTimeRanges.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_MT] != null) {\n        entries[_MT] = input[_MT];\n    }\n    return entries;\n};\nconst se_AnomalyDetectorExcludedTimeRanges = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_Range(entry);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst se_AnomalyDetectorTypes = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst se_Counts = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = smithyClient.serializeFloat(entry);\n        counter++;\n    }\n    return entries;\n};\nconst se_DashboardNames = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst se_DeleteAlarmsInput = (input, context) => {\n    const entries = {};\n    if (input[_AN] != null) {\n        const memberEntries = se_AlarmNames(input[_AN]);\n        if (input[_AN]?.length === 0) {\n            entries.AlarmNames = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `AlarmNames.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst se_DeleteAnomalyDetectorInput = (input, context) => {\n    const entries = {};\n    if (input[_N] != null) {\n        entries[_N] = input[_N];\n    }\n    if (input[_MN] != null) {\n        entries[_MN] = input[_MN];\n    }\n    if (input[_D] != null) {\n        const memberEntries = se_Dimensions(input[_D]);\n        if (input[_D]?.length === 0) {\n            entries.Dimensions = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Dimensions.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_S] != null) {\n        entries[_S] = input[_S];\n    }\n    if (input[_SMAD] != null) {\n        const memberEntries = se_SingleMetricAnomalyDetector(input[_SMAD]);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `SingleMetricAnomalyDetector.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_MMAD] != null) {\n        const memberEntries = se_MetricMathAnomalyDetector(input[_MMAD]);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `MetricMathAnomalyDetector.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst se_DeleteDashboardsInput = (input, context) => {\n    const entries = {};\n    if (input[_DN] != null) {\n        const memberEntries = se_DashboardNames(input[_DN]);\n        if (input[_DN]?.length === 0) {\n            entries.DashboardNames = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `DashboardNames.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst se_DeleteInsightRulesInput = (input, context) => {\n    const entries = {};\n    if (input[_RN] != null) {\n        const memberEntries = se_InsightRuleNames(input[_RN]);\n        if (input[_RN]?.length === 0) {\n            entries.RuleNames = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `RuleNames.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst se_DeleteMetricStreamInput = (input, context) => {\n    const entries = {};\n    if (input[_Na] != null) {\n        entries[_Na] = input[_Na];\n    }\n    return entries;\n};\nconst se_DescribeAlarmContributorsInput = (input, context) => {\n    const entries = {};\n    if (input[_ANl] != null) {\n        entries[_ANl] = input[_ANl];\n    }\n    if (input[_NT] != null) {\n        entries[_NT] = input[_NT];\n    }\n    return entries;\n};\nconst se_DescribeAlarmHistoryInput = (input, context) => {\n    const entries = {};\n    if (input[_ANl] != null) {\n        entries[_ANl] = input[_ANl];\n    }\n    if (input[_ACI] != null) {\n        entries[_ACI] = input[_ACI];\n    }\n    if (input[_AT] != null) {\n        const memberEntries = se_AlarmTypes(input[_AT]);\n        if (input[_AT]?.length === 0) {\n            entries.AlarmTypes = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `AlarmTypes.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_HIT] != null) {\n        entries[_HIT] = input[_HIT];\n    }\n    if (input[_SD] != null) {\n        entries[_SD] = smithyClient.serializeDateTime(input[_SD]);\n    }\n    if (input[_ED] != null) {\n        entries[_ED] = smithyClient.serializeDateTime(input[_ED]);\n    }\n    if (input[_MR] != null) {\n        entries[_MR] = input[_MR];\n    }\n    if (input[_NT] != null) {\n        entries[_NT] = input[_NT];\n    }\n    if (input[_SB] != null) {\n        entries[_SB] = input[_SB];\n    }\n    return entries;\n};\nconst se_DescribeAlarmsForMetricInput = (input, context) => {\n    const entries = {};\n    if (input[_MN] != null) {\n        entries[_MN] = input[_MN];\n    }\n    if (input[_N] != null) {\n        entries[_N] = input[_N];\n    }\n    if (input[_St] != null) {\n        entries[_St] = input[_St];\n    }\n    if (input[_ES] != null) {\n        entries[_ES] = input[_ES];\n    }\n    if (input[_D] != null) {\n        const memberEntries = se_Dimensions(input[_D]);\n        if (input[_D]?.length === 0) {\n            entries.Dimensions = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Dimensions.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_P] != null) {\n        entries[_P] = input[_P];\n    }\n    if (input[_U] != null) {\n        entries[_U] = input[_U];\n    }\n    return entries;\n};\nconst se_DescribeAlarmsInput = (input, context) => {\n    const entries = {};\n    if (input[_AN] != null) {\n        const memberEntries = se_AlarmNames(input[_AN]);\n        if (input[_AN]?.length === 0) {\n            entries.AlarmNames = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `AlarmNames.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_ANP] != null) {\n        entries[_ANP] = input[_ANP];\n    }\n    if (input[_AT] != null) {\n        const memberEntries = se_AlarmTypes(input[_AT]);\n        if (input[_AT]?.length === 0) {\n            entries.AlarmTypes = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `AlarmTypes.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_COAN] != null) {\n        entries[_COAN] = input[_COAN];\n    }\n    if (input[_POAN] != null) {\n        entries[_POAN] = input[_POAN];\n    }\n    if (input[_SV] != null) {\n        entries[_SV] = input[_SV];\n    }\n    if (input[_AP] != null) {\n        entries[_AP] = input[_AP];\n    }\n    if (input[_MR] != null) {\n        entries[_MR] = input[_MR];\n    }\n    if (input[_NT] != null) {\n        entries[_NT] = input[_NT];\n    }\n    return entries;\n};\nconst se_DescribeAnomalyDetectorsInput = (input, context) => {\n    const entries = {};\n    if (input[_NT] != null) {\n        entries[_NT] = input[_NT];\n    }\n    if (input[_MRa] != null) {\n        entries[_MRa] = input[_MRa];\n    }\n    if (input[_N] != null) {\n        entries[_N] = input[_N];\n    }\n    if (input[_MN] != null) {\n        entries[_MN] = input[_MN];\n    }\n    if (input[_D] != null) {\n        const memberEntries = se_Dimensions(input[_D]);\n        if (input[_D]?.length === 0) {\n            entries.Dimensions = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Dimensions.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_ADT] != null) {\n        const memberEntries = se_AnomalyDetectorTypes(input[_ADT]);\n        if (input[_ADT]?.length === 0) {\n            entries.AnomalyDetectorTypes = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `AnomalyDetectorTypes.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst se_DescribeInsightRulesInput = (input, context) => {\n    const entries = {};\n    if (input[_NT] != null) {\n        entries[_NT] = input[_NT];\n    }\n    if (input[_MRa] != null) {\n        entries[_MRa] = input[_MRa];\n    }\n    return entries;\n};\nconst se_Dimension = (input, context) => {\n    const entries = {};\n    if (input[_Na] != null) {\n        entries[_Na] = input[_Na];\n    }\n    if (input[_Va] != null) {\n        entries[_Va] = input[_Va];\n    }\n    return entries;\n};\nconst se_DimensionFilter = (input, context) => {\n    const entries = {};\n    if (input[_Na] != null) {\n        entries[_Na] = input[_Na];\n    }\n    if (input[_Va] != null) {\n        entries[_Va] = input[_Va];\n    }\n    return entries;\n};\nconst se_DimensionFilters = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_DimensionFilter(entry);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst se_Dimensions = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_Dimension(entry);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst se_DisableAlarmActionsInput = (input, context) => {\n    const entries = {};\n    if (input[_AN] != null) {\n        const memberEntries = se_AlarmNames(input[_AN]);\n        if (input[_AN]?.length === 0) {\n            entries.AlarmNames = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `AlarmNames.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst se_DisableInsightRulesInput = (input, context) => {\n    const entries = {};\n    if (input[_RN] != null) {\n        const memberEntries = se_InsightRuleNames(input[_RN]);\n        if (input[_RN]?.length === 0) {\n            entries.RuleNames = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `RuleNames.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst se_EnableAlarmActionsInput = (input, context) => {\n    const entries = {};\n    if (input[_AN] != null) {\n        const memberEntries = se_AlarmNames(input[_AN]);\n        if (input[_AN]?.length === 0) {\n            entries.AlarmNames = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `AlarmNames.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst se_EnableInsightRulesInput = (input, context) => {\n    const entries = {};\n    if (input[_RN] != null) {\n        const memberEntries = se_InsightRuleNames(input[_RN]);\n        if (input[_RN]?.length === 0) {\n            entries.RuleNames = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `RuleNames.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst se_Entity = (input, context) => {\n    const entries = {};\n    if (input[_KA] != null) {\n        const memberEntries = se_EntityKeyAttributesMap(input[_KA]);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `KeyAttributes.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_At] != null) {\n        const memberEntries = se_EntityAttributesMap(input[_At]);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Attributes.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst se_EntityAttributesMap = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    Object.keys(input)\n        .filter((key) => input[key] != null)\n        .forEach((key) => {\n        entries[`entry.${counter}.key`] = key;\n        entries[`entry.${counter}.value`] = input[key];\n        counter++;\n    });\n    return entries;\n};\nconst se_EntityKeyAttributesMap = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    Object.keys(input)\n        .filter((key) => input[key] != null)\n        .forEach((key) => {\n        entries[`entry.${counter}.key`] = key;\n        entries[`entry.${counter}.value`] = input[key];\n        counter++;\n    });\n    return entries;\n};\nconst se_EntityMetricData = (input, context) => {\n    const entries = {};\n    if (input[_E] != null) {\n        const memberEntries = se_Entity(input[_E]);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Entity.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_MD] != null) {\n        const memberEntries = se_MetricData(input[_MD]);\n        if (input[_MD]?.length === 0) {\n            entries.MetricData = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `MetricData.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst se_EntityMetricDataList = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_EntityMetricData(entry);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst se_ExtendedStatistics = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst se_GetDashboardInput = (input, context) => {\n    const entries = {};\n    if (input[_DNa] != null) {\n        entries[_DNa] = input[_DNa];\n    }\n    return entries;\n};\nconst se_GetInsightRuleReportInput = (input, context) => {\n    const entries = {};\n    if (input[_RNu] != null) {\n        entries[_RNu] = input[_RNu];\n    }\n    if (input[_ST] != null) {\n        entries[_ST] = smithyClient.serializeDateTime(input[_ST]);\n    }\n    if (input[_ET] != null) {\n        entries[_ET] = smithyClient.serializeDateTime(input[_ET]);\n    }\n    if (input[_P] != null) {\n        entries[_P] = input[_P];\n    }\n    if (input[_MCC] != null) {\n        entries[_MCC] = input[_MCC];\n    }\n    if (input[_M] != null) {\n        const memberEntries = se_InsightRuleMetricList(input[_M]);\n        if (input[_M]?.length === 0) {\n            entries.Metrics = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Metrics.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_OB] != null) {\n        entries[_OB] = input[_OB];\n    }\n    return entries;\n};\nconst se_GetMetricDataInput = (input, context) => {\n    const entries = {};\n    if (input[_MDQ] != null) {\n        const memberEntries = se_MetricDataQueries(input[_MDQ]);\n        if (input[_MDQ]?.length === 0) {\n            entries.MetricDataQueries = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `MetricDataQueries.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_ST] != null) {\n        entries[_ST] = smithyClient.serializeDateTime(input[_ST]);\n    }\n    if (input[_ET] != null) {\n        entries[_ET] = smithyClient.serializeDateTime(input[_ET]);\n    }\n    if (input[_NT] != null) {\n        entries[_NT] = input[_NT];\n    }\n    if (input[_SB] != null) {\n        entries[_SB] = input[_SB];\n    }\n    if (input[_MDa] != null) {\n        entries[_MDa] = input[_MDa];\n    }\n    if (input[_LO] != null) {\n        const memberEntries = se_LabelOptions(input[_LO]);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `LabelOptions.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst se_GetMetricStatisticsInput = (input, context) => {\n    const entries = {};\n    if (input[_N] != null) {\n        entries[_N] = input[_N];\n    }\n    if (input[_MN] != null) {\n        entries[_MN] = input[_MN];\n    }\n    if (input[_D] != null) {\n        const memberEntries = se_Dimensions(input[_D]);\n        if (input[_D]?.length === 0) {\n            entries.Dimensions = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Dimensions.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_ST] != null) {\n        entries[_ST] = smithyClient.serializeDateTime(input[_ST]);\n    }\n    if (input[_ET] != null) {\n        entries[_ET] = smithyClient.serializeDateTime(input[_ET]);\n    }\n    if (input[_P] != null) {\n        entries[_P] = input[_P];\n    }\n    if (input[_Sta] != null) {\n        const memberEntries = se_Statistics(input[_Sta]);\n        if (input[_Sta]?.length === 0) {\n            entries.Statistics = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Statistics.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_ESx] != null) {\n        const memberEntries = se_ExtendedStatistics(input[_ESx]);\n        if (input[_ESx]?.length === 0) {\n            entries.ExtendedStatistics = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `ExtendedStatistics.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_U] != null) {\n        entries[_U] = input[_U];\n    }\n    return entries;\n};\nconst se_GetMetricStreamInput = (input, context) => {\n    const entries = {};\n    if (input[_Na] != null) {\n        entries[_Na] = input[_Na];\n    }\n    return entries;\n};\nconst se_GetMetricWidgetImageInput = (input, context) => {\n    const entries = {};\n    if (input[_MW] != null) {\n        entries[_MW] = input[_MW];\n    }\n    if (input[_OF] != null) {\n        entries[_OF] = input[_OF];\n    }\n    return entries;\n};\nconst se_InsightRuleMetricList = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst se_InsightRuleNames = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst se_LabelOptions = (input, context) => {\n    const entries = {};\n    if (input[_T] != null) {\n        entries[_T] = input[_T];\n    }\n    return entries;\n};\nconst se_ListDashboardsInput = (input, context) => {\n    const entries = {};\n    if (input[_DNP] != null) {\n        entries[_DNP] = input[_DNP];\n    }\n    if (input[_NT] != null) {\n        entries[_NT] = input[_NT];\n    }\n    return entries;\n};\nconst se_ListManagedInsightRulesInput = (input, context) => {\n    const entries = {};\n    if (input[_RARN] != null) {\n        entries[_RARN] = input[_RARN];\n    }\n    if (input[_NT] != null) {\n        entries[_NT] = input[_NT];\n    }\n    if (input[_MRa] != null) {\n        entries[_MRa] = input[_MRa];\n    }\n    return entries;\n};\nconst se_ListMetricsInput = (input, context) => {\n    const entries = {};\n    if (input[_N] != null) {\n        entries[_N] = input[_N];\n    }\n    if (input[_MN] != null) {\n        entries[_MN] = input[_MN];\n    }\n    if (input[_D] != null) {\n        const memberEntries = se_DimensionFilters(input[_D]);\n        if (input[_D]?.length === 0) {\n            entries.Dimensions = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Dimensions.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_NT] != null) {\n        entries[_NT] = input[_NT];\n    }\n    if (input[_RA] != null) {\n        entries[_RA] = input[_RA];\n    }\n    if (input[_ILA] != null) {\n        entries[_ILA] = input[_ILA];\n    }\n    if (input[_OA] != null) {\n        entries[_OA] = input[_OA];\n    }\n    return entries;\n};\nconst se_ListMetricStreamsInput = (input, context) => {\n    const entries = {};\n    if (input[_NT] != null) {\n        entries[_NT] = input[_NT];\n    }\n    if (input[_MRa] != null) {\n        entries[_MRa] = input[_MRa];\n    }\n    return entries;\n};\nconst se_ListTagsForResourceInput = (input, context) => {\n    const entries = {};\n    if (input[_RARN] != null) {\n        entries[_RARN] = input[_RARN];\n    }\n    return entries;\n};\nconst se_ManagedRule = (input, context) => {\n    const entries = {};\n    if (input[_TN] != null) {\n        entries[_TN] = input[_TN];\n    }\n    if (input[_RARN] != null) {\n        entries[_RARN] = input[_RARN];\n    }\n    if (input[_Ta] != null) {\n        const memberEntries = se_TagList(input[_Ta]);\n        if (input[_Ta]?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst se_ManagedRules = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_ManagedRule(entry);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst se_Metric = (input, context) => {\n    const entries = {};\n    if (input[_N] != null) {\n        entries[_N] = input[_N];\n    }\n    if (input[_MN] != null) {\n        entries[_MN] = input[_MN];\n    }\n    if (input[_D] != null) {\n        const memberEntries = se_Dimensions(input[_D]);\n        if (input[_D]?.length === 0) {\n            entries.Dimensions = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Dimensions.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst se_MetricCharacteristics = (input, context) => {\n    const entries = {};\n    if (input[_PS] != null) {\n        entries[_PS] = input[_PS];\n    }\n    return entries;\n};\nconst se_MetricData = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_MetricDatum(entry);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst se_MetricDataQueries = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_MetricDataQuery(entry);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst se_MetricDataQuery = (input, context) => {\n    const entries = {};\n    if (input[_I] != null) {\n        entries[_I] = input[_I];\n    }\n    if (input[_MS] != null) {\n        const memberEntries = se_MetricStat(input[_MS]);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `MetricStat.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_Ex] != null) {\n        entries[_Ex] = input[_Ex];\n    }\n    if (input[_L] != null) {\n        entries[_L] = input[_L];\n    }\n    if (input[_RD] != null) {\n        entries[_RD] = input[_RD];\n    }\n    if (input[_P] != null) {\n        entries[_P] = input[_P];\n    }\n    if (input[_AI] != null) {\n        entries[_AI] = input[_AI];\n    }\n    return entries;\n};\nconst se_MetricDatum = (input, context) => {\n    const entries = {};\n    if (input[_MN] != null) {\n        entries[_MN] = input[_MN];\n    }\n    if (input[_D] != null) {\n        const memberEntries = se_Dimensions(input[_D]);\n        if (input[_D]?.length === 0) {\n            entries.Dimensions = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Dimensions.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_Ti] != null) {\n        entries[_Ti] = smithyClient.serializeDateTime(input[_Ti]);\n    }\n    if (input[_Va] != null) {\n        entries[_Va] = smithyClient.serializeFloat(input[_Va]);\n    }\n    if (input[_SVt] != null) {\n        const memberEntries = se_StatisticSet(input[_SVt]);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `StatisticValues.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_Val] != null) {\n        const memberEntries = se_Values(input[_Val]);\n        if (input[_Val]?.length === 0) {\n            entries.Values = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Values.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_C] != null) {\n        const memberEntries = se_Counts(input[_C]);\n        if (input[_C]?.length === 0) {\n            entries.Counts = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Counts.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_U] != null) {\n        entries[_U] = input[_U];\n    }\n    if (input[_SR] != null) {\n        entries[_SR] = input[_SR];\n    }\n    return entries;\n};\nconst se_MetricMathAnomalyDetector = (input, context) => {\n    const entries = {};\n    if (input[_MDQ] != null) {\n        const memberEntries = se_MetricDataQueries(input[_MDQ]);\n        if (input[_MDQ]?.length === 0) {\n            entries.MetricDataQueries = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `MetricDataQueries.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst se_MetricStat = (input, context) => {\n    const entries = {};\n    if (input[_Me] != null) {\n        const memberEntries = se_Metric(input[_Me]);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Metric.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_P] != null) {\n        entries[_P] = input[_P];\n    }\n    if (input[_S] != null) {\n        entries[_S] = input[_S];\n    }\n    if (input[_U] != null) {\n        entries[_U] = input[_U];\n    }\n    return entries;\n};\nconst se_MetricStreamFilter = (input, context) => {\n    const entries = {};\n    if (input[_N] != null) {\n        entries[_N] = input[_N];\n    }\n    if (input[_MNe] != null) {\n        const memberEntries = se_MetricStreamFilterMetricNames(input[_MNe]);\n        if (input[_MNe]?.length === 0) {\n            entries.MetricNames = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `MetricNames.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst se_MetricStreamFilterMetricNames = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst se_MetricStreamFilters = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_MetricStreamFilter(entry);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst se_MetricStreamNames = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst se_MetricStreamStatisticsAdditionalStatistics = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst se_MetricStreamStatisticsConfiguration = (input, context) => {\n    const entries = {};\n    if (input[_IM] != null) {\n        const memberEntries = se_MetricStreamStatisticsIncludeMetrics(input[_IM]);\n        if (input[_IM]?.length === 0) {\n            entries.IncludeMetrics = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `IncludeMetrics.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_AS] != null) {\n        const memberEntries = se_MetricStreamStatisticsAdditionalStatistics(input[_AS]);\n        if (input[_AS]?.length === 0) {\n            entries.AdditionalStatistics = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `AdditionalStatistics.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst se_MetricStreamStatisticsConfigurations = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_MetricStreamStatisticsConfiguration(entry);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst se_MetricStreamStatisticsIncludeMetrics = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_MetricStreamStatisticsMetric(entry);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst se_MetricStreamStatisticsMetric = (input, context) => {\n    const entries = {};\n    if (input[_N] != null) {\n        entries[_N] = input[_N];\n    }\n    if (input[_MN] != null) {\n        entries[_MN] = input[_MN];\n    }\n    return entries;\n};\nconst se_PutAnomalyDetectorInput = (input, context) => {\n    const entries = {};\n    if (input[_N] != null) {\n        entries[_N] = input[_N];\n    }\n    if (input[_MN] != null) {\n        entries[_MN] = input[_MN];\n    }\n    if (input[_D] != null) {\n        const memberEntries = se_Dimensions(input[_D]);\n        if (input[_D]?.length === 0) {\n            entries.Dimensions = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Dimensions.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_S] != null) {\n        entries[_S] = input[_S];\n    }\n    if (input[_Co] != null) {\n        const memberEntries = se_AnomalyDetectorConfiguration(input[_Co]);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Configuration.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_MC] != null) {\n        const memberEntries = se_MetricCharacteristics(input[_MC]);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `MetricCharacteristics.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_SMAD] != null) {\n        const memberEntries = se_SingleMetricAnomalyDetector(input[_SMAD]);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `SingleMetricAnomalyDetector.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_MMAD] != null) {\n        const memberEntries = se_MetricMathAnomalyDetector(input[_MMAD]);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `MetricMathAnomalyDetector.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst se_PutCompositeAlarmInput = (input, context) => {\n    const entries = {};\n    if (input[_AE] != null) {\n        entries[_AE] = input[_AE];\n    }\n    if (input[_AA] != null) {\n        const memberEntries = se_ResourceList(input[_AA]);\n        if (input[_AA]?.length === 0) {\n            entries.AlarmActions = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `AlarmActions.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_AD] != null) {\n        entries[_AD] = input[_AD];\n    }\n    if (input[_ANl] != null) {\n        entries[_ANl] = input[_ANl];\n    }\n    if (input[_AR] != null) {\n        entries[_AR] = input[_AR];\n    }\n    if (input[_IDA] != null) {\n        const memberEntries = se_ResourceList(input[_IDA]);\n        if (input[_IDA]?.length === 0) {\n            entries.InsufficientDataActions = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `InsufficientDataActions.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_OKA] != null) {\n        const memberEntries = se_ResourceList(input[_OKA]);\n        if (input[_OKA]?.length === 0) {\n            entries.OKActions = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `OKActions.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_Ta] != null) {\n        const memberEntries = se_TagList(input[_Ta]);\n        if (input[_Ta]?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_ASc] != null) {\n        entries[_ASc] = input[_ASc];\n    }\n    if (input[_ASWP] != null) {\n        entries[_ASWP] = input[_ASWP];\n    }\n    if (input[_ASEP] != null) {\n        entries[_ASEP] = input[_ASEP];\n    }\n    return entries;\n};\nconst se_PutDashboardInput = (input, context) => {\n    const entries = {};\n    if (input[_DNa] != null) {\n        entries[_DNa] = input[_DNa];\n    }\n    if (input[_DB] != null) {\n        entries[_DB] = input[_DB];\n    }\n    return entries;\n};\nconst se_PutInsightRuleInput = (input, context) => {\n    const entries = {};\n    if (input[_RNu] != null) {\n        entries[_RNu] = input[_RNu];\n    }\n    if (input[_RS] != null) {\n        entries[_RS] = input[_RS];\n    }\n    if (input[_RDu] != null) {\n        entries[_RDu] = input[_RDu];\n    }\n    if (input[_Ta] != null) {\n        const memberEntries = se_TagList(input[_Ta]);\n        if (input[_Ta]?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_AOTL] != null) {\n        entries[_AOTL] = input[_AOTL];\n    }\n    return entries;\n};\nconst se_PutManagedInsightRulesInput = (input, context) => {\n    const entries = {};\n    if (input[_MRan] != null) {\n        const memberEntries = se_ManagedRules(input[_MRan]);\n        if (input[_MRan]?.length === 0) {\n            entries.ManagedRules = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `ManagedRules.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst se_PutMetricAlarmInput = (input, context) => {\n    const entries = {};\n    if (input[_ANl] != null) {\n        entries[_ANl] = input[_ANl];\n    }\n    if (input[_AD] != null) {\n        entries[_AD] = input[_AD];\n    }\n    if (input[_AE] != null) {\n        entries[_AE] = input[_AE];\n    }\n    if (input[_OKA] != null) {\n        const memberEntries = se_ResourceList(input[_OKA]);\n        if (input[_OKA]?.length === 0) {\n            entries.OKActions = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `OKActions.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_AA] != null) {\n        const memberEntries = se_ResourceList(input[_AA]);\n        if (input[_AA]?.length === 0) {\n            entries.AlarmActions = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `AlarmActions.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_IDA] != null) {\n        const memberEntries = se_ResourceList(input[_IDA]);\n        if (input[_IDA]?.length === 0) {\n            entries.InsufficientDataActions = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `InsufficientDataActions.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_MN] != null) {\n        entries[_MN] = input[_MN];\n    }\n    if (input[_N] != null) {\n        entries[_N] = input[_N];\n    }\n    if (input[_St] != null) {\n        entries[_St] = input[_St];\n    }\n    if (input[_ES] != null) {\n        entries[_ES] = input[_ES];\n    }\n    if (input[_D] != null) {\n        const memberEntries = se_Dimensions(input[_D]);\n        if (input[_D]?.length === 0) {\n            entries.Dimensions = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Dimensions.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_P] != null) {\n        entries[_P] = input[_P];\n    }\n    if (input[_U] != null) {\n        entries[_U] = input[_U];\n    }\n    if (input[_EP] != null) {\n        entries[_EP] = input[_EP];\n    }\n    if (input[_DTA] != null) {\n        entries[_DTA] = input[_DTA];\n    }\n    if (input[_Th] != null) {\n        entries[_Th] = smithyClient.serializeFloat(input[_Th]);\n    }\n    if (input[_CO] != null) {\n        entries[_CO] = input[_CO];\n    }\n    if (input[_TMD] != null) {\n        entries[_TMD] = input[_TMD];\n    }\n    if (input[_ELSCP] != null) {\n        entries[_ELSCP] = input[_ELSCP];\n    }\n    if (input[_M] != null) {\n        const memberEntries = se_MetricDataQueries(input[_M]);\n        if (input[_M]?.length === 0) {\n            entries.Metrics = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Metrics.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_Ta] != null) {\n        const memberEntries = se_TagList(input[_Ta]);\n        if (input[_Ta]?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_TMI] != null) {\n        entries[_TMI] = input[_TMI];\n    }\n    return entries;\n};\nconst se_PutMetricDataInput = (input, context) => {\n    const entries = {};\n    if (input[_N] != null) {\n        entries[_N] = input[_N];\n    }\n    if (input[_MD] != null) {\n        const memberEntries = se_MetricData(input[_MD]);\n        if (input[_MD]?.length === 0) {\n            entries.MetricData = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `MetricData.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_EMD] != null) {\n        const memberEntries = se_EntityMetricDataList(input[_EMD]);\n        if (input[_EMD]?.length === 0) {\n            entries.EntityMetricData = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `EntityMetricData.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_SEV] != null) {\n        entries[_SEV] = input[_SEV];\n    }\n    return entries;\n};\nconst se_PutMetricStreamInput = (input, context) => {\n    const entries = {};\n    if (input[_Na] != null) {\n        entries[_Na] = input[_Na];\n    }\n    if (input[_IF] != null) {\n        const memberEntries = se_MetricStreamFilters(input[_IF]);\n        if (input[_IF]?.length === 0) {\n            entries.IncludeFilters = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `IncludeFilters.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_EF] != null) {\n        const memberEntries = se_MetricStreamFilters(input[_EF]);\n        if (input[_EF]?.length === 0) {\n            entries.ExcludeFilters = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `ExcludeFilters.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_FA] != null) {\n        entries[_FA] = input[_FA];\n    }\n    if (input[_RAo] != null) {\n        entries[_RAo] = input[_RAo];\n    }\n    if (input[_OF] != null) {\n        entries[_OF] = input[_OF];\n    }\n    if (input[_Ta] != null) {\n        const memberEntries = se_TagList(input[_Ta]);\n        if (input[_Ta]?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_SC] != null) {\n        const memberEntries = se_MetricStreamStatisticsConfigurations(input[_SC]);\n        if (input[_SC]?.length === 0) {\n            entries.StatisticsConfigurations = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `StatisticsConfigurations.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_ILAM] != null) {\n        entries[_ILAM] = input[_ILAM];\n    }\n    return entries;\n};\nconst se_Range = (input, context) => {\n    const entries = {};\n    if (input[_ST] != null) {\n        entries[_ST] = smithyClient.serializeDateTime(input[_ST]);\n    }\n    if (input[_ET] != null) {\n        entries[_ET] = smithyClient.serializeDateTime(input[_ET]);\n    }\n    return entries;\n};\nconst se_ResourceList = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst se_SetAlarmStateInput = (input, context) => {\n    const entries = {};\n    if (input[_ANl] != null) {\n        entries[_ANl] = input[_ANl];\n    }\n    if (input[_SV] != null) {\n        entries[_SV] = input[_SV];\n    }\n    if (input[_SRt] != null) {\n        entries[_SRt] = input[_SRt];\n    }\n    if (input[_SRD] != null) {\n        entries[_SRD] = input[_SRD];\n    }\n    return entries;\n};\nconst se_SingleMetricAnomalyDetector = (input, context) => {\n    const entries = {};\n    if (input[_AI] != null) {\n        entries[_AI] = input[_AI];\n    }\n    if (input[_N] != null) {\n        entries[_N] = input[_N];\n    }\n    if (input[_MN] != null) {\n        entries[_MN] = input[_MN];\n    }\n    if (input[_D] != null) {\n        const memberEntries = se_Dimensions(input[_D]);\n        if (input[_D]?.length === 0) {\n            entries.Dimensions = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Dimensions.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_S] != null) {\n        entries[_S] = input[_S];\n    }\n    return entries;\n};\nconst se_StartMetricStreamsInput = (input, context) => {\n    const entries = {};\n    if (input[_Nam] != null) {\n        const memberEntries = se_MetricStreamNames(input[_Nam]);\n        if (input[_Nam]?.length === 0) {\n            entries.Names = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Names.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst se_Statistics = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst se_StatisticSet = (input, context) => {\n    const entries = {};\n    if (input[_SCa] != null) {\n        entries[_SCa] = smithyClient.serializeFloat(input[_SCa]);\n    }\n    if (input[_Su] != null) {\n        entries[_Su] = smithyClient.serializeFloat(input[_Su]);\n    }\n    if (input[_Mi] != null) {\n        entries[_Mi] = smithyClient.serializeFloat(input[_Mi]);\n    }\n    if (input[_Ma] != null) {\n        entries[_Ma] = smithyClient.serializeFloat(input[_Ma]);\n    }\n    return entries;\n};\nconst se_StopMetricStreamsInput = (input, context) => {\n    const entries = {};\n    if (input[_Nam] != null) {\n        const memberEntries = se_MetricStreamNames(input[_Nam]);\n        if (input[_Nam]?.length === 0) {\n            entries.Names = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Names.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst se_Tag = (input, context) => {\n    const entries = {};\n    if (input[_K] != null) {\n        entries[_K] = input[_K];\n    }\n    if (input[_Va] != null) {\n        entries[_Va] = input[_Va];\n    }\n    return entries;\n};\nconst se_TagKeyList = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst se_TagList = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_Tag(entry);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst se_TagResourceInput = (input, context) => {\n    const entries = {};\n    if (input[_RARN] != null) {\n        entries[_RARN] = input[_RARN];\n    }\n    if (input[_Ta] != null) {\n        const memberEntries = se_TagList(input[_Ta]);\n        if (input[_Ta]?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst se_UntagResourceInput = (input, context) => {\n    const entries = {};\n    if (input[_RARN] != null) {\n        entries[_RARN] = input[_RARN];\n    }\n    if (input[_TK] != null) {\n        const memberEntries = se_TagKeyList(input[_TK]);\n        if (input[_TK]?.length === 0) {\n            entries.TagKeys = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `TagKeys.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst se_Values = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = smithyClient.serializeFloat(entry);\n        counter++;\n    }\n    return entries;\n};\nconst de_AlarmContributor = (output, context) => {\n    const contents = {};\n    if (output[_CI] != null) {\n        contents[_CI] = smithyClient.expectString(output[_CI]);\n    }\n    if (String(output.ContributorAttributes).trim() === \"\") {\n        contents[_CA] = {};\n    }\n    else if (output[_CA] != null && output[_CA][_e] != null) {\n        contents[_CA] = de_ContributorAttributes(smithyClient.getArrayIfSingleItem(output[_CA][_e]));\n    }\n    if (output[_SRt] != null) {\n        contents[_SRt] = smithyClient.expectString(output[_SRt]);\n    }\n    if (output[_STT] != null) {\n        contents[_STT] = smithyClient.expectNonNull(smithyClient.parseRfc3339DateTimeWithOffset(output[_STT]));\n    }\n    return contents;\n};\nconst de_AlarmContributors = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_AlarmContributor(entry);\n    });\n};\nconst de_AlarmHistoryItem = (output, context) => {\n    const contents = {};\n    if (output[_ANl] != null) {\n        contents[_ANl] = smithyClient.expectString(output[_ANl]);\n    }\n    if (output[_ACI] != null) {\n        contents[_ACI] = smithyClient.expectString(output[_ACI]);\n    }\n    if (output[_ATl] != null) {\n        contents[_ATl] = smithyClient.expectString(output[_ATl]);\n    }\n    if (output[_Ti] != null) {\n        contents[_Ti] = smithyClient.expectNonNull(smithyClient.parseRfc3339DateTimeWithOffset(output[_Ti]));\n    }\n    if (output[_HIT] != null) {\n        contents[_HIT] = smithyClient.expectString(output[_HIT]);\n    }\n    if (output[_HS] != null) {\n        contents[_HS] = smithyClient.expectString(output[_HS]);\n    }\n    if (output[_HD] != null) {\n        contents[_HD] = smithyClient.expectString(output[_HD]);\n    }\n    if (String(output.AlarmContributorAttributes).trim() === \"\") {\n        contents[_ACA] = {};\n    }\n    else if (output[_ACA] != null && output[_ACA][_e] != null) {\n        contents[_ACA] = de_ContributorAttributes(smithyClient.getArrayIfSingleItem(output[_ACA][_e]));\n    }\n    return contents;\n};\nconst de_AlarmHistoryItems = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_AlarmHistoryItem(entry);\n    });\n};\nconst de_AnomalyDetector = (output, context) => {\n    const contents = {};\n    if (output[_N] != null) {\n        contents[_N] = smithyClient.expectString(output[_N]);\n    }\n    if (output[_MN] != null) {\n        contents[_MN] = smithyClient.expectString(output[_MN]);\n    }\n    if (String(output.Dimensions).trim() === \"\") {\n        contents[_D] = [];\n    }\n    else if (output[_D] != null && output[_D][_m] != null) {\n        contents[_D] = de_Dimensions(smithyClient.getArrayIfSingleItem(output[_D][_m]));\n    }\n    if (output[_S] != null) {\n        contents[_S] = smithyClient.expectString(output[_S]);\n    }\n    if (output[_Co] != null) {\n        contents[_Co] = de_AnomalyDetectorConfiguration(output[_Co]);\n    }\n    if (output[_SV] != null) {\n        contents[_SV] = smithyClient.expectString(output[_SV]);\n    }\n    if (output[_MC] != null) {\n        contents[_MC] = de_MetricCharacteristics(output[_MC]);\n    }\n    if (output[_SMAD] != null) {\n        contents[_SMAD] = de_SingleMetricAnomalyDetector(output[_SMAD]);\n    }\n    if (output[_MMAD] != null) {\n        contents[_MMAD] = de_MetricMathAnomalyDetector(output[_MMAD]);\n    }\n    return contents;\n};\nconst de_AnomalyDetectorConfiguration = (output, context) => {\n    const contents = {};\n    if (String(output.ExcludedTimeRanges).trim() === \"\") {\n        contents[_ETR] = [];\n    }\n    else if (output[_ETR] != null && output[_ETR][_m] != null) {\n        contents[_ETR] = de_AnomalyDetectorExcludedTimeRanges(smithyClient.getArrayIfSingleItem(output[_ETR][_m]));\n    }\n    if (output[_MT] != null) {\n        contents[_MT] = smithyClient.expectString(output[_MT]);\n    }\n    return contents;\n};\nconst de_AnomalyDetectorExcludedTimeRanges = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_Range(entry);\n    });\n};\nconst de_AnomalyDetectors = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_AnomalyDetector(entry);\n    });\n};\nconst de_BatchFailures = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_PartialFailure(entry);\n    });\n};\nconst de_CompositeAlarm = (output, context) => {\n    const contents = {};\n    if (output[_AE] != null) {\n        contents[_AE] = smithyClient.parseBoolean(output[_AE]);\n    }\n    if (String(output.AlarmActions).trim() === \"\") {\n        contents[_AA] = [];\n    }\n    else if (output[_AA] != null && output[_AA][_m] != null) {\n        contents[_AA] = de_ResourceList(smithyClient.getArrayIfSingleItem(output[_AA][_m]));\n    }\n    if (output[_AAl] != null) {\n        contents[_AAl] = smithyClient.expectString(output[_AAl]);\n    }\n    if (output[_ACUT] != null) {\n        contents[_ACUT] = smithyClient.expectNonNull(smithyClient.parseRfc3339DateTimeWithOffset(output[_ACUT]));\n    }\n    if (output[_AD] != null) {\n        contents[_AD] = smithyClient.expectString(output[_AD]);\n    }\n    if (output[_ANl] != null) {\n        contents[_ANl] = smithyClient.expectString(output[_ANl]);\n    }\n    if (output[_AR] != null) {\n        contents[_AR] = smithyClient.expectString(output[_AR]);\n    }\n    if (String(output.InsufficientDataActions).trim() === \"\") {\n        contents[_IDA] = [];\n    }\n    else if (output[_IDA] != null && output[_IDA][_m] != null) {\n        contents[_IDA] = de_ResourceList(smithyClient.getArrayIfSingleItem(output[_IDA][_m]));\n    }\n    if (String(output.OKActions).trim() === \"\") {\n        contents[_OKA] = [];\n    }\n    else if (output[_OKA] != null && output[_OKA][_m] != null) {\n        contents[_OKA] = de_ResourceList(smithyClient.getArrayIfSingleItem(output[_OKA][_m]));\n    }\n    if (output[_SRt] != null) {\n        contents[_SRt] = smithyClient.expectString(output[_SRt]);\n    }\n    if (output[_SRD] != null) {\n        contents[_SRD] = smithyClient.expectString(output[_SRD]);\n    }\n    if (output[_SUT] != null) {\n        contents[_SUT] = smithyClient.expectNonNull(smithyClient.parseRfc3339DateTimeWithOffset(output[_SUT]));\n    }\n    if (output[_SV] != null) {\n        contents[_SV] = smithyClient.expectString(output[_SV]);\n    }\n    if (output[_STT] != null) {\n        contents[_STT] = smithyClient.expectNonNull(smithyClient.parseRfc3339DateTimeWithOffset(output[_STT]));\n    }\n    if (output[_ASB] != null) {\n        contents[_ASB] = smithyClient.expectString(output[_ASB]);\n    }\n    if (output[_ASR] != null) {\n        contents[_ASR] = smithyClient.expectString(output[_ASR]);\n    }\n    if (output[_ASc] != null) {\n        contents[_ASc] = smithyClient.expectString(output[_ASc]);\n    }\n    if (output[_ASWP] != null) {\n        contents[_ASWP] = smithyClient.strictParseInt32(output[_ASWP]);\n    }\n    if (output[_ASEP] != null) {\n        contents[_ASEP] = smithyClient.strictParseInt32(output[_ASEP]);\n    }\n    return contents;\n};\nconst de_CompositeAlarms = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_CompositeAlarm(entry);\n    });\n};\nconst de_ConcurrentModificationException = (output, context) => {\n    const contents = {};\n    if (output[_Mes] != null) {\n        contents[_Mes] = smithyClient.expectString(output[_Mes]);\n    }\n    return contents;\n};\nconst de_ConflictException = (output, context) => {\n    const contents = {};\n    if (output[_Mes] != null) {\n        contents[_Mes] = smithyClient.expectString(output[_Mes]);\n    }\n    return contents;\n};\nconst de_ContributorAttributes = (output, context) => {\n    return output.reduce((acc, pair) => {\n        if (pair[\"value\"] === null) {\n            return acc;\n        }\n        acc[pair[\"key\"]] = smithyClient.expectString(pair[\"value\"]);\n        return acc;\n    }, {});\n};\nconst de_DashboardEntries = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_DashboardEntry(entry);\n    });\n};\nconst de_DashboardEntry = (output, context) => {\n    const contents = {};\n    if (output[_DNa] != null) {\n        contents[_DNa] = smithyClient.expectString(output[_DNa]);\n    }\n    if (output[_DAa] != null) {\n        contents[_DAa] = smithyClient.expectString(output[_DAa]);\n    }\n    if (output[_LMa] != null) {\n        contents[_LMa] = smithyClient.expectNonNull(smithyClient.parseRfc3339DateTimeWithOffset(output[_LMa]));\n    }\n    if (output[_Si] != null) {\n        contents[_Si] = smithyClient.strictParseLong(output[_Si]);\n    }\n    return contents;\n};\nconst de_DashboardInvalidInputError = (output, context) => {\n    const contents = {};\n    if (output[_me] != null) {\n        contents[_me] = smithyClient.expectString(output[_me]);\n    }\n    if (String(output.dashboardValidationMessages).trim() === \"\") {\n        contents[_dVM] = [];\n    }\n    else if (output[_dVM] != null && output[_dVM][_m] != null) {\n        contents[_dVM] = de_DashboardValidationMessages(smithyClient.getArrayIfSingleItem(output[_dVM][_m]));\n    }\n    return contents;\n};\nconst de_DashboardValidationMessage = (output, context) => {\n    const contents = {};\n    if (output[_DP] != null) {\n        contents[_DP] = smithyClient.expectString(output[_DP]);\n    }\n    if (output[_Mes] != null) {\n        contents[_Mes] = smithyClient.expectString(output[_Mes]);\n    }\n    return contents;\n};\nconst de_DashboardValidationMessages = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_DashboardValidationMessage(entry);\n    });\n};\nconst de_Datapoint = (output, context) => {\n    const contents = {};\n    if (output[_Ti] != null) {\n        contents[_Ti] = smithyClient.expectNonNull(smithyClient.parseRfc3339DateTimeWithOffset(output[_Ti]));\n    }\n    if (output[_SCa] != null) {\n        contents[_SCa] = smithyClient.strictParseFloat(output[_SCa]);\n    }\n    if (output[_Av] != null) {\n        contents[_Av] = smithyClient.strictParseFloat(output[_Av]);\n    }\n    if (output[_Su] != null) {\n        contents[_Su] = smithyClient.strictParseFloat(output[_Su]);\n    }\n    if (output[_Mi] != null) {\n        contents[_Mi] = smithyClient.strictParseFloat(output[_Mi]);\n    }\n    if (output[_Ma] != null) {\n        contents[_Ma] = smithyClient.strictParseFloat(output[_Ma]);\n    }\n    if (output[_U] != null) {\n        contents[_U] = smithyClient.expectString(output[_U]);\n    }\n    if (String(output.ExtendedStatistics).trim() === \"\") {\n        contents[_ESx] = {};\n    }\n    else if (output[_ESx] != null && output[_ESx][_e] != null) {\n        contents[_ESx] = de_DatapointValueMap(smithyClient.getArrayIfSingleItem(output[_ESx][_e]));\n    }\n    return contents;\n};\nconst de_Datapoints = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_Datapoint(entry);\n    });\n};\nconst de_DatapointValueMap = (output, context) => {\n    return output.reduce((acc, pair) => {\n        if (pair[\"value\"] === null) {\n            return acc;\n        }\n        acc[pair[\"key\"]] = smithyClient.strictParseFloat(pair[\"value\"]);\n        return acc;\n    }, {});\n};\nconst de_DatapointValues = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return smithyClient.strictParseFloat(entry);\n    });\n};\nconst de_DeleteAnomalyDetectorOutput = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst de_DeleteDashboardsOutput = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst de_DeleteInsightRulesOutput = (output, context) => {\n    const contents = {};\n    if (String(output.Failures).trim() === \"\") {\n        contents[_F] = [];\n    }\n    else if (output[_F] != null && output[_F][_m] != null) {\n        contents[_F] = de_BatchFailures(smithyClient.getArrayIfSingleItem(output[_F][_m]));\n    }\n    return contents;\n};\nconst de_DeleteMetricStreamOutput = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst de_DescribeAlarmContributorsOutput = (output, context) => {\n    const contents = {};\n    if (String(output.AlarmContributors).trim() === \"\") {\n        contents[_AC] = [];\n    }\n    else if (output[_AC] != null && output[_AC][_m] != null) {\n        contents[_AC] = de_AlarmContributors(smithyClient.getArrayIfSingleItem(output[_AC][_m]));\n    }\n    if (output[_NT] != null) {\n        contents[_NT] = smithyClient.expectString(output[_NT]);\n    }\n    return contents;\n};\nconst de_DescribeAlarmHistoryOutput = (output, context) => {\n    const contents = {};\n    if (String(output.AlarmHistoryItems).trim() === \"\") {\n        contents[_AHI] = [];\n    }\n    else if (output[_AHI] != null && output[_AHI][_m] != null) {\n        contents[_AHI] = de_AlarmHistoryItems(smithyClient.getArrayIfSingleItem(output[_AHI][_m]));\n    }\n    if (output[_NT] != null) {\n        contents[_NT] = smithyClient.expectString(output[_NT]);\n    }\n    return contents;\n};\nconst de_DescribeAlarmsForMetricOutput = (output, context) => {\n    const contents = {};\n    if (String(output.MetricAlarms).trim() === \"\") {\n        contents[_MA] = [];\n    }\n    else if (output[_MA] != null && output[_MA][_m] != null) {\n        contents[_MA] = de_MetricAlarms(smithyClient.getArrayIfSingleItem(output[_MA][_m]));\n    }\n    return contents;\n};\nconst de_DescribeAlarmsOutput = (output, context) => {\n    const contents = {};\n    if (String(output.CompositeAlarms).trim() === \"\") {\n        contents[_CAo] = [];\n    }\n    else if (output[_CAo] != null && output[_CAo][_m] != null) {\n        contents[_CAo] = de_CompositeAlarms(smithyClient.getArrayIfSingleItem(output[_CAo][_m]));\n    }\n    if (String(output.MetricAlarms).trim() === \"\") {\n        contents[_MA] = [];\n    }\n    else if (output[_MA] != null && output[_MA][_m] != null) {\n        contents[_MA] = de_MetricAlarms(smithyClient.getArrayIfSingleItem(output[_MA][_m]));\n    }\n    if (output[_NT] != null) {\n        contents[_NT] = smithyClient.expectString(output[_NT]);\n    }\n    return contents;\n};\nconst de_DescribeAnomalyDetectorsOutput = (output, context) => {\n    const contents = {};\n    if (String(output.AnomalyDetectors).trim() === \"\") {\n        contents[_ADn] = [];\n    }\n    else if (output[_ADn] != null && output[_ADn][_m] != null) {\n        contents[_ADn] = de_AnomalyDetectors(smithyClient.getArrayIfSingleItem(output[_ADn][_m]));\n    }\n    if (output[_NT] != null) {\n        contents[_NT] = smithyClient.expectString(output[_NT]);\n    }\n    return contents;\n};\nconst de_DescribeInsightRulesOutput = (output, context) => {\n    const contents = {};\n    if (output[_NT] != null) {\n        contents[_NT] = smithyClient.expectString(output[_NT]);\n    }\n    if (String(output.InsightRules).trim() === \"\") {\n        contents[_IR] = [];\n    }\n    else if (output[_IR] != null && output[_IR][_m] != null) {\n        contents[_IR] = de_InsightRules(smithyClient.getArrayIfSingleItem(output[_IR][_m]));\n    }\n    return contents;\n};\nconst de_Dimension = (output, context) => {\n    const contents = {};\n    if (output[_Na] != null) {\n        contents[_Na] = smithyClient.expectString(output[_Na]);\n    }\n    if (output[_Va] != null) {\n        contents[_Va] = smithyClient.expectString(output[_Va]);\n    }\n    return contents;\n};\nconst de_Dimensions = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_Dimension(entry);\n    });\n};\nconst de_DisableInsightRulesOutput = (output, context) => {\n    const contents = {};\n    if (String(output.Failures).trim() === \"\") {\n        contents[_F] = [];\n    }\n    else if (output[_F] != null && output[_F][_m] != null) {\n        contents[_F] = de_BatchFailures(smithyClient.getArrayIfSingleItem(output[_F][_m]));\n    }\n    return contents;\n};\nconst de_EnableInsightRulesOutput = (output, context) => {\n    const contents = {};\n    if (String(output.Failures).trim() === \"\") {\n        contents[_F] = [];\n    }\n    else if (output[_F] != null && output[_F][_m] != null) {\n        contents[_F] = de_BatchFailures(smithyClient.getArrayIfSingleItem(output[_F][_m]));\n    }\n    return contents;\n};\nconst de_GetDashboardOutput = (output, context) => {\n    const contents = {};\n    if (output[_DAa] != null) {\n        contents[_DAa] = smithyClient.expectString(output[_DAa]);\n    }\n    if (output[_DB] != null) {\n        contents[_DB] = smithyClient.expectString(output[_DB]);\n    }\n    if (output[_DNa] != null) {\n        contents[_DNa] = smithyClient.expectString(output[_DNa]);\n    }\n    return contents;\n};\nconst de_GetInsightRuleReportOutput = (output, context) => {\n    const contents = {};\n    if (String(output.KeyLabels).trim() === \"\") {\n        contents[_KL] = [];\n    }\n    else if (output[_KL] != null && output[_KL][_m] != null) {\n        contents[_KL] = de_InsightRuleContributorKeyLabels(smithyClient.getArrayIfSingleItem(output[_KL][_m]));\n    }\n    if (output[_ASg] != null) {\n        contents[_ASg] = smithyClient.expectString(output[_ASg]);\n    }\n    if (output[_AV] != null) {\n        contents[_AV] = smithyClient.strictParseFloat(output[_AV]);\n    }\n    if (output[_AUC] != null) {\n        contents[_AUC] = smithyClient.strictParseLong(output[_AUC]);\n    }\n    if (String(output.Contributors).trim() === \"\") {\n        contents[_Con] = [];\n    }\n    else if (output[_Con] != null && output[_Con][_m] != null) {\n        contents[_Con] = de_InsightRuleContributors(smithyClient.getArrayIfSingleItem(output[_Con][_m]));\n    }\n    if (String(output.MetricDatapoints).trim() === \"\") {\n        contents[_MDe] = [];\n    }\n    else if (output[_MDe] != null && output[_MDe][_m] != null) {\n        contents[_MDe] = de_InsightRuleMetricDatapoints(smithyClient.getArrayIfSingleItem(output[_MDe][_m]));\n    }\n    return contents;\n};\nconst de_GetMetricDataOutput = (output, context) => {\n    const contents = {};\n    if (String(output.MetricDataResults).trim() === \"\") {\n        contents[_MDR] = [];\n    }\n    else if (output[_MDR] != null && output[_MDR][_m] != null) {\n        contents[_MDR] = de_MetricDataResults(smithyClient.getArrayIfSingleItem(output[_MDR][_m]));\n    }\n    if (output[_NT] != null) {\n        contents[_NT] = smithyClient.expectString(output[_NT]);\n    }\n    if (String(output.Messages).trim() === \"\") {\n        contents[_Mess] = [];\n    }\n    else if (output[_Mess] != null && output[_Mess][_m] != null) {\n        contents[_Mess] = de_MetricDataResultMessages(smithyClient.getArrayIfSingleItem(output[_Mess][_m]));\n    }\n    return contents;\n};\nconst de_GetMetricStatisticsOutput = (output, context) => {\n    const contents = {};\n    if (output[_L] != null) {\n        contents[_L] = smithyClient.expectString(output[_L]);\n    }\n    if (String(output.Datapoints).trim() === \"\") {\n        contents[_Da] = [];\n    }\n    else if (output[_Da] != null && output[_Da][_m] != null) {\n        contents[_Da] = de_Datapoints(smithyClient.getArrayIfSingleItem(output[_Da][_m]));\n    }\n    return contents;\n};\nconst de_GetMetricStreamOutput = (output, context) => {\n    const contents = {};\n    if (output[_Ar] != null) {\n        contents[_Ar] = smithyClient.expectString(output[_Ar]);\n    }\n    if (output[_Na] != null) {\n        contents[_Na] = smithyClient.expectString(output[_Na]);\n    }\n    if (String(output.IncludeFilters).trim() === \"\") {\n        contents[_IF] = [];\n    }\n    else if (output[_IF] != null && output[_IF][_m] != null) {\n        contents[_IF] = de_MetricStreamFilters(smithyClient.getArrayIfSingleItem(output[_IF][_m]));\n    }\n    if (String(output.ExcludeFilters).trim() === \"\") {\n        contents[_EF] = [];\n    }\n    else if (output[_EF] != null && output[_EF][_m] != null) {\n        contents[_EF] = de_MetricStreamFilters(smithyClient.getArrayIfSingleItem(output[_EF][_m]));\n    }\n    if (output[_FA] != null) {\n        contents[_FA] = smithyClient.expectString(output[_FA]);\n    }\n    if (output[_RAo] != null) {\n        contents[_RAo] = smithyClient.expectString(output[_RAo]);\n    }\n    if (output[_Stat] != null) {\n        contents[_Stat] = smithyClient.expectString(output[_Stat]);\n    }\n    if (output[_CD] != null) {\n        contents[_CD] = smithyClient.expectNonNull(smithyClient.parseRfc3339DateTimeWithOffset(output[_CD]));\n    }\n    if (output[_LUD] != null) {\n        contents[_LUD] = smithyClient.expectNonNull(smithyClient.parseRfc3339DateTimeWithOffset(output[_LUD]));\n    }\n    if (output[_OF] != null) {\n        contents[_OF] = smithyClient.expectString(output[_OF]);\n    }\n    if (String(output.StatisticsConfigurations).trim() === \"\") {\n        contents[_SC] = [];\n    }\n    else if (output[_SC] != null && output[_SC][_m] != null) {\n        contents[_SC] = de_MetricStreamStatisticsConfigurations(smithyClient.getArrayIfSingleItem(output[_SC][_m]));\n    }\n    if (output[_ILAM] != null) {\n        contents[_ILAM] = smithyClient.parseBoolean(output[_ILAM]);\n    }\n    return contents;\n};\nconst de_GetMetricWidgetImageOutput = (output, context) => {\n    const contents = {};\n    if (output[_MWI] != null) {\n        contents[_MWI] = context.base64Decoder(output[_MWI]);\n    }\n    return contents;\n};\nconst de_InsightRule = (output, context) => {\n    const contents = {};\n    if (output[_Na] != null) {\n        contents[_Na] = smithyClient.expectString(output[_Na]);\n    }\n    if (output[_Stat] != null) {\n        contents[_Stat] = smithyClient.expectString(output[_Stat]);\n    }\n    if (output[_Sc] != null) {\n        contents[_Sc] = smithyClient.expectString(output[_Sc]);\n    }\n    if (output[_De] != null) {\n        contents[_De] = smithyClient.expectString(output[_De]);\n    }\n    if (output[_MRana] != null) {\n        contents[_MRana] = smithyClient.parseBoolean(output[_MRana]);\n    }\n    if (output[_AOTL] != null) {\n        contents[_AOTL] = smithyClient.parseBoolean(output[_AOTL]);\n    }\n    return contents;\n};\nconst de_InsightRuleContributor = (output, context) => {\n    const contents = {};\n    if (String(output.Keys).trim() === \"\") {\n        contents[_Ke] = [];\n    }\n    else if (output[_Ke] != null && output[_Ke][_m] != null) {\n        contents[_Ke] = de_InsightRuleContributorKeys(smithyClient.getArrayIfSingleItem(output[_Ke][_m]));\n    }\n    if (output[_AAV] != null) {\n        contents[_AAV] = smithyClient.strictParseFloat(output[_AAV]);\n    }\n    if (String(output.Datapoints).trim() === \"\") {\n        contents[_Da] = [];\n    }\n    else if (output[_Da] != null && output[_Da][_m] != null) {\n        contents[_Da] = de_InsightRuleContributorDatapoints(smithyClient.getArrayIfSingleItem(output[_Da][_m]));\n    }\n    return contents;\n};\nconst de_InsightRuleContributorDatapoint = (output, context) => {\n    const contents = {};\n    if (output[_Ti] != null) {\n        contents[_Ti] = smithyClient.expectNonNull(smithyClient.parseRfc3339DateTimeWithOffset(output[_Ti]));\n    }\n    if (output[_AVp] != null) {\n        contents[_AVp] = smithyClient.strictParseFloat(output[_AVp]);\n    }\n    return contents;\n};\nconst de_InsightRuleContributorDatapoints = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_InsightRuleContributorDatapoint(entry);\n    });\n};\nconst de_InsightRuleContributorKeyLabels = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return smithyClient.expectString(entry);\n    });\n};\nconst de_InsightRuleContributorKeys = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return smithyClient.expectString(entry);\n    });\n};\nconst de_InsightRuleContributors = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_InsightRuleContributor(entry);\n    });\n};\nconst de_InsightRuleMetricDatapoint = (output, context) => {\n    const contents = {};\n    if (output[_Ti] != null) {\n        contents[_Ti] = smithyClient.expectNonNull(smithyClient.parseRfc3339DateTimeWithOffset(output[_Ti]));\n    }\n    if (output[_UC] != null) {\n        contents[_UC] = smithyClient.strictParseFloat(output[_UC]);\n    }\n    if (output[_MCV] != null) {\n        contents[_MCV] = smithyClient.strictParseFloat(output[_MCV]);\n    }\n    if (output[_SCa] != null) {\n        contents[_SCa] = smithyClient.strictParseFloat(output[_SCa]);\n    }\n    if (output[_Av] != null) {\n        contents[_Av] = smithyClient.strictParseFloat(output[_Av]);\n    }\n    if (output[_Su] != null) {\n        contents[_Su] = smithyClient.strictParseFloat(output[_Su]);\n    }\n    if (output[_Mi] != null) {\n        contents[_Mi] = smithyClient.strictParseFloat(output[_Mi]);\n    }\n    if (output[_Ma] != null) {\n        contents[_Ma] = smithyClient.strictParseFloat(output[_Ma]);\n    }\n    return contents;\n};\nconst de_InsightRuleMetricDatapoints = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_InsightRuleMetricDatapoint(entry);\n    });\n};\nconst de_InsightRules = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_InsightRule(entry);\n    });\n};\nconst de_InternalServiceFault = (output, context) => {\n    const contents = {};\n    if (output[_Mes] != null) {\n        contents[_Mes] = smithyClient.expectString(output[_Mes]);\n    }\n    return contents;\n};\nconst de_InvalidFormatFault = (output, context) => {\n    const contents = {};\n    if (output[_me] != null) {\n        contents[_me] = smithyClient.expectString(output[_me]);\n    }\n    return contents;\n};\nconst de_InvalidNextToken = (output, context) => {\n    const contents = {};\n    if (output[_me] != null) {\n        contents[_me] = smithyClient.expectString(output[_me]);\n    }\n    return contents;\n};\nconst de_InvalidParameterCombinationException = (output, context) => {\n    const contents = {};\n    if (output[_me] != null) {\n        contents[_me] = smithyClient.expectString(output[_me]);\n    }\n    return contents;\n};\nconst de_InvalidParameterValueException = (output, context) => {\n    const contents = {};\n    if (output[_me] != null) {\n        contents[_me] = smithyClient.expectString(output[_me]);\n    }\n    return contents;\n};\nconst de_LimitExceededException = (output, context) => {\n    const contents = {};\n    if (output[_Mes] != null) {\n        contents[_Mes] = smithyClient.expectString(output[_Mes]);\n    }\n    return contents;\n};\nconst de_LimitExceededFault = (output, context) => {\n    const contents = {};\n    if (output[_me] != null) {\n        contents[_me] = smithyClient.expectString(output[_me]);\n    }\n    return contents;\n};\nconst de_ListDashboardsOutput = (output, context) => {\n    const contents = {};\n    if (String(output.DashboardEntries).trim() === \"\") {\n        contents[_DE] = [];\n    }\n    else if (output[_DE] != null && output[_DE][_m] != null) {\n        contents[_DE] = de_DashboardEntries(smithyClient.getArrayIfSingleItem(output[_DE][_m]));\n    }\n    if (output[_NT] != null) {\n        contents[_NT] = smithyClient.expectString(output[_NT]);\n    }\n    return contents;\n};\nconst de_ListManagedInsightRulesOutput = (output, context) => {\n    const contents = {};\n    if (String(output.ManagedRules).trim() === \"\") {\n        contents[_MRan] = [];\n    }\n    else if (output[_MRan] != null && output[_MRan][_m] != null) {\n        contents[_MRan] = de_ManagedRuleDescriptions(smithyClient.getArrayIfSingleItem(output[_MRan][_m]));\n    }\n    if (output[_NT] != null) {\n        contents[_NT] = smithyClient.expectString(output[_NT]);\n    }\n    return contents;\n};\nconst de_ListMetricsOutput = (output, context) => {\n    const contents = {};\n    if (String(output.Metrics).trim() === \"\") {\n        contents[_M] = [];\n    }\n    else if (output[_M] != null && output[_M][_m] != null) {\n        contents[_M] = de_Metrics(smithyClient.getArrayIfSingleItem(output[_M][_m]));\n    }\n    if (output[_NT] != null) {\n        contents[_NT] = smithyClient.expectString(output[_NT]);\n    }\n    if (String(output.OwningAccounts).trim() === \"\") {\n        contents[_OAw] = [];\n    }\n    else if (output[_OAw] != null && output[_OAw][_m] != null) {\n        contents[_OAw] = de_OwningAccounts(smithyClient.getArrayIfSingleItem(output[_OAw][_m]));\n    }\n    return contents;\n};\nconst de_ListMetricStreamsOutput = (output, context) => {\n    const contents = {};\n    if (output[_NT] != null) {\n        contents[_NT] = smithyClient.expectString(output[_NT]);\n    }\n    if (String(output.Entries).trim() === \"\") {\n        contents[_En] = [];\n    }\n    else if (output[_En] != null && output[_En][_m] != null) {\n        contents[_En] = de_MetricStreamEntries(smithyClient.getArrayIfSingleItem(output[_En][_m]));\n    }\n    return contents;\n};\nconst de_ListTagsForResourceOutput = (output, context) => {\n    const contents = {};\n    if (String(output.Tags).trim() === \"\") {\n        contents[_Ta] = [];\n    }\n    else if (output[_Ta] != null && output[_Ta][_m] != null) {\n        contents[_Ta] = de_TagList(smithyClient.getArrayIfSingleItem(output[_Ta][_m]));\n    }\n    return contents;\n};\nconst de_ManagedRuleDescription = (output, context) => {\n    const contents = {};\n    if (output[_TN] != null) {\n        contents[_TN] = smithyClient.expectString(output[_TN]);\n    }\n    if (output[_RARN] != null) {\n        contents[_RARN] = smithyClient.expectString(output[_RARN]);\n    }\n    if (output[_RS] != null) {\n        contents[_RS] = de_ManagedRuleState(output[_RS]);\n    }\n    return contents;\n};\nconst de_ManagedRuleDescriptions = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ManagedRuleDescription(entry);\n    });\n};\nconst de_ManagedRuleState = (output, context) => {\n    const contents = {};\n    if (output[_RNu] != null) {\n        contents[_RNu] = smithyClient.expectString(output[_RNu]);\n    }\n    if (output[_Stat] != null) {\n        contents[_Stat] = smithyClient.expectString(output[_Stat]);\n    }\n    return contents;\n};\nconst de_MessageData = (output, context) => {\n    const contents = {};\n    if (output[_Cod] != null) {\n        contents[_Cod] = smithyClient.expectString(output[_Cod]);\n    }\n    if (output[_Va] != null) {\n        contents[_Va] = smithyClient.expectString(output[_Va]);\n    }\n    return contents;\n};\nconst de_Metric = (output, context) => {\n    const contents = {};\n    if (output[_N] != null) {\n        contents[_N] = smithyClient.expectString(output[_N]);\n    }\n    if (output[_MN] != null) {\n        contents[_MN] = smithyClient.expectString(output[_MN]);\n    }\n    if (String(output.Dimensions).trim() === \"\") {\n        contents[_D] = [];\n    }\n    else if (output[_D] != null && output[_D][_m] != null) {\n        contents[_D] = de_Dimensions(smithyClient.getArrayIfSingleItem(output[_D][_m]));\n    }\n    return contents;\n};\nconst de_MetricAlarm = (output, context) => {\n    const contents = {};\n    if (output[_ANl] != null) {\n        contents[_ANl] = smithyClient.expectString(output[_ANl]);\n    }\n    if (output[_AAl] != null) {\n        contents[_AAl] = smithyClient.expectString(output[_AAl]);\n    }\n    if (output[_AD] != null) {\n        contents[_AD] = smithyClient.expectString(output[_AD]);\n    }\n    if (output[_ACUT] != null) {\n        contents[_ACUT] = smithyClient.expectNonNull(smithyClient.parseRfc3339DateTimeWithOffset(output[_ACUT]));\n    }\n    if (output[_AE] != null) {\n        contents[_AE] = smithyClient.parseBoolean(output[_AE]);\n    }\n    if (String(output.OKActions).trim() === \"\") {\n        contents[_OKA] = [];\n    }\n    else if (output[_OKA] != null && output[_OKA][_m] != null) {\n        contents[_OKA] = de_ResourceList(smithyClient.getArrayIfSingleItem(output[_OKA][_m]));\n    }\n    if (String(output.AlarmActions).trim() === \"\") {\n        contents[_AA] = [];\n    }\n    else if (output[_AA] != null && output[_AA][_m] != null) {\n        contents[_AA] = de_ResourceList(smithyClient.getArrayIfSingleItem(output[_AA][_m]));\n    }\n    if (String(output.InsufficientDataActions).trim() === \"\") {\n        contents[_IDA] = [];\n    }\n    else if (output[_IDA] != null && output[_IDA][_m] != null) {\n        contents[_IDA] = de_ResourceList(smithyClient.getArrayIfSingleItem(output[_IDA][_m]));\n    }\n    if (output[_SV] != null) {\n        contents[_SV] = smithyClient.expectString(output[_SV]);\n    }\n    if (output[_SRt] != null) {\n        contents[_SRt] = smithyClient.expectString(output[_SRt]);\n    }\n    if (output[_SRD] != null) {\n        contents[_SRD] = smithyClient.expectString(output[_SRD]);\n    }\n    if (output[_SUT] != null) {\n        contents[_SUT] = smithyClient.expectNonNull(smithyClient.parseRfc3339DateTimeWithOffset(output[_SUT]));\n    }\n    if (output[_MN] != null) {\n        contents[_MN] = smithyClient.expectString(output[_MN]);\n    }\n    if (output[_N] != null) {\n        contents[_N] = smithyClient.expectString(output[_N]);\n    }\n    if (output[_St] != null) {\n        contents[_St] = smithyClient.expectString(output[_St]);\n    }\n    if (output[_ES] != null) {\n        contents[_ES] = smithyClient.expectString(output[_ES]);\n    }\n    if (String(output.Dimensions).trim() === \"\") {\n        contents[_D] = [];\n    }\n    else if (output[_D] != null && output[_D][_m] != null) {\n        contents[_D] = de_Dimensions(smithyClient.getArrayIfSingleItem(output[_D][_m]));\n    }\n    if (output[_P] != null) {\n        contents[_P] = smithyClient.strictParseInt32(output[_P]);\n    }\n    if (output[_U] != null) {\n        contents[_U] = smithyClient.expectString(output[_U]);\n    }\n    if (output[_EP] != null) {\n        contents[_EP] = smithyClient.strictParseInt32(output[_EP]);\n    }\n    if (output[_DTA] != null) {\n        contents[_DTA] = smithyClient.strictParseInt32(output[_DTA]);\n    }\n    if (output[_Th] != null) {\n        contents[_Th] = smithyClient.strictParseFloat(output[_Th]);\n    }\n    if (output[_CO] != null) {\n        contents[_CO] = smithyClient.expectString(output[_CO]);\n    }\n    if (output[_TMD] != null) {\n        contents[_TMD] = smithyClient.expectString(output[_TMD]);\n    }\n    if (output[_ELSCP] != null) {\n        contents[_ELSCP] = smithyClient.expectString(output[_ELSCP]);\n    }\n    if (String(output.Metrics).trim() === \"\") {\n        contents[_M] = [];\n    }\n    else if (output[_M] != null && output[_M][_m] != null) {\n        contents[_M] = de_MetricDataQueries(smithyClient.getArrayIfSingleItem(output[_M][_m]));\n    }\n    if (output[_TMI] != null) {\n        contents[_TMI] = smithyClient.expectString(output[_TMI]);\n    }\n    if (output[_ESv] != null) {\n        contents[_ESv] = smithyClient.expectString(output[_ESv]);\n    }\n    if (output[_STT] != null) {\n        contents[_STT] = smithyClient.expectNonNull(smithyClient.parseRfc3339DateTimeWithOffset(output[_STT]));\n    }\n    return contents;\n};\nconst de_MetricAlarms = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_MetricAlarm(entry);\n    });\n};\nconst de_MetricCharacteristics = (output, context) => {\n    const contents = {};\n    if (output[_PS] != null) {\n        contents[_PS] = smithyClient.parseBoolean(output[_PS]);\n    }\n    return contents;\n};\nconst de_MetricDataQueries = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_MetricDataQuery(entry);\n    });\n};\nconst de_MetricDataQuery = (output, context) => {\n    const contents = {};\n    if (output[_I] != null) {\n        contents[_I] = smithyClient.expectString(output[_I]);\n    }\n    if (output[_MS] != null) {\n        contents[_MS] = de_MetricStat(output[_MS]);\n    }\n    if (output[_Ex] != null) {\n        contents[_Ex] = smithyClient.expectString(output[_Ex]);\n    }\n    if (output[_L] != null) {\n        contents[_L] = smithyClient.expectString(output[_L]);\n    }\n    if (output[_RD] != null) {\n        contents[_RD] = smithyClient.parseBoolean(output[_RD]);\n    }\n    if (output[_P] != null) {\n        contents[_P] = smithyClient.strictParseInt32(output[_P]);\n    }\n    if (output[_AI] != null) {\n        contents[_AI] = smithyClient.expectString(output[_AI]);\n    }\n    return contents;\n};\nconst de_MetricDataResult = (output, context) => {\n    const contents = {};\n    if (output[_I] != null) {\n        contents[_I] = smithyClient.expectString(output[_I]);\n    }\n    if (output[_L] != null) {\n        contents[_L] = smithyClient.expectString(output[_L]);\n    }\n    if (String(output.Timestamps).trim() === \"\") {\n        contents[_Tim] = [];\n    }\n    else if (output[_Tim] != null && output[_Tim][_m] != null) {\n        contents[_Tim] = de_Timestamps(smithyClient.getArrayIfSingleItem(output[_Tim][_m]));\n    }\n    if (String(output.Values).trim() === \"\") {\n        contents[_Val] = [];\n    }\n    else if (output[_Val] != null && output[_Val][_m] != null) {\n        contents[_Val] = de_DatapointValues(smithyClient.getArrayIfSingleItem(output[_Val][_m]));\n    }\n    if (output[_SCt] != null) {\n        contents[_SCt] = smithyClient.expectString(output[_SCt]);\n    }\n    if (String(output.Messages).trim() === \"\") {\n        contents[_Mess] = [];\n    }\n    else if (output[_Mess] != null && output[_Mess][_m] != null) {\n        contents[_Mess] = de_MetricDataResultMessages(smithyClient.getArrayIfSingleItem(output[_Mess][_m]));\n    }\n    return contents;\n};\nconst de_MetricDataResultMessages = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_MessageData(entry);\n    });\n};\nconst de_MetricDataResults = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_MetricDataResult(entry);\n    });\n};\nconst de_MetricMathAnomalyDetector = (output, context) => {\n    const contents = {};\n    if (String(output.MetricDataQueries).trim() === \"\") {\n        contents[_MDQ] = [];\n    }\n    else if (output[_MDQ] != null && output[_MDQ][_m] != null) {\n        contents[_MDQ] = de_MetricDataQueries(smithyClient.getArrayIfSingleItem(output[_MDQ][_m]));\n    }\n    return contents;\n};\nconst de_Metrics = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_Metric(entry);\n    });\n};\nconst de_MetricStat = (output, context) => {\n    const contents = {};\n    if (output[_Me] != null) {\n        contents[_Me] = de_Metric(output[_Me]);\n    }\n    if (output[_P] != null) {\n        contents[_P] = smithyClient.strictParseInt32(output[_P]);\n    }\n    if (output[_S] != null) {\n        contents[_S] = smithyClient.expectString(output[_S]);\n    }\n    if (output[_U] != null) {\n        contents[_U] = smithyClient.expectString(output[_U]);\n    }\n    return contents;\n};\nconst de_MetricStreamEntries = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_MetricStreamEntry(entry);\n    });\n};\nconst de_MetricStreamEntry = (output, context) => {\n    const contents = {};\n    if (output[_Ar] != null) {\n        contents[_Ar] = smithyClient.expectString(output[_Ar]);\n    }\n    if (output[_CD] != null) {\n        contents[_CD] = smithyClient.expectNonNull(smithyClient.parseRfc3339DateTimeWithOffset(output[_CD]));\n    }\n    if (output[_LUD] != null) {\n        contents[_LUD] = smithyClient.expectNonNull(smithyClient.parseRfc3339DateTimeWithOffset(output[_LUD]));\n    }\n    if (output[_Na] != null) {\n        contents[_Na] = smithyClient.expectString(output[_Na]);\n    }\n    if (output[_FA] != null) {\n        contents[_FA] = smithyClient.expectString(output[_FA]);\n    }\n    if (output[_Stat] != null) {\n        contents[_Stat] = smithyClient.expectString(output[_Stat]);\n    }\n    if (output[_OF] != null) {\n        contents[_OF] = smithyClient.expectString(output[_OF]);\n    }\n    return contents;\n};\nconst de_MetricStreamFilter = (output, context) => {\n    const contents = {};\n    if (output[_N] != null) {\n        contents[_N] = smithyClient.expectString(output[_N]);\n    }\n    if (String(output.MetricNames).trim() === \"\") {\n        contents[_MNe] = [];\n    }\n    else if (output[_MNe] != null && output[_MNe][_m] != null) {\n        contents[_MNe] = de_MetricStreamFilterMetricNames(smithyClient.getArrayIfSingleItem(output[_MNe][_m]));\n    }\n    return contents;\n};\nconst de_MetricStreamFilterMetricNames = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return smithyClient.expectString(entry);\n    });\n};\nconst de_MetricStreamFilters = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_MetricStreamFilter(entry);\n    });\n};\nconst de_MetricStreamStatisticsAdditionalStatistics = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return smithyClient.expectString(entry);\n    });\n};\nconst de_MetricStreamStatisticsConfiguration = (output, context) => {\n    const contents = {};\n    if (String(output.IncludeMetrics).trim() === \"\") {\n        contents[_IM] = [];\n    }\n    else if (output[_IM] != null && output[_IM][_m] != null) {\n        contents[_IM] = de_MetricStreamStatisticsIncludeMetrics(smithyClient.getArrayIfSingleItem(output[_IM][_m]));\n    }\n    if (String(output.AdditionalStatistics).trim() === \"\") {\n        contents[_AS] = [];\n    }\n    else if (output[_AS] != null && output[_AS][_m] != null) {\n        contents[_AS] = de_MetricStreamStatisticsAdditionalStatistics(smithyClient.getArrayIfSingleItem(output[_AS][_m]));\n    }\n    return contents;\n};\nconst de_MetricStreamStatisticsConfigurations = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_MetricStreamStatisticsConfiguration(entry);\n    });\n};\nconst de_MetricStreamStatisticsIncludeMetrics = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_MetricStreamStatisticsMetric(entry);\n    });\n};\nconst de_MetricStreamStatisticsMetric = (output, context) => {\n    const contents = {};\n    if (output[_N] != null) {\n        contents[_N] = smithyClient.expectString(output[_N]);\n    }\n    if (output[_MN] != null) {\n        contents[_MN] = smithyClient.expectString(output[_MN]);\n    }\n    return contents;\n};\nconst de_MissingRequiredParameterException = (output, context) => {\n    const contents = {};\n    if (output[_me] != null) {\n        contents[_me] = smithyClient.expectString(output[_me]);\n    }\n    return contents;\n};\nconst de_OwningAccounts = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return smithyClient.expectString(entry);\n    });\n};\nconst de_PartialFailure = (output, context) => {\n    const contents = {};\n    if (output[_FR] != null) {\n        contents[_FR] = smithyClient.expectString(output[_FR]);\n    }\n    if (output[_ETx] != null) {\n        contents[_ETx] = smithyClient.expectString(output[_ETx]);\n    }\n    if (output[_FC] != null) {\n        contents[_FC] = smithyClient.expectString(output[_FC]);\n    }\n    if (output[_FD] != null) {\n        contents[_FD] = smithyClient.expectString(output[_FD]);\n    }\n    return contents;\n};\nconst de_PutAnomalyDetectorOutput = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst de_PutDashboardOutput = (output, context) => {\n    const contents = {};\n    if (String(output.DashboardValidationMessages).trim() === \"\") {\n        contents[_DVM] = [];\n    }\n    else if (output[_DVM] != null && output[_DVM][_m] != null) {\n        contents[_DVM] = de_DashboardValidationMessages(smithyClient.getArrayIfSingleItem(output[_DVM][_m]));\n    }\n    return contents;\n};\nconst de_PutInsightRuleOutput = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst de_PutManagedInsightRulesOutput = (output, context) => {\n    const contents = {};\n    if (String(output.Failures).trim() === \"\") {\n        contents[_F] = [];\n    }\n    else if (output[_F] != null && output[_F][_m] != null) {\n        contents[_F] = de_BatchFailures(smithyClient.getArrayIfSingleItem(output[_F][_m]));\n    }\n    return contents;\n};\nconst de_PutMetricStreamOutput = (output, context) => {\n    const contents = {};\n    if (output[_Ar] != null) {\n        contents[_Ar] = smithyClient.expectString(output[_Ar]);\n    }\n    return contents;\n};\nconst de_Range = (output, context) => {\n    const contents = {};\n    if (output[_ST] != null) {\n        contents[_ST] = smithyClient.expectNonNull(smithyClient.parseRfc3339DateTimeWithOffset(output[_ST]));\n    }\n    if (output[_ET] != null) {\n        contents[_ET] = smithyClient.expectNonNull(smithyClient.parseRfc3339DateTimeWithOffset(output[_ET]));\n    }\n    return contents;\n};\nconst de_ResourceList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return smithyClient.expectString(entry);\n    });\n};\nconst de_ResourceNotFound = (output, context) => {\n    const contents = {};\n    if (output[_me] != null) {\n        contents[_me] = smithyClient.expectString(output[_me]);\n    }\n    return contents;\n};\nconst de_ResourceNotFoundException = (output, context) => {\n    const contents = {};\n    if (output[_RT] != null) {\n        contents[_RT] = smithyClient.expectString(output[_RT]);\n    }\n    if (output[_RI] != null) {\n        contents[_RI] = smithyClient.expectString(output[_RI]);\n    }\n    if (output[_Mes] != null) {\n        contents[_Mes] = smithyClient.expectString(output[_Mes]);\n    }\n    return contents;\n};\nconst de_SingleMetricAnomalyDetector = (output, context) => {\n    const contents = {};\n    if (output[_AI] != null) {\n        contents[_AI] = smithyClient.expectString(output[_AI]);\n    }\n    if (output[_N] != null) {\n        contents[_N] = smithyClient.expectString(output[_N]);\n    }\n    if (output[_MN] != null) {\n        contents[_MN] = smithyClient.expectString(output[_MN]);\n    }\n    if (String(output.Dimensions).trim() === \"\") {\n        contents[_D] = [];\n    }\n    else if (output[_D] != null && output[_D][_m] != null) {\n        contents[_D] = de_Dimensions(smithyClient.getArrayIfSingleItem(output[_D][_m]));\n    }\n    if (output[_S] != null) {\n        contents[_S] = smithyClient.expectString(output[_S]);\n    }\n    return contents;\n};\nconst de_StartMetricStreamsOutput = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst de_StopMetricStreamsOutput = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst de_Tag = (output, context) => {\n    const contents = {};\n    if (output[_K] != null) {\n        contents[_K] = smithyClient.expectString(output[_K]);\n    }\n    if (output[_Va] != null) {\n        contents[_Va] = smithyClient.expectString(output[_Va]);\n    }\n    return contents;\n};\nconst de_TagList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_Tag(entry);\n    });\n};\nconst de_TagResourceOutput = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst de_Timestamps = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return smithyClient.expectNonNull(smithyClient.parseRfc3339DateTimeWithOffset(entry));\n    });\n};\nconst de_UntagResourceOutput = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst throwDefaultError = smithyClient.withBaseException(CloudWatchServiceException);\nconst buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const contents = {\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        path: basePath.endsWith(\"/\") ? basePath.slice(0, -1) + path : basePath + path,\n        headers,\n    };\n    if (body !== undefined) {\n        contents.body = body;\n    }\n    return new protocolHttp.HttpRequest(contents);\n};\nconst SHARED_HEADERS = {\n    \"content-type\": \"application/x-www-form-urlencoded\",\n};\nconst _ = \"2010-08-01\";\nconst _A = \"Action\";\nconst _AA = \"AlarmActions\";\nconst _AAV = \"ApproximateAggregateValue\";\nconst _AAl = \"AlarmArn\";\nconst _AC = \"AlarmContributors\";\nconst _ACA = \"AlarmContributorAttributes\";\nconst _ACI = \"AlarmContributorId\";\nconst _ACUT = \"AlarmConfigurationUpdatedTimestamp\";\nconst _AD = \"AlarmDescription\";\nconst _ADT = \"AnomalyDetectorTypes\";\nconst _ADn = \"AnomalyDetectors\";\nconst _AE = \"ActionsEnabled\";\nconst _AHI = \"AlarmHistoryItems\";\nconst _AI = \"AccountId\";\nconst _AN = \"AlarmNames\";\nconst _ANP = \"AlarmNamePrefix\";\nconst _ANl = \"AlarmName\";\nconst _AOTL = \"ApplyOnTransformedLogs\";\nconst _AP = \"ActionPrefix\";\nconst _AR = \"AlarmRule\";\nconst _AS = \"AdditionalStatistics\";\nconst _ASB = \"ActionsSuppressedBy\";\nconst _ASEP = \"ActionsSuppressorExtensionPeriod\";\nconst _ASR = \"ActionsSuppressedReason\";\nconst _ASWP = \"ActionsSuppressorWaitPeriod\";\nconst _ASc = \"ActionsSuppressor\";\nconst _ASg = \"AggregationStatistic\";\nconst _AT = \"AlarmTypes\";\nconst _ATl = \"AlarmType\";\nconst _AUC = \"ApproximateUniqueCount\";\nconst _AV = \"AggregateValue\";\nconst _AVp = \"ApproximateValue\";\nconst _Ar = \"Arn\";\nconst _At = \"Attributes\";\nconst _Av = \"Average\";\nconst _C = \"Counts\";\nconst _CA = \"ContributorAttributes\";\nconst _CAo = \"CompositeAlarms\";\nconst _CD = \"CreationDate\";\nconst _CI = \"ContributorId\";\nconst _CO = \"ComparisonOperator\";\nconst _COAN = \"ChildrenOfAlarmName\";\nconst _Co = \"Configuration\";\nconst _Cod = \"Code\";\nconst _Con = \"Contributors\";\nconst _D = \"Dimensions\";\nconst _DA = \"DeleteAlarms\";\nconst _DAA = \"DisableAlarmActions\";\nconst _DAC = \"DescribeAlarmContributors\";\nconst _DAD = \"DeleteAnomalyDetector\";\nconst _DADe = \"DescribeAnomalyDetectors\";\nconst _DAFM = \"DescribeAlarmsForMetric\";\nconst _DAH = \"DescribeAlarmHistory\";\nconst _DAa = \"DashboardArn\";\nconst _DAe = \"DescribeAlarms\";\nconst _DB = \"DashboardBody\";\nconst _DD = \"DeleteDashboards\";\nconst _DE = \"DashboardEntries\";\nconst _DIR = \"DeleteInsightRules\";\nconst _DIRe = \"DescribeInsightRules\";\nconst _DIRi = \"DisableInsightRules\";\nconst _DMS = \"DeleteMetricStream\";\nconst _DN = \"DashboardNames\";\nconst _DNP = \"DashboardNamePrefix\";\nconst _DNa = \"DashboardName\";\nconst _DP = \"DataPath\";\nconst _DTA = \"DatapointsToAlarm\";\nconst _DVM = \"DashboardValidationMessages\";\nconst _Da = \"Datapoints\";\nconst _De = \"Definition\";\nconst _E = \"Entity\";\nconst _EAA = \"EnableAlarmActions\";\nconst _ED = \"EndDate\";\nconst _EF = \"ExcludeFilters\";\nconst _EIR = \"EnableInsightRules\";\nconst _ELSCP = \"EvaluateLowSampleCountPercentile\";\nconst _EMD = \"EntityMetricData\";\nconst _EP = \"EvaluationPeriods\";\nconst _ES = \"ExtendedStatistic\";\nconst _ESv = \"EvaluationState\";\nconst _ESx = \"ExtendedStatistics\";\nconst _ET = \"EndTime\";\nconst _ETR = \"ExcludedTimeRanges\";\nconst _ETx = \"ExceptionType\";\nconst _En = \"Entries\";\nconst _Ex = \"Expression\";\nconst _F = \"Failures\";\nconst _FA = \"FirehoseArn\";\nconst _FC = \"FailureCode\";\nconst _FD = \"FailureDescription\";\nconst _FR = \"FailureResource\";\nconst _GD = \"GetDashboard\";\nconst _GIRR = \"GetInsightRuleReport\";\nconst _GMD = \"GetMetricData\";\nconst _GMS = \"GetMetricStatistics\";\nconst _GMSe = \"GetMetricStream\";\nconst _GMWI = \"GetMetricWidgetImage\";\nconst _HD = \"HistoryData\";\nconst _HIT = \"HistoryItemType\";\nconst _HS = \"HistorySummary\";\nconst _I = \"Id\";\nconst _IDA = \"InsufficientDataActions\";\nconst _IF = \"IncludeFilters\";\nconst _ILA = \"IncludeLinkedAccounts\";\nconst _ILAM = \"IncludeLinkedAccountsMetrics\";\nconst _IM = \"IncludeMetrics\";\nconst _IR = \"InsightRules\";\nconst _K = \"Key\";\nconst _KA = \"KeyAttributes\";\nconst _KL = \"KeyLabels\";\nconst _Ke = \"Keys\";\nconst _L = \"Label\";\nconst _LD = \"ListDashboards\";\nconst _LM = \"ListMetrics\";\nconst _LMIR = \"ListManagedInsightRules\";\nconst _LMS = \"ListMetricStreams\";\nconst _LMa = \"LastModified\";\nconst _LO = \"LabelOptions\";\nconst _LTFR = \"ListTagsForResource\";\nconst _LUD = \"LastUpdateDate\";\nconst _M = \"Metrics\";\nconst _MA = \"MetricAlarms\";\nconst _MC = \"MetricCharacteristics\";\nconst _MCC = \"MaxContributorCount\";\nconst _MCV = \"MaxContributorValue\";\nconst _MD = \"MetricData\";\nconst _MDQ = \"MetricDataQueries\";\nconst _MDR = \"MetricDataResults\";\nconst _MDa = \"MaxDatapoints\";\nconst _MDe = \"MetricDatapoints\";\nconst _MMAD = \"MetricMathAnomalyDetector\";\nconst _MN = \"MetricName\";\nconst _MNe = \"MetricNames\";\nconst _MR = \"MaxRecords\";\nconst _MRa = \"MaxResults\";\nconst _MRan = \"ManagedRules\";\nconst _MRana = \"ManagedRule\";\nconst _MS = \"MetricStat\";\nconst _MT = \"MetricTimezone\";\nconst _MW = \"MetricWidget\";\nconst _MWI = \"MetricWidgetImage\";\nconst _Ma = \"Maximum\";\nconst _Me = \"Metric\";\nconst _Mes = \"Message\";\nconst _Mess = \"Messages\";\nconst _Mi = \"Minimum\";\nconst _N = \"Namespace\";\nconst _NT = \"NextToken\";\nconst _Na = \"Name\";\nconst _Nam = \"Names\";\nconst _OA = \"OwningAccount\";\nconst _OAw = \"OwningAccounts\";\nconst _OB = \"OrderBy\";\nconst _OF = \"OutputFormat\";\nconst _OKA = \"OKActions\";\nconst _P = \"Period\";\nconst _PAD = \"PutAnomalyDetector\";\nconst _PCA = \"PutCompositeAlarm\";\nconst _PD = \"PutDashboard\";\nconst _PIR = \"PutInsightRule\";\nconst _PMA = \"PutMetricAlarm\";\nconst _PMD = \"PutMetricData\";\nconst _PMIR = \"PutManagedInsightRules\";\nconst _PMS = \"PutMetricStream\";\nconst _POAN = \"ParentsOfAlarmName\";\nconst _PS = \"PeriodicSpikes\";\nconst _RA = \"RecentlyActive\";\nconst _RARN = \"ResourceARN\";\nconst _RAo = \"RoleArn\";\nconst _RD = \"ReturnData\";\nconst _RDu = \"RuleDefinition\";\nconst _RI = \"ResourceId\";\nconst _RN = \"RuleNames\";\nconst _RNu = \"RuleName\";\nconst _RS = \"RuleState\";\nconst _RT = \"ResourceType\";\nconst _S = \"Stat\";\nconst _SAS = \"SetAlarmState\";\nconst _SB = \"ScanBy\";\nconst _SC = \"StatisticsConfigurations\";\nconst _SCa = \"SampleCount\";\nconst _SCt = \"StatusCode\";\nconst _SD = \"StartDate\";\nconst _SEV = \"StrictEntityValidation\";\nconst _SMAD = \"SingleMetricAnomalyDetector\";\nconst _SMS = \"StartMetricStreams\";\nconst _SMSt = \"StopMetricStreams\";\nconst _SR = \"StorageResolution\";\nconst _SRD = \"StateReasonData\";\nconst _SRt = \"StateReason\";\nconst _ST = \"StartTime\";\nconst _STT = \"StateTransitionedTimestamp\";\nconst _SUT = \"StateUpdatedTimestamp\";\nconst _SV = \"StateValue\";\nconst _SVt = \"StatisticValues\";\nconst _Sc = \"Schema\";\nconst _Si = \"Size\";\nconst _St = \"Statistic\";\nconst _Sta = \"Statistics\";\nconst _Stat = \"State\";\nconst _Su = \"Sum\";\nconst _T = \"Timezone\";\nconst _TK = \"TagKeys\";\nconst _TMD = \"TreatMissingData\";\nconst _TMI = \"ThresholdMetricId\";\nconst _TN = \"TemplateName\";\nconst _TR = \"TagResource\";\nconst _Ta = \"Tags\";\nconst _Th = \"Threshold\";\nconst _Ti = \"Timestamp\";\nconst _Tim = \"Timestamps\";\nconst _U = \"Unit\";\nconst _UC = \"UniqueContributors\";\nconst _UR = \"UntagResource\";\nconst _V = \"Version\";\nconst _Va = \"Value\";\nconst _Val = \"Values\";\nconst _dVM = \"dashboardValidationMessages\";\nconst _e = \"entry\";\nconst _m = \"member\";\nconst _me = \"message\";\nconst buildFormUrlencodedString = (formEntries) => Object.entries(formEntries)\n    .map(([key, value]) => smithyClient.extendedEncodeURIComponent(key) + \"=\" + smithyClient.extendedEncodeURIComponent(value))\n    .join(\"&\");\nconst loadQueryErrorCode = (output, data) => {\n    if (data.Error?.Code !== undefined) {\n        return data.Error.Code;\n    }\n    if (output.statusCode == 404) {\n        return \"NotFound\";\n    }\n};\n\nclass DeleteAlarmsCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"GraniteServiceVersion20100801\", \"DeleteAlarms\", {})\n    .n(\"CloudWatchClient\", \"DeleteAlarmsCommand\")\n    .f(void 0, void 0)\n    .ser(se_DeleteAlarmsCommand)\n    .de(de_DeleteAlarmsCommand)\n    .build() {\n}\n\nclass DeleteAnomalyDetectorCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"GraniteServiceVersion20100801\", \"DeleteAnomalyDetector\", {})\n    .n(\"CloudWatchClient\", \"DeleteAnomalyDetectorCommand\")\n    .f(void 0, void 0)\n    .ser(se_DeleteAnomalyDetectorCommand)\n    .de(de_DeleteAnomalyDetectorCommand)\n    .build() {\n}\n\nclass DeleteDashboardsCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"GraniteServiceVersion20100801\", \"DeleteDashboards\", {})\n    .n(\"CloudWatchClient\", \"DeleteDashboardsCommand\")\n    .f(void 0, void 0)\n    .ser(se_DeleteDashboardsCommand)\n    .de(de_DeleteDashboardsCommand)\n    .build() {\n}\n\nclass DeleteInsightRulesCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"GraniteServiceVersion20100801\", \"DeleteInsightRules\", {})\n    .n(\"CloudWatchClient\", \"DeleteInsightRulesCommand\")\n    .f(void 0, void 0)\n    .ser(se_DeleteInsightRulesCommand)\n    .de(de_DeleteInsightRulesCommand)\n    .build() {\n}\n\nclass DeleteMetricStreamCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"GraniteServiceVersion20100801\", \"DeleteMetricStream\", {})\n    .n(\"CloudWatchClient\", \"DeleteMetricStreamCommand\")\n    .f(void 0, void 0)\n    .ser(se_DeleteMetricStreamCommand)\n    .de(de_DeleteMetricStreamCommand)\n    .build() {\n}\n\nclass DescribeAlarmContributorsCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"GraniteServiceVersion20100801\", \"DescribeAlarmContributors\", {})\n    .n(\"CloudWatchClient\", \"DescribeAlarmContributorsCommand\")\n    .f(void 0, void 0)\n    .ser(se_DescribeAlarmContributorsCommand)\n    .de(de_DescribeAlarmContributorsCommand)\n    .build() {\n}\n\nclass DescribeAlarmHistoryCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"GraniteServiceVersion20100801\", \"DescribeAlarmHistory\", {})\n    .n(\"CloudWatchClient\", \"DescribeAlarmHistoryCommand\")\n    .f(void 0, void 0)\n    .ser(se_DescribeAlarmHistoryCommand)\n    .de(de_DescribeAlarmHistoryCommand)\n    .build() {\n}\n\nclass DescribeAlarmsCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"GraniteServiceVersion20100801\", \"DescribeAlarms\", {})\n    .n(\"CloudWatchClient\", \"DescribeAlarmsCommand\")\n    .f(void 0, void 0)\n    .ser(se_DescribeAlarmsCommand)\n    .de(de_DescribeAlarmsCommand)\n    .build() {\n}\n\nclass DescribeAlarmsForMetricCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"GraniteServiceVersion20100801\", \"DescribeAlarmsForMetric\", {})\n    .n(\"CloudWatchClient\", \"DescribeAlarmsForMetricCommand\")\n    .f(void 0, void 0)\n    .ser(se_DescribeAlarmsForMetricCommand)\n    .de(de_DescribeAlarmsForMetricCommand)\n    .build() {\n}\n\nclass DescribeAnomalyDetectorsCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"GraniteServiceVersion20100801\", \"DescribeAnomalyDetectors\", {})\n    .n(\"CloudWatchClient\", \"DescribeAnomalyDetectorsCommand\")\n    .f(void 0, void 0)\n    .ser(se_DescribeAnomalyDetectorsCommand)\n    .de(de_DescribeAnomalyDetectorsCommand)\n    .build() {\n}\n\nclass DescribeInsightRulesCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"GraniteServiceVersion20100801\", \"DescribeInsightRules\", {})\n    .n(\"CloudWatchClient\", \"DescribeInsightRulesCommand\")\n    .f(void 0, void 0)\n    .ser(se_DescribeInsightRulesCommand)\n    .de(de_DescribeInsightRulesCommand)\n    .build() {\n}\n\nclass DisableAlarmActionsCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"GraniteServiceVersion20100801\", \"DisableAlarmActions\", {})\n    .n(\"CloudWatchClient\", \"DisableAlarmActionsCommand\")\n    .f(void 0, void 0)\n    .ser(se_DisableAlarmActionsCommand)\n    .de(de_DisableAlarmActionsCommand)\n    .build() {\n}\n\nclass DisableInsightRulesCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"GraniteServiceVersion20100801\", \"DisableInsightRules\", {})\n    .n(\"CloudWatchClient\", \"DisableInsightRulesCommand\")\n    .f(void 0, void 0)\n    .ser(se_DisableInsightRulesCommand)\n    .de(de_DisableInsightRulesCommand)\n    .build() {\n}\n\nclass EnableAlarmActionsCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"GraniteServiceVersion20100801\", \"EnableAlarmActions\", {})\n    .n(\"CloudWatchClient\", \"EnableAlarmActionsCommand\")\n    .f(void 0, void 0)\n    .ser(se_EnableAlarmActionsCommand)\n    .de(de_EnableAlarmActionsCommand)\n    .build() {\n}\n\nclass EnableInsightRulesCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"GraniteServiceVersion20100801\", \"EnableInsightRules\", {})\n    .n(\"CloudWatchClient\", \"EnableInsightRulesCommand\")\n    .f(void 0, void 0)\n    .ser(se_EnableInsightRulesCommand)\n    .de(de_EnableInsightRulesCommand)\n    .build() {\n}\n\nclass GetDashboardCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"GraniteServiceVersion20100801\", \"GetDashboard\", {})\n    .n(\"CloudWatchClient\", \"GetDashboardCommand\")\n    .f(void 0, void 0)\n    .ser(se_GetDashboardCommand)\n    .de(de_GetDashboardCommand)\n    .build() {\n}\n\nclass GetInsightRuleReportCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"GraniteServiceVersion20100801\", \"GetInsightRuleReport\", {})\n    .n(\"CloudWatchClient\", \"GetInsightRuleReportCommand\")\n    .f(void 0, void 0)\n    .ser(se_GetInsightRuleReportCommand)\n    .de(de_GetInsightRuleReportCommand)\n    .build() {\n}\n\nclass GetMetricDataCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"GraniteServiceVersion20100801\", \"GetMetricData\", {})\n    .n(\"CloudWatchClient\", \"GetMetricDataCommand\")\n    .f(void 0, void 0)\n    .ser(se_GetMetricDataCommand)\n    .de(de_GetMetricDataCommand)\n    .build() {\n}\n\nclass GetMetricStatisticsCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"GraniteServiceVersion20100801\", \"GetMetricStatistics\", {})\n    .n(\"CloudWatchClient\", \"GetMetricStatisticsCommand\")\n    .f(void 0, void 0)\n    .ser(se_GetMetricStatisticsCommand)\n    .de(de_GetMetricStatisticsCommand)\n    .build() {\n}\n\nclass GetMetricStreamCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"GraniteServiceVersion20100801\", \"GetMetricStream\", {})\n    .n(\"CloudWatchClient\", \"GetMetricStreamCommand\")\n    .f(void 0, void 0)\n    .ser(se_GetMetricStreamCommand)\n    .de(de_GetMetricStreamCommand)\n    .build() {\n}\n\nclass GetMetricWidgetImageCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"GraniteServiceVersion20100801\", \"GetMetricWidgetImage\", {})\n    .n(\"CloudWatchClient\", \"GetMetricWidgetImageCommand\")\n    .f(void 0, void 0)\n    .ser(se_GetMetricWidgetImageCommand)\n    .de(de_GetMetricWidgetImageCommand)\n    .build() {\n}\n\nclass ListDashboardsCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"GraniteServiceVersion20100801\", \"ListDashboards\", {})\n    .n(\"CloudWatchClient\", \"ListDashboardsCommand\")\n    .f(void 0, void 0)\n    .ser(se_ListDashboardsCommand)\n    .de(de_ListDashboardsCommand)\n    .build() {\n}\n\nclass ListManagedInsightRulesCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"GraniteServiceVersion20100801\", \"ListManagedInsightRules\", {})\n    .n(\"CloudWatchClient\", \"ListManagedInsightRulesCommand\")\n    .f(void 0, void 0)\n    .ser(se_ListManagedInsightRulesCommand)\n    .de(de_ListManagedInsightRulesCommand)\n    .build() {\n}\n\nclass ListMetricsCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"GraniteServiceVersion20100801\", \"ListMetrics\", {})\n    .n(\"CloudWatchClient\", \"ListMetricsCommand\")\n    .f(void 0, void 0)\n    .ser(se_ListMetricsCommand)\n    .de(de_ListMetricsCommand)\n    .build() {\n}\n\nclass ListMetricStreamsCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"GraniteServiceVersion20100801\", \"ListMetricStreams\", {})\n    .n(\"CloudWatchClient\", \"ListMetricStreamsCommand\")\n    .f(void 0, void 0)\n    .ser(se_ListMetricStreamsCommand)\n    .de(de_ListMetricStreamsCommand)\n    .build() {\n}\n\nclass ListTagsForResourceCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"GraniteServiceVersion20100801\", \"ListTagsForResource\", {})\n    .n(\"CloudWatchClient\", \"ListTagsForResourceCommand\")\n    .f(void 0, void 0)\n    .ser(se_ListTagsForResourceCommand)\n    .de(de_ListTagsForResourceCommand)\n    .build() {\n}\n\nclass PutAnomalyDetectorCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"GraniteServiceVersion20100801\", \"PutAnomalyDetector\", {})\n    .n(\"CloudWatchClient\", \"PutAnomalyDetectorCommand\")\n    .f(void 0, void 0)\n    .ser(se_PutAnomalyDetectorCommand)\n    .de(de_PutAnomalyDetectorCommand)\n    .build() {\n}\n\nclass PutCompositeAlarmCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"GraniteServiceVersion20100801\", \"PutCompositeAlarm\", {})\n    .n(\"CloudWatchClient\", \"PutCompositeAlarmCommand\")\n    .f(void 0, void 0)\n    .ser(se_PutCompositeAlarmCommand)\n    .de(de_PutCompositeAlarmCommand)\n    .build() {\n}\n\nclass PutDashboardCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"GraniteServiceVersion20100801\", \"PutDashboard\", {})\n    .n(\"CloudWatchClient\", \"PutDashboardCommand\")\n    .f(void 0, void 0)\n    .ser(se_PutDashboardCommand)\n    .de(de_PutDashboardCommand)\n    .build() {\n}\n\nclass PutInsightRuleCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"GraniteServiceVersion20100801\", \"PutInsightRule\", {})\n    .n(\"CloudWatchClient\", \"PutInsightRuleCommand\")\n    .f(void 0, void 0)\n    .ser(se_PutInsightRuleCommand)\n    .de(de_PutInsightRuleCommand)\n    .build() {\n}\n\nclass PutManagedInsightRulesCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"GraniteServiceVersion20100801\", \"PutManagedInsightRules\", {})\n    .n(\"CloudWatchClient\", \"PutManagedInsightRulesCommand\")\n    .f(void 0, void 0)\n    .ser(se_PutManagedInsightRulesCommand)\n    .de(de_PutManagedInsightRulesCommand)\n    .build() {\n}\n\nclass PutMetricAlarmCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"GraniteServiceVersion20100801\", \"PutMetricAlarm\", {})\n    .n(\"CloudWatchClient\", \"PutMetricAlarmCommand\")\n    .f(void 0, void 0)\n    .ser(se_PutMetricAlarmCommand)\n    .de(de_PutMetricAlarmCommand)\n    .build() {\n}\n\nclass PutMetricDataCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n        middlewareCompression.getCompressionPlugin(config, {\n            encodings: [\"gzip\"],\n        }),\n    ];\n})\n    .s(\"GraniteServiceVersion20100801\", \"PutMetricData\", {})\n    .n(\"CloudWatchClient\", \"PutMetricDataCommand\")\n    .f(void 0, void 0)\n    .ser(se_PutMetricDataCommand)\n    .de(de_PutMetricDataCommand)\n    .build() {\n}\n\nclass PutMetricStreamCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"GraniteServiceVersion20100801\", \"PutMetricStream\", {})\n    .n(\"CloudWatchClient\", \"PutMetricStreamCommand\")\n    .f(void 0, void 0)\n    .ser(se_PutMetricStreamCommand)\n    .de(de_PutMetricStreamCommand)\n    .build() {\n}\n\nclass SetAlarmStateCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"GraniteServiceVersion20100801\", \"SetAlarmState\", {})\n    .n(\"CloudWatchClient\", \"SetAlarmStateCommand\")\n    .f(void 0, void 0)\n    .ser(se_SetAlarmStateCommand)\n    .de(de_SetAlarmStateCommand)\n    .build() {\n}\n\nclass StartMetricStreamsCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"GraniteServiceVersion20100801\", \"StartMetricStreams\", {})\n    .n(\"CloudWatchClient\", \"StartMetricStreamsCommand\")\n    .f(void 0, void 0)\n    .ser(se_StartMetricStreamsCommand)\n    .de(de_StartMetricStreamsCommand)\n    .build() {\n}\n\nclass StopMetricStreamsCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"GraniteServiceVersion20100801\", \"StopMetricStreams\", {})\n    .n(\"CloudWatchClient\", \"StopMetricStreamsCommand\")\n    .f(void 0, void 0)\n    .ser(se_StopMetricStreamsCommand)\n    .de(de_StopMetricStreamsCommand)\n    .build() {\n}\n\nclass TagResourceCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"GraniteServiceVersion20100801\", \"TagResource\", {})\n    .n(\"CloudWatchClient\", \"TagResourceCommand\")\n    .f(void 0, void 0)\n    .ser(se_TagResourceCommand)\n    .de(de_TagResourceCommand)\n    .build() {\n}\n\nclass UntagResourceCommand extends smithyClient.Command\n    .classBuilder()\n    .ep(commonParams)\n    .m(function (Command, cs, config, o) {\n    return [\n        middlewareSerde.getSerdePlugin(config, this.serialize, this.deserialize),\n        middlewareEndpoint.getEndpointPlugin(config, Command.getEndpointParameterInstructions()),\n    ];\n})\n    .s(\"GraniteServiceVersion20100801\", \"UntagResource\", {})\n    .n(\"CloudWatchClient\", \"UntagResourceCommand\")\n    .f(void 0, void 0)\n    .ser(se_UntagResourceCommand)\n    .de(de_UntagResourceCommand)\n    .build() {\n}\n\nconst commands = {\n    DeleteAlarmsCommand,\n    DeleteAnomalyDetectorCommand,\n    DeleteDashboardsCommand,\n    DeleteInsightRulesCommand,\n    DeleteMetricStreamCommand,\n    DescribeAlarmContributorsCommand,\n    DescribeAlarmHistoryCommand,\n    DescribeAlarmsCommand,\n    DescribeAlarmsForMetricCommand,\n    DescribeAnomalyDetectorsCommand,\n    DescribeInsightRulesCommand,\n    DisableAlarmActionsCommand,\n    DisableInsightRulesCommand,\n    EnableAlarmActionsCommand,\n    EnableInsightRulesCommand,\n    GetDashboardCommand,\n    GetInsightRuleReportCommand,\n    GetMetricDataCommand,\n    GetMetricStatisticsCommand,\n    GetMetricStreamCommand,\n    GetMetricWidgetImageCommand,\n    ListDashboardsCommand,\n    ListManagedInsightRulesCommand,\n    ListMetricsCommand,\n    ListMetricStreamsCommand,\n    ListTagsForResourceCommand,\n    PutAnomalyDetectorCommand,\n    PutCompositeAlarmCommand,\n    PutDashboardCommand,\n    PutInsightRuleCommand,\n    PutManagedInsightRulesCommand,\n    PutMetricAlarmCommand,\n    PutMetricDataCommand,\n    PutMetricStreamCommand,\n    SetAlarmStateCommand,\n    StartMetricStreamsCommand,\n    StopMetricStreamsCommand,\n    TagResourceCommand,\n    UntagResourceCommand,\n};\nclass CloudWatch extends CloudWatchClient {\n}\nsmithyClient.createAggregatedClient(commands, CloudWatch);\n\nconst paginateDescribeAlarmHistory = core.createPaginator(CloudWatchClient, DescribeAlarmHistoryCommand, \"NextToken\", \"NextToken\", \"MaxRecords\");\n\nconst paginateDescribeAlarms = core.createPaginator(CloudWatchClient, DescribeAlarmsCommand, \"NextToken\", \"NextToken\", \"MaxRecords\");\n\nconst paginateDescribeAnomalyDetectors = core.createPaginator(CloudWatchClient, DescribeAnomalyDetectorsCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\nconst paginateDescribeInsightRules = core.createPaginator(CloudWatchClient, DescribeInsightRulesCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\nconst paginateGetMetricData = core.createPaginator(CloudWatchClient, GetMetricDataCommand, \"NextToken\", \"NextToken\", \"MaxDatapoints\");\n\nconst paginateListDashboards = core.createPaginator(CloudWatchClient, ListDashboardsCommand, \"NextToken\", \"NextToken\", \"\");\n\nconst paginateListManagedInsightRules = core.createPaginator(CloudWatchClient, ListManagedInsightRulesCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\nconst paginateListMetricStreams = core.createPaginator(CloudWatchClient, ListMetricStreamsCommand, \"NextToken\", \"NextToken\", \"MaxResults\");\n\nconst paginateListMetrics = core.createPaginator(CloudWatchClient, ListMetricsCommand, \"NextToken\", \"NextToken\", \"\");\n\nconst checkState$1 = async (client, input) => {\n    let reason;\n    try {\n        const result = await client.send(new DescribeAlarmsCommand(input));\n        reason = result;\n        try {\n            const returnComparator = () => {\n                const flat_1 = [].concat(...result.MetricAlarms);\n                return flat_1.length > 0.0;\n            };\n            if (returnComparator() == true) {\n                return { state: utilWaiter.WaiterState.SUCCESS, reason };\n            }\n        }\n        catch (e) { }\n    }\n    catch (exception) {\n        reason = exception;\n    }\n    return { state: utilWaiter.WaiterState.RETRY, reason };\n};\nconst waitForAlarmExists = async (params, input) => {\n    const serviceDefaults = { minDelay: 5, maxDelay: 120 };\n    return utilWaiter.createWaiter({ ...serviceDefaults, ...params }, input, checkState$1);\n};\nconst waitUntilAlarmExists = async (params, input) => {\n    const serviceDefaults = { minDelay: 5, maxDelay: 120 };\n    const result = await utilWaiter.createWaiter({ ...serviceDefaults, ...params }, input, checkState$1);\n    return utilWaiter.checkExceptions(result);\n};\n\nconst checkState = async (client, input) => {\n    let reason;\n    try {\n        const result = await client.send(new DescribeAlarmsCommand(input));\n        reason = result;\n        try {\n            const returnComparator = () => {\n                const flat_1 = [].concat(...result.CompositeAlarms);\n                return flat_1.length > 0.0;\n            };\n            if (returnComparator() == true) {\n                return { state: utilWaiter.WaiterState.SUCCESS, reason };\n            }\n        }\n        catch (e) { }\n    }\n    catch (exception) {\n        reason = exception;\n    }\n    return { state: utilWaiter.WaiterState.RETRY, reason };\n};\nconst waitForCompositeAlarmExists = async (params, input) => {\n    const serviceDefaults = { minDelay: 5, maxDelay: 120 };\n    return utilWaiter.createWaiter({ ...serviceDefaults, ...params }, input, checkState);\n};\nconst waitUntilCompositeAlarmExists = async (params, input) => {\n    const serviceDefaults = { minDelay: 5, maxDelay: 120 };\n    const result = await utilWaiter.createWaiter({ ...serviceDefaults, ...params }, input, checkState);\n    return utilWaiter.checkExceptions(result);\n};\n\nObject.defineProperty(exports, \"$Command\", {\n    enumerable: true,\n    get: function () { return smithyClient.Command; }\n});\nObject.defineProperty(exports, \"__Client\", {\n    enumerable: true,\n    get: function () { return smithyClient.Client; }\n});\nexports.ActionsSuppressedBy = ActionsSuppressedBy;\nexports.AlarmType = AlarmType;\nexports.AnomalyDetectorStateValue = AnomalyDetectorStateValue;\nexports.AnomalyDetectorType = AnomalyDetectorType;\nexports.CloudWatch = CloudWatch;\nexports.CloudWatchClient = CloudWatchClient;\nexports.CloudWatchServiceException = CloudWatchServiceException;\nexports.ComparisonOperator = ComparisonOperator;\nexports.ConcurrentModificationException = ConcurrentModificationException;\nexports.ConflictException = ConflictException;\nexports.DashboardInvalidInputError = DashboardInvalidInputError;\nexports.DashboardNotFoundError = DashboardNotFoundError;\nexports.DeleteAlarmsCommand = DeleteAlarmsCommand;\nexports.DeleteAnomalyDetectorCommand = DeleteAnomalyDetectorCommand;\nexports.DeleteDashboardsCommand = DeleteDashboardsCommand;\nexports.DeleteInsightRulesCommand = DeleteInsightRulesCommand;\nexports.DeleteMetricStreamCommand = DeleteMetricStreamCommand;\nexports.DescribeAlarmContributorsCommand = DescribeAlarmContributorsCommand;\nexports.DescribeAlarmHistoryCommand = DescribeAlarmHistoryCommand;\nexports.DescribeAlarmsCommand = DescribeAlarmsCommand;\nexports.DescribeAlarmsForMetricCommand = DescribeAlarmsForMetricCommand;\nexports.DescribeAnomalyDetectorsCommand = DescribeAnomalyDetectorsCommand;\nexports.DescribeInsightRulesCommand = DescribeInsightRulesCommand;\nexports.DisableAlarmActionsCommand = DisableAlarmActionsCommand;\nexports.DisableInsightRulesCommand = DisableInsightRulesCommand;\nexports.EnableAlarmActionsCommand = EnableAlarmActionsCommand;\nexports.EnableInsightRulesCommand = EnableInsightRulesCommand;\nexports.EvaluationState = EvaluationState;\nexports.GetDashboardCommand = GetDashboardCommand;\nexports.GetInsightRuleReportCommand = GetInsightRuleReportCommand;\nexports.GetMetricDataCommand = GetMetricDataCommand;\nexports.GetMetricStatisticsCommand = GetMetricStatisticsCommand;\nexports.GetMetricStreamCommand = GetMetricStreamCommand;\nexports.GetMetricWidgetImageCommand = GetMetricWidgetImageCommand;\nexports.HistoryItemType = HistoryItemType;\nexports.InternalServiceFault = InternalServiceFault;\nexports.InvalidFormatFault = InvalidFormatFault;\nexports.InvalidNextToken = InvalidNextToken;\nexports.InvalidParameterCombinationException = InvalidParameterCombinationException;\nexports.InvalidParameterValueException = InvalidParameterValueException;\nexports.LimitExceededException = LimitExceededException;\nexports.LimitExceededFault = LimitExceededFault;\nexports.ListDashboardsCommand = ListDashboardsCommand;\nexports.ListManagedInsightRulesCommand = ListManagedInsightRulesCommand;\nexports.ListMetricStreamsCommand = ListMetricStreamsCommand;\nexports.ListMetricsCommand = ListMetricsCommand;\nexports.ListTagsForResourceCommand = ListTagsForResourceCommand;\nexports.MetricStreamOutputFormat = MetricStreamOutputFormat;\nexports.MissingRequiredParameterException = MissingRequiredParameterException;\nexports.PutAnomalyDetectorCommand = PutAnomalyDetectorCommand;\nexports.PutCompositeAlarmCommand = PutCompositeAlarmCommand;\nexports.PutDashboardCommand = PutDashboardCommand;\nexports.PutInsightRuleCommand = PutInsightRuleCommand;\nexports.PutManagedInsightRulesCommand = PutManagedInsightRulesCommand;\nexports.PutMetricAlarmCommand = PutMetricAlarmCommand;\nexports.PutMetricDataCommand = PutMetricDataCommand;\nexports.PutMetricStreamCommand = PutMetricStreamCommand;\nexports.RecentlyActive = RecentlyActive;\nexports.ResourceNotFound = ResourceNotFound;\nexports.ResourceNotFoundException = ResourceNotFoundException;\nexports.ScanBy = ScanBy;\nexports.SetAlarmStateCommand = SetAlarmStateCommand;\nexports.StandardUnit = StandardUnit;\nexports.StartMetricStreamsCommand = StartMetricStreamsCommand;\nexports.StateValue = StateValue;\nexports.Statistic = Statistic;\nexports.StatusCode = StatusCode;\nexports.StopMetricStreamsCommand = StopMetricStreamsCommand;\nexports.TagResourceCommand = TagResourceCommand;\nexports.UntagResourceCommand = UntagResourceCommand;\nexports.paginateDescribeAlarmHistory = paginateDescribeAlarmHistory;\nexports.paginateDescribeAlarms = paginateDescribeAlarms;\nexports.paginateDescribeAnomalyDetectors = paginateDescribeAnomalyDetectors;\nexports.paginateDescribeInsightRules = paginateDescribeInsightRules;\nexports.paginateGetMetricData = paginateGetMetricData;\nexports.paginateListDashboards = paginateListDashboards;\nexports.paginateListManagedInsightRules = paginateListManagedInsightRules;\nexports.paginateListMetricStreams = paginateListMetricStreams;\nexports.paginateListMetrics = paginateListMetrics;\nexports.waitForAlarmExists = waitForAlarmExists;\nexports.waitForCompositeAlarmExists = waitForCompositeAlarmExists;\nexports.waitUntilAlarmExists = waitUntilAlarmExists;\nexports.waitUntilCompositeAlarmExists = waitUntilCompositeAlarmExists;\n", "'use strict';\n\nconst { Duplex } = require('stream');\n\n/**\n * Emits the `'close'` event on a stream.\n *\n * @param {Duplex} stream The stream.\n * @private\n */\nfunction emitClose(stream) {\n  stream.emit('close');\n}\n\n/**\n * The listener of the `'end'` event.\n *\n * @private\n */\nfunction duplexOnEnd() {\n  if (!this.destroyed && this._writableState.finished) {\n    this.destroy();\n  }\n}\n\n/**\n * The listener of the `'error'` event.\n *\n * @param {Error} err The error\n * @private\n */\nfunction duplexOnError(err) {\n  this.removeListener('error', duplexOnError);\n  this.destroy();\n  if (this.listenerCount('error') === 0) {\n    // Do not suppress the throwing behavior.\n    this.emit('error', err);\n  }\n}\n\n/**\n * Wraps a `WebSocket` in a duplex stream.\n *\n * @param {WebSocket} ws The `WebSocket` to wrap\n * @param {Object} [options] The options for the `Duplex` constructor\n * @return {Duplex} The duplex stream\n * @public\n */\nfunction createWebSocketStream(ws, options) {\n  let terminateOnDestroy = true;\n\n  const duplex = new Duplex({\n    ...options,\n    autoDestroy: false,\n    emitClose: false,\n    objectMode: false,\n    writableObjectMode: false\n  });\n\n  ws.on('message', function message(msg, isBinary) {\n    const data =\n      !isBinary && duplex._readableState.objectMode ? msg.toString() : msg;\n\n    if (!duplex.push(data)) ws.pause();\n  });\n\n  ws.once('error', function error(err) {\n    if (duplex.destroyed) return;\n\n    // Prevent `ws.terminate()` from being called by `duplex._destroy()`.\n    //\n    // - If the `'error'` event is emitted before the `'open'` event, then\n    //   `ws.terminate()` is a noop as no socket is assigned.\n    // - Otherwise, the error is re-emitted by the listener of the `'error'`\n    //   event of the `Receiver` object. The listener already closes the\n    //   connection by calling `ws.close()`. This allows a close frame to be\n    //   sent to the other peer. If `ws.terminate()` is called right after this,\n    //   then the close frame might not be sent.\n    terminateOnDestroy = false;\n    duplex.destroy(err);\n  });\n\n  ws.once('close', function close() {\n    if (duplex.destroyed) return;\n\n    duplex.push(null);\n  });\n\n  duplex._destroy = function (err, callback) {\n    if (ws.readyState === ws.CLOSED) {\n      callback(err);\n      process.nextTick(emitClose, duplex);\n      return;\n    }\n\n    let called = false;\n\n    ws.once('error', function error(err) {\n      called = true;\n      callback(err);\n    });\n\n    ws.once('close', function close() {\n      if (!called) callback(err);\n      process.nextTick(emitClose, duplex);\n    });\n\n    if (terminateOnDestroy) ws.terminate();\n  };\n\n  duplex._final = function (callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._final(callback);\n      });\n      return;\n    }\n\n    // If the value of the `_socket` property is `null` it means that `ws` is a\n    // client websocket and the handshake failed. In fact, when this happens, a\n    // socket is never assigned to the websocket. Wait for the `'error'` event\n    // that will be emitted by the websocket.\n    if (ws._socket === null) return;\n\n    if (ws._socket._writableState.finished) {\n      callback();\n      if (duplex._readableState.endEmitted) duplex.destroy();\n    } else {\n      ws._socket.once('finish', function finish() {\n        // `duplex` is not destroyed here because the `'end'` event will be\n        // emitted on `duplex` after this `'finish'` event. The EOF signaling\n        // `null` chunk is, in fact, pushed when the websocket emits `'close'`.\n        callback();\n      });\n      ws.close();\n    }\n  };\n\n  duplex._read = function () {\n    if (ws.isPaused) ws.resume();\n  };\n\n  duplex._write = function (chunk, encoding, callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._write(chunk, encoding, callback);\n      });\n      return;\n    }\n\n    ws.send(chunk, callback);\n  };\n\n  duplex.on('end', duplexOnEnd);\n  duplex.on('error', duplexOnError);\n  return duplex;\n}\n\nmodule.exports = createWebSocketStream;\n", "'use strict';\n\nmodule.exports = {\n  BINARY_TYPES: ['nodebuffer', 'arraybuffer', 'fragments'],\n  EMPTY_BUFFER: Buffer.alloc(0),\n  GUID: '258EAFA5-E914-47DA-95CA-C5AB0DC85B11',\n  kForOnEventAttribute: Symbol('kIsForOnEventAttribute'),\n  kListener: Symbol('kListener'),\n  kStatusCode: Symbol('status-code'),\n  kWebSocket: Symbol('websocket'),\n  NOOP: () => {}\n};\n", "var fs = require('fs')\nvar path = require('path')\nvar os = require('os')\n\n// Workaround to fix webpack's build warnings: 'the request of a dependency is an expression'\nvar runtimeRequire = typeof __webpack_require__ === 'function' ? __non_webpack_require__ : require // eslint-disable-line\n\nvar vars = (process.config && process.config.variables) || {}\nvar prebuildsOnly = !!process.env.PREBUILDS_ONLY\nvar abi = process.versions.modules // TODO: support old node where this is undef\nvar runtime = isElectron() ? 'electron' : (isNwjs() ? 'node-webkit' : 'node')\n\nvar arch = process.env.npm_config_arch || os.arch()\nvar platform = process.env.npm_config_platform || os.platform()\nvar libc = process.env.LIBC || (isAlpine(platform) ? 'musl' : 'glibc')\nvar armv = process.env.ARM_VERSION || (arch === 'arm64' ? '8' : vars.arm_version) || ''\nvar uv = (process.versions.uv || '').split('.')[0]\n\nmodule.exports = load\n\nfunction load (dir) {\n  return runtimeRequire(load.resolve(dir))\n}\n\nload.resolve = load.path = function (dir) {\n  dir = path.resolve(dir || '.')\n\n  try {\n    var name = runtimeRequire(path.join(dir, 'package.json')).name.toUpperCase().replace(/-/g, '_')\n    if (process.env[name + '_PREBUILD']) dir = process.env[name + '_PREBUILD']\n  } catch (err) {}\n\n  if (!prebuildsOnly) {\n    var release = getFirst(path.join(dir, 'build/Release'), matchBuild)\n    if (release) return release\n\n    var debug = getFirst(path.join(dir, 'build/Debug'), matchBuild)\n    if (debug) return debug\n  }\n\n  var prebuild = resolve(dir)\n  if (prebuild) return prebuild\n\n  var nearby = resolve(path.dirname(process.execPath))\n  if (nearby) return nearby\n\n  var target = [\n    'platform=' + platform,\n    'arch=' + arch,\n    'runtime=' + runtime,\n    'abi=' + abi,\n    'uv=' + uv,\n    armv ? 'armv=' + armv : '',\n    'libc=' + libc,\n    'node=' + process.versions.node,\n    process.versions.electron ? 'electron=' + process.versions.electron : '',\n    typeof __webpack_require__ === 'function' ? 'webpack=true' : '' // eslint-disable-line\n  ].filter(Boolean).join(' ')\n\n  throw new Error('No native build was found for ' + target + '\\n    loaded from: ' + dir + '\\n')\n\n  function resolve (dir) {\n    // Find matching \"prebuilds/<platform>-<arch>\" directory\n    var tuples = readdirSync(path.join(dir, 'prebuilds')).map(parseTuple)\n    var tuple = tuples.filter(matchTuple(platform, arch)).sort(compareTuples)[0]\n    if (!tuple) return\n\n    // Find most specific flavor first\n    var prebuilds = path.join(dir, 'prebuilds', tuple.name)\n    var parsed = readdirSync(prebuilds).map(parseTags)\n    var candidates = parsed.filter(matchTags(runtime, abi))\n    var winner = candidates.sort(compareTags(runtime))[0]\n    if (winner) return path.join(prebuilds, winner.file)\n  }\n}\n\nfunction readdirSync (dir) {\n  try {\n    return fs.readdirSync(dir)\n  } catch (err) {\n    return []\n  }\n}\n\nfunction getFirst (dir, filter) {\n  var files = readdirSync(dir).filter(filter)\n  return files[0] && path.join(dir, files[0])\n}\n\nfunction matchBuild (name) {\n  return /\\.node$/.test(name)\n}\n\nfunction parseTuple (name) {\n  // Example: darwin-x64+arm64\n  var arr = name.split('-')\n  if (arr.length !== 2) return\n\n  var platform = arr[0]\n  var architectures = arr[1].split('+')\n\n  if (!platform) return\n  if (!architectures.length) return\n  if (!architectures.every(Boolean)) return\n\n  return { name, platform, architectures }\n}\n\nfunction matchTuple (platform, arch) {\n  return function (tuple) {\n    if (tuple == null) return false\n    if (tuple.platform !== platform) return false\n    return tuple.architectures.includes(arch)\n  }\n}\n\nfunction compareTuples (a, b) {\n  // Prefer single-arch prebuilds over multi-arch\n  return a.architectures.length - b.architectures.length\n}\n\nfunction parseTags (file) {\n  var arr = file.split('.')\n  var extension = arr.pop()\n  var tags = { file: file, specificity: 0 }\n\n  if (extension !== 'node') return\n\n  for (var i = 0; i < arr.length; i++) {\n    var tag = arr[i]\n\n    if (tag === 'node' || tag === 'electron' || tag === 'node-webkit') {\n      tags.runtime = tag\n    } else if (tag === 'napi') {\n      tags.napi = true\n    } else if (tag.slice(0, 3) === 'abi') {\n      tags.abi = tag.slice(3)\n    } else if (tag.slice(0, 2) === 'uv') {\n      tags.uv = tag.slice(2)\n    } else if (tag.slice(0, 4) === 'armv') {\n      tags.armv = tag.slice(4)\n    } else if (tag === 'glibc' || tag === 'musl') {\n      tags.libc = tag\n    } else {\n      continue\n    }\n\n    tags.specificity++\n  }\n\n  return tags\n}\n\nfunction matchTags (runtime, abi) {\n  return function (tags) {\n    if (tags == null) return false\n    if (tags.runtime && tags.runtime !== runtime && !runtimeAgnostic(tags)) return false\n    if (tags.abi && tags.abi !== abi && !tags.napi) return false\n    if (tags.uv && tags.uv !== uv) return false\n    if (tags.armv && tags.armv !== armv) return false\n    if (tags.libc && tags.libc !== libc) return false\n\n    return true\n  }\n}\n\nfunction runtimeAgnostic (tags) {\n  return tags.runtime === 'node' && tags.napi\n}\n\nfunction compareTags (runtime) {\n  // Precedence: non-agnostic runtime, abi over napi, then by specificity.\n  return function (a, b) {\n    if (a.runtime !== b.runtime) {\n      return a.runtime === runtime ? -1 : 1\n    } else if (a.abi !== b.abi) {\n      return a.abi ? -1 : 1\n    } else if (a.specificity !== b.specificity) {\n      return a.specificity > b.specificity ? -1 : 1\n    } else {\n      return 0\n    }\n  }\n}\n\nfunction isNwjs () {\n  return !!(process.versions && process.versions.nw)\n}\n\nfunction isElectron () {\n  if (process.versions && process.versions.electron) return true\n  if (process.env.ELECTRON_RUN_AS_NODE) return true\n  return typeof window !== 'undefined' && window.process && window.process.type === 'renderer'\n}\n\nfunction isAlpine (platform) {\n  return platform === 'linux' && fs.existsSync('/etc/alpine-release')\n}\n\n// Exposed for unit tests\n// TODO: move to lib\nload.parseTags = parseTags\nload.matchTags = matchTags\nload.compareTags = compareTags\nload.parseTuple = parseTuple\nload.matchTuple = matchTuple\nload.compareTuples = compareTuples\n", "const runtimeRequire = typeof __webpack_require__ === 'function' ? __non_webpack_require__ : require // eslint-disable-line\nif (typeof runtimeRequire.addon === 'function') { // if the platform supports native resolving prefer that\n  module.exports = runtimeRequire.addon.bind(runtimeRequire)\n} else { // else use the runtime version here\n  module.exports = require('./node-gyp-build.js')\n}\n", "'use strict';\n\n/**\n * Masks a buffer using the given mask.\n *\n * @param {Buffer} source The buffer to mask\n * @param {Buffer} mask The mask to use\n * @param {Buffer} output The buffer where to store the result\n * @param {Number} offset The offset at which to start writing\n * @param {Number} length The number of bytes to mask.\n * @public\n */\nconst mask = (source, mask, output, offset, length) => {\n  for (var i = 0; i < length; i++) {\n    output[offset + i] = source[i] ^ mask[i & 3];\n  }\n};\n\n/**\n * Unmasks a buffer using the given mask.\n *\n * @param {Buffer} buffer The buffer to unmask\n * @param {Buffer} mask The mask to use\n * @public\n */\nconst unmask = (buffer, mask) => {\n  // Required until https://github.com/nodejs/node/issues/9006 is resolved.\n  const length = buffer.length;\n  for (var i = 0; i < length; i++) {\n    buffer[i] ^= mask[i & 3];\n  }\n};\n\nmodule.exports = { mask, unmask };\n", "'use strict';\n\ntry {\n  module.exports = require('node-gyp-build')(__dirname);\n} catch (e) {\n  module.exports = require('./fallback');\n}\n", "'use strict';\n\nconst { EMPTY_BUFFER } = require('./constants');\n\nconst FastBuffer = Buffer[Symbol.species];\n\n/**\n * Merges an array of buffers into a new buffer.\n *\n * @param {Buffer[]} list The array of buffers to concat\n * @param {Number} totalLength The total length of buffers in the list\n * @return {Buffer} The resulting buffer\n * @public\n */\nfunction concat(list, totalLength) {\n  if (list.length === 0) return EMPTY_BUFFER;\n  if (list.length === 1) return list[0];\n\n  const target = Buffer.allocUnsafe(totalLength);\n  let offset = 0;\n\n  for (let i = 0; i < list.length; i++) {\n    const buf = list[i];\n    target.set(buf, offset);\n    offset += buf.length;\n  }\n\n  if (offset < totalLength) {\n    return new FastBuffer(target.buffer, target.byteOffset, offset);\n  }\n\n  return target;\n}\n\n/**\n * Masks a buffer using the given mask.\n *\n * @param {Buffer} source The buffer to mask\n * @param {Buffer} mask The mask to use\n * @param {Buffer} output The buffer where to store the result\n * @param {Number} offset The offset at which to start writing\n * @param {Number} length The number of bytes to mask.\n * @public\n */\nfunction _mask(source, mask, output, offset, length) {\n  for (let i = 0; i < length; i++) {\n    output[offset + i] = source[i] ^ mask[i & 3];\n  }\n}\n\n/**\n * Unmasks a buffer using the given mask.\n *\n * @param {Buffer} buffer The buffer to unmask\n * @param {Buffer} mask The mask to use\n * @public\n */\nfunction _unmask(buffer, mask) {\n  for (let i = 0; i < buffer.length; i++) {\n    buffer[i] ^= mask[i & 3];\n  }\n}\n\n/**\n * Converts a buffer to an `ArrayBuffer`.\n *\n * @param {Buffer} buf The buffer to convert\n * @return {ArrayBuffer} Converted buffer\n * @public\n */\nfunction toArrayBuffer(buf) {\n  if (buf.length === buf.buffer.byteLength) {\n    return buf.buffer;\n  }\n\n  return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.length);\n}\n\n/**\n * Converts `data` to a `Buffer`.\n *\n * @param {*} data The data to convert\n * @return {Buffer} The buffer\n * @throws {TypeError}\n * @public\n */\nfunction toBuffer(data) {\n  toBuffer.readOnly = true;\n\n  if (Buffer.isBuffer(data)) return data;\n\n  let buf;\n\n  if (data instanceof ArrayBuffer) {\n    buf = new FastBuffer(data);\n  } else if (ArrayBuffer.isView(data)) {\n    buf = new FastBuffer(data.buffer, data.byteOffset, data.byteLength);\n  } else {\n    buf = Buffer.from(data);\n    toBuffer.readOnly = false;\n  }\n\n  return buf;\n}\n\nmodule.exports = {\n  concat,\n  mask: _mask,\n  toArrayBuffer,\n  toBuffer,\n  unmask: _unmask\n};\n\n/* istanbul ignore else  */\nif (!process.env.WS_NO_BUFFER_UTIL) {\n  try {\n    const bufferUtil = require('bufferutil');\n\n    module.exports.mask = function (source, mask, output, offset, length) {\n      if (length < 48) _mask(source, mask, output, offset, length);\n      else bufferUtil.mask(source, mask, output, offset, length);\n    };\n\n    module.exports.unmask = function (buffer, mask) {\n      if (buffer.length < 32) _unmask(buffer, mask);\n      else bufferUtil.unmask(buffer, mask);\n    };\n  } catch (e) {\n    // Continue regardless of the error.\n  }\n}\n", "'use strict';\n\nconst kDone = Symbol('kDone');\nconst kRun = Symbol('kRun');\n\n/**\n * A very simple job queue with adjustable concurrency. Adapted from\n * https://github.com/STRML/async-limiter\n */\nclass Limiter {\n  /**\n   * Creates a new `Limiter`.\n   *\n   * @param {Number} [concurrency=Infinity] The maximum number of jobs allowed\n   *     to run concurrently\n   */\n  constructor(concurrency) {\n    this[kDone] = () => {\n      this.pending--;\n      this[kRun]();\n    };\n    this.concurrency = concurrency || Infinity;\n    this.jobs = [];\n    this.pending = 0;\n  }\n\n  /**\n   * Adds a job to the queue.\n   *\n   * @param {Function} job The job to run\n   * @public\n   */\n  add(job) {\n    this.jobs.push(job);\n    this[kRun]();\n  }\n\n  /**\n   * Removes a job from the queue and runs it if possible.\n   *\n   * @private\n   */\n  [kRun]() {\n    if (this.pending === this.concurrency) return;\n\n    if (this.jobs.length) {\n      const job = this.jobs.shift();\n\n      this.pending++;\n      job(this[kDone]);\n    }\n  }\n}\n\nmodule.exports = Limiter;\n", "'use strict';\n\nconst zlib = require('zlib');\n\nconst bufferUtil = require('./buffer-util');\nconst Limiter = require('./limiter');\nconst { kStatusCode } = require('./constants');\n\nconst FastBuffer = Buffer[Symbol.species];\nconst TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);\nconst kPerMessageDeflate = Symbol('permessage-deflate');\nconst kTotalLength = Symbol('total-length');\nconst kCallback = Symbol('callback');\nconst kBuffers = Symbol('buffers');\nconst kError = Symbol('error');\n\n//\n// We limit zlib concurrency, which prevents severe memory fragmentation\n// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913\n// and https://github.com/websockets/ws/issues/1202\n//\n// Intentionally global; it's the global thread pool that's an issue.\n//\nlet zlibLimiter;\n\n/**\n * permessage-deflate implementation.\n */\nclass PerMessageDeflate {\n  /**\n   * Creates a PerMessageDeflate instance.\n   *\n   * @param {Object} [options] Configuration options\n   * @param {(Boolean|Number)} [options.clientMaxWindowBits] Advertise support\n   *     for, or request, a custom client window size\n   * @param {Boolean} [options.clientNoContextTakeover=false] Advertise/\n   *     acknowledge disabling of client context takeover\n   * @param {Number} [options.concurrencyLimit=10] The number of concurrent\n   *     calls to zlib\n   * @param {(Boolean|Number)} [options.serverMaxWindowBits] Request/confirm the\n   *     use of a custom server window size\n   * @param {Boolean} [options.serverNoContextTakeover=false] Request/accept\n   *     disabling of server context takeover\n   * @param {Number} [options.threshold=1024] Size (in bytes) below which\n   *     messages should not be compressed if context takeover is disabled\n   * @param {Object} [options.zlibDeflateOptions] Options to pass to zlib on\n   *     deflate\n   * @param {Object} [options.zlibInflateOptions] Options to pass to zlib on\n   *     inflate\n   * @param {Boolean} [isServer=false] Create the instance in either server or\n   *     client mode\n   * @param {Number} [maxPayload=0] The maximum allowed message length\n   */\n  constructor(options, isServer, maxPayload) {\n    this._maxPayload = maxPayload | 0;\n    this._options = options || {};\n    this._threshold =\n      this._options.threshold !== undefined ? this._options.threshold : 1024;\n    this._isServer = !!isServer;\n    this._deflate = null;\n    this._inflate = null;\n\n    this.params = null;\n\n    if (!zlibLimiter) {\n      const concurrency =\n        this._options.concurrencyLimit !== undefined\n          ? this._options.concurrencyLimit\n          : 10;\n      zlibLimiter = new Limiter(concurrency);\n    }\n  }\n\n  /**\n   * @type {String}\n   */\n  static get extensionName() {\n    return 'permessage-deflate';\n  }\n\n  /**\n   * Create an extension negotiation offer.\n   *\n   * @return {Object} Extension parameters\n   * @public\n   */\n  offer() {\n    const params = {};\n\n    if (this._options.serverNoContextTakeover) {\n      params.server_no_context_takeover = true;\n    }\n    if (this._options.clientNoContextTakeover) {\n      params.client_no_context_takeover = true;\n    }\n    if (this._options.serverMaxWindowBits) {\n      params.server_max_window_bits = this._options.serverMaxWindowBits;\n    }\n    if (this._options.clientMaxWindowBits) {\n      params.client_max_window_bits = this._options.clientMaxWindowBits;\n    } else if (this._options.clientMaxWindowBits == null) {\n      params.client_max_window_bits = true;\n    }\n\n    return params;\n  }\n\n  /**\n   * Accept an extension negotiation offer/response.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Object} Accepted configuration\n   * @public\n   */\n  accept(configurations) {\n    configurations = this.normalizeParams(configurations);\n\n    this.params = this._isServer\n      ? this.acceptAsServer(configurations)\n      : this.acceptAsClient(configurations);\n\n    return this.params;\n  }\n\n  /**\n   * Releases all resources used by the extension.\n   *\n   * @public\n   */\n  cleanup() {\n    if (this._inflate) {\n      this._inflate.close();\n      this._inflate = null;\n    }\n\n    if (this._deflate) {\n      const callback = this._deflate[kCallback];\n\n      this._deflate.close();\n      this._deflate = null;\n\n      if (callback) {\n        callback(\n          new Error(\n            'The deflate stream was closed while data was being processed'\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   *  Accept an extension negotiation offer.\n   *\n   * @param {Array} offers The extension negotiation offers\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsServer(offers) {\n    const opts = this._options;\n    const accepted = offers.find((params) => {\n      if (\n        (opts.serverNoContextTakeover === false &&\n          params.server_no_context_takeover) ||\n        (params.server_max_window_bits &&\n          (opts.serverMaxWindowBits === false ||\n            (typeof opts.serverMaxWindowBits === 'number' &&\n              opts.serverMaxWindowBits > params.server_max_window_bits))) ||\n        (typeof opts.clientMaxWindowBits === 'number' &&\n          !params.client_max_window_bits)\n      ) {\n        return false;\n      }\n\n      return true;\n    });\n\n    if (!accepted) {\n      throw new Error('None of the extension offers can be accepted');\n    }\n\n    if (opts.serverNoContextTakeover) {\n      accepted.server_no_context_takeover = true;\n    }\n    if (opts.clientNoContextTakeover) {\n      accepted.client_no_context_takeover = true;\n    }\n    if (typeof opts.serverMaxWindowBits === 'number') {\n      accepted.server_max_window_bits = opts.serverMaxWindowBits;\n    }\n    if (typeof opts.clientMaxWindowBits === 'number') {\n      accepted.client_max_window_bits = opts.clientMaxWindowBits;\n    } else if (\n      accepted.client_max_window_bits === true ||\n      opts.clientMaxWindowBits === false\n    ) {\n      delete accepted.client_max_window_bits;\n    }\n\n    return accepted;\n  }\n\n  /**\n   * Accept the extension negotiation response.\n   *\n   * @param {Array} response The extension negotiation response\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsClient(response) {\n    const params = response[0];\n\n    if (\n      this._options.clientNoContextTakeover === false &&\n      params.client_no_context_takeover\n    ) {\n      throw new Error('Unexpected parameter \"client_no_context_takeover\"');\n    }\n\n    if (!params.client_max_window_bits) {\n      if (typeof this._options.clientMaxWindowBits === 'number') {\n        params.client_max_window_bits = this._options.clientMaxWindowBits;\n      }\n    } else if (\n      this._options.clientMaxWindowBits === false ||\n      (typeof this._options.clientMaxWindowBits === 'number' &&\n        params.client_max_window_bits > this._options.clientMaxWindowBits)\n    ) {\n      throw new Error(\n        'Unexpected or invalid parameter \"client_max_window_bits\"'\n      );\n    }\n\n    return params;\n  }\n\n  /**\n   * Normalize parameters.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Array} The offers/response with normalized parameters\n   * @private\n   */\n  normalizeParams(configurations) {\n    configurations.forEach((params) => {\n      Object.keys(params).forEach((key) => {\n        let value = params[key];\n\n        if (value.length > 1) {\n          throw new Error(`Parameter \"${key}\" must have only a single value`);\n        }\n\n        value = value[0];\n\n        if (key === 'client_max_window_bits') {\n          if (value !== true) {\n            const num = +value;\n            if (!Number.isInteger(num) || num < 8 || num > 15) {\n              throw new TypeError(\n                `Invalid value for parameter \"${key}\": ${value}`\n              );\n            }\n            value = num;\n          } else if (!this._isServer) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else if (key === 'server_max_window_bits') {\n          const num = +value;\n          if (!Number.isInteger(num) || num < 8 || num > 15) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n          value = num;\n        } else if (\n          key === 'client_no_context_takeover' ||\n          key === 'server_no_context_takeover'\n        ) {\n          if (value !== true) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else {\n          throw new Error(`Unknown parameter \"${key}\"`);\n        }\n\n        params[key] = value;\n      });\n    });\n\n    return configurations;\n  }\n\n  /**\n   * Decompress data. Concurrency limited.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  decompress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._decompress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Compress data. Concurrency limited.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  compress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._compress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Decompress data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _decompress(data, fin, callback) {\n    const endpoint = this._isServer ? 'client' : 'server';\n\n    if (!this._inflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._inflate = zlib.createInflateRaw({\n        ...this._options.zlibInflateOptions,\n        windowBits\n      });\n      this._inflate[kPerMessageDeflate] = this;\n      this._inflate[kTotalLength] = 0;\n      this._inflate[kBuffers] = [];\n      this._inflate.on('error', inflateOnError);\n      this._inflate.on('data', inflateOnData);\n    }\n\n    this._inflate[kCallback] = callback;\n\n    this._inflate.write(data);\n    if (fin) this._inflate.write(TRAILER);\n\n    this._inflate.flush(() => {\n      const err = this._inflate[kError];\n\n      if (err) {\n        this._inflate.close();\n        this._inflate = null;\n        callback(err);\n        return;\n      }\n\n      const data = bufferUtil.concat(\n        this._inflate[kBuffers],\n        this._inflate[kTotalLength]\n      );\n\n      if (this._inflate._readableState.endEmitted) {\n        this._inflate.close();\n        this._inflate = null;\n      } else {\n        this._inflate[kTotalLength] = 0;\n        this._inflate[kBuffers] = [];\n\n        if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n          this._inflate.reset();\n        }\n      }\n\n      callback(null, data);\n    });\n  }\n\n  /**\n   * Compress data.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _compress(data, fin, callback) {\n    const endpoint = this._isServer ? 'server' : 'client';\n\n    if (!this._deflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._deflate = zlib.createDeflateRaw({\n        ...this._options.zlibDeflateOptions,\n        windowBits\n      });\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      this._deflate.on('data', deflateOnData);\n    }\n\n    this._deflate[kCallback] = callback;\n\n    this._deflate.write(data);\n    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {\n      if (!this._deflate) {\n        //\n        // The deflate stream was closed while data was being processed.\n        //\n        return;\n      }\n\n      let data = bufferUtil.concat(\n        this._deflate[kBuffers],\n        this._deflate[kTotalLength]\n      );\n\n      if (fin) {\n        data = new FastBuffer(data.buffer, data.byteOffset, data.length - 4);\n      }\n\n      //\n      // Ensure that the callback will not be called again in\n      // `PerMessageDeflate#cleanup()`.\n      //\n      this._deflate[kCallback] = null;\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n        this._deflate.reset();\n      }\n\n      callback(null, data);\n    });\n  }\n}\n\nmodule.exports = PerMessageDeflate;\n\n/**\n * The listener of the `zlib.DeflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction deflateOnData(chunk) {\n  this[kBuffers].push(chunk);\n  this[kTotalLength] += chunk.length;\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction inflateOnData(chunk) {\n  this[kTotalLength] += chunk.length;\n\n  if (\n    this[kPerMessageDeflate]._maxPayload < 1 ||\n    this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload\n  ) {\n    this[kBuffers].push(chunk);\n    return;\n  }\n\n  this[kError] = new RangeError('Max payload size exceeded');\n  this[kError].code = 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH';\n  this[kError][kStatusCode] = 1009;\n  this.removeListener('data', inflateOnData);\n  this.reset();\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'error'` event.\n *\n * @param {Error} err The emitted error\n * @private\n */\nfunction inflateOnError(err) {\n  //\n  // There is no need to call `Zlib#close()` as the handle is automatically\n  // closed when an error is emitted.\n  //\n  this[kPerMessageDeflate]._inflate = null;\n  err[kStatusCode] = 1007;\n  this[kCallback](err);\n}\n", "'use strict';\n\nconst { isUtf8 } = require('buffer');\n\n//\n// Allowed token characters:\n//\n// '!', '#', '$', '%', '&', ''', '*', '+', '-',\n// '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'\n//\n// tokenChars[32] === 0 // ' '\n// tokenChars[33] === 1 // '!'\n// tokenChars[34] === 0 // '\"'\n// ...\n//\n// prettier-ignore\nconst tokenChars = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0 - 15\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 16 - 31\n  0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, // 32 - 47\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, // 48 - 63\n  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 64 - 79\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, // 80 - 95\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 96 - 111\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 // 112 - 127\n];\n\n/**\n * Checks if a status code is allowed in a close frame.\n *\n * @param {Number} code The status code\n * @return {Boolean} `true` if the status code is valid, else `false`\n * @public\n */\nfunction isValidStatusCode(code) {\n  return (\n    (code >= 1000 &&\n      code <= 1014 &&\n      code !== 1004 &&\n      code !== 1005 &&\n      code !== 1006) ||\n    (code >= 3000 && code <= 4999)\n  );\n}\n\n/**\n * Checks if a given buffer contains only correct UTF-8.\n * Ported from https://www.cl.cam.ac.uk/%7Emgk25/ucs/utf8_check.c by\n * Markus Kuhn.\n *\n * @param {Buffer} buf The buffer to check\n * @return {Boolean} `true` if `buf` contains only correct UTF-8, else `false`\n * @public\n */\nfunction _isValidUTF8(buf) {\n  const len = buf.length;\n  let i = 0;\n\n  while (i < len) {\n    if ((buf[i] & 0x80) === 0) {\n      // 0xxxxxxx\n      i++;\n    } else if ((buf[i] & 0xe0) === 0xc0) {\n      // 110xxxxx 10xxxxxx\n      if (\n        i + 1 === len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i] & 0xfe) === 0xc0 // Overlong\n      ) {\n        return false;\n      }\n\n      i += 2;\n    } else if ((buf[i] & 0xf0) === 0xe0) {\n      // 1110xxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 2 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xe0 && (buf[i + 1] & 0xe0) === 0x80) || // Overlong\n        (buf[i] === 0xed && (buf[i + 1] & 0xe0) === 0xa0) // Surrogate (U+D800 - U+DFFF)\n      ) {\n        return false;\n      }\n\n      i += 3;\n    } else if ((buf[i] & 0xf8) === 0xf0) {\n      // 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 3 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i + 3] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xf0 && (buf[i + 1] & 0xf0) === 0x80) || // Overlong\n        (buf[i] === 0xf4 && buf[i + 1] > 0x8f) ||\n        buf[i] > 0xf4 // > U+10FFFF\n      ) {\n        return false;\n      }\n\n      i += 4;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = {\n  isValidStatusCode,\n  isValidUTF8: _isValidUTF8,\n  tokenChars\n};\n\nif (isUtf8) {\n  module.exports.isValidUTF8 = function (buf) {\n    return buf.length < 24 ? _isValidUTF8(buf) : isUtf8(buf);\n  };\n} /* istanbul ignore else  */ else if (!process.env.WS_NO_UTF_8_VALIDATE) {\n  try {\n    const isValidUTF8 = require('utf-8-validate');\n\n    module.exports.isValidUTF8 = function (buf) {\n      return buf.length < 32 ? _isValidUTF8(buf) : isValidUTF8(buf);\n    };\n  } catch (e) {\n    // Continue regardless of the error.\n  }\n}\n", "'use strict';\n\nconst { Writable } = require('stream');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  kStatusCode,\n  kWebSocket\n} = require('./constants');\nconst { concat, toArrayBuffer, unmask } = require('./buffer-util');\nconst { isValidStatusCode, isValidUTF8 } = require('./validation');\n\nconst FastBuffer = Buffer[Symbol.species];\n\nconst GET_INFO = 0;\nconst GET_PAYLOAD_LENGTH_16 = 1;\nconst GET_PAYLOAD_LENGTH_64 = 2;\nconst GET_MASK = 3;\nconst GET_DATA = 4;\nconst INFLATING = 5;\nconst DEFER_EVENT = 6;\n\n/**\n * HyBi Receiver implementation.\n *\n * @extends Writable\n */\nclass Receiver extends Writable {\n  /**\n   * Creates a Receiver instance.\n   *\n   * @param {Object} [options] Options object\n   * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether\n   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n   *     multiple times in the same tick\n   * @param {String} [options.binaryType=nodebuffer] The type for binary data\n   * @param {Object} [options.extensions] An object containing the negotiated\n   *     extensions\n   * @param {Boolean} [options.isServer=false] Specifies whether to operate in\n   *     client or server mode\n   * @param {Number} [options.maxPayload=0] The maximum allowed message length\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   */\n  constructor(options = {}) {\n    super();\n\n    this._allowSynchronousEvents =\n      options.allowSynchronousEvents !== undefined\n        ? options.allowSynchronousEvents\n        : true;\n    this._binaryType = options.binaryType || BINARY_TYPES[0];\n    this._extensions = options.extensions || {};\n    this._isServer = !!options.isServer;\n    this._maxPayload = options.maxPayload | 0;\n    this._skipUTF8Validation = !!options.skipUTF8Validation;\n    this[kWebSocket] = undefined;\n\n    this._bufferedBytes = 0;\n    this._buffers = [];\n\n    this._compressed = false;\n    this._payloadLength = 0;\n    this._mask = undefined;\n    this._fragmented = 0;\n    this._masked = false;\n    this._fin = false;\n    this._opcode = 0;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragments = [];\n\n    this._errored = false;\n    this._loop = false;\n    this._state = GET_INFO;\n  }\n\n  /**\n   * Implements `Writable.prototype._write()`.\n   *\n   * @param {Buffer} chunk The chunk of data to write\n   * @param {String} encoding The character encoding of `chunk`\n   * @param {Function} cb Callback\n   * @private\n   */\n  _write(chunk, encoding, cb) {\n    if (this._opcode === 0x08 && this._state == GET_INFO) return cb();\n\n    this._bufferedBytes += chunk.length;\n    this._buffers.push(chunk);\n    this.startLoop(cb);\n  }\n\n  /**\n   * Consumes `n` bytes from the buffered data.\n   *\n   * @param {Number} n The number of bytes to consume\n   * @return {Buffer} The consumed bytes\n   * @private\n   */\n  consume(n) {\n    this._bufferedBytes -= n;\n\n    if (n === this._buffers[0].length) return this._buffers.shift();\n\n    if (n < this._buffers[0].length) {\n      const buf = this._buffers[0];\n      this._buffers[0] = new FastBuffer(\n        buf.buffer,\n        buf.byteOffset + n,\n        buf.length - n\n      );\n\n      return new FastBuffer(buf.buffer, buf.byteOffset, n);\n    }\n\n    const dst = Buffer.allocUnsafe(n);\n\n    do {\n      const buf = this._buffers[0];\n      const offset = dst.length - n;\n\n      if (n >= buf.length) {\n        dst.set(this._buffers.shift(), offset);\n      } else {\n        dst.set(new Uint8Array(buf.buffer, buf.byteOffset, n), offset);\n        this._buffers[0] = new FastBuffer(\n          buf.buffer,\n          buf.byteOffset + n,\n          buf.length - n\n        );\n      }\n\n      n -= buf.length;\n    } while (n > 0);\n\n    return dst;\n  }\n\n  /**\n   * Starts the parsing loop.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  startLoop(cb) {\n    this._loop = true;\n\n    do {\n      switch (this._state) {\n        case GET_INFO:\n          this.getInfo(cb);\n          break;\n        case GET_PAYLOAD_LENGTH_16:\n          this.getPayloadLength16(cb);\n          break;\n        case GET_PAYLOAD_LENGTH_64:\n          this.getPayloadLength64(cb);\n          break;\n        case GET_MASK:\n          this.getMask();\n          break;\n        case GET_DATA:\n          this.getData(cb);\n          break;\n        case INFLATING:\n        case DEFER_EVENT:\n          this._loop = false;\n          return;\n      }\n    } while (this._loop);\n\n    if (!this._errored) cb();\n  }\n\n  /**\n   * Reads the first two bytes of a frame.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getInfo(cb) {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(2);\n\n    if ((buf[0] & 0x30) !== 0x00) {\n      const error = this.createError(\n        RangeError,\n        'RSV2 and RSV3 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_2_3'\n      );\n\n      cb(error);\n      return;\n    }\n\n    const compressed = (buf[0] & 0x40) === 0x40;\n\n    if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {\n      const error = this.createError(\n        RangeError,\n        'RSV1 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_1'\n      );\n\n      cb(error);\n      return;\n    }\n\n    this._fin = (buf[0] & 0x80) === 0x80;\n    this._opcode = buf[0] & 0x0f;\n    this._payloadLength = buf[1] & 0x7f;\n\n    if (this._opcode === 0x00) {\n      if (compressed) {\n        const error = this.createError(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (!this._fragmented) {\n        const error = this.createError(\n          RangeError,\n          'invalid opcode 0',\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n\n        cb(error);\n        return;\n      }\n\n      this._opcode = this._fragmented;\n    } else if (this._opcode === 0x01 || this._opcode === 0x02) {\n      if (this._fragmented) {\n        const error = this.createError(\n          RangeError,\n          `invalid opcode ${this._opcode}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n\n        cb(error);\n        return;\n      }\n\n      this._compressed = compressed;\n    } else if (this._opcode > 0x07 && this._opcode < 0x0b) {\n      if (!this._fin) {\n        const error = this.createError(\n          RangeError,\n          'FIN must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_FIN'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (compressed) {\n        const error = this.createError(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (\n        this._payloadLength > 0x7d ||\n        (this._opcode === 0x08 && this._payloadLength === 1)\n      ) {\n        const error = this.createError(\n          RangeError,\n          `invalid payload length ${this._payloadLength}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH'\n        );\n\n        cb(error);\n        return;\n      }\n    } else {\n      const error = this.createError(\n        RangeError,\n        `invalid opcode ${this._opcode}`,\n        true,\n        1002,\n        'WS_ERR_INVALID_OPCODE'\n      );\n\n      cb(error);\n      return;\n    }\n\n    if (!this._fin && !this._fragmented) this._fragmented = this._opcode;\n    this._masked = (buf[1] & 0x80) === 0x80;\n\n    if (this._isServer) {\n      if (!this._masked) {\n        const error = this.createError(\n          RangeError,\n          'MASK must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_MASK'\n        );\n\n        cb(error);\n        return;\n      }\n    } else if (this._masked) {\n      const error = this.createError(\n        RangeError,\n        'MASK must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_MASK'\n      );\n\n      cb(error);\n      return;\n    }\n\n    if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;\n    else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;\n    else this.haveLength(cb);\n  }\n\n  /**\n   * Gets extended payload length (7+16).\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getPayloadLength16(cb) {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    this._payloadLength = this.consume(2).readUInt16BE(0);\n    this.haveLength(cb);\n  }\n\n  /**\n   * Gets extended payload length (7+64).\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getPayloadLength64(cb) {\n    if (this._bufferedBytes < 8) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(8);\n    const num = buf.readUInt32BE(0);\n\n    //\n    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned\n    // if payload length is greater than this number.\n    //\n    if (num > Math.pow(2, 53 - 32) - 1) {\n      const error = this.createError(\n        RangeError,\n        'Unsupported WebSocket frame: payload length > 2^53 - 1',\n        false,\n        1009,\n        'WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH'\n      );\n\n      cb(error);\n      return;\n    }\n\n    this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);\n    this.haveLength(cb);\n  }\n\n  /**\n   * Payload length has been read.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  haveLength(cb) {\n    if (this._payloadLength && this._opcode < 0x08) {\n      this._totalPayloadLength += this._payloadLength;\n      if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {\n        const error = this.createError(\n          RangeError,\n          'Max payload size exceeded',\n          false,\n          1009,\n          'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n        );\n\n        cb(error);\n        return;\n      }\n    }\n\n    if (this._masked) this._state = GET_MASK;\n    else this._state = GET_DATA;\n  }\n\n  /**\n   * Reads mask bytes.\n   *\n   * @private\n   */\n  getMask() {\n    if (this._bufferedBytes < 4) {\n      this._loop = false;\n      return;\n    }\n\n    this._mask = this.consume(4);\n    this._state = GET_DATA;\n  }\n\n  /**\n   * Reads data bytes.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getData(cb) {\n    let data = EMPTY_BUFFER;\n\n    if (this._payloadLength) {\n      if (this._bufferedBytes < this._payloadLength) {\n        this._loop = false;\n        return;\n      }\n\n      data = this.consume(this._payloadLength);\n\n      if (\n        this._masked &&\n        (this._mask[0] | this._mask[1] | this._mask[2] | this._mask[3]) !== 0\n      ) {\n        unmask(data, this._mask);\n      }\n    }\n\n    if (this._opcode > 0x07) {\n      this.controlMessage(data, cb);\n      return;\n    }\n\n    if (this._compressed) {\n      this._state = INFLATING;\n      this.decompress(data, cb);\n      return;\n    }\n\n    if (data.length) {\n      //\n      // This message is not compressed so its length is the sum of the payload\n      // length of all fragments.\n      //\n      this._messageLength = this._totalPayloadLength;\n      this._fragments.push(data);\n    }\n\n    this.dataMessage(cb);\n  }\n\n  /**\n   * Decompresses data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Function} cb Callback\n   * @private\n   */\n  decompress(data, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    perMessageDeflate.decompress(data, this._fin, (err, buf) => {\n      if (err) return cb(err);\n\n      if (buf.length) {\n        this._messageLength += buf.length;\n        if (this._messageLength > this._maxPayload && this._maxPayload > 0) {\n          const error = this.createError(\n            RangeError,\n            'Max payload size exceeded',\n            false,\n            1009,\n            'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n          );\n\n          cb(error);\n          return;\n        }\n\n        this._fragments.push(buf);\n      }\n\n      this.dataMessage(cb);\n      if (this._state === GET_INFO) this.startLoop(cb);\n    });\n  }\n\n  /**\n   * Handles a data message.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  dataMessage(cb) {\n    if (!this._fin) {\n      this._state = GET_INFO;\n      return;\n    }\n\n    const messageLength = this._messageLength;\n    const fragments = this._fragments;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragmented = 0;\n    this._fragments = [];\n\n    if (this._opcode === 2) {\n      let data;\n\n      if (this._binaryType === 'nodebuffer') {\n        data = concat(fragments, messageLength);\n      } else if (this._binaryType === 'arraybuffer') {\n        data = toArrayBuffer(concat(fragments, messageLength));\n      } else {\n        data = fragments;\n      }\n\n      if (this._allowSynchronousEvents) {\n        this.emit('message', data, true);\n        this._state = GET_INFO;\n      } else {\n        this._state = DEFER_EVENT;\n        setImmediate(() => {\n          this.emit('message', data, true);\n          this._state = GET_INFO;\n          this.startLoop(cb);\n        });\n      }\n    } else {\n      const buf = concat(fragments, messageLength);\n\n      if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n        const error = this.createError(\n          Error,\n          'invalid UTF-8 sequence',\n          true,\n          1007,\n          'WS_ERR_INVALID_UTF8'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (this._state === INFLATING || this._allowSynchronousEvents) {\n        this.emit('message', buf, false);\n        this._state = GET_INFO;\n      } else {\n        this._state = DEFER_EVENT;\n        setImmediate(() => {\n          this.emit('message', buf, false);\n          this._state = GET_INFO;\n          this.startLoop(cb);\n        });\n      }\n    }\n  }\n\n  /**\n   * Handles a control message.\n   *\n   * @param {Buffer} data Data to handle\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  controlMessage(data, cb) {\n    if (this._opcode === 0x08) {\n      if (data.length === 0) {\n        this._loop = false;\n        this.emit('conclude', 1005, EMPTY_BUFFER);\n        this.end();\n      } else {\n        const code = data.readUInt16BE(0);\n\n        if (!isValidStatusCode(code)) {\n          const error = this.createError(\n            RangeError,\n            `invalid status code ${code}`,\n            true,\n            1002,\n            'WS_ERR_INVALID_CLOSE_CODE'\n          );\n\n          cb(error);\n          return;\n        }\n\n        const buf = new FastBuffer(\n          data.buffer,\n          data.byteOffset + 2,\n          data.length - 2\n        );\n\n        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n          const error = this.createError(\n            Error,\n            'invalid UTF-8 sequence',\n            true,\n            1007,\n            'WS_ERR_INVALID_UTF8'\n          );\n\n          cb(error);\n          return;\n        }\n\n        this._loop = false;\n        this.emit('conclude', code, buf);\n        this.end();\n      }\n\n      this._state = GET_INFO;\n      return;\n    }\n\n    if (this._allowSynchronousEvents) {\n      this.emit(this._opcode === 0x09 ? 'ping' : 'pong', data);\n      this._state = GET_INFO;\n    } else {\n      this._state = DEFER_EVENT;\n      setImmediate(() => {\n        this.emit(this._opcode === 0x09 ? 'ping' : 'pong', data);\n        this._state = GET_INFO;\n        this.startLoop(cb);\n      });\n    }\n  }\n\n  /**\n   * Builds an error object.\n   *\n   * @param {function(new:Error|RangeError)} ErrorCtor The error constructor\n   * @param {String} message The error message\n   * @param {Boolean} prefix Specifies whether or not to add a default prefix to\n   *     `message`\n   * @param {Number} statusCode The status code\n   * @param {String} errorCode The exposed error code\n   * @return {(Error|RangeError)} The error\n   * @private\n   */\n  createError(ErrorCtor, message, prefix, statusCode, errorCode) {\n    this._loop = false;\n    this._errored = true;\n\n    const err = new ErrorCtor(\n      prefix ? `Invalid WebSocket frame: ${message}` : message\n    );\n\n    Error.captureStackTrace(err, this.createError);\n    err.code = errorCode;\n    err[kStatusCode] = statusCode;\n    return err;\n  }\n}\n\nmodule.exports = Receiver;\n", "/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Duplex\" }] */\n\n'use strict';\n\nconst { Duplex } = require('stream');\nconst { randomFillSync } = require('crypto');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst { EMPTY_BUFFER } = require('./constants');\nconst { isValidStatusCode } = require('./validation');\nconst { mask: applyMask, toBuffer } = require('./buffer-util');\n\nconst kByteLength = Symbol('kByteLength');\nconst maskBuffer = Buffer.alloc(4);\nconst RANDOM_POOL_SIZE = 8 * 1024;\nlet randomPool;\nlet randomPoolPointer = RANDOM_POOL_SIZE;\n\n/**\n * HyBi Sender implementation.\n */\nclass Sender {\n  /**\n   * Creates a Sender instance.\n   *\n   * @param {Duplex} socket The connection socket\n   * @param {Object} [extensions] An object containing the negotiated extensions\n   * @param {Function} [generateMask] The function used to generate the masking\n   *     key\n   */\n  constructor(socket, extensions, generateMask) {\n    this._extensions = extensions || {};\n\n    if (generateMask) {\n      this._generateMask = generateMask;\n      this._maskBuffer = Buffer.alloc(4);\n    }\n\n    this._socket = socket;\n\n    this._firstFragment = true;\n    this._compress = false;\n\n    this._bufferedBytes = 0;\n    this._deflating = false;\n    this._queue = [];\n  }\n\n  /**\n   * Frames a piece of data according to the HyBi WebSocket protocol.\n   *\n   * @param {(Buffer|String)} data The data to frame\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @return {(Buffer|String)[]} The framed data\n   * @public\n   */\n  static frame(data, options) {\n    let mask;\n    let merge = false;\n    let offset = 2;\n    let skipMasking = false;\n\n    if (options.mask) {\n      mask = options.maskBuffer || maskBuffer;\n\n      if (options.generateMask) {\n        options.generateMask(mask);\n      } else {\n        if (randomPoolPointer === RANDOM_POOL_SIZE) {\n          /* istanbul ignore else  */\n          if (randomPool === undefined) {\n            //\n            // This is lazily initialized because server-sent frames must not\n            // be masked so it may never be used.\n            //\n            randomPool = Buffer.alloc(RANDOM_POOL_SIZE);\n          }\n\n          randomFillSync(randomPool, 0, RANDOM_POOL_SIZE);\n          randomPoolPointer = 0;\n        }\n\n        mask[0] = randomPool[randomPoolPointer++];\n        mask[1] = randomPool[randomPoolPointer++];\n        mask[2] = randomPool[randomPoolPointer++];\n        mask[3] = randomPool[randomPoolPointer++];\n      }\n\n      skipMasking = (mask[0] | mask[1] | mask[2] | mask[3]) === 0;\n      offset = 6;\n    }\n\n    let dataLength;\n\n    if (typeof data === 'string') {\n      if (\n        (!options.mask || skipMasking) &&\n        options[kByteLength] !== undefined\n      ) {\n        dataLength = options[kByteLength];\n      } else {\n        data = Buffer.from(data);\n        dataLength = data.length;\n      }\n    } else {\n      dataLength = data.length;\n      merge = options.mask && options.readOnly && !skipMasking;\n    }\n\n    let payloadLength = dataLength;\n\n    if (dataLength >= 65536) {\n      offset += 8;\n      payloadLength = 127;\n    } else if (dataLength > 125) {\n      offset += 2;\n      payloadLength = 126;\n    }\n\n    const target = Buffer.allocUnsafe(merge ? dataLength + offset : offset);\n\n    target[0] = options.fin ? options.opcode | 0x80 : options.opcode;\n    if (options.rsv1) target[0] |= 0x40;\n\n    target[1] = payloadLength;\n\n    if (payloadLength === 126) {\n      target.writeUInt16BE(dataLength, 2);\n    } else if (payloadLength === 127) {\n      target[2] = target[3] = 0;\n      target.writeUIntBE(dataLength, 4, 6);\n    }\n\n    if (!options.mask) return [target, data];\n\n    target[1] |= 0x80;\n    target[offset - 4] = mask[0];\n    target[offset - 3] = mask[1];\n    target[offset - 2] = mask[2];\n    target[offset - 1] = mask[3];\n\n    if (skipMasking) return [target, data];\n\n    if (merge) {\n      applyMask(data, mask, target, offset, dataLength);\n      return [target];\n    }\n\n    applyMask(data, mask, data, 0, dataLength);\n    return [target, data];\n  }\n\n  /**\n   * Sends a close message to the other peer.\n   *\n   * @param {Number} [code] The status code component of the body\n   * @param {(String|Buffer)} [data] The message component of the body\n   * @param {Boolean} [mask=false] Specifies whether or not to mask the message\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  close(code, data, mask, cb) {\n    let buf;\n\n    if (code === undefined) {\n      buf = EMPTY_BUFFER;\n    } else if (typeof code !== 'number' || !isValidStatusCode(code)) {\n      throw new TypeError('First argument must be a valid error code number');\n    } else if (data === undefined || !data.length) {\n      buf = Buffer.allocUnsafe(2);\n      buf.writeUInt16BE(code, 0);\n    } else {\n      const length = Buffer.byteLength(data);\n\n      if (length > 123) {\n        throw new RangeError('The message must not be greater than 123 bytes');\n      }\n\n      buf = Buffer.allocUnsafe(2 + length);\n      buf.writeUInt16BE(code, 0);\n\n      if (typeof data === 'string') {\n        buf.write(data, 2);\n      } else {\n        buf.set(data, 2);\n      }\n    }\n\n    const options = {\n      [kByteLength]: buf.length,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x08,\n      readOnly: false,\n      rsv1: false\n    };\n\n    if (this._deflating) {\n      this.enqueue([this.dispatch, buf, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(buf, options), cb);\n    }\n  }\n\n  /**\n   * Sends a ping message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  ping(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x09,\n      readOnly,\n      rsv1: false\n    };\n\n    if (this._deflating) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a pong message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  pong(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x0a,\n      readOnly,\n      rsv1: false\n    };\n\n    if (this._deflating) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a data message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} [options.binary=false] Specifies whether `data` is binary\n   *     or text\n   * @param {Boolean} [options.compress=false] Specifies whether or not to\n   *     compress `data`\n   * @param {Boolean} [options.fin=false] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  send(data, options, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n    let opcode = options.binary ? 2 : 1;\n    let rsv1 = options.compress;\n\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (this._firstFragment) {\n      this._firstFragment = false;\n      if (\n        rsv1 &&\n        perMessageDeflate &&\n        perMessageDeflate.params[\n          perMessageDeflate._isServer\n            ? 'server_no_context_takeover'\n            : 'client_no_context_takeover'\n        ]\n      ) {\n        rsv1 = byteLength >= perMessageDeflate._threshold;\n      }\n      this._compress = rsv1;\n    } else {\n      rsv1 = false;\n      opcode = 0;\n    }\n\n    if (options.fin) this._firstFragment = true;\n\n    if (perMessageDeflate) {\n      const opts = {\n        [kByteLength]: byteLength,\n        fin: options.fin,\n        generateMask: this._generateMask,\n        mask: options.mask,\n        maskBuffer: this._maskBuffer,\n        opcode,\n        readOnly,\n        rsv1\n      };\n\n      if (this._deflating) {\n        this.enqueue([this.dispatch, data, this._compress, opts, cb]);\n      } else {\n        this.dispatch(data, this._compress, opts, cb);\n      }\n    } else {\n      this.sendFrame(\n        Sender.frame(data, {\n          [kByteLength]: byteLength,\n          fin: options.fin,\n          generateMask: this._generateMask,\n          mask: options.mask,\n          maskBuffer: this._maskBuffer,\n          opcode,\n          readOnly,\n          rsv1: false\n        }),\n        cb\n      );\n    }\n  }\n\n  /**\n   * Dispatches a message.\n   *\n   * @param {(Buffer|String)} data The message to send\n   * @param {Boolean} [compress=false] Specifies whether or not to compress\n   *     `data`\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  dispatch(data, compress, options, cb) {\n    if (!compress) {\n      this.sendFrame(Sender.frame(data, options), cb);\n      return;\n    }\n\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    this._bufferedBytes += options[kByteLength];\n    this._deflating = true;\n    perMessageDeflate.compress(data, options.fin, (_, buf) => {\n      if (this._socket.destroyed) {\n        const err = new Error(\n          'The socket was closed while data was being compressed'\n        );\n\n        if (typeof cb === 'function') cb(err);\n\n        for (let i = 0; i < this._queue.length; i++) {\n          const params = this._queue[i];\n          const callback = params[params.length - 1];\n\n          if (typeof callback === 'function') callback(err);\n        }\n\n        return;\n      }\n\n      this._bufferedBytes -= options[kByteLength];\n      this._deflating = false;\n      options.readOnly = false;\n      this.sendFrame(Sender.frame(buf, options), cb);\n      this.dequeue();\n    });\n  }\n\n  /**\n   * Executes queued send operations.\n   *\n   * @private\n   */\n  dequeue() {\n    while (!this._deflating && this._queue.length) {\n      const params = this._queue.shift();\n\n      this._bufferedBytes -= params[3][kByteLength];\n      Reflect.apply(params[0], this, params.slice(1));\n    }\n  }\n\n  /**\n   * Enqueues a send operation.\n   *\n   * @param {Array} params Send operation parameters.\n   * @private\n   */\n  enqueue(params) {\n    this._bufferedBytes += params[3][kByteLength];\n    this._queue.push(params);\n  }\n\n  /**\n   * Sends a frame.\n   *\n   * @param {Buffer[]} list The frame to send\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  sendFrame(list, cb) {\n    if (list.length === 2) {\n      this._socket.cork();\n      this._socket.write(list[0]);\n      this._socket.write(list[1], cb);\n      this._socket.uncork();\n    } else {\n      this._socket.write(list[0], cb);\n    }\n  }\n}\n\nmodule.exports = Sender;\n", "'use strict';\n\nconst { kForOnEventAttribute, kListener } = require('./constants');\n\nconst kCode = Symbol('kCode');\nconst kData = Symbol('kData');\nconst kError = Symbol('kError');\nconst kMessage = Symbol('kMessage');\nconst kReason = Symbol('kReason');\nconst kTarget = Symbol('kTarget');\nconst kType = Symbol('kType');\nconst kWasClean = Symbol('kWasClean');\n\n/**\n * Class representing an event.\n */\nclass Event {\n  /**\n   * Create a new `Event`.\n   *\n   * @param {String} type The name of the event\n   * @throws {TypeError} If the `type` argument is not specified\n   */\n  constructor(type) {\n    this[kTarget] = null;\n    this[kType] = type;\n  }\n\n  /**\n   * @type {*}\n   */\n  get target() {\n    return this[kTarget];\n  }\n\n  /**\n   * @type {String}\n   */\n  get type() {\n    return this[kType];\n  }\n}\n\nObject.defineProperty(Event.prototype, 'target', { enumerable: true });\nObject.defineProperty(Event.prototype, 'type', { enumerable: true });\n\n/**\n * Class representing a close event.\n *\n * @extends Event\n */\nclass CloseEvent extends Event {\n  /**\n   * Create a new `CloseEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {Number} [options.code=0] The status code explaining why the\n   *     connection was closed\n   * @param {String} [options.reason=''] A human-readable string explaining why\n   *     the connection was closed\n   * @param {Boolean} [options.wasClean=false] Indicates whether or not the\n   *     connection was cleanly closed\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kCode] = options.code === undefined ? 0 : options.code;\n    this[kReason] = options.reason === undefined ? '' : options.reason;\n    this[kWasClean] = options.wasClean === undefined ? false : options.wasClean;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get code() {\n    return this[kCode];\n  }\n\n  /**\n   * @type {String}\n   */\n  get reason() {\n    return this[kReason];\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get wasClean() {\n    return this[kWasClean];\n  }\n}\n\nObject.defineProperty(CloseEvent.prototype, 'code', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'reason', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'wasClean', { enumerable: true });\n\n/**\n * Class representing an error event.\n *\n * @extends Event\n */\nclass ErrorEvent extends Event {\n  /**\n   * Create a new `ErrorEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.error=null] The error that generated this event\n   * @param {String} [options.message=''] The error message\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kError] = options.error === undefined ? null : options.error;\n    this[kMessage] = options.message === undefined ? '' : options.message;\n  }\n\n  /**\n   * @type {*}\n   */\n  get error() {\n    return this[kError];\n  }\n\n  /**\n   * @type {String}\n   */\n  get message() {\n    return this[kMessage];\n  }\n}\n\nObject.defineProperty(ErrorEvent.prototype, 'error', { enumerable: true });\nObject.defineProperty(ErrorEvent.prototype, 'message', { enumerable: true });\n\n/**\n * Class representing a message event.\n *\n * @extends Event\n */\nclass MessageEvent extends Event {\n  /**\n   * Create a new `MessageEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.data=null] The message content\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kData] = options.data === undefined ? null : options.data;\n  }\n\n  /**\n   * @type {*}\n   */\n  get data() {\n    return this[kData];\n  }\n}\n\nObject.defineProperty(MessageEvent.prototype, 'data', { enumerable: true });\n\n/**\n * This provides methods for emulating the `EventTarget` interface. It's not\n * meant to be used directly.\n *\n * @mixin\n */\nconst EventTarget = {\n  /**\n   * Register an event listener.\n   *\n   * @param {String} type A string representing the event type to listen for\n   * @param {(Function|Object)} handler The listener to add\n   * @param {Object} [options] An options object specifies characteristics about\n   *     the event listener\n   * @param {Boolean} [options.once=false] A `Boolean` indicating that the\n   *     listener should be invoked at most once after being added. If `true`,\n   *     the listener would be automatically removed when invoked.\n   * @public\n   */\n  addEventListener(type, handler, options = {}) {\n    for (const listener of this.listeners(type)) {\n      if (\n        !options[kForOnEventAttribute] &&\n        listener[kListener] === handler &&\n        !listener[kForOnEventAttribute]\n      ) {\n        return;\n      }\n    }\n\n    let wrapper;\n\n    if (type === 'message') {\n      wrapper = function onMessage(data, isBinary) {\n        const event = new MessageEvent('message', {\n          data: isBinary ? data : data.toString()\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'close') {\n      wrapper = function onClose(code, message) {\n        const event = new CloseEvent('close', {\n          code,\n          reason: message.toString(),\n          wasClean: this._closeFrameReceived && this._closeFrameSent\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'error') {\n      wrapper = function onError(error) {\n        const event = new ErrorEvent('error', {\n          error,\n          message: error.message\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'open') {\n      wrapper = function onOpen() {\n        const event = new Event('open');\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else {\n      return;\n    }\n\n    wrapper[kForOnEventAttribute] = !!options[kForOnEventAttribute];\n    wrapper[kListener] = handler;\n\n    if (options.once) {\n      this.once(type, wrapper);\n    } else {\n      this.on(type, wrapper);\n    }\n  },\n\n  /**\n   * Remove an event listener.\n   *\n   * @param {String} type A string representing the event type to remove\n   * @param {(Function|Object)} handler The listener to remove\n   * @public\n   */\n  removeEventListener(type, handler) {\n    for (const listener of this.listeners(type)) {\n      if (listener[kListener] === handler && !listener[kForOnEventAttribute]) {\n        this.removeListener(type, listener);\n        break;\n      }\n    }\n  }\n};\n\nmodule.exports = {\n  CloseEvent,\n  ErrorEvent,\n  Event,\n  EventTarget,\n  MessageEvent\n};\n\n/**\n * Call an event listener\n *\n * @param {(Function|Object)} listener The listener to call\n * @param {*} thisArg The value to use as `this`` when calling the listener\n * @param {Event} event The event to pass to the listener\n * @private\n */\nfunction callListener(listener, thisArg, event) {\n  if (typeof listener === 'object' && listener.handleEvent) {\n    listener.handleEvent.call(listener, event);\n  } else {\n    listener.call(thisArg, event);\n  }\n}\n", "'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Adds an offer to the map of extension offers or a parameter to the map of\n * parameters.\n *\n * @param {Object} dest The map of extension offers or parameters\n * @param {String} name The extension or parameter name\n * @param {(Object|Boolean|String)} elem The extension parameters or the\n *     parameter value\n * @private\n */\nfunction push(dest, name, elem) {\n  if (dest[name] === undefined) dest[name] = [elem];\n  else dest[name].push(elem);\n}\n\n/**\n * Parses the `Sec-WebSocket-Extensions` header into an object.\n *\n * @param {String} header The field value of the header\n * @return {Object} The parsed object\n * @public\n */\nfunction parse(header) {\n  const offers = Object.create(null);\n  let params = Object.create(null);\n  let mustUnescape = false;\n  let isEscaping = false;\n  let inQuotes = false;\n  let extensionName;\n  let paramName;\n  let start = -1;\n  let code = -1;\n  let end = -1;\n  let i = 0;\n\n  for (; i < header.length; i++) {\n    code = header.charCodeAt(i);\n\n    if (extensionName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (\n        i !== 0 &&\n        (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n      ) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b /* ';' */ || code === 0x2c /* ',' */) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        const name = header.slice(start, end);\n        if (code === 0x2c) {\n          push(offers, name, params);\n          params = Object.create(null);\n        } else {\n          extensionName = name;\n        }\n\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else if (paramName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (code === 0x20 || code === 0x09) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        push(params, header.slice(start, end), true);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        start = end = -1;\n      } else if (code === 0x3d /* '=' */ && start !== -1 && end === -1) {\n        paramName = header.slice(start, i);\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else {\n      //\n      // The value of a quoted-string after unescaping must conform to the\n      // token ABNF, so only token characters are valid.\n      // Ref: https://tools.ietf.org/html/rfc6455#section-9.1\n      //\n      if (isEscaping) {\n        if (tokenChars[code] !== 1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n        if (start === -1) start = i;\n        else if (!mustUnescape) mustUnescape = true;\n        isEscaping = false;\n      } else if (inQuotes) {\n        if (tokenChars[code] === 1) {\n          if (start === -1) start = i;\n        } else if (code === 0x22 /* '\"' */ && start !== -1) {\n          inQuotes = false;\n          end = i;\n        } else if (code === 0x5c /* '\\' */) {\n          isEscaping = true;\n        } else {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n      } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {\n        inQuotes = true;\n      } else if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (start !== -1 && (code === 0x20 || code === 0x09)) {\n        if (end === -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        let value = header.slice(start, end);\n        if (mustUnescape) {\n          value = value.replace(/\\\\/g, '');\n          mustUnescape = false;\n        }\n        push(params, paramName, value);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        paramName = undefined;\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    }\n  }\n\n  if (start === -1 || inQuotes || code === 0x20 || code === 0x09) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  if (end === -1) end = i;\n  const token = header.slice(start, end);\n  if (extensionName === undefined) {\n    push(offers, token, params);\n  } else {\n    if (paramName === undefined) {\n      push(params, token, true);\n    } else if (mustUnescape) {\n      push(params, paramName, token.replace(/\\\\/g, ''));\n    } else {\n      push(params, paramName, token);\n    }\n    push(offers, extensionName, params);\n  }\n\n  return offers;\n}\n\n/**\n * Builds the `Sec-WebSocket-Extensions` header field value.\n *\n * @param {Object} extensions The map of extensions and parameters to format\n * @return {String} A string representing the given object\n * @public\n */\nfunction format(extensions) {\n  return Object.keys(extensions)\n    .map((extension) => {\n      let configurations = extensions[extension];\n      if (!Array.isArray(configurations)) configurations = [configurations];\n      return configurations\n        .map((params) => {\n          return [extension]\n            .concat(\n              Object.keys(params).map((k) => {\n                let values = params[k];\n                if (!Array.isArray(values)) values = [values];\n                return values\n                  .map((v) => (v === true ? k : `${k}=${v}`))\n                  .join('; ');\n              })\n            )\n            .join('; ');\n        })\n        .join(', ');\n    })\n    .join(', ');\n}\n\nmodule.exports = { format, parse };\n", "/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Duplex|Readable$\", \"caughtErrors\": \"none\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst https = require('https');\nconst http = require('http');\nconst net = require('net');\nconst tls = require('tls');\nconst { randomBytes, createHash } = require('crypto');\nconst { Duplex, Readable } = require('stream');\nconst { URL } = require('url');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst Receiver = require('./receiver');\nconst Sender = require('./sender');\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  GUID,\n  kForOnEventAttribute,\n  kListener,\n  kStatusCode,\n  kWebSocket,\n  NOOP\n} = require('./constants');\nconst {\n  EventTarget: { addEventListener, removeEventListener }\n} = require('./event-target');\nconst { format, parse } = require('./extension');\nconst { toBuffer } = require('./buffer-util');\n\nconst closeTimeout = 30 * 1000;\nconst kAborted = Symbol('kAborted');\nconst protocolVersions = [8, 13];\nconst readyStates = ['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'];\nconst subprotocolRegex = /^[!#$%&'*+\\-.0-9A-Z^_`|a-z~]+$/;\n\n/**\n * Class representing a WebSocket.\n *\n * @extends EventEmitter\n */\nclass WebSocket extends EventEmitter {\n  /**\n   * Create a new `WebSocket`.\n   *\n   * @param {(String|URL)} address The URL to which to connect\n   * @param {(String|String[])} [protocols] The subprotocols\n   * @param {Object} [options] Connection options\n   */\n  constructor(address, protocols, options) {\n    super();\n\n    this._binaryType = BINARY_TYPES[0];\n    this._closeCode = 1006;\n    this._closeFrameReceived = false;\n    this._closeFrameSent = false;\n    this._closeMessage = EMPTY_BUFFER;\n    this._closeTimer = null;\n    this._extensions = {};\n    this._paused = false;\n    this._protocol = '';\n    this._readyState = WebSocket.CONNECTING;\n    this._receiver = null;\n    this._sender = null;\n    this._socket = null;\n\n    if (address !== null) {\n      this._bufferedAmount = 0;\n      this._isServer = false;\n      this._redirects = 0;\n\n      if (protocols === undefined) {\n        protocols = [];\n      } else if (!Array.isArray(protocols)) {\n        if (typeof protocols === 'object' && protocols !== null) {\n          options = protocols;\n          protocols = [];\n        } else {\n          protocols = [protocols];\n        }\n      }\n\n      initAsClient(this, address, protocols, options);\n    } else {\n      this._autoPong = options.autoPong;\n      this._isServer = true;\n    }\n  }\n\n  /**\n   * This deviates from the WHATWG interface since ws doesn't support the\n   * required default \"blob\" type (instead we define a custom \"nodebuffer\"\n   * type).\n   *\n   * @type {String}\n   */\n  get binaryType() {\n    return this._binaryType;\n  }\n\n  set binaryType(type) {\n    if (!BINARY_TYPES.includes(type)) return;\n\n    this._binaryType = type;\n\n    //\n    // Allow to change `binaryType` on the fly.\n    //\n    if (this._receiver) this._receiver._binaryType = type;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get bufferedAmount() {\n    if (!this._socket) return this._bufferedAmount;\n\n    return this._socket._writableState.length + this._sender._bufferedBytes;\n  }\n\n  /**\n   * @type {String}\n   */\n  get extensions() {\n    return Object.keys(this._extensions).join();\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get isPaused() {\n    return this._paused;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onclose() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onerror() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onopen() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onmessage() {\n    return null;\n  }\n\n  /**\n   * @type {String}\n   */\n  get protocol() {\n    return this._protocol;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get readyState() {\n    return this._readyState;\n  }\n\n  /**\n   * @type {String}\n   */\n  get url() {\n    return this._url;\n  }\n\n  /**\n   * Set up the socket and the internal resources.\n   *\n   * @param {Duplex} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Object} options Options object\n   * @param {Boolean} [options.allowSynchronousEvents=false] Specifies whether\n   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n   *     multiple times in the same tick\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Number} [options.maxPayload=0] The maximum allowed message size\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @private\n   */\n  setSocket(socket, head, options) {\n    const receiver = new Receiver({\n      allowSynchronousEvents: options.allowSynchronousEvents,\n      binaryType: this.binaryType,\n      extensions: this._extensions,\n      isServer: this._isServer,\n      maxPayload: options.maxPayload,\n      skipUTF8Validation: options.skipUTF8Validation\n    });\n\n    this._sender = new Sender(socket, this._extensions, options.generateMask);\n    this._receiver = receiver;\n    this._socket = socket;\n\n    receiver[kWebSocket] = this;\n    socket[kWebSocket] = this;\n\n    receiver.on('conclude', receiverOnConclude);\n    receiver.on('drain', receiverOnDrain);\n    receiver.on('error', receiverOnError);\n    receiver.on('message', receiverOnMessage);\n    receiver.on('ping', receiverOnPing);\n    receiver.on('pong', receiverOnPong);\n\n    //\n    // These methods may not be available if `socket` is just a `Duplex`.\n    //\n    if (socket.setTimeout) socket.setTimeout(0);\n    if (socket.setNoDelay) socket.setNoDelay();\n\n    if (head.length > 0) socket.unshift(head);\n\n    socket.on('close', socketOnClose);\n    socket.on('data', socketOnData);\n    socket.on('end', socketOnEnd);\n    socket.on('error', socketOnError);\n\n    this._readyState = WebSocket.OPEN;\n    this.emit('open');\n  }\n\n  /**\n   * Emit the `'close'` event.\n   *\n   * @private\n   */\n  emitClose() {\n    if (!this._socket) {\n      this._readyState = WebSocket.CLOSED;\n      this.emit('close', this._closeCode, this._closeMessage);\n      return;\n    }\n\n    if (this._extensions[PerMessageDeflate.extensionName]) {\n      this._extensions[PerMessageDeflate.extensionName].cleanup();\n    }\n\n    this._receiver.removeAllListeners();\n    this._readyState = WebSocket.CLOSED;\n    this.emit('close', this._closeCode, this._closeMessage);\n  }\n\n  /**\n   * Start a closing handshake.\n   *\n   *          +----------+   +-----------+   +----------+\n   *     - - -|ws.close()|-->|close frame|-->|ws.close()|- - -\n   *    |     +----------+   +-----------+   +----------+     |\n   *          +----------+   +-----------+         |\n   * CLOSING  |ws.close()|<--|close frame|<--+-----+       CLOSING\n   *          +----------+   +-----------+   |\n   *    |           |                        |   +---+        |\n   *                +------------------------+-->|fin| - - - -\n   *    |         +---+                      |   +---+\n   *     - - - - -|fin|<---------------------+\n   *              +---+\n   *\n   * @param {Number} [code] Status code explaining why the connection is closing\n   * @param {(String|Buffer)} [data] The reason why the connection is\n   *     closing\n   * @public\n   */\n  close(code, data) {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      abortHandshake(this, this._req, msg);\n      return;\n    }\n\n    if (this.readyState === WebSocket.CLOSING) {\n      if (\n        this._closeFrameSent &&\n        (this._closeFrameReceived || this._receiver._writableState.errorEmitted)\n      ) {\n        this._socket.end();\n      }\n\n      return;\n    }\n\n    this._readyState = WebSocket.CLOSING;\n    this._sender.close(code, data, !this._isServer, (err) => {\n      //\n      // This error is handled by the `'error'` listener on the socket. We only\n      // want to know if the close frame has been sent here.\n      //\n      if (err) return;\n\n      this._closeFrameSent = true;\n\n      if (\n        this._closeFrameReceived ||\n        this._receiver._writableState.errorEmitted\n      ) {\n        this._socket.end();\n      }\n    });\n\n    //\n    // Specify a timeout for the closing handshake to complete.\n    //\n    this._closeTimer = setTimeout(\n      this._socket.destroy.bind(this._socket),\n      closeTimeout\n    );\n  }\n\n  /**\n   * Pause the socket.\n   *\n   * @public\n   */\n  pause() {\n    if (\n      this.readyState === WebSocket.CONNECTING ||\n      this.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = true;\n    this._socket.pause();\n  }\n\n  /**\n   * Send a ping.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the ping is sent\n   * @public\n   */\n  ping(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.ping(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Send a pong.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the pong is sent\n   * @public\n   */\n  pong(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.pong(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Resume the socket.\n   *\n   * @public\n   */\n  resume() {\n    if (\n      this.readyState === WebSocket.CONNECTING ||\n      this.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = false;\n    if (!this._receiver._writableState.needDrain) this._socket.resume();\n  }\n\n  /**\n   * Send a data message.\n   *\n   * @param {*} data The message to send\n   * @param {Object} [options] Options object\n   * @param {Boolean} [options.binary] Specifies whether `data` is binary or\n   *     text\n   * @param {Boolean} [options.compress] Specifies whether or not to compress\n   *     `data`\n   * @param {Boolean} [options.fin=true] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when data is written out\n   * @public\n   */\n  send(data, options, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof options === 'function') {\n      cb = options;\n      options = {};\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    const opts = {\n      binary: typeof data !== 'string',\n      mask: !this._isServer,\n      compress: true,\n      fin: true,\n      ...options\n    };\n\n    if (!this._extensions[PerMessageDeflate.extensionName]) {\n      opts.compress = false;\n    }\n\n    this._sender.send(data || EMPTY_BUFFER, opts, cb);\n  }\n\n  /**\n   * Forcibly close the connection.\n   *\n   * @public\n   */\n  terminate() {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      abortHandshake(this, this._req, msg);\n      return;\n    }\n\n    if (this._socket) {\n      this._readyState = WebSocket.CLOSING;\n      this._socket.destroy();\n    }\n  }\n}\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n[\n  'binaryType',\n  'bufferedAmount',\n  'extensions',\n  'isPaused',\n  'protocol',\n  'readyState',\n  'url'\n].forEach((property) => {\n  Object.defineProperty(WebSocket.prototype, property, { enumerable: true });\n});\n\n//\n// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.\n// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface\n//\n['open', 'error', 'close', 'message'].forEach((method) => {\n  Object.defineProperty(WebSocket.prototype, `on${method}`, {\n    enumerable: true,\n    get() {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) return listener[kListener];\n      }\n\n      return null;\n    },\n    set(handler) {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) {\n          this.removeListener(method, listener);\n          break;\n        }\n      }\n\n      if (typeof handler !== 'function') return;\n\n      this.addEventListener(method, handler, {\n        [kForOnEventAttribute]: true\n      });\n    }\n  });\n});\n\nWebSocket.prototype.addEventListener = addEventListener;\nWebSocket.prototype.removeEventListener = removeEventListener;\n\nmodule.exports = WebSocket;\n\n/**\n * Initialize a WebSocket client.\n *\n * @param {WebSocket} websocket The client to initialize\n * @param {(String|URL)} address The URL to which to connect\n * @param {Array} protocols The subprotocols\n * @param {Object} [options] Connection options\n * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether any\n *     of the `'message'`, `'ping'`, and `'pong'` events can be emitted multiple\n *     times in the same tick\n * @param {Boolean} [options.autoPong=true] Specifies whether or not to\n *     automatically send a pong in response to a ping\n * @param {Function} [options.finishRequest] A function which can be used to\n *     customize the headers of each http request before it is sent\n * @param {Boolean} [options.followRedirects=false] Whether or not to follow\n *     redirects\n * @param {Function} [options.generateMask] The function used to generate the\n *     masking key\n * @param {Number} [options.handshakeTimeout] Timeout in milliseconds for the\n *     handshake request\n * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n *     size\n * @param {Number} [options.maxRedirects=10] The maximum number of redirects\n *     allowed\n * @param {String} [options.origin] Value of the `Origin` or\n *     `Sec-WebSocket-Origin` header\n * @param {(Boolean|Object)} [options.perMessageDeflate=true] Enable/disable\n *     permessage-deflate\n * @param {Number} [options.protocolVersion=13] Value of the\n *     `Sec-WebSocket-Version` header\n * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n *     not to skip UTF-8 validation for text and close messages\n * @private\n */\nfunction initAsClient(websocket, address, protocols, options) {\n  const opts = {\n    allowSynchronousEvents: true,\n    autoPong: true,\n    protocolVersion: protocolVersions[1],\n    maxPayload: 100 * 1024 * 1024,\n    skipUTF8Validation: false,\n    perMessageDeflate: true,\n    followRedirects: false,\n    maxRedirects: 10,\n    ...options,\n    socketPath: undefined,\n    hostname: undefined,\n    protocol: undefined,\n    timeout: undefined,\n    method: 'GET',\n    host: undefined,\n    path: undefined,\n    port: undefined\n  };\n\n  websocket._autoPong = opts.autoPong;\n\n  if (!protocolVersions.includes(opts.protocolVersion)) {\n    throw new RangeError(\n      `Unsupported protocol version: ${opts.protocolVersion} ` +\n        `(supported versions: ${protocolVersions.join(', ')})`\n    );\n  }\n\n  let parsedUrl;\n\n  if (address instanceof URL) {\n    parsedUrl = address;\n  } else {\n    try {\n      parsedUrl = new URL(address);\n    } catch (e) {\n      throw new SyntaxError(`Invalid URL: ${address}`);\n    }\n  }\n\n  if (parsedUrl.protocol === 'http:') {\n    parsedUrl.protocol = 'ws:';\n  } else if (parsedUrl.protocol === 'https:') {\n    parsedUrl.protocol = 'wss:';\n  }\n\n  websocket._url = parsedUrl.href;\n\n  const isSecure = parsedUrl.protocol === 'wss:';\n  const isIpcUrl = parsedUrl.protocol === 'ws+unix:';\n  let invalidUrlMessage;\n\n  if (parsedUrl.protocol !== 'ws:' && !isSecure && !isIpcUrl) {\n    invalidUrlMessage =\n      'The URL\\'s protocol must be one of \"ws:\", \"wss:\", ' +\n      '\"http:\", \"https\", or \"ws+unix:\"';\n  } else if (isIpcUrl && !parsedUrl.pathname) {\n    invalidUrlMessage = \"The URL's pathname is empty\";\n  } else if (parsedUrl.hash) {\n    invalidUrlMessage = 'The URL contains a fragment identifier';\n  }\n\n  if (invalidUrlMessage) {\n    const err = new SyntaxError(invalidUrlMessage);\n\n    if (websocket._redirects === 0) {\n      throw err;\n    } else {\n      emitErrorAndClose(websocket, err);\n      return;\n    }\n  }\n\n  const defaultPort = isSecure ? 443 : 80;\n  const key = randomBytes(16).toString('base64');\n  const request = isSecure ? https.request : http.request;\n  const protocolSet = new Set();\n  let perMessageDeflate;\n\n  opts.createConnection =\n    opts.createConnection || (isSecure ? tlsConnect : netConnect);\n  opts.defaultPort = opts.defaultPort || defaultPort;\n  opts.port = parsedUrl.port || defaultPort;\n  opts.host = parsedUrl.hostname.startsWith('[')\n    ? parsedUrl.hostname.slice(1, -1)\n    : parsedUrl.hostname;\n  opts.headers = {\n    ...opts.headers,\n    'Sec-WebSocket-Version': opts.protocolVersion,\n    'Sec-WebSocket-Key': key,\n    Connection: 'Upgrade',\n    Upgrade: 'websocket'\n  };\n  opts.path = parsedUrl.pathname + parsedUrl.search;\n  opts.timeout = opts.handshakeTimeout;\n\n  if (opts.perMessageDeflate) {\n    perMessageDeflate = new PerMessageDeflate(\n      opts.perMessageDeflate !== true ? opts.perMessageDeflate : {},\n      false,\n      opts.maxPayload\n    );\n    opts.headers['Sec-WebSocket-Extensions'] = format({\n      [PerMessageDeflate.extensionName]: perMessageDeflate.offer()\n    });\n  }\n  if (protocols.length) {\n    for (const protocol of protocols) {\n      if (\n        typeof protocol !== 'string' ||\n        !subprotocolRegex.test(protocol) ||\n        protocolSet.has(protocol)\n      ) {\n        throw new SyntaxError(\n          'An invalid or duplicated subprotocol was specified'\n        );\n      }\n\n      protocolSet.add(protocol);\n    }\n\n    opts.headers['Sec-WebSocket-Protocol'] = protocols.join(',');\n  }\n  if (opts.origin) {\n    if (opts.protocolVersion < 13) {\n      opts.headers['Sec-WebSocket-Origin'] = opts.origin;\n    } else {\n      opts.headers.Origin = opts.origin;\n    }\n  }\n  if (parsedUrl.username || parsedUrl.password) {\n    opts.auth = `${parsedUrl.username}:${parsedUrl.password}`;\n  }\n\n  if (isIpcUrl) {\n    const parts = opts.path.split(':');\n\n    opts.socketPath = parts[0];\n    opts.path = parts[1];\n  }\n\n  let req;\n\n  if (opts.followRedirects) {\n    if (websocket._redirects === 0) {\n      websocket._originalIpc = isIpcUrl;\n      websocket._originalSecure = isSecure;\n      websocket._originalHostOrSocketPath = isIpcUrl\n        ? opts.socketPath\n        : parsedUrl.host;\n\n      const headers = options && options.headers;\n\n      //\n      // Shallow copy the user provided options so that headers can be changed\n      // without mutating the original object.\n      //\n      options = { ...options, headers: {} };\n\n      if (headers) {\n        for (const [key, value] of Object.entries(headers)) {\n          options.headers[key.toLowerCase()] = value;\n        }\n      }\n    } else if (websocket.listenerCount('redirect') === 0) {\n      const isSameHost = isIpcUrl\n        ? websocket._originalIpc\n          ? opts.socketPath === websocket._originalHostOrSocketPath\n          : false\n        : websocket._originalIpc\n          ? false\n          : parsedUrl.host === websocket._originalHostOrSocketPath;\n\n      if (!isSameHost || (websocket._originalSecure && !isSecure)) {\n        //\n        // Match curl 7.77.0 behavior and drop the following headers. These\n        // headers are also dropped when following a redirect to a subdomain.\n        //\n        delete opts.headers.authorization;\n        delete opts.headers.cookie;\n\n        if (!isSameHost) delete opts.headers.host;\n\n        opts.auth = undefined;\n      }\n    }\n\n    //\n    // Match curl 7.77.0 behavior and make the first `Authorization` header win.\n    // If the `Authorization` header is set, then there is nothing to do as it\n    // will take precedence.\n    //\n    if (opts.auth && !options.headers.authorization) {\n      options.headers.authorization =\n        'Basic ' + Buffer.from(opts.auth).toString('base64');\n    }\n\n    req = websocket._req = request(opts);\n\n    if (websocket._redirects) {\n      //\n      // Unlike what is done for the `'upgrade'` event, no early exit is\n      // triggered here if the user calls `websocket.close()` or\n      // `websocket.terminate()` from a listener of the `'redirect'` event. This\n      // is because the user can also call `request.destroy()` with an error\n      // before calling `websocket.close()` or `websocket.terminate()` and this\n      // would result in an error being emitted on the `request` object with no\n      // `'error'` event listeners attached.\n      //\n      websocket.emit('redirect', websocket.url, req);\n    }\n  } else {\n    req = websocket._req = request(opts);\n  }\n\n  if (opts.timeout) {\n    req.on('timeout', () => {\n      abortHandshake(websocket, req, 'Opening handshake has timed out');\n    });\n  }\n\n  req.on('error', (err) => {\n    if (req === null || req[kAborted]) return;\n\n    req = websocket._req = null;\n    emitErrorAndClose(websocket, err);\n  });\n\n  req.on('response', (res) => {\n    const location = res.headers.location;\n    const statusCode = res.statusCode;\n\n    if (\n      location &&\n      opts.followRedirects &&\n      statusCode >= 300 &&\n      statusCode < 400\n    ) {\n      if (++websocket._redirects > opts.maxRedirects) {\n        abortHandshake(websocket, req, 'Maximum redirects exceeded');\n        return;\n      }\n\n      req.abort();\n\n      let addr;\n\n      try {\n        addr = new URL(location, address);\n      } catch (e) {\n        const err = new SyntaxError(`Invalid URL: ${location}`);\n        emitErrorAndClose(websocket, err);\n        return;\n      }\n\n      initAsClient(websocket, addr, protocols, options);\n    } else if (!websocket.emit('unexpected-response', req, res)) {\n      abortHandshake(\n        websocket,\n        req,\n        `Unexpected server response: ${res.statusCode}`\n      );\n    }\n  });\n\n  req.on('upgrade', (res, socket, head) => {\n    websocket.emit('upgrade', res);\n\n    //\n    // The user may have closed the connection from a listener of the\n    // `'upgrade'` event.\n    //\n    if (websocket.readyState !== WebSocket.CONNECTING) return;\n\n    req = websocket._req = null;\n\n    const upgrade = res.headers.upgrade;\n\n    if (upgrade === undefined || upgrade.toLowerCase() !== 'websocket') {\n      abortHandshake(websocket, socket, 'Invalid Upgrade header');\n      return;\n    }\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    if (res.headers['sec-websocket-accept'] !== digest) {\n      abortHandshake(websocket, socket, 'Invalid Sec-WebSocket-Accept header');\n      return;\n    }\n\n    const serverProt = res.headers['sec-websocket-protocol'];\n    let protError;\n\n    if (serverProt !== undefined) {\n      if (!protocolSet.size) {\n        protError = 'Server sent a subprotocol but none was requested';\n      } else if (!protocolSet.has(serverProt)) {\n        protError = 'Server sent an invalid subprotocol';\n      }\n    } else if (protocolSet.size) {\n      protError = 'Server sent no subprotocol';\n    }\n\n    if (protError) {\n      abortHandshake(websocket, socket, protError);\n      return;\n    }\n\n    if (serverProt) websocket._protocol = serverProt;\n\n    const secWebSocketExtensions = res.headers['sec-websocket-extensions'];\n\n    if (secWebSocketExtensions !== undefined) {\n      if (!perMessageDeflate) {\n        const message =\n          'Server sent a Sec-WebSocket-Extensions header but no extension ' +\n          'was requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      let extensions;\n\n      try {\n        extensions = parse(secWebSocketExtensions);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      const extensionNames = Object.keys(extensions);\n\n      if (\n        extensionNames.length !== 1 ||\n        extensionNames[0] !== PerMessageDeflate.extensionName\n      ) {\n        const message = 'Server indicated an extension that was not requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      try {\n        perMessageDeflate.accept(extensions[PerMessageDeflate.extensionName]);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      websocket._extensions[PerMessageDeflate.extensionName] =\n        perMessageDeflate;\n    }\n\n    websocket.setSocket(socket, head, {\n      allowSynchronousEvents: opts.allowSynchronousEvents,\n      generateMask: opts.generateMask,\n      maxPayload: opts.maxPayload,\n      skipUTF8Validation: opts.skipUTF8Validation\n    });\n  });\n\n  if (opts.finishRequest) {\n    opts.finishRequest(req, websocket);\n  } else {\n    req.end();\n  }\n}\n\n/**\n * Emit the `'error'` and `'close'` events.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {Error} The error to emit\n * @private\n */\nfunction emitErrorAndClose(websocket, err) {\n  websocket._readyState = WebSocket.CLOSING;\n  websocket.emit('error', err);\n  websocket.emitClose();\n}\n\n/**\n * Create a `net.Socket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {net.Socket} The newly created socket used to start the connection\n * @private\n */\nfunction netConnect(options) {\n  options.path = options.socketPath;\n  return net.connect(options);\n}\n\n/**\n * Create a `tls.TLSSocket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {tls.TLSSocket} The newly created socket used to start the connection\n * @private\n */\nfunction tlsConnect(options) {\n  options.path = undefined;\n\n  if (!options.servername && options.servername !== '') {\n    options.servername = net.isIP(options.host) ? '' : options.host;\n  }\n\n  return tls.connect(options);\n}\n\n/**\n * Abort the handshake and emit an error.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {(http.ClientRequest|net.Socket|tls.Socket)} stream The request to\n *     abort or the socket to destroy\n * @param {String} message The error message\n * @private\n */\nfunction abortHandshake(websocket, stream, message) {\n  websocket._readyState = WebSocket.CLOSING;\n\n  const err = new Error(message);\n  Error.captureStackTrace(err, abortHandshake);\n\n  if (stream.setHeader) {\n    stream[kAborted] = true;\n    stream.abort();\n\n    if (stream.socket && !stream.socket.destroyed) {\n      //\n      // On Node.js >= 14.3.0 `request.abort()` does not destroy the socket if\n      // called after the request completed. See\n      // https://github.com/websockets/ws/issues/1869.\n      //\n      stream.socket.destroy();\n    }\n\n    process.nextTick(emitErrorAndClose, websocket, err);\n  } else {\n    stream.destroy(err);\n    stream.once('error', websocket.emit.bind(websocket, 'error'));\n    stream.once('close', websocket.emitClose.bind(websocket));\n  }\n}\n\n/**\n * Handle cases where the `ping()`, `pong()`, or `send()` methods are called\n * when the `readyState` attribute is `CLOSING` or `CLOSED`.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {*} [data] The data to send\n * @param {Function} [cb] Callback\n * @private\n */\nfunction sendAfterClose(websocket, data, cb) {\n  if (data) {\n    const length = toBuffer(data).length;\n\n    //\n    // The `_bufferedAmount` property is used only when the peer is a client and\n    // the opening handshake fails. Under these circumstances, in fact, the\n    // `setSocket()` method is not called, so the `_socket` and `_sender`\n    // properties are set to `null`.\n    //\n    if (websocket._socket) websocket._sender._bufferedBytes += length;\n    else websocket._bufferedAmount += length;\n  }\n\n  if (cb) {\n    const err = new Error(\n      `WebSocket is not open: readyState ${websocket.readyState} ` +\n        `(${readyStates[websocket.readyState]})`\n    );\n    process.nextTick(cb, err);\n  }\n}\n\n/**\n * The listener of the `Receiver` `'conclude'` event.\n *\n * @param {Number} code The status code\n * @param {Buffer} reason The reason for closing\n * @private\n */\nfunction receiverOnConclude(code, reason) {\n  const websocket = this[kWebSocket];\n\n  websocket._closeFrameReceived = true;\n  websocket._closeMessage = reason;\n  websocket._closeCode = code;\n\n  if (websocket._socket[kWebSocket] === undefined) return;\n\n  websocket._socket.removeListener('data', socketOnData);\n  process.nextTick(resume, websocket._socket);\n\n  if (code === 1005) websocket.close();\n  else websocket.close(code, reason);\n}\n\n/**\n * The listener of the `Receiver` `'drain'` event.\n *\n * @private\n */\nfunction receiverOnDrain() {\n  const websocket = this[kWebSocket];\n\n  if (!websocket.isPaused) websocket._socket.resume();\n}\n\n/**\n * The listener of the `Receiver` `'error'` event.\n *\n * @param {(RangeError|Error)} err The emitted error\n * @private\n */\nfunction receiverOnError(err) {\n  const websocket = this[kWebSocket];\n\n  if (websocket._socket[kWebSocket] !== undefined) {\n    websocket._socket.removeListener('data', socketOnData);\n\n    //\n    // On Node.js < 14.0.0 the `'error'` event is emitted synchronously. See\n    // https://github.com/websockets/ws/issues/1940.\n    //\n    process.nextTick(resume, websocket._socket);\n\n    websocket.close(err[kStatusCode]);\n  }\n\n  websocket.emit('error', err);\n}\n\n/**\n * The listener of the `Receiver` `'finish'` event.\n *\n * @private\n */\nfunction receiverOnFinish() {\n  this[kWebSocket].emitClose();\n}\n\n/**\n * The listener of the `Receiver` `'message'` event.\n *\n * @param {Buffer|ArrayBuffer|Buffer[])} data The message\n * @param {Boolean} isBinary Specifies whether the message is binary or not\n * @private\n */\nfunction receiverOnMessage(data, isBinary) {\n  this[kWebSocket].emit('message', data, isBinary);\n}\n\n/**\n * The listener of the `Receiver` `'ping'` event.\n *\n * @param {Buffer} data The data included in the ping frame\n * @private\n */\nfunction receiverOnPing(data) {\n  const websocket = this[kWebSocket];\n\n  if (websocket._autoPong) websocket.pong(data, !this._isServer, NOOP);\n  websocket.emit('ping', data);\n}\n\n/**\n * The listener of the `Receiver` `'pong'` event.\n *\n * @param {Buffer} data The data included in the pong frame\n * @private\n */\nfunction receiverOnPong(data) {\n  this[kWebSocket].emit('pong', data);\n}\n\n/**\n * Resume a readable stream\n *\n * @param {Readable} stream The readable stream\n * @private\n */\nfunction resume(stream) {\n  stream.resume();\n}\n\n/**\n * The listener of the socket `'close'` event.\n *\n * @private\n */\nfunction socketOnClose() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('close', socketOnClose);\n  this.removeListener('data', socketOnData);\n  this.removeListener('end', socketOnEnd);\n\n  websocket._readyState = WebSocket.CLOSING;\n\n  let chunk;\n\n  //\n  // The close frame might not have been received or the `'end'` event emitted,\n  // for example, if the socket was destroyed due to an error. Ensure that the\n  // `receiver` stream is closed after writing any remaining buffered data to\n  // it. If the readable side of the socket is in flowing mode then there is no\n  // buffered data as everything has been already written and `readable.read()`\n  // will return `null`. If instead, the socket is paused, any possible buffered\n  // data will be read as a single chunk.\n  //\n  if (\n    !this._readableState.endEmitted &&\n    !websocket._closeFrameReceived &&\n    !websocket._receiver._writableState.errorEmitted &&\n    (chunk = websocket._socket.read()) !== null\n  ) {\n    websocket._receiver.write(chunk);\n  }\n\n  websocket._receiver.end();\n\n  this[kWebSocket] = undefined;\n\n  clearTimeout(websocket._closeTimer);\n\n  if (\n    websocket._receiver._writableState.finished ||\n    websocket._receiver._writableState.errorEmitted\n  ) {\n    websocket.emitClose();\n  } else {\n    websocket._receiver.on('error', receiverOnFinish);\n    websocket._receiver.on('finish', receiverOnFinish);\n  }\n}\n\n/**\n * The listener of the socket `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction socketOnData(chunk) {\n  if (!this[kWebSocket]._receiver.write(chunk)) {\n    this.pause();\n  }\n}\n\n/**\n * The listener of the socket `'end'` event.\n *\n * @private\n */\nfunction socketOnEnd() {\n  const websocket = this[kWebSocket];\n\n  websocket._readyState = WebSocket.CLOSING;\n  websocket._receiver.end();\n  this.end();\n}\n\n/**\n * The listener of the socket `'error'` event.\n *\n * @private\n */\nfunction socketOnError() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('error', socketOnError);\n  this.on('error', NOOP);\n\n  if (websocket) {\n    websocket._readyState = WebSocket.CLOSING;\n    this.destroy();\n  }\n}\n", "'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Parses the `Sec-WebSocket-Protocol` header into a set of subprotocol names.\n *\n * @param {String} header The field value of the header\n * @return {Set} The subprotocol names\n * @public\n */\nfunction parse(header) {\n  const protocols = new Set();\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (i; i < header.length; i++) {\n    const code = header.charCodeAt(i);\n\n    if (end === -1 && tokenChars[code] === 1) {\n      if (start === -1) start = i;\n    } else if (\n      i !== 0 &&\n      (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n    ) {\n      if (end === -1 && start !== -1) end = i;\n    } else if (code === 0x2c /* ',' */) {\n      if (start === -1) {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n\n      if (end === -1) end = i;\n\n      const protocol = header.slice(start, end);\n\n      if (protocols.has(protocol)) {\n        throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n      }\n\n      protocols.add(protocol);\n      start = end = -1;\n    } else {\n      throw new SyntaxError(`Unexpected character at index ${i}`);\n    }\n  }\n\n  if (start === -1 || end !== -1) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  const protocol = header.slice(start, i);\n\n  if (protocols.has(protocol)) {\n    throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n  }\n\n  protocols.add(protocol);\n  return protocols;\n}\n\nmodule.exports = { parse };\n", "/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Duplex$\", \"caughtErrors\": \"none\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst http = require('http');\nconst { Duplex } = require('stream');\nconst { createHash } = require('crypto');\n\nconst extension = require('./extension');\nconst PerMessageDeflate = require('./permessage-deflate');\nconst subprotocol = require('./subprotocol');\nconst WebSocket = require('./websocket');\nconst { GUID, kWebSocket } = require('./constants');\n\nconst keyRegex = /^[+/0-9A-Za-z]{22}==$/;\n\nconst RUNNING = 0;\nconst CLOSING = 1;\nconst CLOSED = 2;\n\n/**\n * Class representing a WebSocket server.\n *\n * @extends EventEmitter\n */\nclass WebSocketServer extends EventEmitter {\n  /**\n   * Create a `WebSocketServer` instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether\n   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n   *     multiple times in the same tick\n   * @param {Boolean} [options.autoPong=true] Specifies whether or not to\n   *     automatically send a pong in response to a ping\n   * @param {Number} [options.backlog=511] The maximum length of the queue of\n   *     pending connections\n   * @param {Boolean} [options.clientTracking=true] Specifies whether or not to\n   *     track clients\n   * @param {Function} [options.handleProtocols] A hook to handle protocols\n   * @param {String} [options.host] The hostname where to bind the server\n   * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n   *     size\n   * @param {Boolean} [options.noServer=false] Enable no server mode\n   * @param {String} [options.path] Accept only connections matching this path\n   * @param {(Boolean|Object)} [options.perMessageDeflate=false] Enable/disable\n   *     permessage-deflate\n   * @param {Number} [options.port] The port where to bind the server\n   * @param {(http.Server|https.Server)} [options.server] A pre-created HTTP/S\n   *     server to use\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @param {Function} [options.verifyClient] A hook to reject connections\n   * @param {Function} [options.WebSocket=WebSocket] Specifies the `WebSocket`\n   *     class to use. It must be the `WebSocket` class or class that extends it\n   * @param {Function} [callback] A listener for the `listening` event\n   */\n  constructor(options, callback) {\n    super();\n\n    options = {\n      allowSynchronousEvents: true,\n      autoPong: true,\n      maxPayload: 100 * 1024 * 1024,\n      skipUTF8Validation: false,\n      perMessageDeflate: false,\n      handleProtocols: null,\n      clientTracking: true,\n      verifyClient: null,\n      noServer: false,\n      backlog: null, // use default (511 as implemented in net.js)\n      server: null,\n      host: null,\n      path: null,\n      port: null,\n      WebSocket,\n      ...options\n    };\n\n    if (\n      (options.port == null && !options.server && !options.noServer) ||\n      (options.port != null && (options.server || options.noServer)) ||\n      (options.server && options.noServer)\n    ) {\n      throw new TypeError(\n        'One and only one of the \"port\", \"server\", or \"noServer\" options ' +\n          'must be specified'\n      );\n    }\n\n    if (options.port != null) {\n      this._server = http.createServer((req, res) => {\n        const body = http.STATUS_CODES[426];\n\n        res.writeHead(426, {\n          'Content-Length': body.length,\n          'Content-Type': 'text/plain'\n        });\n        res.end(body);\n      });\n      this._server.listen(\n        options.port,\n        options.host,\n        options.backlog,\n        callback\n      );\n    } else if (options.server) {\n      this._server = options.server;\n    }\n\n    if (this._server) {\n      const emitConnection = this.emit.bind(this, 'connection');\n\n      this._removeListeners = addListeners(this._server, {\n        listening: this.emit.bind(this, 'listening'),\n        error: this.emit.bind(this, 'error'),\n        upgrade: (req, socket, head) => {\n          this.handleUpgrade(req, socket, head, emitConnection);\n        }\n      });\n    }\n\n    if (options.perMessageDeflate === true) options.perMessageDeflate = {};\n    if (options.clientTracking) {\n      this.clients = new Set();\n      this._shouldEmitClose = false;\n    }\n\n    this.options = options;\n    this._state = RUNNING;\n  }\n\n  /**\n   * Returns the bound address, the address family name, and port of the server\n   * as reported by the operating system if listening on an IP socket.\n   * If the server is listening on a pipe or UNIX domain socket, the name is\n   * returned as a string.\n   *\n   * @return {(Object|String|null)} The address of the server\n   * @public\n   */\n  address() {\n    if (this.options.noServer) {\n      throw new Error('The server is operating in \"noServer\" mode');\n    }\n\n    if (!this._server) return null;\n    return this._server.address();\n  }\n\n  /**\n   * Stop the server from accepting new connections and emit the `'close'` event\n   * when all existing connections are closed.\n   *\n   * @param {Function} [cb] A one-time listener for the `'close'` event\n   * @public\n   */\n  close(cb) {\n    if (this._state === CLOSED) {\n      if (cb) {\n        this.once('close', () => {\n          cb(new Error('The server is not running'));\n        });\n      }\n\n      process.nextTick(emitClose, this);\n      return;\n    }\n\n    if (cb) this.once('close', cb);\n\n    if (this._state === CLOSING) return;\n    this._state = CLOSING;\n\n    if (this.options.noServer || this.options.server) {\n      if (this._server) {\n        this._removeListeners();\n        this._removeListeners = this._server = null;\n      }\n\n      if (this.clients) {\n        if (!this.clients.size) {\n          process.nextTick(emitClose, this);\n        } else {\n          this._shouldEmitClose = true;\n        }\n      } else {\n        process.nextTick(emitClose, this);\n      }\n    } else {\n      const server = this._server;\n\n      this._removeListeners();\n      this._removeListeners = this._server = null;\n\n      //\n      // The HTTP/S server was created internally. Close it, and rely on its\n      // `'close'` event.\n      //\n      server.close(() => {\n        emitClose(this);\n      });\n    }\n  }\n\n  /**\n   * See if a given request should be handled by this server instance.\n   *\n   * @param {http.IncomingMessage} req Request object to inspect\n   * @return {Boolean} `true` if the request is valid, else `false`\n   * @public\n   */\n  shouldHandle(req) {\n    if (this.options.path) {\n      const index = req.url.indexOf('?');\n      const pathname = index !== -1 ? req.url.slice(0, index) : req.url;\n\n      if (pathname !== this.options.path) return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Handle a HTTP Upgrade request.\n   *\n   * @param {http.IncomingMessage} req The request object\n   * @param {Duplex} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @public\n   */\n  handleUpgrade(req, socket, head, cb) {\n    socket.on('error', socketOnError);\n\n    const key = req.headers['sec-websocket-key'];\n    const upgrade = req.headers.upgrade;\n    const version = +req.headers['sec-websocket-version'];\n\n    if (req.method !== 'GET') {\n      const message = 'Invalid HTTP method';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 405, message);\n      return;\n    }\n\n    if (upgrade === undefined || upgrade.toLowerCase() !== 'websocket') {\n      const message = 'Invalid Upgrade header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (key === undefined || !keyRegex.test(key)) {\n      const message = 'Missing or invalid Sec-WebSocket-Key header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (version !== 8 && version !== 13) {\n      const message = 'Missing or invalid Sec-WebSocket-Version header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (!this.shouldHandle(req)) {\n      abortHandshake(socket, 400);\n      return;\n    }\n\n    const secWebSocketProtocol = req.headers['sec-websocket-protocol'];\n    let protocols = new Set();\n\n    if (secWebSocketProtocol !== undefined) {\n      try {\n        protocols = subprotocol.parse(secWebSocketProtocol);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Protocol header';\n        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n        return;\n      }\n    }\n\n    const secWebSocketExtensions = req.headers['sec-websocket-extensions'];\n    const extensions = {};\n\n    if (\n      this.options.perMessageDeflate &&\n      secWebSocketExtensions !== undefined\n    ) {\n      const perMessageDeflate = new PerMessageDeflate(\n        this.options.perMessageDeflate,\n        true,\n        this.options.maxPayload\n      );\n\n      try {\n        const offers = extension.parse(secWebSocketExtensions);\n\n        if (offers[PerMessageDeflate.extensionName]) {\n          perMessageDeflate.accept(offers[PerMessageDeflate.extensionName]);\n          extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n        }\n      } catch (err) {\n        const message =\n          'Invalid or unacceptable Sec-WebSocket-Extensions header';\n        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n        return;\n      }\n    }\n\n    //\n    // Optionally call external client verification handler.\n    //\n    if (this.options.verifyClient) {\n      const info = {\n        origin:\n          req.headers[`${version === 8 ? 'sec-websocket-origin' : 'origin'}`],\n        secure: !!(req.socket.authorized || req.socket.encrypted),\n        req\n      };\n\n      if (this.options.verifyClient.length === 2) {\n        this.options.verifyClient(info, (verified, code, message, headers) => {\n          if (!verified) {\n            return abortHandshake(socket, code || 401, message, headers);\n          }\n\n          this.completeUpgrade(\n            extensions,\n            key,\n            protocols,\n            req,\n            socket,\n            head,\n            cb\n          );\n        });\n        return;\n      }\n\n      if (!this.options.verifyClient(info)) return abortHandshake(socket, 401);\n    }\n\n    this.completeUpgrade(extensions, key, protocols, req, socket, head, cb);\n  }\n\n  /**\n   * Upgrade the connection to WebSocket.\n   *\n   * @param {Object} extensions The accepted extensions\n   * @param {String} key The value of the `Sec-WebSocket-Key` header\n   * @param {Set} protocols The subprotocols\n   * @param {http.IncomingMessage} req The request object\n   * @param {Duplex} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @throws {Error} If called more than once with the same socket\n   * @private\n   */\n  completeUpgrade(extensions, key, protocols, req, socket, head, cb) {\n    //\n    // Destroy the socket if the client has already sent a FIN packet.\n    //\n    if (!socket.readable || !socket.writable) return socket.destroy();\n\n    if (socket[kWebSocket]) {\n      throw new Error(\n        'server.handleUpgrade() was called more than once with the same ' +\n          'socket, possibly due to a misconfiguration'\n      );\n    }\n\n    if (this._state > RUNNING) return abortHandshake(socket, 503);\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    const headers = [\n      'HTTP/1.1 101 Switching Protocols',\n      'Upgrade: websocket',\n      'Connection: Upgrade',\n      `Sec-WebSocket-Accept: ${digest}`\n    ];\n\n    const ws = new this.options.WebSocket(null, undefined, this.options);\n\n    if (protocols.size) {\n      //\n      // Optionally call external protocol selection handler.\n      //\n      const protocol = this.options.handleProtocols\n        ? this.options.handleProtocols(protocols, req)\n        : protocols.values().next().value;\n\n      if (protocol) {\n        headers.push(`Sec-WebSocket-Protocol: ${protocol}`);\n        ws._protocol = protocol;\n      }\n    }\n\n    if (extensions[PerMessageDeflate.extensionName]) {\n      const params = extensions[PerMessageDeflate.extensionName].params;\n      const value = extension.format({\n        [PerMessageDeflate.extensionName]: [params]\n      });\n      headers.push(`Sec-WebSocket-Extensions: ${value}`);\n      ws._extensions = extensions;\n    }\n\n    //\n    // Allow external modification/inspection of handshake headers.\n    //\n    this.emit('headers', headers, req);\n\n    socket.write(headers.concat('\\r\\n').join('\\r\\n'));\n    socket.removeListener('error', socketOnError);\n\n    ws.setSocket(socket, head, {\n      allowSynchronousEvents: this.options.allowSynchronousEvents,\n      maxPayload: this.options.maxPayload,\n      skipUTF8Validation: this.options.skipUTF8Validation\n    });\n\n    if (this.clients) {\n      this.clients.add(ws);\n      ws.on('close', () => {\n        this.clients.delete(ws);\n\n        if (this._shouldEmitClose && !this.clients.size) {\n          process.nextTick(emitClose, this);\n        }\n      });\n    }\n\n    cb(ws, req);\n  }\n}\n\nmodule.exports = WebSocketServer;\n\n/**\n * Add event listeners on an `EventEmitter` using a map of <event, listener>\n * pairs.\n *\n * @param {EventEmitter} server The event emitter\n * @param {Object.<String, Function>} map The listeners to add\n * @return {Function} A function that will remove the added listeners when\n *     called\n * @private\n */\nfunction addListeners(server, map) {\n  for (const event of Object.keys(map)) server.on(event, map[event]);\n\n  return function removeListeners() {\n    for (const event of Object.keys(map)) {\n      server.removeListener(event, map[event]);\n    }\n  };\n}\n\n/**\n * Emit a `'close'` event on an `EventEmitter`.\n *\n * @param {EventEmitter} server The event emitter\n * @private\n */\nfunction emitClose(server) {\n  server._state = CLOSED;\n  server.emit('close');\n}\n\n/**\n * Handle socket errors.\n *\n * @private\n */\nfunction socketOnError() {\n  this.destroy();\n}\n\n/**\n * Close the connection when preconditions are not fulfilled.\n *\n * @param {Duplex} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} [message] The HTTP response body\n * @param {Object} [headers] Additional HTTP response headers\n * @private\n */\nfunction abortHandshake(socket, code, message, headers) {\n  //\n  // The socket is writable unless the user destroyed or ended it before calling\n  // `server.handleUpgrade()` or in the `verifyClient` function, which is a user\n  // error. Handling this does not make much sense as the worst that can happen\n  // is that some of the data written by the user might be discarded due to the\n  // call to `socket.end()` below, which triggers an `'error'` event that in\n  // turn causes the socket to be destroyed.\n  //\n  message = message || http.STATUS_CODES[code];\n  headers = {\n    Connection: 'close',\n    'Content-Type': 'text/html',\n    'Content-Length': Buffer.byteLength(message),\n    ...headers\n  };\n\n  socket.once('finish', socket.destroy);\n\n  socket.end(\n    `HTTP/1.1 ${code} ${http.STATUS_CODES[code]}\\r\\n` +\n      Object.keys(headers)\n        .map((h) => `${h}: ${headers[h]}`)\n        .join('\\r\\n') +\n      '\\r\\n\\r\\n' +\n      message\n  );\n}\n\n/**\n * Emit a `'wsClientError'` event on a `WebSocketServer` if there is at least\n * one listener for it, otherwise call `abortHandshake()`.\n *\n * @param {WebSocketServer} server The WebSocket server\n * @param {http.IncomingMessage} req The request object\n * @param {Duplex} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} message The HTTP response body\n * @private\n */\nfunction abortHandshakeOrEmitwsClientError(server, req, socket, code, message) {\n  if (server.listenerCount('wsClientError')) {\n    const err = new Error(message);\n    Error.captureStackTrace(err, abortHandshakeOrEmitwsClientError);\n\n    server.emit('wsClientError', err, socket, req);\n  } else {\n    abortHandshake(socket, code, message);\n  }\n}\n", "import { KMSClient, SignCommand, GetPublicKeyCommand } from '@aws-sdk/client-kms';\nimport { SecretsManagerClient, GetSecretValueCommand } from '@aws-sdk/client-secrets-manager';\nimport { CloudWatchClient, PutMetricDataCommand } from '@aws-sdk/client-cloudwatch';\nimport { ethers } from 'ethers';\nimport crypto from 'crypto';\nimport type { APIGatewayProxyHandler } from 'aws-lambda';\n\nconst kms = new KMSClient({ region: process.env.AWS_REGION || 'us-east-1' });\nconst secretsManager = new SecretsManagerClient({ region: process.env.AWS_REGION || 'us-east-1' });\nconst cloudWatch = new CloudWatchClient({ region: process.env.AWS_REGION || 'us-east-1' });\n\nconst corsHeaders = {\n  'Content-Type': 'application/json',\n  'Access-Control-Allow-Origin': '*',\n  'Access-Control-Allow-Methods': 'GET, POST, OPTIONS',\n  'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n};\n\n// Contract ABI for ResumeVerifier\nconst CONTRACT_ABI = [\n  \"event ResumeVerified(bytes32 indexed hash, address indexed sender, uint256 timestamp)\",\n  \"event BatchVerified(bytes32[] hashes, address indexed sender, uint256 timestamp)\",\n  \"function verifyResume(bytes32 resumeHash) external\",\n  \"function checkVerification(bytes32 resumeHash) external view returns (bool verified, uint256 timestamp, address verifier)\",\n  \"function batchVerify(bytes32[] calldata hashes) external\",\n  \"function verifiedResumes(bytes32) external view returns (uint256)\",\n  \"function verifiers(bytes32) external view returns (address)\",\n  \"function totalVerifications() external view returns (uint256)\",\n  \"function getMultipleVerifications(bytes32[] calldata hashes) external view returns (uint256[] memory timestamps, address[] memory verifierAddresses)\"\n];\n\ninterface BlockchainConfig {\n  contractAddress: string;\n  rpcUrl: string;\n  chainId: number;\n  explorerUrl: string;\n}\n\ninterface KMSWalletInfo {\n  address: string;\n  kmsKeyId: string;\n}\n\n// Cache for configuration and wallet info\nlet configCache: BlockchainConfig | null = null;\nlet walletCache: KMSWalletInfo | null = null;\n\nclass AWSBlockchainService {\n  \n  // Get blockchain configuration from Secrets Manager\n  private async getBlockchainConfig(): Promise<BlockchainConfig> {\n    if (configCache) {\n      return configCache;\n    }\n\n    try {\n      const secretName = process.env.BLOCKCHAIN_CONFIG_SECRET || 'job-lander/blockchain-config';\n      const response = await secretsManager.send(new GetSecretValueCommand({\n        SecretId: secretName\n      }));\n\n      if (!response.SecretString) {\n        throw new Error('Blockchain configuration not found in Secrets Manager');\n      }\n\n      const config = JSON.parse(response.SecretString);\n      \n      configCache = {\n        contractAddress: config.CONTRACT_ADDRESS,\n        rpcUrl: config.RPC_URL || 'https://polygon-mumbai.g.alchemy.com/v2/demo',\n        chainId: config.CHAIN_ID || 80001,\n        explorerUrl: config.EXPLORER_URL || 'https://mumbai.polygonscan.com'\n      };\n\n      return configCache;\n    } catch (error) {\n      console.error('Failed to get blockchain config:', error);\n      // Fallback configuration\n      configCache = {\n        contractAddress: process.env.CONTRACT_ADDRESS || '',\n        rpcUrl: 'https://polygon-mumbai.g.alchemy.com/v2/demo',\n        chainId: 80001,\n        explorerUrl: 'https://mumbai.polygonscan.com'\n      };\n      return configCache;\n    }\n  }\n\n  // Get KMS wallet information\n  private async getKMSWallet(): Promise<KMSWalletInfo> {\n    if (walletCache) {\n      return walletCache;\n    }\n\n    try {\n      const kmsKeyId = process.env.KMS_KEY_ID || 'alias/job-lander-blockchain-key';\n      \n      // Get public key from KMS to derive Ethereum address\n      const publicKeyResponse = await kms.send(new GetPublicKeyCommand({\n        KeyId: kmsKeyId\n      }));\n\n      if (!publicKeyResponse.PublicKey) {\n        throw new Error('Unable to retrieve public key from KMS');\n      }\n\n      // Extract public key and derive Ethereum address\n      const publicKeyBuffer = Buffer.from(publicKeyResponse.PublicKey);\n      const address = this.deriveEthereumAddress(publicKeyBuffer);\n\n      walletCache = {\n        address,\n        kmsKeyId\n      };\n\n      return walletCache;\n    } catch (error) {\n      console.error('Failed to get KMS wallet:', error);\n      throw new Error('KMS wallet not configured');\n    }\n  }\n\n  // Derive Ethereum address from public key\n  private deriveEthereumAddress(publicKey: Buffer): string {\n    try {\n      // For secp256k1 keys, the public key is 65 bytes (04 + 32 + 32)\n      // Skip the first byte (0x04) and take the next 64 bytes\n      const publicKeyBytes = publicKey.slice(1, 65);\n      \n      // Create Keccak hash of the public key\n      const hash = crypto.createHash('sha3-256').update(publicKeyBytes).digest();\n      \n      // Take the last 20 bytes and prepend 0x\n      const address = '0x' + hash.slice(-20).toString('hex');\n      \n      return ethers.getAddress(address); // Checksum format\n    } catch (error) {\n      console.error('Error deriving Ethereum address:', error);\n      throw new Error('Failed to derive Ethereum address');\n    }\n  }\n\n  // Sign transaction using KMS\n  private async signTransactionWithKMS(transaction: ethers.TransactionRequest, kmsKeyId: string): Promise<string> {\n    try {\n      // Serialize transaction for signing\n      const serializedTx = ethers.Transaction.from(transaction).unsignedSerialized;\n      const txHash = crypto.createHash('sha256').update(Buffer.from(serializedTx.slice(2), 'hex')).digest();\n\n      // Sign with KMS\n      const signResponse = await kms.send(new SignCommand({\n        KeyId: kmsKeyId,\n        Message: txHash,\n        MessageType: 'DIGEST',\n        SigningAlgorithm: 'ECDSA_SHA_256'\n      }));\n\n      if (!signResponse.Signature) {\n        throw new Error('KMS signing failed');\n      }\n\n      // Convert KMS signature to Ethereum signature format\n      const signature = this.convertKMSSignatureToEthereum(signResponse.Signature);\n      \n      // Create signed transaction\n      const signedTx = ethers.Transaction.from({\n        ...transaction,\n        signature\n      });\n\n      return signedTx.serialized;\n    } catch (error) {\n      console.error('KMS signing error:', error);\n      throw new Error('Failed to sign transaction with KMS');\n    }\n  }\n\n  // Convert KMS signature format to Ethereum signature format\n  private convertKMSSignatureToEthereum(kmsSignature: Uint8Array): ethers.Signature {\n    try {\n      // KMS returns ASN.1 DER format, need to extract r and s\n      const signature = Buffer.from(kmsSignature);\n      \n      // Parse ASN.1 DER format (simplified)\n      // This is a basic implementation - production should use proper ASN.1 parsing\n      let offset = 3; // Skip sequence header\n      const rLength = signature[offset];\n      offset += 1;\n      const r = signature.slice(offset, offset + rLength);\n      offset += rLength + 1; // Skip to s length\n      const sLength = signature[offset];\n      offset += 1;\n      const s = signature.slice(offset, offset + sLength);\n\n      // Convert to hex strings\n      const rHex = '0x' + r.toString('hex');\n      const sHex = '0x' + s.toString('hex');\n\n      // Recovery ID (v) needs to be calculated based on the transaction\n      // For simplicity, we'll use a default value and let ethers handle recovery\n      const v = 27; // This should be calculated properly in production\n\n      return ethers.Signature.from({\n        r: rHex,\n        s: sHex,\n        v: v\n      });\n    } catch (error) {\n      console.error('Signature conversion error:', error);\n      throw new Error('Failed to convert KMS signature');\n    }\n  }\n\n  // Generate SHA-256 hash of resume data\n  generateResumeHash(resumeData: any): string {\n    let dataString: string;\n    \n    if (Buffer.isBuffer(resumeData)) {\n      return \"0x\" + crypto.createHash('sha256').update(resumeData).digest('hex');\n    } else if (typeof resumeData === 'string') {\n      dataString = resumeData;\n    } else {\n      dataString = JSON.stringify(resumeData);\n    }\n    \n    return \"0x\" + crypto.createHash('sha256').update(dataString).digest('hex');\n  }\n\n  // Record metrics to CloudWatch\n  private async recordMetric(metricName: string, value: number, unit: string = 'Count'): Promise<void> {\n    try {\n      await cloudWatch.send(new PutMetricDataCommand({\n        Namespace: 'JobLander/Blockchain',\n        MetricData: [\n          {\n            MetricName: metricName,\n            Value: value,\n            Unit: unit,\n            Timestamp: new Date()\n          }\n        ]\n      }));\n    } catch (error) {\n      console.error('Failed to record metric:', error);\n    }\n  }\n\n  // Verify resume on blockchain using KMS\n  async verifyOnChain(resumeHash: string, metadata: any = {}): Promise<any> {\n    const startTime = Date.now();\n    \n    try {\n      const config = await this.getBlockchainConfig();\n      const wallet = await this.getKMSWallet();\n      \n      if (!config.contractAddress || config.contractAddress === '0x0000000000000000000000000000000000000000') {\n        throw new Error('Contract address not configured');\n      }\n\n      // Create provider\n      const provider = new ethers.JsonRpcProvider(config.rpcUrl);\n      \n      // Check wallet balance\n      const balance = await provider.getBalance(wallet.address);\n      const balanceInMatic = ethers.formatEther(balance);\n      \n      if (parseFloat(balanceInMatic) < 0.001) {\n        throw new Error(`Insufficient balance: ${balanceInMatic} MATIC`);\n      }\n\n      // Create contract instance\n      const contract = new ethers.Contract(config.contractAddress, CONTRACT_ABI, provider);\n      \n      // Ensure hash is in correct format\n      const formattedHash = resumeHash.startsWith('0x') ? resumeHash : `0x${resumeHash}`;\n      if (formattedHash.length !== 66) {\n        throw new Error(\"Invalid hash format - must be 32 bytes\");\n      }\n\n      // Check if already verified\n      const [verified, timestamp] = await contract.checkVerification(formattedHash);\n      if (verified) {\n        await this.recordMetric('AlreadyVerified', 1);\n        return {\n          success: true,\n          alreadyVerified: true,\n          transactionHash: null,\n          timestamp: Number(timestamp) * 1000,\n          explorerUrl: `${config.explorerUrl}/address/${config.contractAddress}`,\n          network: \"Polygon Mumbai (AWS-KMS)\"\n        };\n      }\n\n      // Prepare transaction\n      const feeData = await provider.getFeeData();\n      const transaction: ethers.TransactionRequest = {\n        to: config.contractAddress,\n        data: contract.interface.encodeFunctionData('verifyResume', [formattedHash]),\n        gasLimit: 120000, // Buffer for gas estimation\n        gasPrice: feeData.gasPrice || ethers.parseUnits(\"30\", \"gwei\"),\n        chainId: config.chainId,\n        nonce: await provider.getTransactionCount(wallet.address),\n        type: 2, // EIP-1559 transaction\n        maxFeePerGas: feeData.maxFeePerGas,\n        maxPriorityFeePerGas: feeData.maxPriorityFeePerGas\n      };\n\n      // Sign transaction with KMS\n      const signedTx = await this.signTransactionWithKMS(transaction, wallet.kmsKeyId);\n      \n      // Send transaction\n      const txResponse = await provider.broadcastTransaction(signedTx);\n      console.log(`\uD83D\uDCDD Transaction sent: ${txResponse.hash}`);\n\n      // Wait for confirmation\n      const receipt = await txResponse.wait(1);\n      \n      if (!receipt || receipt.status !== 1) {\n        throw new Error(\"Transaction failed\");\n      }\n\n      const duration = Date.now() - startTime;\n      await this.recordMetric('VerificationSuccess', 1);\n      await this.recordMetric('VerificationDuration', duration, 'Milliseconds');\n      await this.recordMetric('GasUsed', Number(receipt.gasUsed), 'Count');\n\n      return {\n        success: true,\n        transactionHash: receipt.hash,\n        blockNumber: receipt.blockNumber,\n        timestamp: Date.now(),\n        gasUsed: ethers.formatEther(receipt.gasUsed * (receipt.gasPrice || feeData.gasPrice || 0n)),\n        gasPrice: ethers.formatUnits(receipt.gasPrice || feeData.gasPrice || 0n, \"gwei\"),\n        explorerUrl: `${config.explorerUrl}/tx/${receipt.hash}`,\n        network: \"Polygon Mumbai (AWS-KMS)\"\n      };\n\n    } catch (error: any) {\n      console.error(\"\u274C AWS Blockchain verification error:\", error);\n      \n      const duration = Date.now() - startTime;\n      await this.recordMetric('VerificationError', 1);\n      await this.recordMetric('VerificationDuration', duration, 'Milliseconds');\n      \n      return {\n        success: false,\n        error: error.message || \"Blockchain verification failed\",\n        network: \"Polygon Mumbai (AWS-KMS)\"\n      };\n    }\n  }\n\n  // Check if resume is verified on blockchain\n  async checkVerification(resumeHash: string): Promise<any> {\n    try {\n      const config = await this.getBlockchainConfig();\n      \n      if (!config.contractAddress || config.contractAddress === '0x0000000000000000000000000000000000000000') {\n        return {\n          verified: false,\n          error: 'Contract not configured',\n          network: \"Polygon Mumbai (AWS-KMS)\"\n        };\n      }\n\n      const provider = new ethers.JsonRpcProvider(config.rpcUrl);\n      const contract = new ethers.Contract(config.contractAddress, CONTRACT_ABI, provider);\n      \n      const formattedHash = resumeHash.startsWith('0x') ? resumeHash : `0x${resumeHash}`;\n      if (formattedHash.length !== 66) {\n        throw new Error(\"Invalid hash format\");\n      }\n\n      const [verified, timestamp, verifier] = await contract.checkVerification(formattedHash);\n\n      if (verified) {\n        await this.recordMetric('VerificationCheck', 1);\n        const block = await provider.getBlock('latest');\n        \n        return {\n          verified: true,\n          timestamp: Number(timestamp) * 1000,\n          verifier: verifier,\n          blockNumber: block?.number,\n          explorerUrl: `${config.explorerUrl}/address/${config.contractAddress}`,\n          network: \"Polygon Mumbai (AWS-KMS)\"\n        };\n      }\n\n      return {\n        verified: false,\n        network: \"Polygon Mumbai (AWS-KMS)\"\n      };\n\n    } catch (error: any) {\n      console.error(\"\u274C Verification check error:\", error);\n      await this.recordMetric('VerificationCheckError', 1);\n      \n      return {\n        verified: false,\n        error: error.message || \"Failed to check verification\",\n        network: \"Polygon Mumbai (AWS-KMS)\"\n      };\n    }\n  }\n\n  // Get wallet info for monitoring\n  async getWalletInfo(): Promise<any> {\n    try {\n      const config = await this.getBlockchainConfig();\n      const wallet = await this.getKMSWallet();\n      const provider = new ethers.JsonRpcProvider(config.rpcUrl);\n      \n      const balance = await provider.getBalance(wallet.address);\n      const balanceInMatic = ethers.formatEther(balance);\n      const transactionCount = await provider.getTransactionCount(wallet.address);\n\n      return {\n        address: wallet.address,\n        balance: balanceInMatic,\n        transactionCount,\n        network: \"Polygon Mumbai\",\n        kmsKeyId: wallet.kmsKeyId.replace(/arn:.*\\//, ''), // Remove ARN prefix for display\n      };\n    } catch (error: any) {\n      console.error(\"\u274C Wallet info error:\", error);\n      return {\n        error: error.message || \"Failed to get wallet info\"\n      };\n    }\n  }\n}\n\n// Route handlers\nconst blockchainService = new AWSBlockchainService();\n\nconst verifyResumeHandler = async (event: any) => {\n  const { resumeHash, metadata } = JSON.parse(event.body || '{}');\n  \n  if (!resumeHash) {\n    return {\n      statusCode: 400,\n      headers: corsHeaders,\n      body: JSON.stringify({\n        success: false,\n        error: 'Resume hash is required'\n      })\n    };\n  }\n\n  const result = await blockchainService.verifyOnChain(resumeHash, metadata);\n  \n  return {\n    statusCode: 200,\n    headers: corsHeaders,\n    body: JSON.stringify({\n      success: result.success,\n      data: result\n    })\n  };\n};\n\nconst checkVerificationHandler = async (event: any) => {\n  const resumeHash = event.queryStringParameters?.hash;\n  \n  if (!resumeHash) {\n    return {\n      statusCode: 400,\n      headers: corsHeaders,\n      body: JSON.stringify({\n        success: false,\n        error: 'Resume hash is required'\n      })\n    };\n  }\n\n  const result = await blockchainService.checkVerification(resumeHash);\n  \n  return {\n    statusCode: 200,\n    headers: corsHeaders,\n    body: JSON.stringify({\n      success: true,\n      data: result\n    })\n  };\n};\n\nconst generateHashHandler = async (event: any) => {\n  const { resumeData } = JSON.parse(event.body || '{}');\n  \n  if (!resumeData) {\n    return {\n      statusCode: 400,\n      headers: corsHeaders,\n      body: JSON.stringify({\n        success: false,\n        error: 'Resume data is required'\n      })\n    };\n  }\n\n  const hash = blockchainService.generateResumeHash(resumeData);\n  \n  return {\n    statusCode: 200,\n    headers: corsHeaders,\n    body: JSON.stringify({\n      success: true,\n      data: { hash }\n    })\n  };\n};\n\nconst walletInfoHandler = async () => {\n  const result = await blockchainService.getWalletInfo();\n  \n  return {\n    statusCode: 200,\n    headers: corsHeaders,\n    body: JSON.stringify({\n      success: true,\n      data: result\n    })\n  };\n};\n\nconst healthHandler = async () => {\n  return {\n    statusCode: 200,\n    headers: corsHeaders,\n    body: JSON.stringify({\n      success: true,\n      status: 'healthy',\n      timestamp: new Date().toISOString(),\n      services: {\n        kms: 'available',\n        secretsManager: 'available',\n        cloudwatch: 'available',\n        blockchain: 'aws-kms-enabled'\n      }\n    })\n  };\n};\n\n// Main Lambda handler\nexport const handler: APIGatewayProxyHandler = async (event) => {\n  // Handle CORS preflight requests\n  if (event.httpMethod === 'OPTIONS') {\n    return {\n      statusCode: 200,\n      headers: corsHeaders,\n      body: ''\n    };\n  }\n\n  const path = event.path;\n  const method = event.httpMethod;\n\n  try {\n    switch (path) {\n      case '/verify-resume':\n        if (method === 'POST') return await verifyResumeHandler(event);\n        break;\n      case '/check-verification':\n        if (method === 'GET') return await checkVerificationHandler(event);\n        break;\n      case '/generate-hash':\n        if (method === 'POST') return await generateHashHandler(event);\n        break;\n      case '/wallet-info':\n        if (method === 'GET') return await walletInfoHandler();\n        break;\n      case '/health':\n        return await healthHandler();\n      default:\n        return {\n          statusCode: 404,\n          headers: corsHeaders,\n          body: JSON.stringify({\n            success: false,\n            error: 'Endpoint not found'\n          })\n        };\n    }\n  } catch (error: any) {\n    console.error('Lambda handler error:', error);\n    return {\n      statusCode: 500,\n      headers: corsHeaders,\n      body: JSON.stringify({\n        success: false,\n        error: 'Internal server error',\n        message: error.message\n      })\n    };\n  }\n\n  return {\n    statusCode: 405,\n    headers: corsHeaders,\n    body: JSON.stringify({\n      success: false,\n      error: 'Method not allowed'\n    })\n  };\n};", "/**\n *  The Application Programming Interface (API) is the collection of\n *  functions, classes and types offered by the Ethers library.\n *\n *  @_section: api:Application Programming Interface  [about-api]\n *  @_navTitle: API\n */\nimport * as ethers from \"./ethers.js\";\n\nexport { ethers };\n\nexport * from \"./ethers.js\";\n", "\n\n/////////////////////////////\n//\n\nexport { version } from \"./_version.js\";\n\nexport {\n    decodeBytes32String, encodeBytes32String,\n\n    AbiCoder,\n    ConstructorFragment, ErrorFragment, EventFragment, Fragment, FallbackFragment, FunctionFragment, NamedFragment, ParamType, StructFragment,\n\n    checkResultErrors, ErrorDescription, Indexed, Interface, LogDescription, Result, TransactionDescription,\n    Typed,\n} from \"./abi/index.js\";\n\nexport {\n    getAddress, getIcapAddress,\n    getCreateAddress, getCreate2Address,\n    isAddressable, isAddress, resolveAddress\n} from \"./address/index.js\";\n\nexport {\n    ZeroAddress,\n    WeiPerEther, MaxUint256, MinInt256, MaxInt256, N,\n    ZeroHash,\n    EtherSymbol, MessagePrefix\n} from \"./constants/index.js\";\n\nexport {\n    BaseContract, Contract,\n    ContractFactory,\n    ContractEventPayload, ContractTransactionReceipt, ContractTransactionResponse, ContractUnknownEventPayload, EventLog, UndecodedEventLog\n} from \"./contract/index.js\";\n\nexport {\n    computeHmac,\n    randomBytes,\n    keccak256,\n    ripemd160,\n    sha256, sha512,\n    pbkdf2,\n    scrypt, scryptSync,\n    lock,\n    Signature, SigningKey\n} from \"./crypto/index.js\";\n\nexport {\n    id,\n    ensNormalize, isValidName, namehash, dnsEncode,\n    hashAuthorization, verifyAuthorization,\n    hashMessage, verifyMessage,\n    solidityPacked, solidityPackedKeccak256, solidityPackedSha256,\n    TypedDataEncoder,\n    verifyTypedData\n} from \"./hash/index.js\";\n\nexport {\n    getDefaultProvider,\n\n    Block, FeeData, Log, TransactionReceipt, TransactionResponse,\n\n    AbstractSigner, NonceManager, VoidSigner,\n\n    AbstractProvider,\n\n    FallbackProvider,\n    JsonRpcApiProvider, JsonRpcProvider, JsonRpcSigner,\n\n    BrowserProvider,\n\n    AlchemyProvider, AnkrProvider, BlockscoutProvider, ChainstackProvider,\n    CloudflareProvider, EtherscanProvider, InfuraProvider,\n    InfuraWebSocketProvider, PocketProvider, QuickNodeProvider,\n\n    IpcSocketProvider, SocketProvider, WebSocketProvider,\n\n    EnsResolver,\n    Network,\n\n    EnsPlugin, EtherscanPlugin,\n    FeeDataNetworkPlugin, FetchUrlFeeDataNetworkPlugin,\n    GasCostPlugin, NetworkPlugin, MulticoinProviderPlugin,\n\n    SocketBlockSubscriber, SocketEventSubscriber, SocketPendingSubscriber,\n    SocketSubscriber, UnmanagedSubscriber,\n\n    copyRequest, showThrottleMessage\n} from \"./providers/index.js\";\n\nexport {\n    accessListify, authorizationify,\n    computeAddress, recoverAddress,\n    Transaction\n} from \"./transaction/index.js\";\n\nexport {\n    decodeBase58, encodeBase58,\n    decodeBase64, encodeBase64,\n    concat, dataLength, dataSlice, getBytes, getBytesCopy, hexlify,\n    isHexString, isBytesLike, stripZerosLeft, zeroPadBytes, zeroPadValue,\n    defineProperties, resolveProperties,\n    assert, assertArgument, assertArgumentCount, assertNormalize, assertPrivate,\n    makeError,\n    isCallException, isError,\n    EventPayload,\n    FetchRequest, FetchResponse, FetchCancelSignal,\n    FixedNumber,\n    getBigInt, getNumber, getUint, toBeArray, toBigInt, toBeHex, toNumber, toQuantity,\n    fromTwos, toTwos, mask,\n    formatEther, parseEther, formatUnits, parseUnits,\n    toUtf8Bytes, toUtf8CodePoints, toUtf8String,\n    Utf8ErrorFuncs,\n    decodeRlp, encodeRlp,\n    uuidV4,\n} from \"./utils/index.js\";\n\nexport {\n    Mnemonic,\n    BaseWallet, HDNodeWallet, HDNodeVoidWallet,\n    Wallet,\n\n    defaultPath,\n\n    getAccountPath, getIndexedAccountPath,\n    isCrowdsaleJson, isKeystoreJson,\n\n    decryptCrowdsaleJson, decryptKeystoreJsonSync, decryptKeystoreJson,\n    encryptKeystoreJson, encryptKeystoreJsonSync,\n} from \"./wallet/index.js\";\n\nexport {\n    Wordlist, LangEn, WordlistOwl, WordlistOwlA, wordlists\n} from \"./wordlists/index.js\";\n\n\n\n/////////////////////////////\n// Types\n\nexport type {\n    JsonFragment, JsonFragmentType,\n    FormatType, FragmentType,\n    InterfaceAbi,\n    ParamTypeWalkFunc, ParamTypeWalkAsyncFunc\n} from \"./abi/index.js\";\n\nexport type {\n    Addressable, AddressLike, NameResolver\n} from \"./address/index.js\";\n\nexport type {\n    ConstantContractMethod, ContractEvent, ContractEventArgs, ContractEventName,\n    ContractInterface, ContractMethod, ContractMethodArgs, ContractTransaction,\n    DeferredTopicFilter, Overrides,\n    BaseContractMethod, ContractDeployTransaction, PostfixOverrides,\n    WrappedFallback\n} from \"./contract/index.js\";\n\nexport type { ProgressCallback, SignatureLike } from \"./crypto/index.js\";\n\nexport type {\n    AuthorizationRequest, TypedDataDomain, TypedDataField\n} from \"./hash/index.js\";\n\nexport type {\n    Provider, Signer,\n\n    CommunityResourcable,\n\n    AbstractProviderOptions, BrowserProviderOptions, FallbackProviderOptions,\n\n    AbstractProviderPlugin, BlockParams, BlockTag, BrowserDiscoverOptions,\n    ContractRunner, DebugEventBrowserProvider, Eip1193Provider,\n    Eip6963ProviderInfo, EventFilter, Filter, FilterByBlockHash,\n    GasCostParameters, JsonRpcApiProviderOptions, JsonRpcError,\n    JsonRpcPayload, JsonRpcResult, JsonRpcTransactionRequest, LogParams,\n    MinedBlock, MinedTransactionResponse, Networkish, OrphanFilter,\n    PerformActionFilter, PerformActionRequest, PerformActionTransaction,\n    PreparedTransactionRequest, ProviderEvent, Subscriber, Subscription,\n    TopicFilter, TransactionReceiptParams, TransactionRequest,\n    TransactionResponseParams, WebSocketCreator, WebSocketLike\n} from \"./providers/index.js\";\n\nexport type {\n    AccessList, AccessListish, AccessListEntry,\n    Authorization, AuthorizationLike,\n    Blob, BlobLike, KzgLibrary, KzgLibraryLike,\n    TransactionLike\n} from \"./transaction/index.js\";\n\nexport type {\n    BytesLike,\n    BigNumberish, Numeric,\n    ErrorCode,\n    FixedFormat,\n    Utf8ErrorFunc, UnicodeNormalizationForm, Utf8ErrorReason,\n    RlpStructuredData, RlpStructuredDataish,\n\n    GetUrlResponse,\n    FetchPreflightFunc, FetchProcessFunc, FetchRetryFunc,\n    FetchGatewayFunc, FetchGetUrlFunc,\n\n    EthersError, UnknownError, NotImplementedError, UnsupportedOperationError, NetworkError,\n    ServerError, TimeoutError, BadDataError, CancelledError, BufferOverrunError,\n    NumericFaultError, InvalidArgumentError, MissingArgumentError, UnexpectedArgumentError,\n    CallExceptionError, InsufficientFundsError, NonceExpiredError, OffchainFaultError,\n    ReplacementUnderpricedError, TransactionReplacedError, UnconfiguredNameError,\n    ActionRejectedError,\n    CodedEthersError,\n\n    CallExceptionAction, CallExceptionTransaction,\n    EventEmitterable, Listener\n} from \"./utils/index.js\";\n\nexport type {\n    CrowdsaleAccount, KeystoreAccount, EncryptOptions\n} from \"./wallet/index.js\";\n\n// dummy change; to pick-up ws security issue changes\n", "/* Do NOT modify this file; see /src.ts/_admin/update-version.ts */\n\n/**\n *  The current version of Ethers.\n */\nexport const version: string = \"6.15.0\";\n", "/**\n *  The Application Binary Interface (ABI) describes how method input\n *  parameters should be encoded, their results decoded, and how to\n *  decode events and errors.\n *\n *  See [About ABIs](docs-abi) for more details how they are used.\n *\n *  @_section api/abi:Application Binary Interface  [about-abi]\n *  @_navTitle: ABI\n */\n\n\n//////\nexport { AbiCoder } from \"./abi-coder.js\";\n\nexport { decodeBytes32String, encodeBytes32String } from \"./bytes32.js\";\n\nexport {\n    ConstructorFragment, ErrorFragment, EventFragment, FallbackFragment,\n    Fragment, FunctionFragment, NamedFragment, ParamType, StructFragment,\n} from \"./fragments.js\";\n\nexport {\n    checkResultErrors,\n    Indexed,\n    Interface,\n    ErrorDescription, LogDescription, TransactionDescription,\n    Result\n} from \"./interface.js\";\n\nexport { Typed } from \"./typed.js\";\n\nexport type {\n    JsonFragment, JsonFragmentType,\n    FormatType, FragmentType, ParamTypeWalkAsyncFunc, ParamTypeWalkFunc\n} from \"./fragments.js\";\n\nexport type {\n    InterfaceAbi,\n} from \"./interface.js\";\n\n", "/**\n *  When sending values to or receiving values from a [[Contract]], the\n *  data is generally encoded using the [ABI standard](link-solc-abi).\n *\n *  The AbiCoder provides a utility to encode values to ABI data and\n *  decode values from ABI data.\n *\n *  Most of the time, developers should favour the [[Contract]] class,\n *  which further abstracts a lot of the finer details of ABI data.\n *\n *  @_section api/abi/abi-coder:ABI Encoding\n */\n\n// See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI\n\nimport { assertArgumentCount, assertArgument } from \"../utils/index.js\";\n\nimport { Coder, Reader, Result, Writer } from \"./coders/abstract-coder.js\";\nimport { AddressCoder } from \"./coders/address.js\";\nimport { ArrayCoder } from \"./coders/array.js\";\nimport { BooleanCoder } from \"./coders/boolean.js\";\nimport { BytesCoder } from \"./coders/bytes.js\";\nimport { FixedBytesCoder } from \"./coders/fixed-bytes.js\";\nimport { NullCoder } from \"./coders/null.js\";\nimport { NumberCoder } from \"./coders/number.js\";\nimport { StringCoder } from \"./coders/string.js\";\nimport { TupleCoder } from \"./coders/tuple.js\";\nimport { ParamType } from \"./fragments.js\";\n\nimport { getAddress } from \"../address/index.js\";\nimport { getBytes, hexlify, makeError } from \"../utils/index.js\";\n\nimport type {\n    BytesLike,\n    CallExceptionAction, CallExceptionError, CallExceptionTransaction\n} from \"../utils/index.js\";\n\n// https://docs.soliditylang.org/en/v0.8.17/control-structures.html\nconst PanicReasons: Map<number, string> = new Map();\nPanicReasons.set(0x00, \"GENERIC_PANIC\");\nPanicReasons.set(0x01, \"ASSERT_FALSE\");\nPanicReasons.set(0x11, \"OVERFLOW\");\nPanicReasons.set(0x12, \"DIVIDE_BY_ZERO\");\nPanicReasons.set(0x21, \"ENUM_RANGE_ERROR\");\nPanicReasons.set(0x22, \"BAD_STORAGE_DATA\");\nPanicReasons.set(0x31, \"STACK_UNDERFLOW\");\nPanicReasons.set(0x32, \"ARRAY_RANGE_ERROR\");\nPanicReasons.set(0x41, \"OUT_OF_MEMORY\");\nPanicReasons.set(0x51, \"UNINITIALIZED_FUNCTION_CALL\");\n\nconst paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\nconst paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\n\n\nlet defaultCoder: null | AbiCoder = null;\nlet defaultMaxInflation = 1024;\n\nfunction getBuiltinCallException(action: CallExceptionAction, tx: { to?: null | string, from?: null | string, data?: string }, data: null | BytesLike, abiCoder: AbiCoder): CallExceptionError {\n    let message = \"missing revert data\";\n\n    let reason: null | string = null;\n    const invocation = null;\n    let revert: null | { signature: string, name: string, args: Array<any> } = null;\n\n    if (data) {\n        message = \"execution reverted\";\n\n        const bytes = getBytes(data);\n        data = hexlify(data);\n\n        if (bytes.length === 0) {\n            message += \" (no data present; likely require(false) occurred\";\n            reason = \"require(false)\";\n\n        } else if (bytes.length % 32 !== 4) {\n            message += \" (could not decode reason; invalid data length)\";\n\n        } else if (hexlify(bytes.slice(0, 4)) === \"0x08c379a0\") {\n            // Error(string)\n            try {\n                reason = abiCoder.decode([ \"string\" ], bytes.slice(4))[0]\n                revert = {\n                    signature: \"Error(string)\",\n                    name: \"Error\",\n                    args: [ reason ]\n                };\n                message += `: ${ JSON.stringify(reason) }`;\n\n            } catch (error) {\n                message += \" (could not decode reason; invalid string data)\";\n            }\n\n        } else if (hexlify(bytes.slice(0, 4)) === \"0x4e487b71\") {\n            // Panic(uint256)\n            try {\n                const code = Number(abiCoder.decode([ \"uint256\" ], bytes.slice(4))[0]);\n                revert = {\n                    signature: \"Panic(uint256)\",\n                    name: \"Panic\",\n                    args: [ code ]\n                };\n                reason = `Panic due to ${ PanicReasons.get(code) || \"UNKNOWN\" }(${ code })`;\n                message += `: ${ reason }`;\n            } catch (error) {\n                message += \" (could not decode panic code)\";\n            }\n        } else {\n            message += \" (unknown custom error)\";\n        }\n    }\n\n    const transaction: CallExceptionTransaction = {\n        to: (tx.to ? getAddress(tx.to): null),\n        data: (tx.data || \"0x\")\n    };\n    if (tx.from) { transaction.from = getAddress(tx.from); }\n\n    return makeError(message, \"CALL_EXCEPTION\", {\n        action, data, reason, transaction, invocation, revert\n    });\n}\n\n/**\n *  The **AbiCoder** is a low-level class responsible for encoding JavaScript\n *  values into binary data and decoding binary data into JavaScript values.\n */\nexport class AbiCoder {\n\n    #getCoder(param: ParamType): Coder {\n        if (param.isArray()) {\n            return new ArrayCoder(this.#getCoder(param.arrayChildren), param.arrayLength, param.name);\n        }\n\n        if (param.isTuple()) {\n            return new TupleCoder(param.components.map((c) => this.#getCoder(c)), param.name);\n        }\n\n        switch (param.baseType) {\n            case \"address\":\n                return new AddressCoder(param.name);\n            case \"bool\":\n                return new BooleanCoder(param.name);\n            case \"string\":\n                return new StringCoder(param.name);\n            case \"bytes\":\n                return new BytesCoder(param.name);\n            case \"\":\n                return new NullCoder(param.name);\n        }\n\n        // u?int[0-9]*\n        let match = param.type.match(paramTypeNumber);\n        if (match) {\n            let size = parseInt(match[2] || \"256\");\n            assertArgument(size !== 0 && size <= 256 && (size % 8) === 0,\n                \"invalid \" + match[1] + \" bit length\", \"param\", param);\n            return new NumberCoder(size / 8, (match[1] === \"int\"), param.name);\n        }\n\n        // bytes[0-9]+\n        match = param.type.match(paramTypeBytes);\n        if (match) {\n            let size = parseInt(match[1]);\n            assertArgument(size !== 0 && size <= 32, \"invalid bytes length\", \"param\", param);\n            return new FixedBytesCoder(size, param.name);\n        }\n\n        assertArgument(false, \"invalid type\", \"type\", param.type);\n    }\n\n    /**\n     *  Get the default values for the given %%types%%.\n     *\n     *  For example, a ``uint`` is by default ``0`` and ``bool``\n     *  is by default ``false``.\n     */\n    getDefaultValue(types: ReadonlyArray<string | ParamType>): Result {\n        const coders: Array<Coder> = types.map((type) => this.#getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.defaultValue();\n    }\n\n    /**\n     *  Encode the %%values%% as the %%types%% into ABI data.\n     *\n     *  @returns DataHexstring\n     */\n    encode(types: ReadonlyArray<string | ParamType>, values: ReadonlyArray<any>): string {\n        assertArgumentCount(values.length, types.length, \"types/values length mismatch\");\n\n        const coders = types.map((type) => this.#getCoder(ParamType.from(type)));\n        const coder = (new TupleCoder(coders, \"_\"));\n\n        const writer = new Writer();\n        coder.encode(writer, values);\n        return writer.data;\n    }\n\n    /**\n     *  Decode the ABI %%data%% as the %%types%% into values.\n     *\n     *  If %%loose%% decoding is enabled, then strict padding is\n     *  not enforced. Some older versions of Solidity incorrectly\n     *  padded event data emitted from ``external`` functions.\n     */\n    decode(types: ReadonlyArray<string | ParamType>, data: BytesLike, loose?: boolean): Result {\n        const coders: Array<Coder> = types.map((type) => this.#getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.decode(new Reader(data, loose, defaultMaxInflation));\n    }\n\n    static _setDefaultMaxInflation(value: number): void {\n        assertArgument(typeof(value) === \"number\" && Number.isInteger(value), \"invalid defaultMaxInflation factor\", \"value\", value);\n        defaultMaxInflation = value;\n    }\n\n    /**\n     *  Returns the shared singleton instance of a default [[AbiCoder]].\n     *\n     *  On the first call, the instance is created internally.\n     */\n    static defaultAbiCoder(): AbiCoder {\n        if (defaultCoder == null) {\n            defaultCoder = new AbiCoder();\n        }\n        return defaultCoder;\n    }\n\n    /**\n     *  Returns an ethers-compatible [[CallExceptionError]] Error for the given\n     *  result %%data%% for the [[CallExceptionAction]] %%action%% against\n     *  the Transaction %%tx%%.\n     */\n    static getBuiltinCallException(action: CallExceptionAction, tx: { to?: null | string, from?: null | string, data?: string }, data: null | BytesLike): CallExceptionError {\n        return getBuiltinCallException(action, tx, data, AbiCoder.defaultAbiCoder());\n    }\n}\n", "/**\n *  There are many simple utilities required to interact with\n *  Ethereum and to simplify the library, without increasing\n *  the library dependencies for simple functions.\n *\n *  @_section api/utils:Utilities  [about-utils]\n */\n\nexport { decodeBase58, encodeBase58 } from \"./base58.js\";\n\nexport { decodeBase64, encodeBase64 } from \"./base64.js\";\n\nexport {\n    getBytes, getBytesCopy, isHexString, isBytesLike, hexlify, concat, dataLength, dataSlice,\n    stripZerosLeft, zeroPadValue, zeroPadBytes\n} from \"./data.js\";\n\nexport {\n    isCallException, isError,\n    assert, assertArgument, assertArgumentCount, assertPrivate, assertNormalize, makeError\n} from \"./errors.js\"\n\nexport { EventPayload } from \"./events.js\";\n\nexport {\n    FetchRequest, FetchResponse, FetchCancelSignal,\n} from \"./fetch.js\";\n\nexport { FixedNumber } from \"./fixednumber.js\"\n\nexport {\n    fromTwos, toTwos, mask,\n    getBigInt, getNumber, getUint, toBigInt, toNumber, toBeHex, toBeArray, toQuantity\n} from \"./maths.js\";\n\nexport { resolveProperties, defineProperties} from \"./properties.js\";\n\nexport { decodeRlp } from \"./rlp-decode.js\";\nexport { encodeRlp } from \"./rlp-encode.js\";\n\nexport { formatEther, parseEther, formatUnits, parseUnits } from \"./units.js\";\n\nexport {\n    toUtf8Bytes,\n    toUtf8CodePoints,\n    toUtf8String,\n\n    Utf8ErrorFuncs,\n} from \"./utf8.js\";\n\nexport { uuidV4 } from \"./uuid.js\";\n\n/////////////////////////////\n// Types\n\nexport type { BytesLike } from \"./data.js\";\n\nexport type {\n\n    //ErrorFetchRequestWithBody, ErrorFetchRequest,\n    //ErrorFetchResponseWithBody, ErrorFetchResponse,\n\n    ErrorCode,\n\n    EthersError, UnknownError, NotImplementedError, UnsupportedOperationError, NetworkError,\n    ServerError, TimeoutError, BadDataError, CancelledError, BufferOverrunError,\n    NumericFaultError, InvalidArgumentError, MissingArgumentError, UnexpectedArgumentError,\n    CallExceptionError, InsufficientFundsError, NonceExpiredError, OffchainFaultError,\n    ReplacementUnderpricedError, TransactionReplacedError, UnconfiguredNameError,\n    ActionRejectedError,\n\n    CallExceptionAction, CallExceptionTransaction,\n\n    CodedEthersError\n} from \"./errors.js\"\n\nexport type { EventEmitterable, Listener } from \"./events.js\";\n\nexport type {\n    GetUrlResponse,\n    FetchPreflightFunc, FetchProcessFunc, FetchRetryFunc,\n    FetchGatewayFunc, FetchGetUrlFunc\n} from \"./fetch.js\";\n\nexport type { FixedFormat } from \"./fixednumber.js\"\n\nexport type { BigNumberish, Numeric } from \"./maths.js\";\n\nexport type { RlpStructuredData, RlpStructuredDataish } from \"./rlp.js\";\n\nexport type {\n    Utf8ErrorFunc,\n    UnicodeNormalizationForm,\n    Utf8ErrorReason\n} from \"./utf8.js\";\n", "/**\n *  The [Base58 Encoding](link-base58) scheme allows a **numeric** value\n *  to be encoded as a compact string using a radix of 58 using only\n *  alpha-numeric characters. Confusingly similar characters are omitted\n *  (i.e. ``\"l0O\"``).\n *\n *  Note that Base58 encodes a **numeric** value, not arbitrary bytes,\n *  since any zero-bytes on the left would get removed. To mitigate this\n *  issue most schemes that use Base58 choose specific high-order values\n *  to ensure non-zero prefixes.\n *\n *  @_subsection: api/utils:Base58 Encoding [about-base58]\n */\n\nimport { getBytes } from \"./data.js\";\nimport { assertArgument } from \"./errors.js\";\nimport { toBigInt } from \"./maths.js\";\n\nimport type { BytesLike } from \"./index.js\";\n\n\nconst Alphabet = \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\";\nlet Lookup: null | Record<string, bigint> = null;\n\nfunction getAlpha(letter: string): bigint {\n    if (Lookup == null) {\n        Lookup = { };\n        for (let i = 0; i < Alphabet.length; i++) {\n            Lookup[Alphabet[i]] = BigInt(i);\n        }\n    }\n    const result = Lookup[letter];\n    assertArgument(result != null, `invalid base58 value`, \"letter\", letter);\n    return result;\n}\n\n\nconst BN_0 = BigInt(0);\nconst BN_58 = BigInt(58);\n\n/**\n *  Encode %%value%% as a Base58-encoded string.\n */\nexport function encodeBase58(_value: BytesLike): string {\n    const bytes = getBytes(_value);\n\n    let value = toBigInt(bytes);\n    let result = \"\";\n    while (value) {\n        result = Alphabet[Number(value % BN_58)] + result;\n        value /= BN_58;\n    }\n\n    // Account for leading padding zeros\n    for (let i = 0; i < bytes.length; i++) {\n        if (bytes[i]) { break; }\n        result = Alphabet[0] + result;\n    }\n\n    return result;\n}\n\n/**\n *  Decode the Base58-encoded %%value%%.\n */\nexport function decodeBase58(value: string): bigint {\n    let result = BN_0;\n    for (let i = 0; i < value.length; i++) {\n        result *= BN_58;\n        result += getAlpha(value[i]);\n    }\n    return result;\n}\n", "/**\n *  Some data helpers.\n *\n *\n *  @_subsection api/utils:Data Helpers  [about-data]\n */\nimport { assert, assertArgument } from \"./errors.js\";\n\n/**\n *  A [[HexString]] whose length is even, which ensures it is a valid\n *  representation of binary data.\n */\nexport type DataHexString = string;\n\n/**\n *  A string which is prefixed with ``0x`` and followed by any number\n *  of case-agnostic hexadecimal characters.\n *\n *  It must match the regular expression ``/0x[0-9A-Fa-f]*\\/``.\n */\nexport type HexString = string;\n\n/**\n *  An object that can be used to represent binary data.\n */\nexport type BytesLike = DataHexString | Uint8Array;\n\nfunction _getBytes(value: BytesLike, name?: string, copy?: boolean): Uint8Array {\n    if (value instanceof Uint8Array) {\n        if (copy) { return new Uint8Array(value); }\n        return value;\n    }\n\n    if (typeof(value) === \"string\" && value.match(/^0x(?:[0-9a-f][0-9a-f])*$/i)) {\n        const result = new Uint8Array((value.length - 2) / 2);\n        let offset = 2;\n        for (let i = 0; i < result.length; i++) {\n            result[i] = parseInt(value.substring(offset, offset + 2), 16);\n            offset += 2;\n        }\n        return result;\n    }\n\n    assertArgument(false, \"invalid BytesLike value\", name || \"value\", value);\n}\n\n/**\n *  Get a typed Uint8Array for %%value%%. If already a Uint8Array\n *  the original %%value%% is returned; if a copy is required use\n *  [[getBytesCopy]].\n *\n *  @see: getBytesCopy\n */\nexport function getBytes(value: BytesLike, name?: string): Uint8Array {\n    return _getBytes(value, name, false);\n}\n\n/**\n *  Get a typed Uint8Array for %%value%%, creating a copy if necessary\n *  to prevent any modifications of the returned value from being\n *  reflected elsewhere.\n *\n *  @see: getBytes\n */\nexport function getBytesCopy(value: BytesLike, name?: string): Uint8Array {\n    return _getBytes(value, name, true);\n}\n\n\n/**\n *  Returns true if %%value%% is a valid [[HexString]].\n *\n *  If %%length%% is ``true`` or a //number//, it also checks that\n *  %%value%% is a valid [[DataHexString]] of %%length%% (if a //number//)\n *  bytes of data (e.g. ``0x1234`` is 2 bytes).\n */\nexport function isHexString(value: any, length?: number | boolean): value is `0x${ string }` {\n    if (typeof(value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false\n    }\n\n    if (typeof(length) === \"number\" && value.length !== 2 + 2 * length) { return false; }\n    if (length === true && (value.length % 2) !== 0) { return false; }\n\n    return true;\n}\n\n/**\n *  Returns true if %%value%% is a valid representation of arbitrary\n *  data (i.e. a valid [[DataHexString]] or a Uint8Array).\n */\nexport function isBytesLike(value: any): value is BytesLike {\n    return (isHexString(value, true) || (value instanceof Uint8Array));\n}\n\nconst HexCharacters: string = \"0123456789abcdef\";\n\n/**\n *  Returns a [[DataHexString]] representation of %%data%%.\n */\nexport function hexlify(data: BytesLike): string {\n    const bytes = getBytes(data);\n\n    let result = \"0x\";\n    for (let i = 0; i < bytes.length; i++) {\n        const v = bytes[i];\n        result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n    }\n    return result;\n}\n\n/**\n *  Returns a [[DataHexString]] by concatenating all values\n *  within %%data%%.\n */\nexport function concat(datas: ReadonlyArray<BytesLike>): string {\n    return \"0x\" + datas.map((d) => hexlify(d).substring(2)).join(\"\");\n}\n\n/**\n *  Returns the length of %%data%%, in bytes.\n */\nexport function dataLength(data: BytesLike): number {\n    if (isHexString(data, true)) { return (data.length - 2) / 2; }\n    return getBytes(data).length;\n}\n\n/**\n *  Returns a [[DataHexString]] by slicing %%data%% from the %%start%%\n *  offset to the %%end%% offset.\n *\n *  By default %%start%% is 0 and %%end%% is the length of %%data%%.\n */\nexport function dataSlice(data: BytesLike, start?: number, end?: number): string {\n    const bytes = getBytes(data);\n    if (end != null && end > bytes.length) {\n        assert(false, \"cannot slice beyond data bounds\", \"BUFFER_OVERRUN\", {\n            buffer: bytes, length: bytes.length, offset: end\n        });\n    }\n    return hexlify(bytes.slice((start == null) ? 0: start, (end == null) ? bytes.length: end));\n}\n\n/**\n *  Return the [[DataHexString]] result by stripping all **leading**\n ** zero bytes from %%data%%.\n */\nexport function stripZerosLeft(data: BytesLike): string {\n    let bytes = hexlify(data).substring(2);\n    while (bytes.startsWith(\"00\")) { bytes = bytes.substring(2); }\n    return \"0x\" + bytes;\n}\n\nfunction zeroPad(data: BytesLike, length: number, left: boolean): string {\n    const bytes = getBytes(data);\n    assert(length >= bytes.length, \"padding exceeds data length\", \"BUFFER_OVERRUN\", {\n        buffer: new Uint8Array(bytes),\n        length: length,\n        offset: length + 1\n    });\n\n    const result = new Uint8Array(length);\n    result.fill(0);\n    if (left) {\n        result.set(bytes, length - bytes.length);\n    } else {\n        result.set(bytes, 0);\n    }\n\n    return hexlify(result);\n}\n\n/**\n *  Return the [[DataHexString]] of %%data%% padded on the **left**\n *  to %%length%% bytes.\n *\n *  If %%data%% already exceeds %%length%%, a [[BufferOverrunError]] is\n *  thrown.\n *\n *  This pads data the same as **values** are in Solidity\n *  (e.g. ``uint128``).\n */\nexport function zeroPadValue(data: BytesLike, length: number): string {\n    return zeroPad(data, length, true);\n}\n\n/**\n *  Return the [[DataHexString]] of %%data%% padded on the **right**\n *  to %%length%% bytes.\n *\n *  If %%data%% already exceeds %%length%%, a [[BufferOverrunError]] is\n *  thrown.\n *\n *  This pads data the same as **bytes** are in Solidity\n *  (e.g. ``bytes16``).\n */\nexport function zeroPadBytes(data: BytesLike, length: number): string {\n    return zeroPad(data, length, false);\n}\n", "/**\n *  All errors in ethers include properties to ensure they are both\n *  human-readable (i.e. ``.message``) and machine-readable (i.e. ``.code``).\n *\n *  The [[isError]] function can be used to check the error ``code`` and\n *  provide a type guard for the properties present on that error interface.\n *\n *  @_section: api/utils/errors:Errors  [about-errors]\n */\n\nimport { version } from \"../_version.js\";\n\nimport { defineProperties } from \"./properties.js\";\n\nimport type {\n    TransactionRequest, TransactionReceipt, TransactionResponse\n} from \"../providers/index.js\";\n\nimport type { FetchRequest, FetchResponse } from \"./fetch.js\";\n\n/**\n *  An error may contain additional properties, but those must not\n *  conflict with any implicit properties.\n */\nexport type ErrorInfo<T> = Omit<T, \"code\" | \"name\" | \"message\" | \"shortMessage\"> & { shortMessage?: string };\n\n\nfunction stringify(value: any, seen?: Set<any>): any {\n    if (value == null) { return \"null\"; }\n\n    if (seen == null) { seen = new Set(); }\n    if (typeof(value) === \"object\") {\n        if (seen.has(value)) { return \"[Circular]\"; }\n        seen.add(value);\n    }\n\n    if (Array.isArray(value)) {\n        return \"[ \" + (value.map((v) => stringify(v, seen))).join(\", \") + \" ]\";\n    }\n\n    if (value instanceof Uint8Array) {\n        const HEX = \"0123456789abcdef\";\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n            result += HEX[value[i] >> 4];\n            result += HEX[value[i] & 0xf];\n        }\n        return result;\n    }\n\n    if (typeof(value) === \"object\" && typeof(value.toJSON) === \"function\") {\n        return stringify(value.toJSON(), seen);\n    }\n\n    switch (typeof(value)) {\n        case \"boolean\": case \"number\": case \"symbol\":\n            return value.toString();\n        case \"bigint\":\n            return BigInt(value).toString();\n        case \"string\":\n            return JSON.stringify(value);\n        case \"object\": {\n            const keys = Object.keys(value);\n            keys.sort();\n            return \"{ \" + keys.map((k) => `${ stringify(k, seen) }: ${ stringify(value[k], seen) }`).join(\", \") + \" }\";\n        }\n    }\n\n    return `[ COULD NOT SERIALIZE ]`;\n}\n\n/**\n *  All errors emitted by ethers have an **ErrorCode** to help\n *  identify and coalesce errors to simplify programmatic analysis.\n *\n *  Each **ErrorCode** is the %%code%% proerty of a coresponding\n *  [[EthersError]].\n *\n *  **Generic Errors**\n *\n *  **``\"UNKNOWN_ERROR\"``** - see [[UnknownError]]\n *\n *  **``\"NOT_IMPLEMENTED\"``** - see [[NotImplementedError]]\n *\n *  **``\"UNSUPPORTED_OPERATION\"``** - see [[UnsupportedOperationError]]\n *\n *  **``\"NETWORK_ERROR\"``** - see [[NetworkError]]\n *\n *  **``\"SERVER_ERROR\"``** - see [[ServerError]]\n *\n *  **``\"TIMEOUT\"``** - see [[TimeoutError]]\n *\n *  **``\"BAD_DATA\"``** - see [[BadDataError]]\n *\n *  **``\"CANCELLED\"``** - see [[CancelledError]]\n *\n *  **Operational Errors**\n *\n *  **``\"BUFFER_OVERRUN\"``** - see [[BufferOverrunError]]\n *\n *  **``\"NUMERIC_FAULT\"``** - see [[NumericFaultError]]\n *\n *  **Argument Errors**\n *\n *  **``\"INVALID_ARGUMENT\"``** - see [[InvalidArgumentError]]\n *\n *  **``\"MISSING_ARGUMENT\"``** - see [[MissingArgumentError]]\n *\n *  **``\"UNEXPECTED_ARGUMENT\"``** - see [[UnexpectedArgumentError]]\n *\n *  **``\"VALUE_MISMATCH\"``** - //unused//\n *\n *  **Blockchain Errors**\n *\n *  **``\"CALL_EXCEPTION\"``** - see [[CallExceptionError]]\n *\n *  **``\"INSUFFICIENT_FUNDS\"``** - see [[InsufficientFundsError]]\n *\n *  **``\"NONCE_EXPIRED\"``** - see [[NonceExpiredError]]\n *\n *  **``\"REPLACEMENT_UNDERPRICED\"``** - see [[ReplacementUnderpricedError]]\n *\n *  **``\"TRANSACTION_REPLACED\"``** - see [[TransactionReplacedError]]\n *\n *  **``\"UNCONFIGURED_NAME\"``** - see [[UnconfiguredNameError]]\n *\n *  **``\"OFFCHAIN_FAULT\"``** - see [[OffchainFaultError]]\n *\n *  **User Interaction Errors**\n *\n *  **``\"ACTION_REJECTED\"``** - see [[ActionRejectedError]]\n */\nexport type ErrorCode =\n\n    // Generic Errors\n    \"UNKNOWN_ERROR\" | \"NOT_IMPLEMENTED\" | \"UNSUPPORTED_OPERATION\" |\n    \"NETWORK_ERROR\" | \"SERVER_ERROR\" | \"TIMEOUT\" | \"BAD_DATA\" |\n    \"CANCELLED\" |\n\n    // Operational Errors\n    \"BUFFER_OVERRUN\" |  \"NUMERIC_FAULT\" |\n\n    // Argument Errors\n    \"INVALID_ARGUMENT\" | \"MISSING_ARGUMENT\" | \"UNEXPECTED_ARGUMENT\" |\n    \"VALUE_MISMATCH\" |\n\n    // Blockchain Errors\n    \"CALL_EXCEPTION\" | \"INSUFFICIENT_FUNDS\" | \"NONCE_EXPIRED\" |\n    \"REPLACEMENT_UNDERPRICED\" | \"TRANSACTION_REPLACED\" |\n    \"UNCONFIGURED_NAME\" | \"OFFCHAIN_FAULT\" |\n\n    // User Interaction\n    \"ACTION_REJECTED\"\n;\n\n/**\n *  All errors in Ethers include properties to assist in\n *  machine-readable errors.\n */\nexport interface EthersError<T extends ErrorCode = ErrorCode> extends Error {\n    /**\n     *  The string error code.\n     */\n    code: ErrorCode;\n\n    /**\n     *  A short message describing the error, with minimal additional\n     *  details.\n     */\n    shortMessage: string;\n\n    /**\n     *  Additional info regarding the error that may be useful.\n     *\n     *  This is generally helpful mostly for human-based debugging.\n     */\n    info?: Record<string, any>;\n\n    /**\n     *  Any related error.\n     */\n    error?: Error;\n}\n\n// Generic Errors\n\n/**\n *  This Error is a catch-all for when there is no way for Ethers to\n *  know what the underlying problem is.\n */\nexport interface UnknownError extends EthersError<\"UNKNOWN_ERROR\"> {\n    [ key: string ]: any;\n}\n\n/**\n *  This Error is mostly used as a stub for functionality that is\n *  intended for the future, but is currently not implemented.\n */\nexport interface NotImplementedError extends EthersError<\"NOT_IMPLEMENTED\"> {\n    /**\n     *  The attempted operation.\n     */\n    operation: string;\n}\n\n/**\n *  This Error indicates that the attempted operation is not supported.\n *\n *  This could range from a specific JSON-RPC end-point not supporting\n *  a feature to a specific configuration of an object prohibiting the\n *  operation.\n *\n *  For example, a [[Wallet]] with no connected [[Provider]] is unable\n *  to send a transaction.\n */\nexport interface UnsupportedOperationError extends EthersError<\"UNSUPPORTED_OPERATION\"> {\n    /**\n     *  The attempted operation.\n     */\n    operation: string;\n}\n\n/**\n *  This Error indicates a problem connecting to a network.\n */\nexport interface NetworkError extends EthersError<\"NETWORK_ERROR\"> {\n    /**\n     *  The network event.\n     */\n    event: string;\n}\n\n/**\n *  This Error indicates there was a problem fetching a resource from\n *  a server.\n */\nexport interface ServerError extends EthersError<\"SERVER_ERROR\"> {\n    /**\n     *  The requested resource.\n     */\n    request: FetchRequest | string;\n\n    /**\n     *  The response received from the server, if available.\n     */\n    response?: FetchResponse;\n}\n\n/**\n *  This Error indicates that the timeout duration has expired and\n *  that the operation has been implicitly cancelled.\n *\n *  The side-effect of the operation may still occur, as this\n *  generally means a request has been sent and there has simply\n *  been no response to indicate whether it was processed or not.\n */\nexport interface TimeoutError extends EthersError<\"TIMEOUT\"> {\n    /**\n     *  The attempted operation.\n     */\n    operation: string;\n\n    /**\n     *  The reason.\n     */\n    reason: string;\n\n    /**\n     *  The resource request, if available.\n     */\n    request?: FetchRequest;\n}\n\n/**\n *  This Error indicates that a provided set of data cannot\n *  be correctly interpreted.\n */\nexport interface BadDataError extends EthersError<\"BAD_DATA\"> {\n    /**\n     *  The data.\n     */\n    value: any;\n}\n\n/**\n *  This Error indicates that the operation was cancelled by a\n *  programmatic call, for example to ``cancel()``.\n */\nexport interface CancelledError extends EthersError<\"CANCELLED\"> {\n}\n\n\n// Operational Errors\n\n/**\n *  This Error indicates an attempt was made to read outside the bounds\n *  of protected data.\n *\n *  Most operations in Ethers are protected by bounds checks, to mitigate\n *  exploits when parsing data.\n */\nexport interface BufferOverrunError extends EthersError<\"BUFFER_OVERRUN\"> {\n    /**\n     *  The buffer that was overrun.\n     */\n    buffer: Uint8Array;\n\n    /**\n     *  The length of the buffer.\n     */\n    length: number;\n\n    /**\n     *  The offset that was requested.\n     */\n    offset: number;\n}\n\n/**\n *  This Error indicates an operation which would result in incorrect\n *  arithmetic output has occurred.\n *\n *  For example, trying to divide by zero or using a ``uint8`` to store\n *  a negative value.\n */\nexport interface NumericFaultError extends EthersError<\"NUMERIC_FAULT\"> {\n    /**\n     *  The attempted operation.\n     */\n    operation: string;\n\n    /**\n     *  The fault reported.\n     */\n    fault: string;\n\n    /**\n     *  The value the operation was attempted against.\n     */\n    value: any;\n}\n\n\n// Argument Errors\n\n/**\n *  This Error indicates an incorrect type or value was passed to\n *  a function or method.\n */\nexport interface InvalidArgumentError extends EthersError<\"INVALID_ARGUMENT\"> {\n    /**\n     *  The name of the argument.\n     */\n    argument: string;\n\n    /**\n     *  The value that was provided.\n     */\n    value: any;\n\n    info?: Record<string, any>\n}\n\n/**\n *  This Error indicates there were too few arguments were provided.\n */\nexport interface MissingArgumentError extends EthersError<\"MISSING_ARGUMENT\"> {\n    /**\n     *  The number of arguments received.\n     */\n    count: number;\n\n    /**\n     *  The number of arguments expected.\n     */\n    expectedCount: number;\n}\n\n/**\n *  This Error indicates too many arguments were provided.\n */\nexport interface UnexpectedArgumentError extends EthersError<\"UNEXPECTED_ARGUMENT\"> {\n    /**\n     *  The number of arguments received.\n     */\n    count: number;\n\n    /**\n     *  The number of arguments expected.\n     */\n    expectedCount: number;\n}\n\n\n// Blockchain Errors\n\n/**\n *  The action that resulted in the call exception.\n */\nexport type CallExceptionAction = \"call\" | \"estimateGas\" | \"getTransactionResult\" | \"sendTransaction\" | \"unknown\";\n\n/**\n *  The related transaction that caused the error.\n */\nexport type CallExceptionTransaction = {\n    to: null | string;\n    from?: string;\n    data: string;\n};\n\n/**\n *  This **Error** indicates a transaction reverted.\n */\nexport interface CallExceptionError extends EthersError<\"CALL_EXCEPTION\"> {\n\n    /**\n     *  The action being performed when the revert was encountered.\n     */\n    action: CallExceptionAction;\n\n    /**\n     *  The revert data returned.\n     */\n    data: null | string;\n\n    /**\n     *  A human-readable representation of data, if possible.\n     */\n    reason: null | string;\n\n    /**\n     *  The transaction that triggered the exception.\n     */\n    transaction: CallExceptionTransaction,\n\n    /**\n     *  The contract invocation details, if available.\n     */\n    invocation: null | {\n        method: string;\n        signature: string;\n        args: Array<any>;\n    }\n\n    /**\n     *  The built-in or custom revert error, if available\n     */\n    revert: null | {\n        signature: string;\n        name: string;\n        args: Array<any>;\n    }\n\n    /**\n     *  If the error occurred in a transaction that was mined\n     *  (with a status of ``0``), this is the receipt.\n     */\n    receipt?: TransactionReceipt;   // @TODO: in v7, make this `null | TransactionReceipt`\n}\n\n\n/**\n *  The sending account has insufficient funds to cover the\n *  entire transaction cost.\n */\nexport interface InsufficientFundsError extends EthersError<\"INSUFFICIENT_FUNDS\"> {\n    /**\n     *  The transaction.\n     */\n    transaction: TransactionRequest;\n}\n\n/**\n *  The sending account has already used this nonce in a\n *  transaction that has been included.\n */\nexport interface NonceExpiredError extends EthersError<\"NONCE_EXPIRED\"> {\n    /**\n     *  The transaction.\n     */\n    transaction: TransactionRequest;\n}\n\n/**\n *  A CCIP-read exception, which cannot be recovered from or\n *  be further processed.\n */\nexport interface OffchainFaultError extends EthersError<\"OFFCHAIN_FAULT\"> {\n    /**\n     *  The transaction.\n     */\n    transaction?: TransactionRequest;\n\n    /**\n     *  The reason the CCIP-read failed.\n     */\n    reason: string;\n}\n\n/**\n *  An attempt was made to replace a transaction, but with an\n *  insufficient additional fee to afford evicting the old\n *  transaction from the memory pool.\n */\nexport interface ReplacementUnderpricedError extends EthersError<\"REPLACEMENT_UNDERPRICED\"> {\n    /**\n     *  The transaction.\n     */\n    transaction: TransactionRequest;\n}\n\n/**\n *  A pending transaction was replaced by another.\n */\nexport interface TransactionReplacedError extends EthersError<\"TRANSACTION_REPLACED\"> {\n    /**\n     *  If the transaction was cancelled, such that the original\n     *  effects of the transaction cannot be assured.\n     */\n    cancelled: boolean;\n\n    /**\n     *  The reason the transaction was replaced.\n     */\n    reason: \"repriced\" | \"cancelled\" | \"replaced\";\n\n    /**\n     *  The hash of the replaced transaction.\n     */\n    hash: string;\n\n    /**\n     *  The transaction that replaced the transaction.\n     */\n    replacement: TransactionResponse;\n\n    /**\n     *  The receipt of the transaction that replace the transaction.\n     */\n    receipt: TransactionReceipt;\n}\n\n/**\n *  This Error indicates an ENS name was used, but the name has not\n *  been configured.\n *\n *  This could indicate an ENS name is unowned or that the current\n *  address being pointed to is the [[ZeroAddress]].\n */\nexport interface UnconfiguredNameError extends EthersError<\"UNCONFIGURED_NAME\"> {\n    /**\n     *  The ENS name that was requested\n     */\n    value: string;\n}\n\n/**\n *  This Error indicates a request was rejected by the user.\n *\n *  In most clients (such as MetaMask), when an operation requires user\n *  authorization (such as ``signer.sendTransaction``), the client\n *  presents a dialog box to the user. If the user denies the request\n *  this error is thrown.\n */\nexport interface ActionRejectedError extends EthersError<\"ACTION_REJECTED\"> {\n    /**\n     *  The requested action.\n     */\n    action: \"requestAccess\" | \"sendTransaction\" | \"signMessage\" | \"signTransaction\" | \"signTypedData\" | \"unknown\",\n\n    /**\n     *  The reason the action was rejected.\n     *\n     *  If there is already a pending request, some clients may indicate\n     *  there is already a ``\"pending\"`` action. This prevents an app\n     *  from spamming the user.\n     */\n    reason: \"expired\" | \"rejected\" | \"pending\"\n}\n\n// Coding; converts an ErrorCode its Typed Error\n\n/**\n *  A conditional type that transforms the [[ErrorCode]] T into\n *  its EthersError type.\n *\n *  @flatworm-skip-docs\n */\nexport type CodedEthersError<T> =\n    T extends \"UNKNOWN_ERROR\" ? UnknownError:\n    T extends \"NOT_IMPLEMENTED\" ? NotImplementedError:\n    T extends \"UNSUPPORTED_OPERATION\" ? UnsupportedOperationError:\n    T extends \"NETWORK_ERROR\" ? NetworkError:\n    T extends \"SERVER_ERROR\" ? ServerError:\n    T extends \"TIMEOUT\" ? TimeoutError:\n    T extends \"BAD_DATA\" ? BadDataError:\n    T extends \"CANCELLED\" ? CancelledError:\n\n    T extends \"BUFFER_OVERRUN\" ? BufferOverrunError:\n    T extends \"NUMERIC_FAULT\" ? NumericFaultError:\n\n    T extends \"INVALID_ARGUMENT\" ? InvalidArgumentError:\n    T extends \"MISSING_ARGUMENT\" ? MissingArgumentError:\n    T extends \"UNEXPECTED_ARGUMENT\" ? UnexpectedArgumentError:\n\n    T extends \"CALL_EXCEPTION\" ? CallExceptionError:\n    T extends \"INSUFFICIENT_FUNDS\" ? InsufficientFundsError:\n    T extends \"NONCE_EXPIRED\" ? NonceExpiredError:\n    T extends \"OFFCHAIN_FAULT\" ? OffchainFaultError:\n    T extends \"REPLACEMENT_UNDERPRICED\" ? ReplacementUnderpricedError:\n    T extends \"TRANSACTION_REPLACED\" ? TransactionReplacedError:\n    T extends \"UNCONFIGURED_NAME\" ? UnconfiguredNameError:\n\n    T extends \"ACTION_REJECTED\" ? ActionRejectedError:\n\n    never;\n\n\n\n/**\n *  Returns true if the %%error%% matches an error thrown by ethers\n *  that matches the error %%code%%.\n *\n *  In TypeScript environments, this can be used to check that %%error%%\n *  matches an EthersError type, which means the expected properties will\n *  be set.\n *\n *  @See [ErrorCodes](api:ErrorCode)\n *  @example\n *    try {\n *      // code....\n *    } catch (e) {\n *      if (isError(e, \"CALL_EXCEPTION\")) {\n *          // The Type Guard has validated this object\n *          console.log(e.data);\n *      }\n *    }\n */\nexport function isError<K extends ErrorCode, T extends CodedEthersError<K>>(error: any, code: K): error is T {\n    return (error && (<EthersError>error).code === code);\n}\n\n/**\n *  Returns true if %%error%% is a [[CallExceptionError].\n */\nexport function isCallException(error: any): error is CallExceptionError {\n    return isError(error, \"CALL_EXCEPTION\");\n}\n\n/**\n *  Returns a new Error configured to the format ethers emits errors, with\n *  the %%message%%, [[api:ErrorCode]] %%code%% and additional properties\n *  for the corresponding EthersError.\n *\n *  Each error in ethers includes the version of ethers, a\n *  machine-readable [[ErrorCode]], and depending on %%code%%, additional\n *  required properties. The error message will also include the %%message%%,\n *  ethers version, %%code%% and all additional properties, serialized.\n */\nexport function makeError<K extends ErrorCode, T extends CodedEthersError<K>>(message: string, code: K, info?: ErrorInfo<T>): T {\n    let shortMessage = message;\n\n    {\n        const details: Array<string> = [];\n        if (info) {\n            if (\"message\" in info || \"code\" in info || \"name\" in info) {\n                throw new Error(`value will overwrite populated values: ${ stringify(info) }`);\n            }\n            for (const key in info) {\n                if (key === \"shortMessage\") { continue; }\n                const value = <any>(info[<keyof ErrorInfo<T>>key]);\n//                try {\n                    details.push(key + \"=\" + stringify(value));\n//                } catch (error: any) {\n//                console.log(\"MMM\", error.message);\n//                    details.push(key + \"=[could not serialize object]\");\n//                }\n            }\n        }\n        details.push(`code=${ code }`);\n        details.push(`version=${ version }`);\n\n        if (details.length) {\n            message += \" (\" + details.join(\", \") + \")\";\n        }\n    }\n\n    let error;\n    switch (code) {\n        case \"INVALID_ARGUMENT\":\n            error = new TypeError(message);\n            break;\n        case \"NUMERIC_FAULT\":\n        case \"BUFFER_OVERRUN\":\n            error = new RangeError(message);\n            break;\n        default:\n            error = new Error(message);\n    }\n\n    defineProperties<EthersError>(<EthersError>error, { code });\n\n    if (info) { Object.assign(error, info); }\n\n    if ((<any>error).shortMessage == null) {\n        defineProperties<EthersError>(<EthersError>error, { shortMessage });\n    }\n\n    return <T>error;\n}\n\n/**\n *  Throws an EthersError with %%message%%, %%code%% and additional error\n *  %%info%% when %%check%% is falsish..\n *\n *  @see [[api:makeError]]\n */\nexport function assert<K extends ErrorCode, T extends CodedEthersError<K>>(check: unknown, message: string, code: K, info?: ErrorInfo<T>): asserts check {\n    if (!check) { throw makeError(message, code, info); }\n}\n\n\n/**\n *  A simple helper to simply ensuring provided arguments match expected\n *  constraints, throwing if not.\n *\n *  In TypeScript environments, the %%check%% has been asserted true, so\n *  any further code does not need additional compile-time checks.\n */\nexport function assertArgument(check: unknown, message: string, name: string, value: unknown): asserts check {\n    assert(check, message, \"INVALID_ARGUMENT\", { argument: name, value: value });\n}\n\nexport function assertArgumentCount(count: number, expectedCount: number, message?: string): void {\n    if (message == null) { message = \"\"; }\n    if (message) { message = \": \" + message; }\n\n    assert(count >= expectedCount, \"missing argument\" + message, \"MISSING_ARGUMENT\", {\n        count: count,\n        expectedCount: expectedCount\n    });\n\n    assert(count <= expectedCount, \"too many arguments\" + message, \"UNEXPECTED_ARGUMENT\", {\n        count: count,\n        expectedCount: expectedCount\n    });\n}\n\nconst _normalizeForms = [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].reduce((accum, form) => {\n    try {\n        // General test for normalize\n        /* c8 ignore start */\n        if (\"test\".normalize(form) !== \"test\") { throw new Error(\"bad\"); };\n        /* c8 ignore stop */\n\n        if (form === \"NFD\") {\n            const check = String.fromCharCode(0xe9).normalize(\"NFD\");\n            const expected = String.fromCharCode(0x65, 0x0301)\n            /* c8 ignore start */\n            if (check !== expected) { throw new Error(\"broken\") }\n            /* c8 ignore stop */\n        }\n\n        accum.push(form);\n    } catch(error) { }\n\n    return accum;\n}, <Array<string>>[]);\n\n/**\n *  Throws if the normalization %%form%% is not supported.\n */\nexport function assertNormalize(form: string): void {\n    assert(_normalizeForms.indexOf(form) >= 0, \"platform missing String.prototype.normalize\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"String.prototype.normalize\", info: { form }\n    });\n}\n\n/**\n *  Many classes use file-scoped values to guard the constructor,\n *  making it effectively private. This facilitates that pattern\n *  by ensuring the %%givenGaurd%% matches the file-scoped %%guard%%,\n *  throwing if not, indicating the %%className%% if provided.\n */\nexport function assertPrivate(givenGuard: any, guard: any, className?: string): void {\n    if (className == null) { className = \"\"; }\n    if (givenGuard !== guard) {\n        let method = className, operation = \"new\";\n        if (className) {\n            method += \".\";\n            operation += \" \" + className;\n        }\n        assert(false, `private constructor; use ${ method }from* methods`, \"UNSUPPORTED_OPERATION\", {\n            operation\n        });\n    }\n}\n", "/**\n *  Property helper functions.\n *\n *  @_subsection api/utils:Properties  [about-properties]\n */\n\nfunction checkType(value: any, type: string, name: string): void {\n    const types = type.split(\"|\").map(t => t.trim());\n    for (let i = 0; i < types.length; i++) {\n        switch (type) {\n            case \"any\":\n                return;\n            case \"bigint\":\n            case \"boolean\":\n            case \"number\":\n            case \"string\":\n                if (typeof(value) === type) { return; }\n        }\n    }\n\n    const error: any = new Error(`invalid value for type ${ type }`);\n    error.code = \"INVALID_ARGUMENT\";\n    error.argument = `value.${ name }`;\n    error.value = value;\n\n    throw error;\n}\n\n/**\n *  Resolves to a new object that is a copy of %%value%%, but with all\n *  values resolved.\n */\nexport async function resolveProperties<T>(value: { [ P in keyof T ]: T[P] | Promise<T[P]>}): Promise<T> {\n    const keys = Object.keys(value);\n    const results = await Promise.all(keys.map((k) => Promise.resolve(value[<keyof T>k])));\n    return results.reduce((accum: any, v, index) => {\n        accum[keys[index]] = v;\n        return accum;\n    }, <{ [ P in keyof T]: T[P] }>{ });\n}\n\n/**\n *  Assigns the %%values%% to %%target%% as read-only values.\n *\n *  It %%types%% is specified, the values are checked.\n */\nexport function defineProperties<T>(\n target: T,\n values: { [ K in keyof T ]?: T[K] },\n types?: { [ K in keyof T ]?: string }): void {\n\n    for (let key in values) {\n        let value = values[key];\n\n        const type = (types ? types[key]: null);\n        if (type) { checkType(value, type, key); }\n\n        Object.defineProperty(target, key, { enumerable: true, value, writable: false });\n    }\n}\n", "/**\n *  Some mathematic operations.\n *\n *  @_subsection: api/utils:Math Helpers  [about-maths]\n */\nimport { hexlify, isBytesLike } from \"./data.js\";\nimport { assert, assertArgument } from \"./errors.js\";\n\nimport type { BytesLike } from \"./data.js\";\n\n/**\n *  Any type that can be used where a numeric value is needed.\n */\nexport type Numeric = number | bigint;\n\n/**\n *  Any type that can be used where a big number is needed.\n */\nexport type BigNumberish = string | Numeric;\n\n\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\n\n//const BN_Max256 = (BN_1 << BigInt(256)) - BN_1;\n\n\n// IEEE 754 support 53-bits of mantissa\nconst maxValue = 0x1fffffffffffff;\n\n/**\n *  Convert %%value%% from a twos-compliment representation of %%width%%\n *  bits to its value.\n *\n *  If the highest bit is ``1``, the result will be negative.\n */\nexport function fromTwos(_value: BigNumberish, _width: Numeric): bigint {\n    const value = getUint(_value, \"value\");\n    const width = BigInt(getNumber(_width, \"width\"));\n\n    assert((value >> width) === BN_0, \"overflow\", \"NUMERIC_FAULT\", {\n        operation: \"fromTwos\", fault: \"overflow\", value: _value\n    });\n\n    // Top bit set; treat as a negative value\n    if (value >> (width - BN_1)) {\n        const mask = (BN_1 << width) - BN_1;\n        return -(((~value) & mask) + BN_1);\n    }\n\n    return value;\n}\n\n/**\n *  Convert %%value%% to a twos-compliment representation of\n *  %%width%% bits.\n *\n *  The result will always be positive.\n */\nexport function toTwos(_value: BigNumberish, _width: Numeric): bigint {\n    let value = getBigInt(_value, \"value\");\n    const width = BigInt(getNumber(_width, \"width\"));\n\n    const limit = (BN_1 << (width - BN_1));\n\n    if (value < BN_0) {\n        value = -value;\n        assert(value <= limit, \"too low\", \"NUMERIC_FAULT\", {\n            operation: \"toTwos\", fault: \"overflow\", value: _value\n        });\n        const mask = (BN_1 << width) - BN_1;\n        return ((~value) & mask) + BN_1;\n    } else {\n        assert(value < limit, \"too high\", \"NUMERIC_FAULT\", {\n            operation: \"toTwos\", fault: \"overflow\", value: _value\n        });\n    }\n\n    return value;\n}\n\n/**\n *  Mask %%value%% with a bitmask of %%bits%% ones.\n */\nexport function mask(_value: BigNumberish, _bits: Numeric): bigint {\n    const value = getUint(_value, \"value\");\n    const bits = BigInt(getNumber(_bits, \"bits\"));\n    return value & ((BN_1 << bits) - BN_1);\n}\n\n/**\n *  Gets a BigInt from %%value%%. If it is an invalid value for\n *  a BigInt, then an ArgumentError will be thrown for %%name%%.\n */\nexport function getBigInt(value: BigNumberish, name?: string): bigint {\n    switch (typeof(value)) {\n        case \"bigint\": return value;\n        case \"number\":\n            assertArgument(Number.isInteger(value), \"underflow\", name || \"value\", value);\n            assertArgument(value >= -maxValue && value <= maxValue, \"overflow\", name || \"value\", value);\n            return BigInt(value);\n        case \"string\":\n            try {\n                if (value === \"\") { throw new Error(\"empty string\"); }\n                if (value[0] === \"-\" && value[1] !== \"-\") {\n                    return -BigInt(value.substring(1));\n                }\n                return BigInt(value);\n            } catch(e: any) {\n                assertArgument(false, `invalid BigNumberish string: ${ e.message }`, name || \"value\", value);\n            }\n    }\n    assertArgument(false, \"invalid BigNumberish value\", name || \"value\", value);\n}\n\n/**\n *  Returns %%value%% as a bigint, validating it is valid as a bigint\n *  value and that it is positive.\n */\nexport function getUint(value: BigNumberish, name?: string): bigint {\n    const result = getBigInt(value, name);\n    assert(result >= BN_0, \"unsigned value cannot be negative\", \"NUMERIC_FAULT\", {\n        fault: \"overflow\", operation: \"getUint\", value\n    });\n    return result;\n}\n\nconst Nibbles = \"0123456789abcdef\";\n\n/*\n * Converts %%value%% to a BigInt. If %%value%% is a Uint8Array, it\n * is treated as Big Endian data.\n */\nexport function toBigInt(value: BigNumberish | Uint8Array): bigint {\n    if (value instanceof Uint8Array) {\n        let result = \"0x0\";\n        for (const v of value) {\n            result += Nibbles[v >> 4];\n            result += Nibbles[v & 0x0f];\n        }\n        return BigInt(result);\n    }\n\n    return getBigInt(value);\n}\n\n/**\n *  Gets a //number// from %%value%%. If it is an invalid value for\n *  a //number//, then an ArgumentError will be thrown for %%name%%.\n */\nexport function getNumber(value: BigNumberish, name?: string): number {\n    switch (typeof(value)) {\n        case \"bigint\":\n            assertArgument(value >= -maxValue && value <= maxValue, \"overflow\", name || \"value\", value);\n            return Number(value);\n        case \"number\":\n            assertArgument(Number.isInteger(value), \"underflow\", name || \"value\", value);\n            assertArgument(value >= -maxValue && value <= maxValue, \"overflow\", name || \"value\", value);\n            return value;\n        case \"string\":\n            try {\n                if (value === \"\") { throw new Error(\"empty string\"); }\n                return getNumber(BigInt(value), name);\n            } catch(e: any) {\n                assertArgument(false, `invalid numeric string: ${ e.message }`, name || \"value\", value);\n            }\n    }\n    assertArgument(false, \"invalid numeric value\", name || \"value\", value);\n}\n\n\n/**\n *  Converts %%value%% to a number. If %%value%% is a Uint8Array, it\n *  is treated as Big Endian data. Throws if the value is not safe.\n */\nexport function toNumber(value: BigNumberish | Uint8Array): number {\n    return getNumber(toBigInt(value));\n}\n\n/**\n *  Converts %%value%% to a Big Endian hexstring, optionally padded to\n *  %%width%% bytes.\n */\nexport function toBeHex(_value: BigNumberish, _width?: Numeric): string {\n    const value = getUint(_value, \"value\");\n\n    let result = value.toString(16);\n\n    if (_width == null) {\n        // Ensure the value is of even length\n        if (result.length % 2) { result = \"0\" + result; }\n    } else {\n        const width = getNumber(_width, \"width\");\n        assert(width * 2 >= result.length, `value exceeds width (${ width } bytes)`, \"NUMERIC_FAULT\", {\n            operation: \"toBeHex\",\n            fault: \"overflow\",\n            value: _value\n        });\n\n        // Pad the value to the required width\n        while (result.length < (width * 2)) { result = \"0\" + result; }\n\n    }\n\n    return \"0x\" + result;\n}\n\n/**\n *  Converts %%value%% to a Big Endian Uint8Array.\n */\nexport function toBeArray(_value: BigNumberish): Uint8Array {\n    const value = getUint(_value, \"value\");\n\n    if (value === BN_0) { return new Uint8Array([ ]); }\n\n    let hex = value.toString(16);\n    if (hex.length % 2) { hex = \"0\" + hex; }\n\n    const result = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < result.length; i++) {\n        const offset = i * 2;\n        result[i] = parseInt(hex.substring(offset, offset + 2), 16);\n    }\n\n    return result;\n}\n\n/**\n *  Returns a [[HexString]] for %%value%% safe to use as a //Quantity//.\n *\n *  A //Quantity// does not have and leading 0 values unless the value is\n *  the literal value `0x0`. This is most commonly used for JSSON-RPC\n *  numeric values.\n */\nexport function toQuantity(value: BytesLike | BigNumberish): string {\n    let result = hexlify(isBytesLike(value) ? value: toBeArray(value)).substring(2);\n    while (result.startsWith(\"0\")) { result = result.substring(1); }\n    if (result === \"\") { result = \"0\"; }\n    return \"0x\" + result;\n}\n", "/**\n *  [Base64 encoding](link-wiki-base64) using 6-bit words to encode\n *  arbitrary bytes into a string using 65 printable symbols, the\n *  upper-case and lower-case alphabet, the digits ``0`` through ``9``,\n *  ``\"+\"`` and ``\"/\"`` with the ``\"=\"`` used for padding.\n *\n *  @_subsection: api/utils:Base64 Encoding  [about-base64]\n */\nimport { getBytes, getBytesCopy } from \"./data.js\";\n\nimport type { BytesLike } from \"./data.js\";\n\n\n/**\n *  Decodes the base-64 encoded %%value%%.\n *\n *  @example:\n *    // The decoded value is always binary data...\n *    result = decodeBase64(\"SGVsbG8gV29ybGQhIQ==\")\n *    //_result:\n *\n *    // ...use toUtf8String to convert it to a string.\n *    toUtf8String(result)\n *    //_result:\n *\n *    // Decoding binary data\n *    decodeBase64(\"EjQ=\")\n *    //_result:\n */\nexport function decodeBase64(value: string): Uint8Array {\n    return getBytesCopy(Buffer.from(value, \"base64\"));\n};\n\n/**\n *  Encodes %%data%% as a base-64 encoded string.\n *\n *  @example:\n *    // Encoding binary data as a hexstring\n *    encodeBase64(\"0x1234\")\n *    //_result:\n *\n *    // Encoding binary data as a Uint8Array\n *    encodeBase64(new Uint8Array([ 0x12, 0x34 ]))\n *    //_result:\n *\n *    // The input MUST be data...\n *    encodeBase64(\"Hello World!!\")\n *    //_error:\n *\n *    // ...use toUtf8Bytes for this.\n *    encodeBase64(toUtf8Bytes(\"Hello World!!\"))\n *    //_result:\n */\nexport function encodeBase64(data: BytesLike): string {\n    return Buffer.from(getBytes(data)).toString(\"base64\");\n}\n", "/**\n *  Events allow for applications to use the observer pattern, which\n *  allows subscribing and publishing events, outside the normal\n *  execution paths.\n *\n *  @_section api/utils/events:Events  [about-events]\n */\nimport { defineProperties } from \"./properties.js\";\n\n/**\n *  A callback function called when a an event is triggered.\n */\nexport type Listener = (...args: Array<any>) => void;\n\n/**\n *  An **EventEmitterable** behaves similar to an EventEmitter\n *  except provides async access to its methods.\n *\n *  An EventEmitter implements the observer pattern.\n */\nexport interface EventEmitterable<T> {\n    /**\n     *  Registers a %%listener%% that is called whenever the\n     *  %%event%% occurs until unregistered.\n     */\n    on(event: T, listener: Listener): Promise<this>;\n\n    /**\n     *  Registers a %%listener%% that is called the next time\n     *  %%event%% occurs.\n     */\n    once(event: T, listener: Listener): Promise<this>;\n\n    /**\n     *  Triggers each listener for %%event%% with the %%args%%.\n     */\n    emit(event: T, ...args: Array<any>): Promise<boolean>;\n\n    /**\n     *  Resolves to the number of listeners for %%event%%.\n     */\n    listenerCount(event?: T): Promise<number>;\n\n    /**\n     *  Resolves to the listeners for %%event%%.\n     */\n    listeners(event?: T): Promise<Array<Listener>>;\n\n    /**\n     *  Unregister the %%listener%% for %%event%%. If %%listener%%\n     *  is unspecified, all listeners are unregistered.\n     */\n    off(event: T, listener?: Listener): Promise<this>;\n\n    /**\n     *  Unregister all listeners for %%event%%.\n     */\n    removeAllListeners(event?: T): Promise<this>;\n\n    /**\n     *  Alias for [[on]].\n     */\n    addListener(event: T, listener: Listener): Promise<this>;\n\n    /**\n     *  Alias for [[off]].\n     */\n    removeListener(event: T, listener: Listener): Promise<this>;\n}\n\n/**\n *  When an [[EventEmitterable]] triggers a [[Listener]], the\n *  callback always ahas one additional argument passed, which is\n *  an **EventPayload**.\n */\nexport class EventPayload<T> {\n    /**\n     *  The event filter.\n     */\n    readonly filter!: T;\n\n    /**\n     *  The **EventEmitterable**.\n     */\n    readonly emitter!: EventEmitterable<T>;\n\n    readonly #listener: null | Listener;\n\n    /**\n     *  Create a new **EventPayload** for %%emitter%% with\n     *  the %%listener%% and for %%filter%%.\n     */\n    constructor(emitter: EventEmitterable<T>, listener: null | Listener, filter: T) {\n        this.#listener = listener;\n        defineProperties<EventPayload<any>>(this, { emitter, filter });\n    }\n\n    /**\n     *  Unregister the triggered listener for future events.\n     */\n    async removeListener(): Promise<void> {\n        if (this.#listener == null) { return; }\n        await this.emitter.off(this.filter, this.#listener);\n    }\n}\n", "/**\n *  Fetching content from the web is environment-specific, so Ethers\n *  provides an abstraction that each environment can implement to provide\n *  this service.\n *\n *  On [Node.js](link-node), the ``http`` and ``https`` libs are used to\n *  create a request object, register event listeners and process data\n *  and populate the [[FetchResponse]].\n *\n *  In a browser, the [DOM fetch](link-js-fetch) is used, and the resulting\n *  ``Promise`` is waited on to retrieve the payload.\n *\n *  The [[FetchRequest]] is responsible for handling many common situations,\n *  such as redirects, server throttling, authentication, etc.\n *\n *  It also handles common gateways, such as IPFS and data URIs.\n *\n *  @_section api/utils/fetching:Fetching Web Content  [about-fetch]\n */\nimport { decodeBase64, encodeBase64 } from \"./base64.js\";\nimport { hexlify } from \"./data.js\";\nimport { assert, assertArgument } from \"./errors.js\";\nimport { defineProperties } from \"./properties.js\";\nimport { toUtf8Bytes, toUtf8String } from \"./utf8.js\";\n\nimport { createGetUrl } from \"./geturl.js\";\n\n/**\n *  An environment's implementation of ``getUrl`` must return this type.\n */\nexport type GetUrlResponse = {\n    statusCode: number,\n    statusMessage: string,\n    headers: Record<string, string>,\n    body: null | Uint8Array\n};\n\n/**\n *  This can be used to control how throttling is handled in\n *  [[FetchRequest-setThrottleParams]].\n */\nexport type FetchThrottleParams = {\n    maxAttempts?: number;\n    slotInterval?: number;\n};\n\n/**\n *  Called before any network request, allowing updated headers (e.g. Bearer tokens), etc.\n */\nexport type FetchPreflightFunc = (req: FetchRequest) => Promise<FetchRequest>;\n\n/**\n *  Called on the response, allowing client-based throttling logic or post-processing.\n */\nexport type FetchProcessFunc = (req: FetchRequest, resp: FetchResponse) => Promise<FetchResponse>;\n\n/**\n *  Called prior to each retry; return true to retry, false to abort.\n */\nexport type FetchRetryFunc = (req: FetchRequest, resp: FetchResponse, attempt: number) => Promise<boolean>;\n\n/**\n *  Called on Gateway URLs.\n */\nexport type FetchGatewayFunc = (url: string, signal?: FetchCancelSignal) => Promise<FetchRequest | FetchResponse>;\n\n/**\n *  Used to perform a fetch; use this to override the underlying network\n *  fetch layer. In NodeJS, the default uses the \"http\" and \"https\" libraries\n *  and in the browser ``fetch`` is used. If you wish to use Axios, this is\n *  how you would register it.\n */\nexport type FetchGetUrlFunc = (req: FetchRequest, signal?: FetchCancelSignal) => Promise<GetUrlResponse>;\n\n\nconst MAX_ATTEMPTS = 12;\nconst SLOT_INTERVAL = 250;\n\n// The global FetchGetUrlFunc implementation.\nlet defaultGetUrlFunc: FetchGetUrlFunc = createGetUrl();\n\nconst reData = new RegExp(\"^data:([^;:]*)?(;base64)?,(.*)$\", \"i\");\nconst reIpfs = new RegExp(\"^ipfs:/\\/(ipfs/)?(.*)$\", \"i\");\n\n// If locked, new Gateways cannot be added\nlet locked = false;\n\n// https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URLs\nasync function dataGatewayFunc(url: string, signal?: FetchCancelSignal): Promise<FetchResponse> {\n    try {\n        const match = url.match(reData);\n        if (!match) { throw new Error(\"invalid data\"); }\n        return new FetchResponse(200, \"OK\", {\n            \"content-type\": (match[1] || \"text/plain\"),\n        }, (match[2] ? decodeBase64(match[3]): unpercent(match[3])));\n    } catch (error) {\n        return new FetchResponse(599, \"BAD REQUEST (invalid data: URI)\", { }, null, new FetchRequest(url));\n    }\n}\n\n/**\n *  Returns a [[FetchGatewayFunc]] for fetching content from a standard\n *  IPFS gateway hosted at %%baseUrl%%.\n */\nfunction getIpfsGatewayFunc(baseUrl: string): FetchGatewayFunc {\n    async function gatewayIpfs(url: string, signal?: FetchCancelSignal): Promise<FetchRequest | FetchResponse> {\n        try {\n            const match = url.match(reIpfs);\n            if (!match) { throw new Error(\"invalid link\"); }\n            return new FetchRequest(`${ baseUrl }${ match[2] }`);\n        } catch (error) {\n            return new FetchResponse(599, \"BAD REQUEST (invalid IPFS URI)\", { }, null, new FetchRequest(url));\n        }\n    }\n\n    return gatewayIpfs;\n}\n\nconst Gateways: Record<string, FetchGatewayFunc> = {\n    \"data\": dataGatewayFunc,\n    \"ipfs\": getIpfsGatewayFunc(\"https:/\\/gateway.ipfs.io/ipfs/\")\n};\n\nconst fetchSignals: WeakMap<FetchRequest, () => void> = new WeakMap();\n\n/**\n *  @_ignore\n */\nexport class FetchCancelSignal {\n    #listeners: Array<() => void>;\n    #cancelled: boolean;\n\n    constructor(request: FetchRequest) {\n        this.#listeners = [ ];\n        this.#cancelled = false;\n\n        fetchSignals.set(request, () => {\n            if (this.#cancelled) { return; }\n            this.#cancelled = true;\n\n            for (const listener of this.#listeners) {\n                setTimeout(() => { listener(); }, 0);\n            }\n            this.#listeners = [ ];\n        });\n    }\n\n    addListener(listener: () => void): void {\n        assert(!this.#cancelled, \"singal already cancelled\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"fetchCancelSignal.addCancelListener\"\n        });\n        this.#listeners.push(listener);\n    }\n\n    get cancelled(): boolean { return this.#cancelled; }\n\n    checkSignal(): void {\n        assert(!this.cancelled, \"cancelled\", \"CANCELLED\", { });\n    }\n}\n\n// Check the signal, throwing if it is cancelled\nfunction checkSignal(signal?: FetchCancelSignal): FetchCancelSignal {\n    if (signal == null) { throw new Error(\"missing signal; should not happen\"); }\n    signal.checkSignal();\n    return signal;\n}\n\n/**\n *  Represents a request for a resource using a URI.\n *\n *  By default, the supported schemes are ``HTTP``, ``HTTPS``, ``data:``,\n *  and ``IPFS:``.\n *\n *  Additional schemes can be added globally using [[registerGateway]].\n *\n *  @example:\n *    req = new FetchRequest(\"https://www.ricmoo.com\")\n *    resp = await req.send()\n *    resp.body.length\n *    //_result:\n */\nexport class FetchRequest implements Iterable<[ key: string, value: string ]> {\n    #allowInsecure: boolean;\n    #gzip: boolean;\n    #headers: Record<string, string>;\n    #method: string;\n    #timeout: number;\n    #url: string;\n\n    #body?: Uint8Array;\n    #bodyType?: string;\n    #creds?: string;\n\n    // Hooks\n    #preflight?: null | FetchPreflightFunc;\n    #process?: null | FetchProcessFunc;\n    #retry?: null | FetchRetryFunc;\n\n    #signal?: FetchCancelSignal;\n\n    #throttle: Required<FetchThrottleParams>;\n\n    #getUrlFunc: null | FetchGetUrlFunc;\n\n    /**\n     *  The fetch URL to request.\n     */\n    get url(): string { return this.#url; }\n    set url(url: string) {\n        this.#url = String(url);\n    }\n\n    /**\n     *  The fetch body, if any, to send as the request body. //(default: null)//\n     *\n     *  When setting a body, the intrinsic ``Content-Type`` is automatically\n     *  set and will be used if **not overridden** by setting a custom\n     *  header.\n     *\n     *  If %%body%% is null, the body is cleared (along with the\n     *  intrinsic ``Content-Type``).\n     *\n     *  If %%body%% is a string, the intrinsic ``Content-Type`` is set to\n     *  ``text/plain``.\n     *\n     *  If %%body%% is a Uint8Array, the intrinsic ``Content-Type`` is set to\n     *  ``application/octet-stream``.\n     *\n     *  If %%body%% is any other object, the intrinsic ``Content-Type`` is\n     *  set to ``application/json``.\n     */\n    get body(): null | Uint8Array {\n        if (this.#body == null) { return null; }\n        return new Uint8Array(this.#body);\n    }\n    set body(body: null | string | Readonly<object> | Readonly<Uint8Array>) {\n        if (body == null) {\n            this.#body = undefined;\n            this.#bodyType = undefined;\n        } else if (typeof(body) === \"string\") {\n            this.#body = toUtf8Bytes(body);\n            this.#bodyType = \"text/plain\";\n        } else if (body instanceof Uint8Array) {\n            this.#body = body;\n            this.#bodyType = \"application/octet-stream\";\n        } else if (typeof(body) === \"object\") {\n            this.#body = toUtf8Bytes(JSON.stringify(body));\n            this.#bodyType = \"application/json\";\n        } else {\n            throw new Error(\"invalid body\");\n        }\n    }\n\n    /**\n     *  Returns true if the request has a body.\n     */\n    hasBody(): this is (FetchRequest & { body: Uint8Array }) {\n        return (this.#body != null);\n    }\n\n    /**\n     *  The HTTP method to use when requesting the URI. If no method\n     *  has been explicitly set, then ``GET`` is used if the body is\n     *  null and ``POST`` otherwise.\n     */\n    get method(): string {\n        if (this.#method) { return this.#method; }\n        if (this.hasBody()) { return \"POST\"; }\n        return \"GET\";\n    }\n    set method(method: null | string) {\n        if (method == null) { method = \"\"; }\n        this.#method = String(method).toUpperCase();\n    }\n\n    /**\n     *  The headers that will be used when requesting the URI. All\n     *  keys are lower-case.\n     *\n     *  This object is a copy, so any changes will **NOT** be reflected\n     *  in the ``FetchRequest``.\n     *\n     *  To set a header entry, use the ``setHeader`` method.\n     */\n    get headers(): Record<string, string> {\n        const headers = Object.assign({ }, this.#headers);\n\n        if (this.#creds) {\n            headers[\"authorization\"] = `Basic ${ encodeBase64(toUtf8Bytes(this.#creds)) }`;\n        };\n\n        if (this.allowGzip) {\n            headers[\"accept-encoding\"] = \"gzip\";\n        }\n\n        if (headers[\"content-type\"] == null && this.#bodyType) {\n            headers[\"content-type\"] = this.#bodyType;\n        }\n        if (this.body) { headers[\"content-length\"] = String(this.body.length); }\n\n        return headers;\n    }\n\n    /**\n     *  Get the header for %%key%%, ignoring case.\n     */\n    getHeader(key: string): string {\n        return this.headers[key.toLowerCase()];\n    }\n\n    /**\n     *  Set the header for %%key%% to %%value%%. All values are coerced\n     *  to a string.\n     */\n    setHeader(key: string, value: string | number): void {\n        this.#headers[String(key).toLowerCase()] = String(value);\n    }\n\n    /**\n     *  Clear all headers, resetting all intrinsic headers.\n     */\n    clearHeaders(): void {\n        this.#headers = { };\n    }\n\n    [Symbol.iterator](): Iterator<[ key: string, value: string ]> {\n        const headers = this.headers;\n        const keys = Object.keys(headers);\n        let index = 0;\n        return {\n            next: () => {\n                if (index < keys.length) {\n                    const key = keys[index++];\n                    return {\n                        value: [ key, headers[key] ], done: false\n                    }\n                }\n                return { value: undefined, done: true };\n            }\n        };\n    }\n\n    /**\n     *  The value that will be sent for the ``Authorization`` header.\n     *\n     *  To set the credentials, use the ``setCredentials`` method.\n     */\n    get credentials(): null | string {\n        return this.#creds || null;\n    }\n\n    /**\n     *  Sets an ``Authorization`` for %%username%% with %%password%%.\n     */\n    setCredentials(username: string, password: string): void {\n        assertArgument(!username.match(/:/), \"invalid basic authentication username\", \"username\", \"[REDACTED]\");\n        this.#creds = `${ username }:${ password }`;\n    }\n\n    /**\n     *  Enable and request gzip-encoded responses. The response will\n     *  automatically be decompressed. //(default: true)//\n     */\n    get allowGzip(): boolean {\n        return this.#gzip;\n    }\n    set allowGzip(value: boolean) {\n        this.#gzip = !!value;\n    }\n\n    /**\n     *  Allow ``Authentication`` credentials to be sent over insecure\n     *  channels. //(default: false)//\n     */\n    get allowInsecureAuthentication(): boolean {\n        return !!this.#allowInsecure;\n    }\n    set allowInsecureAuthentication(value: boolean) {\n        this.#allowInsecure = !!value;\n    }\n\n    /**\n     *  The timeout (in milliseconds) to wait for a complete response.\n     *  //(default: 5 minutes)//\n     */\n    get timeout(): number { return this.#timeout; }\n    set timeout(timeout: number) {\n        assertArgument(timeout >= 0, \"timeout must be non-zero\", \"timeout\", timeout);\n        this.#timeout = timeout;\n    }\n\n    /**\n     *  This function is called prior to each request, for example\n     *  during a redirection or retry in case of server throttling.\n     *\n     *  This offers an opportunity to populate headers or update\n     *  content before sending a request.\n     */\n    get preflightFunc(): null | FetchPreflightFunc {\n        return this.#preflight || null;\n    }\n    set preflightFunc(preflight: null | FetchPreflightFunc) {\n        this.#preflight = preflight;\n    }\n\n    /**\n     *  This function is called after each response, offering an\n     *  opportunity to provide client-level throttling or updating\n     *  response data.\n     *\n     *  Any error thrown in this causes the ``send()`` to throw.\n     *\n     *  To schedule a retry attempt (assuming the maximum retry limit\n     *  has not been reached), use [[response.throwThrottleError]].\n     */\n    get processFunc(): null | FetchProcessFunc {\n        return this.#process || null;\n    }\n    set processFunc(process: null | FetchProcessFunc) {\n        this.#process = process;\n    }\n\n    /**\n     *  This function is called on each retry attempt.\n     */\n    get retryFunc(): null | FetchRetryFunc {\n        return this.#retry || null;\n    }\n    set retryFunc(retry: null | FetchRetryFunc) {\n        this.#retry = retry;\n    }\n\n    /**\n     *  This function is called to fetch content from HTTP and\n     *  HTTPS URLs and is platform specific (e.g. nodejs vs\n     *  browsers).\n     *\n     *  This is by default the currently registered global getUrl\n     *  function, which can be changed using [[registerGetUrl]].\n     *  If this has been set, setting is to ``null`` will cause\n     *  this FetchRequest (and any future clones) to revert back to\n     *  using the currently registered global getUrl function.\n     *\n     *  Setting this is generally not necessary, but may be useful\n     *  for developers that wish to intercept requests or to\n     *  configurege a proxy or other agent.\n     */\n    get getUrlFunc(): FetchGetUrlFunc {\n        return this.#getUrlFunc || defaultGetUrlFunc;\n    }\n    set getUrlFunc(value: null | FetchGetUrlFunc) {\n        this.#getUrlFunc = value;\n    }\n\n    /**\n     *  Create a new FetchRequest instance with default values.\n     *\n     *  Once created, each property may be set before issuing a\n     *  ``.send()`` to make the request.\n     */\n    constructor(url: string) {\n        this.#url = String(url);\n\n        this.#allowInsecure = false;\n        this.#gzip = true;\n        this.#headers = { };\n        this.#method = \"\";\n        this.#timeout = 300000;\n\n        this.#throttle = {\n            slotInterval: SLOT_INTERVAL,\n            maxAttempts: MAX_ATTEMPTS\n        };\n\n        this.#getUrlFunc = null;\n    }\n\n    toString(): string {\n        return `<FetchRequest method=${ JSON.stringify(this.method) } url=${ JSON.stringify(this.url) } headers=${ JSON.stringify(this.headers) } body=${ this.#body ? hexlify(this.#body): \"null\" }>`;\n    }\n\n    /**\n     *  Update the throttle parameters used to determine maximum\n     *  attempts and exponential-backoff properties.\n     */\n    setThrottleParams(params: FetchThrottleParams): void {\n        if (params.slotInterval != null) {\n            this.#throttle.slotInterval = params.slotInterval;\n        }\n        if (params.maxAttempts != null) {\n            this.#throttle.maxAttempts = params.maxAttempts;\n        }\n    }\n\n    async #send(attempt: number, expires: number, delay: number, _request: FetchRequest, _response: FetchResponse): Promise<FetchResponse> {\n        if (attempt >= this.#throttle.maxAttempts) {\n            return _response.makeServerError(\"exceeded maximum retry limit\");\n        }\n\n        assert(getTime() <= expires, \"timeout\", \"TIMEOUT\", {\n            operation: \"request.send\", reason: \"timeout\", request: _request\n        });\n\n        if (delay > 0) { await wait(delay); }\n\n        let req = this.clone();\n        const scheme = (req.url.split(\":\")[0] || \"\").toLowerCase();\n\n        // Process any Gateways\n        if (scheme in Gateways) {\n            const result = await Gateways[scheme](req.url, checkSignal(_request.#signal));\n            if (result instanceof FetchResponse) {\n                let response = result;\n\n                if (this.processFunc) {\n                    checkSignal(_request.#signal);\n                    try {\n                        response = await this.processFunc(req, response);\n                    } catch (error: any) {\n\n                        // Something went wrong during processing; throw a 5xx server error\n                        if (error.throttle == null || typeof(error.stall) !== \"number\") {\n                            response.makeServerError(\"error in post-processing function\", error).assertOk();\n                        }\n\n                        // Ignore throttling\n                    }\n                }\n\n                return response;\n            }\n            req = result;\n        }\n\n        // We have a preflight function; update the request\n        if (this.preflightFunc) { req = await this.preflightFunc(req); }\n\n        const resp = await this.getUrlFunc(req, checkSignal(_request.#signal));\n        let response = new FetchResponse(resp.statusCode, resp.statusMessage, resp.headers, resp.body, _request);\n\n        if (response.statusCode === 301 || response.statusCode === 302) {\n\n            // Redirect\n            try {\n                const location = response.headers.location || \"\";\n                return req.redirect(location).#send(attempt + 1, expires, 0, _request, response);\n            } catch (error) { }\n\n            // Things won't get any better on another attempt; abort\n            return response;\n\n        } else if (response.statusCode === 429) {\n\n            // Throttle\n            if (this.retryFunc == null || (await this.retryFunc(req, response, attempt))) {\n                const retryAfter = response.headers[\"retry-after\"];\n                let delay = this.#throttle.slotInterval * Math.trunc(Math.random() * Math.pow(2, attempt));\n                if (typeof(retryAfter) === \"string\" && retryAfter.match(/^[1-9][0-9]*$/)) {\n                    delay = parseInt(retryAfter);\n                }\n                return req.clone().#send(attempt + 1, expires, delay, _request, response);\n            }\n        }\n\n        if (this.processFunc) {\n            checkSignal(_request.#signal);\n            try {\n                response = await this.processFunc(req, response);\n            } catch (error: any) {\n\n                // Something went wrong during processing; throw a 5xx server error\n                if (error.throttle == null || typeof(error.stall) !== \"number\") {\n                    response.makeServerError(\"error in post-processing function\", error).assertOk();\n                }\n\n                // Throttle\n                let delay = this.#throttle.slotInterval * Math.trunc(Math.random() * Math.pow(2, attempt));;\n                if (error.stall >= 0) { delay = error.stall; }\n\n                return req.clone().#send(attempt + 1, expires, delay, _request, response);\n            }\n        }\n\n        return response;\n    }\n\n    /**\n     *  Resolves to the response by sending the request.\n     */\n    send(): Promise<FetchResponse> {\n        assert(this.#signal == null, \"request already sent\", \"UNSUPPORTED_OPERATION\", { operation: \"fetchRequest.send\" });\n        this.#signal = new FetchCancelSignal(this);\n        return this.#send(0, getTime() + this.timeout, 0, this, new FetchResponse(0, \"\", { }, null, this));\n    }\n\n    /**\n     *  Cancels the inflight response, causing a ``CANCELLED``\n     *  error to be rejected from the [[send]].\n     */\n    cancel(): void {\n        assert(this.#signal != null, \"request has not been sent\", \"UNSUPPORTED_OPERATION\", { operation: \"fetchRequest.cancel\" });\n        const signal = fetchSignals.get(this);\n        if (!signal) { throw new Error(\"missing signal; should not happen\"); }\n        signal();\n    }\n\n    /**\n     *  Returns a new [[FetchRequest]] that represents the redirection\n     *  to %%location%%.\n     */\n    redirect(location: string): FetchRequest {\n        // Redirection; for now we only support absolute locations\n        const current = this.url.split(\":\")[0].toLowerCase();\n        const target = location.split(\":\")[0].toLowerCase();\n\n        // Don't allow redirecting:\n        // - non-GET requests\n        // - downgrading the security (e.g. https => http)\n        // - to non-HTTP (or non-HTTPS) protocols [this could be relaxed?]\n        assert(this.method === \"GET\" && (current !== \"https\" || target !== \"http\") && location.match(/^https?:/), `unsupported redirect`, \"UNSUPPORTED_OPERATION\", {\n            operation: `redirect(${ this.method } ${ JSON.stringify(this.url) } => ${ JSON.stringify(location) })`\n        });\n\n        // Create a copy of this request, with a new URL\n        const req = new FetchRequest(location);\n        req.method = \"GET\";\n        req.allowGzip = this.allowGzip;\n        req.timeout = this.timeout;\n        req.#headers = Object.assign({ }, this.#headers);\n        if (this.#body) { req.#body = new Uint8Array(this.#body); }\n        req.#bodyType = this.#bodyType;\n\n        // Do not forward credentials unless on the same domain; only absolute\n        //req.allowInsecure = false;\n        // paths are currently supported; may want a way to specify to forward?\n        //setStore(req.#props, \"creds\", getStore(this.#pros, \"creds\"));\n\n        return req;\n    }\n\n    /**\n     *  Create a new copy of this request.\n     */\n    clone(): FetchRequest {\n        const clone = new FetchRequest(this.url);\n\n        // Preserve \"default method\" (i.e. null)\n        clone.#method = this.#method;\n\n        // Preserve \"default body\" with type, copying the Uint8Array is present\n        if (this.#body) { clone.#body = this.#body; }\n        clone.#bodyType = this.#bodyType;\n\n        // Preserve \"default headers\"\n        clone.#headers = Object.assign({ }, this.#headers);\n\n        // Credentials is readonly, so we copy internally\n        clone.#creds = this.#creds;\n\n        if (this.allowGzip) { clone.allowGzip = true; }\n\n        clone.timeout = this.timeout;\n        if (this.allowInsecureAuthentication) { clone.allowInsecureAuthentication = true; }\n\n        clone.#preflight = this.#preflight;\n        clone.#process = this.#process;\n        clone.#retry = this.#retry;\n\n        clone.#throttle = Object.assign({ }, this.#throttle);\n\n        clone.#getUrlFunc = this.#getUrlFunc;\n\n        return clone;\n    }\n\n    /**\n     *  Locks all static configuration for gateways and FetchGetUrlFunc\n     *  registration.\n     */\n    static lockConfig(): void {\n        locked = true;\n    }\n\n    /**\n     *  Get the current Gateway function for %%scheme%%.\n     */\n    static getGateway(scheme: string): null | FetchGatewayFunc {\n        return Gateways[scheme.toLowerCase()] || null;\n    }\n\n    /**\n     *  Use the %%func%% when fetching URIs using %%scheme%%.\n     *\n     *  This method affects all requests globally.\n     *\n     *  If [[lockConfig]] has been called, no change is made and this\n     *  throws.\n     */\n    static registerGateway(scheme: string, func: FetchGatewayFunc): void {\n        scheme = scheme.toLowerCase();\n        if (scheme === \"http\" || scheme === \"https\") {\n            throw new Error(`cannot intercept ${ scheme }; use registerGetUrl`);\n        }\n        if (locked) { throw new Error(\"gateways locked\"); }\n        Gateways[scheme] = func;\n    }\n\n    /**\n     *  Use %%getUrl%% when fetching URIs over HTTP and HTTPS requests.\n     *\n     *  This method affects all requests globally.\n     *\n     *  If [[lockConfig]] has been called, no change is made and this\n     *  throws.\n     */\n    static registerGetUrl(getUrl: FetchGetUrlFunc): void {\n        if (locked) { throw new Error(\"gateways locked\"); }\n        defaultGetUrlFunc = getUrl;\n    }\n\n    /**\n     *  Creates a getUrl function that fetches content from HTTP and\n     *  HTTPS URLs.\n     *\n     *  The available %%options%% are dependent on the platform\n     *  implementation of the default getUrl function.\n     *\n     *  This is not generally something that is needed, but is useful\n     *  when trying to customize simple behaviour when fetching HTTP\n     *  content.\n     */\n    static createGetUrlFunc(options?: Record<string, any>): FetchGetUrlFunc {\n        return createGetUrl(options);\n    }\n\n    /**\n     *  Creates a function that can \"fetch\" data URIs.\n     *\n     *  Note that this is automatically done internally to support\n     *  data URIs, so it is not necessary to register it.\n     *\n     *  This is not generally something that is needed, but may\n     *  be useful in a wrapper to perfom custom data URI functionality.\n     */\n    static createDataGateway(): FetchGatewayFunc {\n        return dataGatewayFunc;\n    }\n\n    /**\n     *  Creates a function that will fetch IPFS (unvalidated) from\n     *  a custom gateway baseUrl.\n     *\n     *  The default IPFS gateway used internally is\n     *  ``\"https:/\\/gateway.ipfs.io/ipfs/\"``.\n     */\n    static createIpfsGatewayFunc(baseUrl: string): FetchGatewayFunc {\n        return getIpfsGatewayFunc(baseUrl);\n    }\n}\n\n\ninterface ThrottleError extends Error {\n    stall: number;\n    throttle: true;\n};\n\n/**\n *  The response for a FetchRequest.\n */\nexport class FetchResponse implements Iterable<[ key: string, value: string ]> {\n    #statusCode: number;\n    #statusMessage: string;\n    #headers: Record<string, string>;\n    #body: null | Readonly<Uint8Array>;\n    #request: null | FetchRequest;\n\n    #error: { error?: Error, message: string };\n\n    toString(): string {\n        return `<FetchResponse status=${ this.statusCode } body=${ this.#body ? hexlify(this.#body): \"null\" }>`;\n    }\n\n    /**\n     *  The response status code.\n     */\n    get statusCode(): number { return this.#statusCode; }\n\n    /**\n     *  The response status message.\n     */\n    get statusMessage(): string { return this.#statusMessage; }\n\n    /**\n     *  The response headers. All keys are lower-case.\n     */\n    get headers(): Record<string, string> { return Object.assign({ }, this.#headers); }\n\n    /**\n     *  The response body, or ``null`` if there was no body.\n     */\n    get body(): null | Readonly<Uint8Array> {\n        return (this.#body == null) ? null: new Uint8Array(this.#body);\n    }\n\n    /**\n     *  The response body as a UTF-8 encoded string, or the empty\n     *  string (i.e. ``\"\"``) if there was no body.\n     *\n     *  An error is thrown if the body is invalid UTF-8 data.\n     */\n    get bodyText(): string {\n        try {\n            return (this.#body == null) ? \"\": toUtf8String(this.#body);\n        } catch (error) {\n            assert(false, \"response body is not valid UTF-8 data\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"bodyText\", info: { response: this }\n            });\n        }\n    }\n\n    /**\n     *  The response body, decoded as JSON.\n     *\n     *  An error is thrown if the body is invalid JSON-encoded data\n     *  or if there was no body.\n     */\n    get bodyJson(): any {\n        try {\n            return JSON.parse(this.bodyText);\n        } catch (error) {\n            assert(false, \"response body is not valid JSON\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"bodyJson\", info: { response: this }\n            });\n        }\n    }\n\n    [Symbol.iterator](): Iterator<[ key: string, value: string ]> {\n        const headers = this.headers;\n        const keys = Object.keys(headers);\n        let index = 0;\n        return {\n            next: () => {\n                if (index < keys.length) {\n                    const key = keys[index++];\n                    return {\n                        value: [ key, headers[key] ], done: false\n                    }\n                }\n                return { value: undefined, done: true };\n            }\n        };\n    }\n\n    constructor(statusCode: number, statusMessage: string, headers: Readonly<Record<string, string>>, body: null | Uint8Array, request?: FetchRequest) {\n        this.#statusCode = statusCode;\n        this.#statusMessage = statusMessage;\n        this.#headers = Object.keys(headers).reduce((accum, k) => {\n            accum[k.toLowerCase()] = String(headers[k]);\n            return accum;\n        }, <Record<string, string>>{ });\n        this.#body = ((body == null) ? null: new Uint8Array(body));\n        this.#request = (request || null);\n\n        this.#error = { message: \"\" };\n    }\n\n    /**\n     *  Return a Response with matching headers and body, but with\n     *  an error status code (i.e. 599) and %%message%% with an\n     *  optional %%error%%.\n     */\n    makeServerError(message?: string, error?: Error): FetchResponse {\n        let statusMessage: string;\n        if (!message) {\n            message = `${ this.statusCode } ${ this.statusMessage }`;\n            statusMessage = `CLIENT ESCALATED SERVER ERROR (${ message })`;\n        } else {\n            statusMessage = `CLIENT ESCALATED SERVER ERROR (${ this.statusCode } ${ this.statusMessage }; ${ message })`;\n        }\n        const response = new FetchResponse(599, statusMessage, this.headers,\n            this.body, this.#request || undefined);\n        response.#error = { message, error };\n        return response;\n    }\n\n    /**\n     *  If called within a [request.processFunc](FetchRequest-processFunc)\n     *  call, causes the request to retry as if throttled for %%stall%%\n     *  milliseconds.\n     */\n    throwThrottleError(message?: string, stall?: number): never {\n        if (stall == null) {\n            stall = -1;\n        } else {\n            assertArgument(Number.isInteger(stall) && stall >= 0, \"invalid stall timeout\", \"stall\", stall);\n        }\n\n        const error = new Error(message || \"throttling requests\");\n\n        defineProperties(<ThrottleError>error, { stall, throttle: true });\n\n        throw error;\n    }\n\n    /**\n     *  Get the header value for %%key%%, ignoring case.\n     */\n    getHeader(key: string): string {\n        return this.headers[key.toLowerCase()];\n    }\n\n    /**\n     *  Returns true if the response has a body.\n     */\n    hasBody(): this is (FetchResponse & { body: Uint8Array }) {\n        return (this.#body != null);\n    }\n\n    /**\n     *  The request made for this response.\n     */\n    get request(): null | FetchRequest { return this.#request; }\n\n    /**\n     *  Returns true if this response was a success statusCode.\n     */\n    ok(): boolean {\n        return (this.#error.message === \"\" && this.statusCode >= 200 && this.statusCode < 300);\n    }\n\n    /**\n     *  Throws a ``SERVER_ERROR`` if this response is not ok.\n     */\n    assertOk(): void {\n        if (this.ok()) { return; }\n        let { message, error } = this.#error;\n        if (message === \"\") {\n            message = `server response ${ this.statusCode } ${ this.statusMessage }`;\n        }\n\n        let requestUrl: null | string = null;\n        if (this.request) { requestUrl = this.request.url; }\n\n        let responseBody: null | string = null;\n        try {\n            if (this.#body) { responseBody = toUtf8String(this.#body); }\n        } catch (e) { }\n\n        assert(false, message, \"SERVER_ERROR\", {\n            request: (this.request || \"unknown request\"), response: this, error,\n            info: {\n                requestUrl, responseBody,\n                responseStatus: `${ this.statusCode } ${ this.statusMessage }` }\n        });\n    }\n}\n\n\nfunction getTime(): number { return (new Date()).getTime(); }\n\nfunction unpercent(value: string): Uint8Array {\n    return toUtf8Bytes(value.replace(/%([0-9a-f][0-9a-f])/gi, (all, code) => {\n        return String.fromCharCode(parseInt(code, 16));\n    }));\n}\n\nfunction wait(delay: number): Promise<void> {\n    return new Promise((resolve) => setTimeout(resolve, delay));\n}\n", "/**\n *  Using strings in Ethereum (or any security-basd system) requires\n *  additional care. These utilities attempt to mitigate some of the\n *  safety issues as well as provide the ability to recover and analyse\n *  strings.\n *\n *  @_subsection api/utils:Strings and UTF-8  [about-strings]\n */\nimport { getBytes } from \"./data.js\";\nimport { assertArgument, assertNormalize } from \"./errors.js\";\n\nimport type { BytesLike } from \"./index.js\";\n\n\n///////////////////////////////\n\n/**\n *  The stanard normalization forms.\n */\nexport type UnicodeNormalizationForm = \"NFC\" | \"NFD\" | \"NFKC\" | \"NFKD\";\n\n/**\n *  When using the UTF-8 error API the following errors can be intercepted\n *  and processed as the %%reason%% passed to the [[Utf8ErrorFunc]].\n *\n *  **``\"UNEXPECTED_CONTINUE\"``** - a continuation byte was present where there\n *  was nothing to continue.\n *\n *  **``\"BAD_PREFIX\"``** - an invalid (non-continuation) byte to start a\n *  UTF-8 codepoint was found.\n *\n *  **``\"OVERRUN\"``** - the string is too short to process the expected\n *  codepoint length.\n *\n *  **``\"MISSING_CONTINUE\"``** - a missing continuation byte was expected but\n *  not found. The %%offset%% indicates the index the continuation byte\n *  was expected at.\n *\n *  **``\"OUT_OF_RANGE\"``** - the computed code point is outside the range\n *  for UTF-8. The %%badCodepoint%% indicates the computed codepoint, which was\n *  outside the valid UTF-8 range.\n *\n *  **``\"UTF16_SURROGATE\"``** - the UTF-8 strings contained a UTF-16 surrogate\n *  pair. The %%badCodepoint%% is the computed codepoint, which was inside the\n *  UTF-16 surrogate range.\n *\n *  **``\"OVERLONG\"``** - the string is an overlong representation. The\n *  %%badCodepoint%% indicates the computed codepoint, which has already\n *  been bounds checked.\n *\n *\n *  @returns string\n */\nexport type Utf8ErrorReason = \"UNEXPECTED_CONTINUE\" | \"BAD_PREFIX\" | \"OVERRUN\" |\n    \"MISSING_CONTINUE\" | \"OUT_OF_RANGE\" | \"UTF16_SURROGATE\" | \"OVERLONG\";\n\n\n/**\n *  A callback that can be used with [[toUtf8String]] to analysis or\n *  recovery from invalid UTF-8 data.\n *\n *  Parsing UTF-8 data is done through a simple Finite-State Machine (FSM)\n *  which calls the ``Utf8ErrorFunc`` if a fault is detected.\n *\n *  The %%reason%% indicates where in the FSM execution the fault\n *  occurred and the %%offset%% indicates where the input failed.\n *\n *  The %%bytes%% represents the raw UTF-8 data that was provided and\n *  %%output%% is the current array of UTF-8 code-points, which may\n *  be updated by the ``Utf8ErrorFunc``.\n *\n *  The value of the %%badCodepoint%% depends on the %%reason%%. See\n *  [[Utf8ErrorReason]] for details.\n *\n *  The function should return the number of bytes that should be skipped\n *  when control resumes to the FSM.\n */\nexport type Utf8ErrorFunc = (reason: Utf8ErrorReason, offset: number, bytes: Uint8Array, output: Array<number>, badCodepoint?: number) => number;\n\n\nfunction errorFunc(reason: Utf8ErrorReason, offset: number, bytes: Uint8Array, output: Array<number>, badCodepoint?: number): number {\n    assertArgument(false, `invalid codepoint at offset ${ offset }; ${ reason }`, \"bytes\", bytes);\n}\n\nfunction ignoreFunc(reason: Utf8ErrorReason, offset: number, bytes: Uint8Array, output: Array<number>, badCodepoint?: number): number {\n\n    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n    if (reason === \"BAD_PREFIX\" || reason === \"UNEXPECTED_CONTINUE\") {\n        let i = 0;\n        for (let o = offset + 1; o < bytes.length; o++) {\n            if (bytes[o] >> 6 !== 0x02) { break; }\n            i++;\n        }\n        return i;\n    }\n\n    // This byte runs us past the end of the string, so just jump to the end\n    // (but the first byte was read already read and therefore skipped)\n    if (reason === \"OVERRUN\") {\n        return bytes.length - offset - 1;\n    }\n\n    // Nothing to skip\n    return 0;\n}\n\nfunction replaceFunc(reason: Utf8ErrorReason, offset: number, bytes: Uint8Array, output: Array<number>, badCodepoint?: number): number {\n\n    // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n    if (reason === \"OVERLONG\") {\n        assertArgument(typeof(badCodepoint) === \"number\", \"invalid bad code point for replacement\", \"badCodepoint\", badCodepoint);\n        output.push(badCodepoint);\n        return 0;\n    }\n\n    // Put the replacement character into the output\n    output.push(0xfffd);\n\n    // Otherwise, process as if ignoring errors\n    return ignoreFunc(reason, offset, bytes, output, badCodepoint);\n}\n\n/**\n *  A handful of popular, built-in UTF-8 error handling strategies.\n *\n *  **``\"error\"``** - throws on ANY illegal UTF-8 sequence or\n *  non-canonical (overlong) codepoints (this is the default)\n *\n *  **``\"ignore\"``** - silently drops any illegal UTF-8 sequence\n *  and accepts non-canonical (overlong) codepoints\n *\n *  **``\"replace\"``** - replace any illegal UTF-8 sequence with the\n *  UTF-8 replacement character (i.e. ``\"\\\\ufffd\"``) and accepts\n *  non-canonical (overlong) codepoints\n *\n *  @returns: Record<\"error\" | \"ignore\" | \"replace\", Utf8ErrorFunc>\n */\nexport const Utf8ErrorFuncs: Readonly<Record<\"error\" | \"ignore\" | \"replace\", Utf8ErrorFunc>> = Object.freeze({\n    error: errorFunc,\n    ignore: ignoreFunc,\n    replace: replaceFunc\n});\n\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(_bytes: BytesLike, onError?: Utf8ErrorFunc): Array<number> {\n    if (onError == null) { onError = Utf8ErrorFuncs.error; }\n\n    const bytes = getBytes(_bytes, \"bytes\");\n\n    const result: Array<number> = [];\n    let i = 0;\n\n    // Invalid bytes are ignored\n    while(i < bytes.length) {\n\n        const c = bytes[i++];\n\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n\n        // Multibyte; how many bytes left for this character?\n        let extraLength: null | number = null;\n        let overlongMask: null | number = null;\n\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n\n        // 1110 xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n\n        // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        } else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n\n        } else {\n            if ((c & 0xc0) === 0x80) {\n                i += onError(\"UNEXPECTED_CONTINUE\", i - 1, bytes, result);\n            } else {\n                i += onError(\"BAD_PREFIX\", i - 1, bytes, result);\n            }\n            continue;\n        }\n\n        // Do we have enough bytes in our data?\n        if (i - 1 + extraLength >= bytes.length) {\n            i += onError(\"OVERRUN\", i - 1, bytes, result);\n            continue;\n        }\n\n        // Remove the length prefix from the char\n        let res: null | number = c & ((1 << (8 - extraLength - 1)) - 1);\n\n        for (let j = 0; j < extraLength; j++) {\n            let nextChar = bytes[i];\n\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                i += onError(\"MISSING_CONTINUE\", i, bytes, result);\n                res = null;\n                break;\n            };\n\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n\n        // See above loop for invalid continuation byte\n        if (res === null) { continue; }\n\n        // Maximum code point\n        if (res > 0x10ffff) {\n            i += onError(\"OUT_OF_RANGE\", i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            i += onError(\"UTF16_SURROGATE\", i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        // Check for overlong sequences (more bytes than needed)\n        if (res <= overlongMask) {\n            i += onError(\"OVERLONG\", i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n\n        result.push(res);\n    }\n\n    return result;\n}\n\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\n\n/**\n *  Returns the UTF-8 byte representation of %%str%%.\n *\n *  If %%form%% is specified, the string is normalized.\n */\nexport function toUtf8Bytes(str: string, form?: UnicodeNormalizationForm): Uint8Array {\n    assertArgument(typeof(str) === \"string\", \"invalid string value\", \"str\", str);\n\n    if (form != null) {\n        assertNormalize(form);\n        str = str.normalize(form);\n    }\n\n    let result: Array<number> = [];\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charCodeAt(i);\n\n        if (c < 0x80) {\n            result.push(c);\n\n        } else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n\n        } else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            const c2 = str.charCodeAt(i);\n\n            assertArgument(i < str.length && ((c2 & 0xfc00) === 0xdc00),\n                \"invalid surrogate pair\", \"str\", str);\n\n            // Surrogate Pair\n            const pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((pair >> 18) | 0xf0);\n            result.push(((pair >> 12) & 0x3f) | 0x80);\n            result.push(((pair >> 6) & 0x3f) | 0x80);\n            result.push((pair & 0x3f) | 0x80);\n\n        } else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n\n    return new Uint8Array(result);\n};\n\n//export \nfunction _toUtf8String(codePoints: Array<number>): string {\n    return codePoints.map((codePoint) => {\n        if (codePoint <= 0xffff) {\n            return String.fromCharCode(codePoint);\n        }\n        codePoint -= 0x10000;\n        return String.fromCharCode(\n            (((codePoint >> 10) & 0x3ff) + 0xd800),\n            ((codePoint & 0x3ff) + 0xdc00)\n        );\n    }).join(\"\");\n}\n\n/**\n *  Returns the string represented by the UTF-8 data %%bytes%%.\n *\n *  When %%onError%% function is specified, it is called on UTF-8\n *  errors allowing recovery using the [[Utf8ErrorFunc]] API.\n *  (default: [error](Utf8ErrorFuncs))\n */\nexport function toUtf8String(bytes: BytesLike, onError?: Utf8ErrorFunc): string {\n    return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\n\n/**\n *  Returns the UTF-8 code-points for %%str%%.\n *\n *  If %%form%% is specified, the string is normalized.\n */\nexport function toUtf8CodePoints(str: string, form?: UnicodeNormalizationForm): Array<number> {\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\n\n", "import http from \"http\";\nimport https from \"https\";\nimport { gunzipSync } from \"zlib\";\n\nimport { assert, makeError } from \"./errors.js\";\nimport { getBytes } from \"./data.js\";\n\nimport type {\n    FetchGetUrlFunc, FetchRequest, FetchCancelSignal, GetUrlResponse\n} from \"./fetch.js\";\n\n/**\n *  @_ignore:\n */\nexport function createGetUrl(options?: Record<string, any>): FetchGetUrlFunc {\n\n    async function getUrl(req: FetchRequest, signal?: FetchCancelSignal): Promise<GetUrlResponse> {\n        // Make sure we weren't cancelled before sending\n        assert(signal == null || !signal.cancelled, \"request cancelled before sending\", \"CANCELLED\");\n\n        const protocol = req.url.split(\":\")[0].toLowerCase();\n\n        assert(protocol === \"http\" || protocol === \"https\", `unsupported protocol ${ protocol }`, \"UNSUPPORTED_OPERATION\", {\n            info: { protocol },\n            operation: \"request\"\n        });\n\n        assert(protocol === \"https\" || !req.credentials || req.allowInsecureAuthentication, \"insecure authorized connections unsupported\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"request\"\n        });\n\n        const method = req.method;\n        const headers = Object.assign({ }, req.headers);\n\n        const reqOptions: any = { method, headers };\n        if (options) {\n            if (options.agent) { reqOptions.agent = options.agent; }\n        }\n\n        // Create a Node-specific AbortController, if available\n        let abort: null | AbortController = null;\n        try {\n            abort = new AbortController();\n            reqOptions.abort = abort.signal;\n        } catch (e) { console.log(e); }\n\n        const request = ((protocol === \"http\") ? http: https).request(req.url, reqOptions);\n\n        request.setTimeout(req.timeout);\n\n        const body = req.body;\n        if (body) { request.write(Buffer.from(body)); }\n\n        request.end();\n\n        return new Promise((resolve, reject) => {\n\n            if (signal) {\n                signal.addListener(() => {\n                    if (abort) { abort.abort(); }\n                    reject(makeError(\"request cancelled\", \"CANCELLED\"));\n                });\n            }\n\n            request.on(\"timeout\", () => {\n                reject(makeError(\"request timeout\", \"TIMEOUT\"));\n            });\n\n            request.once(\"response\", (resp: http.IncomingMessage) => {\n                const statusCode = resp.statusCode || 0;\n                const statusMessage = resp.statusMessage || \"\";\n                const headers = Object.keys(resp.headers || {}).reduce((accum, name) => {\n                    let value = resp.headers[name] || \"\";\n                    if (Array.isArray(value)) {\n                        value = value.join(\", \");\n                    }\n                    accum[name] = value;\n                    return accum;\n                }, <{ [ name: string ]: string }>{ });\n\n                let body: null | Uint8Array = null;\n                //resp.setEncoding(\"utf8\");\n\n                resp.on(\"data\", (chunk: Uint8Array) => {\n                    if (signal) {\n                        try {\n                            signal.checkSignal();\n                        } catch (error) {\n                            return reject(error);\n                        }\n                    }\n\n                    if (body == null) {\n                        body = chunk;\n                    } else {\n                        const newBody = new Uint8Array(body.length + chunk.length);\n                        newBody.set(body, 0);\n                        newBody.set(chunk, body.length);\n                        body = newBody;\n                    }\n                });\n\n                resp.on(\"end\", () => {\n                    try {\n                        if (headers[\"content-encoding\"] === \"gzip\" && body) {\n                            body = getBytes(gunzipSync(body));\n                        }\n\n                        resolve({ statusCode, statusMessage, headers, body });\n\n                    } catch (error) {\n                        reject(makeError(\"bad response data\", \"SERVER_ERROR\", {\n                            request: req, info: { response: resp, error }\n                        }));\n                    }\n                });\n\n                resp.on(\"error\", (error) => {\n                //@TODO: Should this just return nornal response with a server error?\n                    (<any>error).response = { statusCode, statusMessage, headers, body };\n                    reject(error);\n                });\n            });\n\n            request.on(\"error\", (error) => { reject(error); });\n        });\n    }\n\n    return getUrl;\n}\n\n// @TODO: remove in v7; provided for backwards compat\nconst defaultGetUrl: FetchGetUrlFunc = createGetUrl({ });\n\n/**\n *  @_ignore:\n */\nexport async function getUrl(req: FetchRequest, signal?: FetchCancelSignal): Promise<GetUrlResponse> {\n    return defaultGetUrl(req, signal);\n}\n\n", "/**\n *  The **FixedNumber** class permits using values with decimal places,\n *  using fixed-pont math.\n *\n *  Fixed-point math is still based on integers under-the-hood, but uses an\n *  internal offset to store fractional components below, and each operation\n *  corrects for this after each operation.\n *\n *  @_section: api/utils/fixed-point-math:Fixed-Point Maths  [about-fixed-point-math]\n */\nimport { getBytes } from \"./data.js\";\nimport { assert, assertArgument, assertPrivate } from \"./errors.js\";\nimport {\n    getBigInt, getNumber, fromTwos, mask, toBigInt\n} from \"./maths.js\";\nimport { defineProperties } from \"./properties.js\";\n\nimport type { BigNumberish, BytesLike, Numeric } from \"./index.js\";\n\nconst BN_N1 = BigInt(-1);\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\nconst BN_5 = BigInt(5);\n\nconst _guard = { };\n\n\n// Constant to pull zeros from for multipliers\nlet Zeros = \"0000\";\nwhile (Zeros.length < 80) { Zeros += Zeros; }\n\n// Returns a string \"1\" followed by decimal \"0\"s\nfunction getTens(decimals: number): bigint {\n    let result = Zeros;\n    while (result.length < decimals) { result += result; }\n    return BigInt(\"1\" + result.substring(0, decimals));\n}\n\n\n\n    /*\n     *  Returns a new FixedFormat for %%value%%.\n     *\n     *  If %%value%% is specified as a ``number``, the bit-width is\n     *  128 bits and %%value%% is used for the ``decimals``.\n     *\n     *  A string %%value%% may begin with ``fixed`` or ``ufixed``\n     *  for signed and unsigned respectfully. If no other properties\n     *  are specified, the bit-width is 128-bits with 18 decimals.\n     *\n     *  To specify the bit-width and demicals, append them separated\n     *  by an ``\"x\"`` to the %%value%%.\n     *\n     *  For example, ``ufixed128x18`` describes an unsigned, 128-bit\n     *  wide format with 18 decimals.\n     *\n     *  If %%value%% is an other object, its properties for ``signed``,\n     *  ``width`` and ``decimals`` are checked.\n     */\n\n/**\n *  A description of a fixed-point arithmetic field.\n *\n *  When specifying the fixed format, the values override the default of\n *  a ``fixed128x18``, which implies a signed 128-bit value with 18\n *  decimals of precision.\n *\n *  The alias ``fixed`` and ``ufixed`` can be used for ``fixed128x18`` and\n *  ``ufixed128x18`` respectively.\n *\n *  When a fixed format string begins with a ``u``, it indicates the field\n *  is unsigned, so any negative values will overflow. The first number\n *  indicates the bit-width and the second number indicates the decimal\n *  precision.\n *\n *  When a ``number`` is used for a fixed format, it indicates the number\n *  of decimal places, and the default width and signed-ness will be used.\n *\n *  The bit-width must be byte aligned and the decimals can be at most 80.\n */\nexport type FixedFormat = number | string | {\n    signed?: boolean,\n    width?: number,\n    decimals?: number\n};\n\nfunction checkValue(val: bigint, format: _FixedFormat, safeOp?: string): bigint {\n    const width = BigInt(format.width);\n    if (format.signed) {\n        const limit = (BN_1 << (width - BN_1));\n        assert(safeOp == null || (val >= -limit  && val < limit), \"overflow\", \"NUMERIC_FAULT\", {\n            operation: <string>safeOp, fault: \"overflow\", value: val\n        });\n\n        if (val > BN_0) {\n            val = fromTwos(mask(val, width), width);\n        } else {\n            val = -fromTwos(mask(-val, width), width);\n        }\n\n    } else {\n        const limit = (BN_1 << width);\n        assert(safeOp == null || (val >= 0 && val < limit), \"overflow\", \"NUMERIC_FAULT\", {\n            operation: <string>safeOp, fault: \"overflow\", value: val\n        });\n        val = (((val % limit) + limit) % limit) & (limit - BN_1);\n    }\n\n    return val;\n}\n\ntype _FixedFormat = { signed: boolean, width: number, decimals: number, name: string }\n\nfunction getFormat(value?: FixedFormat): _FixedFormat {\n    if (typeof(value) === \"number\") { value = `fixed128x${value}` }\n\n    let signed = true;\n    let width = 128;\n    let decimals = 18;\n\n    if (typeof(value) === \"string\") {\n        // Parse the format string\n        if (value === \"fixed\") {\n            // defaults...\n        } else if (value === \"ufixed\") {\n            signed = false;\n        } else {\n            const match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);\n            assertArgument(match, \"invalid fixed format\", \"format\", value);\n            signed = (match[1] !== \"u\");\n            width = parseInt(match[2]);\n            decimals = parseInt(match[3]);\n        }\n    } else if (value) {\n        // Extract the values from the object\n        const v: any = value;\n        const check = (key: string, type: string, defaultValue: any): any => {\n            if (v[key] == null) { return defaultValue; }\n            assertArgument(typeof(v[key]) === type,\n                \"invalid fixed format (\" + key + \" not \" + type +\")\", \"format.\" + key, v[key]);\n            return v[key];\n        }\n        signed = check(\"signed\", \"boolean\", signed);\n        width = check(\"width\", \"number\", width);\n        decimals = check(\"decimals\", \"number\", decimals);\n    }\n\n    assertArgument((width % 8) === 0, \"invalid FixedNumber width (not byte aligned)\", \"format.width\", width);\n    assertArgument(decimals <= 80, \"invalid FixedNumber decimals (too large)\", \"format.decimals\", decimals);\n\n    const name = (signed ? \"\": \"u\") + \"fixed\" + String(width) + \"x\" + String(decimals);\n\n    return { signed, width, decimals, name };\n}\n\nfunction toString(val: bigint, decimals: number) {\n    let negative = \"\";\n    if (val < BN_0) {\n        negative = \"-\";\n        val *= BN_N1;\n    }\n\n    let str = val.toString();\n\n    // No decimal point for whole values\n    if (decimals === 0) { return (negative + str); }\n\n    // Pad out to the whole component (including a whole digit)\n    while (str.length <= decimals) { str = Zeros + str; }\n\n    // Insert the decimal point\n    const index = str.length - decimals;\n    str = str.substring(0, index) + \".\" + str.substring(index);\n\n    // Trim the whole component (leaving at least one 0)\n    while (str[0] === \"0\" && str[1] !== \".\") {\n        str = str.substring(1);\n    }\n\n    // Trim the decimal component (leaving at least one 0)\n    while (str[str.length - 1] === \"0\" && str[str.length - 2] !== \".\") {\n        str = str.substring(0, str.length - 1);\n    }\n\n    return (negative + str);\n}\n\n\n/**\n *  A FixedNumber represents a value over its [[FixedFormat]]\n *  arithmetic field.\n *\n *  A FixedNumber can be used to perform math, losslessly, on\n *  values which have decmial places.\n *\n *  A FixedNumber has a fixed bit-width to store values in, and stores all\n *  values internally by multiplying the value by 10 raised to the power of\n *  %%decimals%%.\n *\n *  If operations are performed that cause a value to grow too high (close to\n *  positive infinity) or too low (close to negative infinity), the value\n *  is said to //overflow//.\n *\n *  For example, an 8-bit signed value, with 0 decimals may only be within\n *  the range ``-128`` to ``127``; so ``-128 - 1`` will overflow and become\n *  ``127``. Likewise, ``127 + 1`` will overflow and become ``-127``.\n *\n *  Many operation have a normal and //unsafe// variant. The normal variant\n *  will throw a [[NumericFaultError]] on any overflow, while the //unsafe//\n *  variant will silently allow overflow, corrupting its value value.\n *\n *  If operations are performed that cause a value to become too small\n *  (close to zero), the value loses precison and is said to //underflow//.\n *\n *  For example, a value with 1 decimal place may store a number as small\n *  as ``0.1``, but the value of ``0.1 / 2`` is ``0.05``, which cannot fit\n *  into 1 decimal place, so underflow occurs which means precision is lost\n *  and the value becomes ``0``.\n *\n *  Some operations have a normal and //signalling// variant. The normal\n *  variant will silently ignore underflow, while the //signalling// variant\n *  will thow a [[NumericFaultError]] on underflow.\n */\nexport class FixedNumber {\n\n    /**\n     *  The specific fixed-point arithmetic field for this value.\n     */\n    readonly format!: string;\n\n    readonly #format: _FixedFormat;\n\n    // The actual value (accounting for decimals)\n    #val: bigint;\n\n    // A base-10 value to multiple values by to maintain the magnitude\n    readonly #tens: bigint;\n\n    /**\n     *  This is a property so console.log shows a human-meaningful value.\n     *\n     *  @private\n     */\n    readonly _value!: string;\n\n    // Use this when changing this file to get some typing info,\n    // but then switch to any to mask the internal type\n    //constructor(guard: any, value: bigint, format: _FixedFormat) {\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, value: bigint, format: any) {\n        assertPrivate(guard, _guard, \"FixedNumber\");\n\n        this.#val = value;\n\n        this.#format = format;\n\n        const _value = toString(value, format.decimals);\n\n        defineProperties<FixedNumber>(this, { format: format.name, _value });\n\n        this.#tens = getTens(format.decimals);\n    }\n\n    /**\n     *  If true, negative values are permitted, otherwise only\n     *  positive values and zero are allowed.\n     */\n    get signed(): boolean { return this.#format.signed; }\n\n    /**\n     *  The number of bits available to store the value.\n     */\n    get width(): number { return this.#format.width; }\n\n    /**\n     *  The number of decimal places in the fixed-point arithment field.\n     */\n    get decimals(): number { return this.#format.decimals; }\n\n    /**\n     *  The value as an integer, based on the smallest unit the\n     *  [[decimals]] allow.\n     */\n    get value(): bigint { return this.#val; }\n\n    #checkFormat(other: FixedNumber): void {\n        assertArgument(this.format === other.format,\n            \"incompatible format; use fixedNumber.toFormat\", \"other\", other);\n    }\n\n    #checkValue(val: bigint, safeOp?: string): FixedNumber {\n/*\n        const width = BigInt(this.width);\n        if (this.signed) {\n            const limit = (BN_1 << (width - BN_1));\n            assert(safeOp == null || (val >= -limit  && val < limit), \"overflow\", \"NUMERIC_FAULT\", {\n                operation: <string>safeOp, fault: \"overflow\", value: val\n            });\n\n            if (val > BN_0) {\n                val = fromTwos(mask(val, width), width);\n            } else {\n                val = -fromTwos(mask(-val, width), width);\n            }\n\n        } else {\n            const masked = mask(val, width);\n            assert(safeOp == null || (val >= 0 && val === masked), \"overflow\", \"NUMERIC_FAULT\", {\n                operation: <string>safeOp, fault: \"overflow\", value: val\n            });\n            val = masked;\n        }\n*/\n        val = checkValue(val, this.#format, safeOp);\n        return new FixedNumber(_guard, val, this.#format);\n    }\n\n    #add(o: FixedNumber, safeOp?: string): FixedNumber {\n        this.#checkFormat(o);\n        return this.#checkValue(this.#val + o.#val, safeOp);\n    }\n\n    /**\n     *  Returns a new [[FixedNumber]] with the result of %%this%% added\n     *  to %%other%%, ignoring overflow.\n     */\n    addUnsafe(other: FixedNumber): FixedNumber { return this.#add(other); }\n\n    /**\n     *  Returns a new [[FixedNumber]] with the result of %%this%% added\n     *  to %%other%%. A [[NumericFaultError]] is thrown if overflow\n     *  occurs.\n     */\n    add(other: FixedNumber): FixedNumber { return this.#add(other, \"add\"); }\n\n    #sub(o: FixedNumber, safeOp?: string): FixedNumber {\n        this.#checkFormat(o);\n        return this.#checkValue(this.#val - o.#val, safeOp);\n    }\n\n    /**\n     *  Returns a new [[FixedNumber]] with the result of %%other%% subtracted\n     *  from %%this%%, ignoring overflow.\n     */\n    subUnsafe(other: FixedNumber): FixedNumber { return this.#sub(other); }\n\n    /**\n     *  Returns a new [[FixedNumber]] with the result of %%other%% subtracted\n     *  from %%this%%. A [[NumericFaultError]] is thrown if overflow\n     *  occurs.\n     */\n    sub(other: FixedNumber): FixedNumber { return this.#sub(other, \"sub\"); }\n\n    #mul(o: FixedNumber, safeOp?: string): FixedNumber {\n        this.#checkFormat(o);\n        return this.#checkValue((this.#val * o.#val) / this.#tens, safeOp);\n    }\n\n    /**\n     *  Returns a new [[FixedNumber]] with the result of %%this%% multiplied\n     *  by %%other%%, ignoring overflow and underflow (precision loss).\n     */\n    mulUnsafe(other: FixedNumber): FixedNumber { return this.#mul(other); }\n\n    /**\n     *  Returns a new [[FixedNumber]] with the result of %%this%% multiplied\n     *  by %%other%%. A [[NumericFaultError]] is thrown if overflow\n     *  occurs.\n     */\n    mul(other: FixedNumber): FixedNumber { return this.#mul(other, \"mul\"); }\n\n    /**\n     *  Returns a new [[FixedNumber]] with the result of %%this%% multiplied\n     *  by %%other%%. A [[NumericFaultError]] is thrown if overflow\n     *  occurs or if underflow (precision loss) occurs.\n     */\n    mulSignal(other: FixedNumber): FixedNumber {\n        this.#checkFormat(other);\n        const value = this.#val * other.#val;\n        assert((value % this.#tens) === BN_0, \"precision lost during signalling mul\", \"NUMERIC_FAULT\", {\n            operation: \"mulSignal\", fault: \"underflow\", value: this\n        });\n        return this.#checkValue(value / this.#tens, \"mulSignal\");\n    }\n\n    #div(o: FixedNumber, safeOp?: string): FixedNumber {\n        assert(o.#val !== BN_0, \"division by zero\", \"NUMERIC_FAULT\", {\n            operation: \"div\", fault: \"divide-by-zero\", value: this\n        });\n        this.#checkFormat(o);\n        return this.#checkValue((this.#val * this.#tens) / o.#val, safeOp);\n    }\n\n    /**\n     *  Returns a new [[FixedNumber]] with the result of %%this%% divided\n     *  by %%other%%, ignoring underflow (precision loss). A\n     *  [[NumericFaultError]] is thrown if overflow occurs.\n     */\n    divUnsafe(other: FixedNumber): FixedNumber { return this.#div(other); }\n\n    /**\n     *  Returns a new [[FixedNumber]] with the result of %%this%% divided\n     *  by %%other%%, ignoring underflow (precision loss). A\n     *  [[NumericFaultError]] is thrown if overflow occurs.\n     */\n    div(other: FixedNumber): FixedNumber { return this.#div(other, \"div\"); }\n\n\n    /**\n     *  Returns a new [[FixedNumber]] with the result of %%this%% divided\n     *  by %%other%%. A [[NumericFaultError]] is thrown if underflow\n     *  (precision loss) occurs.\n     */\n    divSignal(other: FixedNumber): FixedNumber {\n        assert(other.#val !== BN_0, \"division by zero\", \"NUMERIC_FAULT\", {\n            operation: \"div\", fault: \"divide-by-zero\", value: this\n        });\n        this.#checkFormat(other);\n        const value = (this.#val * this.#tens);\n        assert((value % other.#val) === BN_0, \"precision lost during signalling div\", \"NUMERIC_FAULT\", {\n            operation: \"divSignal\", fault: \"underflow\", value: this\n        });\n        return this.#checkValue(value / other.#val, \"divSignal\");\n    }\n\n    /**\n     *  Returns a comparison result between %%this%% and %%other%%.\n     *\n     *  This is suitable for use in sorting, where ``-1`` implies %%this%%\n     *  is smaller, ``1`` implies %%this%% is larger and ``0`` implies\n     *  both are equal.\n     */\n     cmp(other: FixedNumber): number {\n         let a = this.value, b = other.value;\n\n         // Coerce a and b to the same magnitude\n         const delta = this.decimals - other.decimals;\n         if (delta > 0) {\n             b *= getTens(delta);\n         } else if (delta < 0) {\n             a *= getTens(-delta);\n         }\n\n         // Comnpare\n         if (a < b) { return -1; }\n         if (a > b) { return 1; }\n         return 0;\n     }\n\n    /**\n     *  Returns true if %%other%% is equal to %%this%%.\n     */\n     eq(other: FixedNumber): boolean { return this.cmp(other) === 0; }\n\n    /**\n     *  Returns true if %%other%% is less than to %%this%%.\n     */\n     lt(other: FixedNumber): boolean { return this.cmp(other) < 0; }\n\n    /**\n     *  Returns true if %%other%% is less than or equal to %%this%%.\n     */\n     lte(other: FixedNumber): boolean { return this.cmp(other) <= 0; }\n\n    /**\n     *  Returns true if %%other%% is greater than to %%this%%.\n     */\n     gt(other: FixedNumber): boolean { return this.cmp(other) > 0; }\n\n    /**\n     *  Returns true if %%other%% is greater than or equal to %%this%%.\n     */\n     gte(other: FixedNumber): boolean { return this.cmp(other) >= 0; }\n\n    /**\n     *  Returns a new [[FixedNumber]] which is the largest **integer**\n     *  that is less than or equal to %%this%%.\n     *\n     *  The decimal component of the result will always be ``0``.\n     */\n    floor(): FixedNumber {\n        let val = this.#val;\n        if (this.#val < BN_0) { val -= this.#tens - BN_1; }\n        val = (this.#val / this.#tens) * this.#tens;\n        return this.#checkValue(val, \"floor\");\n    }\n\n    /**\n     *  Returns a new [[FixedNumber]] which is the smallest **integer**\n     *  that is greater than or equal to %%this%%.\n     *\n     *  The decimal component of the result will always be ``0``.\n     */\n    ceiling(): FixedNumber {\n        let val = this.#val;\n        if (this.#val > BN_0) { val += this.#tens - BN_1; }\n        val = (this.#val / this.#tens) * this.#tens;\n        return this.#checkValue(val, \"ceiling\");\n    }\n\n    /**\n     *  Returns a new [[FixedNumber]] with the decimal component\n     *  rounded up on ties at %%decimals%% places.\n     */\n    round(decimals?: number): FixedNumber {\n        if (decimals == null) { decimals = 0; }\n\n        // Not enough precision to not already be rounded\n        if (decimals >= this.decimals) { return this; }\n\n        const delta = this.decimals - decimals;\n        const bump = BN_5 * getTens(delta - 1);\n\n        let value = this.value + bump;\n        const tens = getTens(delta);\n        value = (value / tens) * tens;\n\n        checkValue(value, this.#format, \"round\");\n\n        return new FixedNumber(_guard, value, this.#format);\n    }\n\n    /**\n     *  Returns true if %%this%% is equal to ``0``.\n     */\n    isZero(): boolean { return (this.#val === BN_0); }\n\n    /**\n     *  Returns true if %%this%% is less than ``0``.\n     */\n    isNegative(): boolean { return (this.#val < BN_0); }\n\n    /**\n     *  Returns the string representation of %%this%%.\n     */\n    toString(): string { return this._value; }\n\n    /**\n     *  Returns a float approximation.\n     *\n     *  Due to IEEE 754 precission (or lack thereof), this function\n     *  can only return an approximation and most values will contain\n     *  rounding errors.\n     */\n    toUnsafeFloat(): number { return parseFloat(this.toString()); }\n\n    /**\n     *  Return a new [[FixedNumber]] with the same value but has had\n     *  its field set to %%format%%.\n     *\n     *  This will throw if the value cannot fit into %%format%%.\n     */\n    toFormat(format: FixedFormat): FixedNumber {\n        return FixedNumber.fromString(this.toString(), format);\n    }\n\n    /**\n     *  Creates a new [[FixedNumber]] for %%value%% divided by\n     *  %%decimal%% places with %%format%%.\n     *\n     *  This will throw a [[NumericFaultError]] if %%value%% (once adjusted\n     *  for %%decimals%%) cannot fit in %%format%%, either due to overflow\n     *  or underflow (precision loss).\n     */\n    static fromValue(_value: BigNumberish, _decimals?: Numeric, _format?: FixedFormat): FixedNumber {\n        const decimals = (_decimals == null) ? 0: getNumber(_decimals);\n        const format = getFormat(_format);\n\n        let value = getBigInt(_value, \"value\");\n        const delta = decimals - format.decimals;\n        if (delta > 0) {\n            const tens = getTens(delta);\n            assert((value % tens) === BN_0, \"value loses precision for format\", \"NUMERIC_FAULT\", {\n                operation: \"fromValue\", fault: \"underflow\", value: _value\n            });\n            value /= tens;\n        } else if (delta < 0) {\n            value *= getTens(-delta);\n        }\n\n        checkValue(value, format, \"fromValue\");\n\n        return new FixedNumber(_guard, value, format);\n    }\n\n    /**\n     *  Creates a new [[FixedNumber]] for %%value%% with %%format%%.\n     *\n     *  This will throw a [[NumericFaultError]] if %%value%% cannot fit\n     *  in %%format%%, either due to overflow or underflow (precision loss).\n     */\n    static fromString(_value: string, _format?: FixedFormat): FixedNumber {\n        const match = _value.match(/^(-?)([0-9]*)\\.?([0-9]*)$/);\n        assertArgument(match && (match[2].length + match[3].length) > 0, \"invalid FixedNumber string value\", \"value\", _value);\n\n        const format = getFormat(_format);\n\n        let whole = (match[2] || \"0\"), decimal = (match[3] || \"\");\n\n        // Pad out the decimals\n        while (decimal.length < format.decimals) { decimal += Zeros; }\n\n        // Check precision is safe\n        assert(decimal.substring(format.decimals).match(/^0*$/), \"too many decimals for format\", \"NUMERIC_FAULT\", {\n            operation: \"fromString\", fault: \"underflow\", value: _value\n        });\n\n        // Remove extra padding\n        decimal = decimal.substring(0, format.decimals);\n\n        const value = BigInt(match[1] + whole + decimal)\n\n        checkValue(value, format, \"fromString\");\n\n        return new FixedNumber(_guard, value, format);\n    }\n\n    /**\n     *  Creates a new [[FixedNumber]] with the big-endian representation\n     *  %%value%% with %%format%%.\n     *\n     *  This will throw a [[NumericFaultError]] if %%value%% cannot fit\n     *  in %%format%% due to overflow.\n     */\n    static fromBytes(_value: BytesLike, _format?: FixedFormat): FixedNumber {\n        let value = toBigInt(getBytes(_value, \"value\"));\n        const format = getFormat(_format);\n\n        if (format.signed) { value = fromTwos(value, format.width); }\n\n        checkValue(value, format, \"fromBytes\");\n\n        return new FixedNumber(_guard, value, format);\n    }\n}\n\n//const f1 = FixedNumber.fromString(\"12.56\", \"fixed16x2\");\n//const f2 = FixedNumber.fromString(\"0.3\", \"fixed16x2\");\n//console.log(f1.divSignal(f2));\n//const BUMP = FixedNumber.from(\"0.5\");\n", "//See: https://github.com/ethereum/wiki/wiki/RLP\n\nimport { hexlify } from \"./data.js\";\nimport { assert, assertArgument } from \"./errors.js\";\nimport { getBytes } from \"./data.js\";\n\nimport type { BytesLike, RlpStructuredData } from \"./index.js\";\n\n\nfunction hexlifyByte(value: number): string {\n    let result = value.toString(16);\n    while (result.length < 2) { result = \"0\" + result; }\n    return \"0x\" + result;\n}\n\nfunction unarrayifyInteger(data: Uint8Array, offset: number, length: number): number {\n    let result = 0;\n    for (let i = 0; i < length; i++) {\n        result = (result * 256) + data[offset + i];\n    }\n    return result;\n}\n\ntype Decoded = {\n    result: any;\n    consumed: number;\n};\n\nfunction _decodeChildren(data: Uint8Array, offset: number, childOffset: number, length: number): Decoded {\n    const result: Array<any> = [];\n\n    while (childOffset < offset + 1 + length) {\n        const decoded = _decode(data, childOffset);\n\n        result.push(decoded.result);\n\n        childOffset += decoded.consumed;\n        assert(childOffset <= offset + 1 + length, \"child data too short\", \"BUFFER_OVERRUN\", {\n            buffer: data, length, offset\n        });\n    }\n\n    return {consumed: (1 + length), result: result};\n}\n\n// returns { consumed: number, result: Object }\nfunction _decode(data: Uint8Array, offset: number): { consumed: number, result: any } {\n    assert(data.length !== 0, \"data too short\", \"BUFFER_OVERRUN\", {\n        buffer: data, length: 0, offset: 1\n    });\n\n    const checkOffset = (offset: number) => {\n        assert(offset <= data.length, \"data short segment too short\", \"BUFFER_OVERRUN\", {\n            buffer: data, length: data.length, offset\n        });\n    };\n\n    // Array with extra length prefix\n    if (data[offset] >= 0xf8) {\n        const lengthLength = data[offset] - 0xf7;\n        checkOffset(offset + 1 + lengthLength);\n\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        checkOffset(offset + 1 + lengthLength + length);\n\n        return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);\n\n    } else if (data[offset] >= 0xc0) {\n        const length = data[offset] - 0xc0;\n        checkOffset(offset + 1 + length);\n\n        return _decodeChildren(data, offset, offset + 1, length);\n\n    } else if (data[offset] >= 0xb8) {\n        const lengthLength = data[offset] - 0xb7;\n        checkOffset(offset + 1 + lengthLength);\n\n        const length = unarrayifyInteger(data, offset + 1, lengthLength);\n        checkOffset(offset + 1 + lengthLength + length);\n\n        const result = hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));\n        return { consumed: (1 + lengthLength + length), result: result }\n\n    } else if (data[offset] >= 0x80) {\n        const length = data[offset] - 0x80;\n        checkOffset(offset + 1 + length);\n\n        const result = hexlify(data.slice(offset + 1, offset + 1 + length));\n        return { consumed: (1 + length), result: result }\n    }\n\n    return { consumed: 1, result: hexlifyByte(data[offset]) };\n}\n\n/**\n *  Decodes %%data%% into the structured data it represents.\n */\nexport function decodeRlp(_data: BytesLike): RlpStructuredData {\n    const data = getBytes(_data, \"data\");\n    const decoded = _decode(data, 0);\n    assertArgument(decoded.consumed === data.length, \"unexpected junk after rlp payload\", \"data\", _data);\n    return decoded.result;\n}\n\n", "//See: https://github.com/ethereum/wiki/wiki/RLP\n\nimport { getBytes } from \"./data.js\";\n\nimport type { RlpStructuredDataish } from \"./rlp.js\";\n\n\nfunction arrayifyInteger(value: number): Array<number> {\n    const result: Array<number> = [];\n    while (value) {\n        result.unshift(value & 0xff);\n        value >>= 8;\n    }\n    return result;\n}\n\nfunction _encode(object: Array<any> | string | Uint8Array): Array<number> {\n    if (Array.isArray(object)) {\n        let payload: Array<number> = [];\n        object.forEach(function(child) {\n            payload = payload.concat(_encode(child));\n        });\n\n        if (payload.length <= 55) {\n            payload.unshift(0xc0 + payload.length)\n            return payload;\n        }\n\n        const length = arrayifyInteger(payload.length);\n        length.unshift(0xf7 + length.length);\n\n        return length.concat(payload);\n\n    }\n\n    const data: Array<number> = Array.prototype.slice.call(getBytes(object, \"object\"));\n\n    if (data.length === 1 && data[0] <= 0x7f) {\n        return data;\n\n    } else if (data.length <= 55) {\n        data.unshift(0x80 + data.length);\n        return data;\n    }\n\n    const length = arrayifyInteger(data.length);\n    length.unshift(0xb7 + length.length);\n\n    return length.concat(data);\n}\n\nconst nibbles = \"0123456789abcdef\";\n\n/**\n *  Encodes %%object%% as an RLP-encoded [[DataHexString]].\n */\nexport function encodeRlp(object: RlpStructuredDataish): string {\n    let result = \"0x\";\n    for (const v of _encode(object)) {\n        result += nibbles[v >> 4];\n        result += nibbles[v & 0xf];\n    }\n    return result;\n}\n", "/**\n *  Most interactions with Ethereum requires integer values, which use\n *  the smallest magnitude unit.\n *\n *  For example, imagine dealing with dollars and cents. Since dollars\n *  are divisible, non-integer values are possible, such as ``$10.77``.\n *  By using the smallest indivisible unit (i.e. cents), the value can\n *  be kept as the integer ``1077``.\n *\n *  When receiving decimal input from the user (as a decimal string),\n *  the value should be converted to an integer and when showing a user\n *  a value, the integer value should be converted to a decimal string.\n *\n *  This creates a clear distinction, between values to be used by code\n *  (integers) and values used for display logic to users (decimals).\n *\n *  The native unit in Ethereum, //ether// is divisible to 18 decimal places,\n *  where each individual unit is called a //wei//.\n *\n *  @_subsection api/utils:Unit Conversion  [about-units]\n */\nimport { assertArgument } from \"./errors.js\";\nimport { FixedNumber } from \"./fixednumber.js\";\nimport { getNumber } from \"./maths.js\";\n\nimport type { BigNumberish, Numeric } from \"../utils/index.js\";\n\n\nconst names = [\n    \"wei\",\n    \"kwei\",\n    \"mwei\",\n    \"gwei\",\n    \"szabo\",\n    \"finney\",\n    \"ether\",\n];\n\n/**\n *  Converts %%value%% into a //decimal string//, assuming %%unit%% decimal\n *  places. The %%unit%% may be the number of decimal places or the name of\n *  a unit (e.g. ``\"gwei\"`` for 9 decimal places).\n *\n */\nexport function formatUnits(value: BigNumberish, unit?: string | Numeric): string {\n    let decimals = 18;\n    if (typeof(unit) === \"string\") {\n        const index = names.indexOf(unit);\n        assertArgument(index >= 0, \"invalid unit\", \"unit\", unit);\n        decimals = 3 * index;\n    } else if (unit != null) {\n        decimals = getNumber(unit, \"unit\");\n    }\n\n    return FixedNumber.fromValue(value, decimals, { decimals, width: 512 }).toString();\n}\n\n/**\n *  Converts the //decimal string// %%value%% to a BigInt, assuming\n *  %%unit%% decimal places. The %%unit%% may the number of decimal places\n *  or the name of a unit (e.g. ``\"gwei\"`` for 9 decimal places).\n */\nexport function parseUnits(value: string, unit?: string | Numeric): bigint {\n    assertArgument(typeof(value) === \"string\", \"value must be a string\", \"value\", value);\n\n    let decimals = 18;\n    if (typeof(unit) === \"string\") {\n        const index = names.indexOf(unit);\n        assertArgument(index >= 0, \"invalid unit\", \"unit\", unit);\n        decimals = 3 * index;\n    } else if (unit != null) {\n        decimals = getNumber(unit, \"unit\");\n    }\n\n    return FixedNumber.fromString(value, { decimals, width: 512 }).value;\n}\n\n/**\n *  Converts %%value%% into a //decimal string// using 18 decimal places.\n */\nexport function formatEther(wei: BigNumberish): string {\n    return formatUnits(wei, 18);\n}\n\n/**\n *  Converts the //decimal string// %%ether%% to a BigInt, using 18\n *  decimal places.\n */\nexport function parseEther(ether: string): bigint {\n    return parseUnits(ether, 18);\n}\n", "/**\n *  Explain UUID and link to RFC here.\n *\n *  @_subsection: api/utils:UUID  [about-uuid]\n */\nimport { getBytes, hexlify } from \"./data.js\";\n\nimport type { BytesLike } from \"./index.js\";\n\n/**\n *  Returns the version 4 [[link-uuid]] for the %%randomBytes%%.\n *\n *  @see: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)\n */\nexport function uuidV4(randomBytes: BytesLike): string {\n    const bytes = getBytes(randomBytes, \"randomBytes\");\n\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n\n    const value = hexlify(bytes);\n\n    return [\n       value.substring(2, 10),\n       value.substring(10, 14),\n       value.substring(14, 18),\n       value.substring(18, 22),\n       value.substring(22, 34),\n    ].join(\"-\");\n}\n", "\nimport {\n    defineProperties, concat, getBytesCopy, getNumber, hexlify,\n    toBeArray, toBigInt, toNumber,\n    assert, assertArgument\n    /*, isError*/\n} from \"../../utils/index.js\";\n\nimport type { BigNumberish, BytesLike } from \"../../utils/index.js\";\n\n/**\n * @_ignore:\n */\nexport const WordSize: number = 32;\nconst Padding = new Uint8Array(WordSize);\n\n// Properties used to immediate pass through to the underlying object\n// - `then` is used to detect if an object is a Promise for await\nconst passProperties = [ \"then\" ];\n\nconst _guard = { };\n\nconst resultNames: WeakMap<Result, ReadonlyArray<null | string>> = new WeakMap();\n\nfunction getNames(result: Result): ReadonlyArray<null | string> {\n    return resultNames.get(result)!;\n}\nfunction setNames(result: Result, names: ReadonlyArray<null | string>): void {\n    resultNames.set(result, names);\n}\n\nfunction throwError(name: string, error: Error): never {\n    const wrapped = new Error(`deferred error during ABI decoding triggered accessing ${ name }`);\n    (<any>wrapped).error = error;\n    throw wrapped;\n}\n\nfunction toObject(names: ReadonlyArray<null | string>, items: Result, deep?: boolean): Record<string, any> | Array<any> {\n    if (names.indexOf(null) >= 0) {\n        return items.map((item, index) => {\n            if (item instanceof Result) {\n                return toObject(getNames(item), item, deep);\n            }\n            return item;\n        });\n    }\n\n    return (<Array<string>>names).reduce((accum, name, index) => {\n        let item = items.getValue(name);\n        if (!(name in accum)) {\n            if (deep && item instanceof Result) {\n                item = toObject(getNames(item), item, deep);\n            }\n            accum[name] = item;\n        }\n        return accum;\n    }, <Record<string, any>>{ });\n}\n\n\n/**\n *  A [[Result]] is a sub-class of Array, which allows accessing any\n *  of its values either positionally by its index or, if keys are\n *  provided by its name.\n *\n *  @_docloc: api/abi\n */\nexport class Result extends Array<any> {\n    // No longer used; but cannot be removed as it will remove the\n    // #private field from the .d.ts which may break backwards\n    // compatibility\n    readonly #names: ReadonlyArray<null | string>;\n\n    [ K: string | number ]: any\n\n    /**\n     *  @private\n     */\n    constructor(...args: Array<any>) {\n        // To properly sub-class Array so the other built-in\n        // functions work, the constructor has to behave fairly\n        // well. So, in the event we are created via fromItems()\n        // we build the read-only Result object we want, but on\n        // any other input, we use the default constructor\n\n        // constructor(guard: any, items: Array<any>, keys?: Array<null | string>);\n        const guard = args[0];\n        let items: Array<any> = args[1];\n        let names: Array<null | string> = (args[2] || [ ]).slice();\n\n        let wrap = true;\n        if (guard !== _guard) {\n            items = args;\n            names = [ ];\n            wrap = false;\n        }\n\n        // Can't just pass in ...items since an array of length 1\n        // is a special case in the super.\n        super(items.length);\n        items.forEach((item, index) => { this[index] = item; });\n\n        // Find all unique keys\n        const nameCounts = names.reduce((accum, name) => {\n            if (typeof(name) === \"string\") {\n                accum.set(name, (accum.get(name) || 0) + 1);\n            }\n            return accum;\n        }, <Map<string, number>>(new Map()));\n\n        // Remove any key thats not unique\n        setNames(this, Object.freeze(items.map((item, index) => {\n            const name = names[index];\n            if (name != null && nameCounts.get(name) === 1) {\n                return name;\n            }\n            return null;\n        })));\n\n        // Dummy operations to prevent TypeScript from complaining\n        this.#names = [ ];\n        if (this.#names == null) { void(this.#names); }\n\n        if (!wrap) { return; }\n\n        // A wrapped Result is immutable\n        Object.freeze(this);\n\n        // Proxy indices and names so we can trap deferred errors\n        const proxy = new Proxy(this, {\n            get: (target, prop, receiver) => {\n                if (typeof(prop) === \"string\") {\n\n                    // Index accessor\n                    if (prop.match(/^[0-9]+$/)) {\n                        const index = getNumber(prop, \"%index\");\n                        if (index < 0 || index >= this.length) {\n                            throw new RangeError(\"out of result range\");\n                        }\n\n                        const item = target[index];\n                        if (item instanceof Error) {\n                            throwError(`index ${ index }`, item);\n                        }\n                        return item;\n                    }\n\n                    // Pass important checks (like `then` for Promise) through\n                    if (passProperties.indexOf(prop) >= 0) {\n                        return Reflect.get(target, prop, receiver);\n                    }\n\n                    const value = target[prop];\n                    if (value instanceof Function) {\n                        // Make sure functions work with private variables\n                        // See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy#no_private_property_forwarding\n                        return function(this: any, ...args: Array<any>) {\n                            return value.apply((this === receiver) ? target: this, args);\n                        };\n\n                    } else if (!(prop in target)) {\n                        // Possible name accessor\n                        return target.getValue.apply((this === receiver) ? target: this, [ prop ]);\n                    }\n                }\n\n                return Reflect.get(target, prop, receiver);\n            }\n        });\n        setNames(proxy, getNames(this));\n        return proxy;\n    }\n\n    /**\n     *  Returns the Result as a normal Array. If %%deep%%, any children\n     *  which are Result objects are also converted to a normal Array.\n     *\n     *  This will throw if there are any outstanding deferred\n     *  errors.\n     */\n    toArray(deep?: boolean): Array<any> {\n        const result: Array<any> = [ ];\n        this.forEach((item, index) => {\n            if (item instanceof Error) { throwError(`index ${ index }`, item); }\n            if (deep && item instanceof Result) {\n                item = item.toArray(deep);\n            }\n            result.push(item);\n        });\n        return result;\n    }\n\n    /**\n     *  Returns the Result as an Object with each name-value pair. If\n     *  %%deep%%, any children which are Result objects are also\n     *  converted to an Object.\n     *\n     *  This will throw if any value is unnamed, or if there are\n     *  any outstanding deferred errors.\n     */\n    toObject(deep?: boolean): Record<string, any> {\n        const names = getNames(this);\n        return names.reduce((accum, name, index) => {\n\n            assert(name != null, `value at index ${ index } unnamed`, \"UNSUPPORTED_OPERATION\", {\n                operation: \"toObject()\"\n            });\n\n            return toObject(names, this, deep);\n        }, <Record<string, any>>{});\n    }\n\n    /**\n     *  @_ignore\n     */\n    slice(start?: number | undefined, end?: number | undefined): Result {\n        if (start == null) { start = 0; }\n        if (start < 0) {\n            start += this.length;\n            if (start < 0) { start = 0; }\n        }\n\n        if (end == null) { end = this.length; }\n        if (end < 0) {\n            end += this.length;\n            if (end < 0) { end = 0; }\n        }\n        if (end > this.length) { end = this.length; }\n\n        const _names = getNames(this);\n\n        const result: Array<any> = [ ], names: Array<null | string> = [ ];\n        for (let i = start; i < end; i++) {\n            result.push(this[i]);\n            names.push(_names[i]);\n        }\n\n        return new Result(_guard, result, names);\n    }\n\n    /**\n     *  @_ignore\n     */\n    filter(callback: (el: any, index: number, array: Result) => boolean, thisArg?: any): Result {\n        const _names = getNames(this);\n\n        const result: Array<any> = [ ], names: Array<null | string> = [ ];\n        for (let i = 0; i < this.length; i++) {\n            const item = this[i];\n            if (item instanceof Error) {\n                throwError(`index ${ i }`, item);\n            }\n\n            if (callback.call(thisArg, item, i, this)) {\n                result.push(item);\n                names.push(_names[i]);\n            }\n        }\n\n        return new Result(_guard, result, names);\n    }\n\n    /**\n     *  @_ignore\n     */\n    map<T extends any = any>(callback: (el: any, index: number, array: Result) => T, thisArg?: any): Array<T> {\n        const result: Array<T> = [ ];\n        for (let i = 0; i < this.length; i++) {\n            const item = this[i];\n            if (item instanceof Error) {\n                throwError(`index ${ i }`, item);\n            }\n\n            result.push(callback.call(thisArg, item, i, this));\n        }\n\n        return result;\n    }\n\n\n    /**\n     *  Returns the value for %%name%%.\n     *\n     *  Since it is possible to have a key whose name conflicts with\n     *  a method on a [[Result]] or its superclass Array, or any\n     *  JavaScript keyword, this ensures all named values are still\n     *  accessible by name.\n     */\n    getValue(name: string): any {\n        const index = getNames(this).indexOf(name);\n        if (index === -1) { return undefined; }\n\n        const value = this[index];\n\n        if (value instanceof Error) {\n            throwError(`property ${ JSON.stringify(name) }`, (<any>value).error);\n        }\n\n        return value;\n    }\n\n    /**\n     *  Creates a new [[Result]] for %%items%% with each entry\n     *  also accessible by its corresponding name in %%keys%%.\n     */\n    static fromItems(items: Array<any>, keys?: Array<null | string>): Result {\n        return new Result(_guard, items, keys);\n    }\n}\n\n/**\n *  Returns all errors found in a [[Result]].\n *\n *  Since certain errors encountered when creating a [[Result]] do\n *  not impact the ability to continue parsing data, they are\n *  deferred until they are actually accessed. Hence a faulty string\n *  in an Event that is never used does not impact the program flow.\n *\n *  However, sometimes it may be useful to access, identify or\n *  validate correctness of a [[Result]].\n *\n *  @_docloc api/abi\n */\nexport function checkResultErrors(result: Result): Array<{ path: Array<string | number>, error: Error }> {\n    // Find the first error (if any)\n    const errors: Array<{ path: Array<string | number>, error: Error }> = [ ];\n\n    const checkErrors = function(path: Array<string | number>, object: any): void {\n        if (!Array.isArray(object)) { return; }\n        for (let key in object) {\n            const childPath = path.slice();\n            childPath.push(key);\n\n            try {\n                 checkErrors(childPath, object[key]);\n            } catch (error: any) {\n                errors.push({ path: childPath, error: error });\n            }\n        }\n    }\n    checkErrors([ ], result);\n\n    return errors;\n\n}\n\nfunction getValue(value: BigNumberish): Uint8Array {\n    let bytes = toBeArray(value);\n\n    assert (bytes.length <= WordSize, \"value out-of-bounds\",\n        \"BUFFER_OVERRUN\", { buffer: bytes, length: WordSize, offset: bytes.length });\n\n    if (bytes.length !== WordSize) {\n        bytes = getBytesCopy(concat([ Padding.slice(bytes.length % WordSize), bytes ]));\n    }\n\n    return bytes;\n}\n\n/**\n *  @_ignore\n */\nexport abstract class Coder {\n\n    // The coder name:\n    //   - address, uint256, tuple, array, etc.\n    readonly name!: string;\n\n    // The fully expanded type, including composite types:\n    //   - address, uint256, tuple(address,bytes), uint256[3][4][],  etc.\n    readonly type!: string;\n\n    // The localName bound in the signature, in this example it is \"baz\":\n    //   - tuple(address foo, uint bar) baz\n    readonly localName!: string;\n\n    // Whether this type is dynamic:\n    //  - Dynamic: bytes, string, address[], tuple(boolean[]), etc.\n    //  - Not Dynamic: address, uint256, boolean[3], tuple(address, uint8)\n    readonly dynamic!: boolean;\n\n    constructor(name: string, type: string, localName: string, dynamic: boolean) {\n        defineProperties<Coder>(this, { name, type, localName, dynamic }, {\n            name: \"string\", type: \"string\", localName: \"string\", dynamic: \"boolean\"\n        });\n    }\n\n    _throwError(message: string, value: any): never {\n        assertArgument(false, message, this.localName, value);\n    }\n\n    abstract encode(writer: Writer, value: any): number;\n    abstract decode(reader: Reader): any;\n\n    abstract defaultValue(): any;\n}\n\n/**\n *  @_ignore\n */\nexport class Writer {\n    // An array of WordSize lengthed objects to concatenation\n    #data: Array<Uint8Array>;\n    #dataLength: number;\n\n    constructor() {\n        this.#data = [ ];\n        this.#dataLength = 0;\n    }\n\n    get data(): string {\n        return concat(this.#data);\n    }\n    get length(): number { return this.#dataLength; }\n\n    #writeData(data: Uint8Array): number {\n        this.#data.push(data);\n        this.#dataLength += data.length;\n        return data.length;\n    }\n\n    appendWriter(writer: Writer): number {\n        return this.#writeData(getBytesCopy(writer.data));\n    }\n\n    // Arrayish item; pad on the right to *nearest* WordSize\n    writeBytes(value: BytesLike): number {\n        let bytes = getBytesCopy(value);\n        const paddingOffset = bytes.length % WordSize;\n        if (paddingOffset) {\n            bytes = getBytesCopy(concat([ bytes, Padding.slice(paddingOffset) ]))\n        }\n        return this.#writeData(bytes);\n    }\n\n    // Numeric item; pad on the left *to* WordSize\n    writeValue(value: BigNumberish): number {\n        return this.#writeData(getValue(value));\n    }\n\n    // Inserts a numeric place-holder, returning a callback that can\n    // be used to asjust the value later\n    writeUpdatableValue(): (value: BigNumberish) => void {\n        const offset = this.#data.length;\n        this.#data.push(Padding);\n        this.#dataLength += WordSize;\n        return (value: BigNumberish) => {\n            this.#data[offset] = getValue(value);\n        };\n    }\n}\n\n/**\n *  @_ignore\n */\nexport class Reader {\n    // Allows incomplete unpadded data to be read; otherwise an error\n    // is raised if attempting to overrun the buffer. This is required\n    // to deal with an old Solidity bug, in which event data for\n    // external (not public thoguh) was tightly packed.\n    readonly allowLoose!: boolean;\n\n    readonly #data: Uint8Array;\n    #offset: number;\n\n    #bytesRead: number;\n    #parent: null | Reader;\n    #maxInflation: number;\n\n    constructor(data: BytesLike, allowLoose?: boolean, maxInflation?: number) {\n        defineProperties<Reader>(this, { allowLoose: !!allowLoose });\n\n        this.#data = getBytesCopy(data);\n        this.#bytesRead = 0;\n        this.#parent = null;\n        this.#maxInflation = (maxInflation != null) ? maxInflation: 1024;\n\n        this.#offset = 0;\n    }\n\n    get data(): string { return hexlify(this.#data); }\n    get dataLength(): number { return this.#data.length; }\n    get consumed(): number { return this.#offset; }\n    get bytes(): Uint8Array { return new Uint8Array(this.#data); }\n\n    #incrementBytesRead(count: number): void {\n        if (this.#parent) { return this.#parent.#incrementBytesRead(count); }\n\n        this.#bytesRead += count;\n\n        // Check for excessive inflation (see: #4537)\n        assert(this.#maxInflation < 1 || this.#bytesRead <= this.#maxInflation * this.dataLength, `compressed ABI data exceeds inflation ratio of ${ this.#maxInflation } ( see: https:/\\/github.com/ethers-io/ethers.js/issues/4537 )`,  \"BUFFER_OVERRUN\", {\n            buffer: getBytesCopy(this.#data), offset: this.#offset,\n            length: count, info: {\n                bytesRead: this.#bytesRead,\n                dataLength: this.dataLength\n            }\n        });\n    }\n\n    #peekBytes(offset: number, length: number, loose?: boolean): Uint8Array {\n        let alignedLength = Math.ceil(length / WordSize) * WordSize;\n        if (this.#offset + alignedLength > this.#data.length) {\n            if (this.allowLoose && loose && this.#offset + length <= this.#data.length) {\n                alignedLength = length;\n            } else {\n                assert(false, \"data out-of-bounds\", \"BUFFER_OVERRUN\", {\n                    buffer: getBytesCopy(this.#data),\n                    length: this.#data.length,\n                    offset: this.#offset + alignedLength\n                });\n            }\n        }\n        return this.#data.slice(this.#offset, this.#offset + alignedLength)\n    }\n\n    // Create a sub-reader with the same underlying data, but offset\n    subReader(offset: number): Reader {\n        const reader = new Reader(this.#data.slice(this.#offset + offset), this.allowLoose, this.#maxInflation);\n        reader.#parent = this;\n        return reader;\n    }\n\n    // Read bytes\n    readBytes(length: number, loose?: boolean): Uint8Array {\n        let bytes = this.#peekBytes(0, length, !!loose);\n        this.#incrementBytesRead(length);\n        this.#offset += bytes.length;\n        // @TODO: Make sure the length..end bytes are all 0?\n        return bytes.slice(0, length);\n    }\n\n    // Read a numeric values\n    readValue(): bigint {\n        return toBigInt(this.readBytes(WordSize));\n    }\n\n    readIndex(): number {\n        return toNumber(this.readBytes(WordSize));\n    }\n}\n", "import { getAddress } from \"../../address/index.js\";\nimport { toBeHex } from \"../../utils/maths.js\";\n\nimport { Typed } from \"../typed.js\";\nimport { Coder } from \"./abstract-coder.js\";\n\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\n\n/**\n *  @_ignore\n */\nexport class AddressCoder extends Coder {\n\n    constructor(localName: string) {\n        super(\"address\", \"address\", localName, false);\n    }\n\n    defaultValue(): string {\n        return \"0x0000000000000000000000000000000000000000\";\n    }\n\n    encode(writer: Writer, _value: string | Typed): number {\n        let value = Typed.dereference(_value, \"string\");\n        try {\n            value = getAddress(value);\n        } catch (error: any) {\n            return this._throwError(error.message, _value);\n        }\n        return writer.writeValue(value);\n    }\n\n    decode(reader: Reader): any {\n        return getAddress(toBeHex(reader.readValue(), 20));\n    }\n}\n", "/**\n *  Addresses are a fundamental part of interacting with Ethereum. They\n *  represent the global identity of Externally Owned Accounts (accounts\n *  backed by a private key) and contracts.\n *\n *  The Ethereum Naming Service (ENS) provides an interconnected ecosystem\n *  of contracts, standards and libraries which enable looking up an\n *  address for an ENS name.\n *\n *  These functions help convert between various formats, validate\n *  addresses and safely resolve ENS names.\n *\n *  @_section: api/address:Addresses  [about-addresses]\n */\n\nnull;\n\n/**\n *  An interface for objects which have an address, and can\n *  resolve it asyncronously.\n *\n *  This allows objects such as [[Signer]] or [[Contract]] to\n *  be used most places an address can be, for example getting\n *  the [balance](Provider-getBalance).\n */\nexport interface Addressable {\n    /**\n     *  Get the object address.\n     */\n    getAddress(): Promise<string>;\n}\n\n/**\n *  Anything that can be used to return or resolve an address.\n */\nexport type AddressLike = string | Promise<string> | Addressable;\n\n/**\n *  An interface for any object which can resolve an ENS name.\n */\nexport interface NameResolver {\n    /**\n     *  Resolve to the address for the ENS %%name%%.\n     *\n     *  Resolves to ``null`` if the name is unconfigued. Use\n     *  [[resolveAddress]] (passing this object as %%resolver%%) to\n     *  throw for names that are unconfigured.\n     */\n    resolveName(name: string): Promise<null | string>;\n}\n\nexport { getAddress, getIcapAddress } from \"./address.js\";\n\nexport { getCreateAddress, getCreate2Address } from \"./contract-address.js\";\n\n\nexport { isAddressable, isAddress, resolveAddress } from \"./checks.js\";\n", "import { keccak256 } from \"../crypto/index.js\";\nimport { getBytes, assertArgument } from \"../utils/index.js\";\n\n\nconst BN_0 = BigInt(0);\nconst BN_36 = BigInt(36);\n\nfunction getChecksumAddress(address: string): string {\n//    if (!isHexString(address, 20)) {\n//        logger.throwArgumentError(\"invalid address\", \"address\", address);\n//    }\n\n    address = address.toLowerCase();\n\n    const chars = address.substring(2).split(\"\");\n\n    const expanded = new Uint8Array(40);\n    for (let i = 0; i < 40; i++) {\n        expanded[i] = chars[i].charCodeAt(0);\n    }\n\n    const hashed = getBytes(keccak256(expanded));\n\n    for (let i = 0; i < 40; i += 2) {\n        if ((hashed[i >> 1] >> 4) >= 8) {\n            chars[i] = chars[i].toUpperCase();\n        }\n        if ((hashed[i >> 1] & 0x0f) >= 8) {\n            chars[i + 1] = chars[i + 1].toUpperCase();\n        }\n    }\n\n    return \"0x\" + chars.join(\"\");\n}\n\n// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number\n\n// Create lookup table\nconst ibanLookup: { [character: string]: string } = { };\nfor (let i = 0; i < 10; i++) { ibanLookup[String(i)] = String(i); }\nfor (let i = 0; i < 26; i++) { ibanLookup[String.fromCharCode(65 + i)] = String(10 + i); }\n\n// How many decimal digits can we process? (for 64-bit float, this is 15)\n// i.e. Math.floor(Math.log10(Number.MAX_SAFE_INTEGER));\nconst safeDigits = 15;\n\nfunction ibanChecksum(address: string): string {\n    address = address.toUpperCase();\n    address = address.substring(4) + address.substring(0, 2) + \"00\";\n\n    let expanded = address.split(\"\").map((c) => { return ibanLookup[c]; }).join(\"\");\n\n    // Javascript can handle integers safely up to 15 (decimal) digits\n    while (expanded.length >= safeDigits){\n        let block = expanded.substring(0, safeDigits);\n        expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);\n    }\n\n    let checksum = String(98 - (parseInt(expanded, 10) % 97));\n    while (checksum.length < 2) { checksum = \"0\" + checksum; }\n\n    return checksum;\n};\n\nconst Base36 = (function() {;\n    const result: Record<string, bigint> = { };\n    for (let i = 0; i < 36; i++) {\n        const key = \"0123456789abcdefghijklmnopqrstuvwxyz\"[i];\n        result[key] = BigInt(i);\n    }\n    return result;\n})();\n\nfunction fromBase36(value: string): bigint {\n    value = value.toLowerCase();\n\n    let result = BN_0;\n    for (let i = 0; i < value.length; i++) {\n        result = result * BN_36 + Base36[value[i]];\n    }\n    return result;\n}\n\n/**\n *  Returns a normalized and checksumed address for %%address%%.\n *  This accepts non-checksum addresses, checksum addresses and\n *  [[getIcapAddress]] formats.\n *\n *  The checksum in Ethereum uses the capitalization (upper-case\n *  vs lower-case) of the characters within an address to encode\n *  its checksum, which offers, on average, a checksum of 15-bits.\n *\n *  If %%address%% contains both upper-case and lower-case, it is\n *  assumed to already be a checksum address and its checksum is\n *  validated, and if the address fails its expected checksum an\n *  error is thrown.\n *\n *  If you wish the checksum of %%address%% to be ignore, it should\n *  be converted to lower-case (i.e. ``.toLowercase()``) before\n *  being passed in. This should be a very rare situation though,\n *  that you wish to bypass the safegaurds in place to protect\n *  against an address that has been incorrectly copied from another\n *  source.\n *\n *  @example:\n *    // Adds the checksum (via upper-casing specific letters)\n *    getAddress(\"0x8ba1f109551bd432803012645ac136ddd64dba72\")\n *    //_result:\n *\n *    // Converts ICAP address and adds checksum\n *    getAddress(\"XE65GB6LDNXYOFTX0NSV3FUWKOWIXAMJK36\");\n *    //_result:\n *\n *    // Throws an error if an address contains mixed case,\n *    // but the checksum fails\n *    getAddress(\"0x8Ba1f109551bD432803012645Ac136ddd64DBA72\")\n *    //_error:\n */\nexport function getAddress(address: string): string {\n\n    assertArgument(typeof(address) === \"string\", \"invalid address\", \"address\", address);\n\n    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {\n\n        // Missing the 0x prefix\n        if (!address.startsWith(\"0x\")) { address = \"0x\" + address; }\n\n        const result = getChecksumAddress(address);\n\n        // It is a checksummed address with a bad checksum\n        assertArgument(!address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) || result === address,\n            \"bad address checksum\", \"address\", address);\n\n        return result;\n    }\n\n    // Maybe ICAP? (we only support direct mode)\n    if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {\n        // It is an ICAP address with a bad checksum\n        assertArgument(address.substring(2, 4) === ibanChecksum(address), \"bad icap checksum\", \"address\", address);\n\n        let result = fromBase36(address.substring(4)).toString(16);\n        while (result.length < 40) { result = \"0\" + result; }\n        return  getChecksumAddress(\"0x\" + result);\n    }\n\n    assertArgument(false, \"invalid address\", \"address\", address);\n}\n\n/**\n *  The [ICAP Address format](link-icap) format is an early checksum\n *  format which attempts to be compatible with the banking\n *  industry [IBAN format](link-wiki-iban) for bank accounts.\n *\n *  It is no longer common or a recommended format.\n *\n *  @example:\n *    getIcapAddress(\"0x8ba1f109551bd432803012645ac136ddd64dba72\");\n *    //_result:\n *\n *    getIcapAddress(\"XE65GB6LDNXYOFTX0NSV3FUWKOWIXAMJK36\");\n *    //_result:\n *\n *    // Throws an error if the ICAP checksum is wrong\n *    getIcapAddress(\"XE65GB6LDNXYOFTX0NSV3FUWKOWIXAMJK37\");\n *    //_error:\n */\nexport function getIcapAddress(address: string): string {\n    //let base36 = _base16To36(getAddress(address).substring(2)).toUpperCase();\n    let base36 = BigInt(getAddress(address)).toString(36).toUpperCase();\n    while (base36.length < 30) { base36 = \"0\" + base36; }\n    return \"XE\" + ibanChecksum(\"XE00\" + base36) + base36;\n}\n", "/**\n *  A fundamental building block of Ethereum is the underlying\n *  cryptographic primitives.\n *\n *  @_section: api/crypto:Cryptographic Functions   [about-crypto]\n */\n\nnull\n\n// We import all these so we can export lock()\nimport { computeHmac } from \"./hmac.js\";\nimport { keccak256 } from \"./keccak.js\";\nimport { ripemd160 } from \"./ripemd160.js\";\nimport { pbkdf2 } from \"./pbkdf2.js\";\nimport { randomBytes } from \"./random.js\";\nimport { scrypt, scryptSync } from \"./scrypt.js\";\nimport { sha256, sha512 } from \"./sha2.js\";\n\nexport {\n    computeHmac,\n\n    randomBytes,\n\n    keccak256,\n    ripemd160,\n    sha256, sha512,\n\n    pbkdf2,\n    scrypt, scryptSync\n};\n\nexport { SigningKey } from \"./signing-key.js\";\nexport { Signature } from \"./signature.js\";\n\n/**\n *  Once called, prevents any future change to the underlying cryptographic\n *  primitives using the ``.register`` feature for hooks.\n */\nfunction lock(): void {\n    computeHmac.lock();\n    keccak256.lock();\n    pbkdf2.lock();\n    randomBytes.lock();\n    ripemd160.lock();\n    scrypt.lock();\n    scryptSync.lock();\n    sha256.lock();\n    sha512.lock();\n    randomBytes.lock();\n}\n\nexport { lock };\n\n/////////////////////////////\n// Types\n\nexport type { ProgressCallback } from \"./scrypt.js\";\n\nexport type { SignatureLike } from \"./signature.js\";\n", "/**\n *  An **HMAC** enables verification that a given key was used\n *  to authenticate a payload.\n *\n *  See: [[link-wiki-hmac]]\n *\n *  @_subsection: api/crypto:HMAC  [about-hmac]\n */\nimport { createHmac } from \"./crypto.js\";\nimport { getBytes, hexlify } from \"../utils/index.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\n\nlet locked = false;\n\nconst _computeHmac = function(algorithm: \"sha256\" | \"sha512\", key: Uint8Array, data: Uint8Array): BytesLike {\n    return createHmac(algorithm, key).update(data).digest();\n}\n\nlet __computeHmac = _computeHmac;\n\n/**\n *  Return the HMAC for %%data%% using the %%key%% key with the underlying\n *  %%algo%% used for compression.\n *\n *  @example:\n *    key = id(\"some-secret\")\n *\n *    // Compute the HMAC\n *    computeHmac(\"sha256\", key, \"0x1337\")\n *    //_result:\n *\n *    // To compute the HMAC of UTF-8 data, the data must be\n *    // converted to UTF-8 bytes\n *    computeHmac(\"sha256\", key, toUtf8Bytes(\"Hello World\"))\n *    //_result:\n *\n */\nexport function computeHmac(algorithm: \"sha256\" | \"sha512\", _key: BytesLike, _data: BytesLike): string {\n    const key = getBytes(_key, \"key\");\n    const data = getBytes(_data, \"data\");\n    return hexlify(__computeHmac(algorithm, key, data));\n}\ncomputeHmac._ = _computeHmac;\ncomputeHmac.lock =  function() { locked = true; }\ncomputeHmac.register = function(func: (algorithm: \"sha256\" | \"sha512\", key: Uint8Array, data: Uint8Array) => BytesLike) {\n    if (locked) { throw new Error(\"computeHmac is locked\"); }\n    __computeHmac = func;\n}\nObject.freeze(computeHmac);\n", "\nexport {\n    createHash, createHmac, pbkdf2Sync, randomBytes\n} from \"crypto\";\n", "/**\n *  Cryptographic hashing functions\n *\n *  @_subsection: api/crypto:Hash Functions [about-crypto-hashing]\n */\n\nimport { keccak_256 } from \"@noble/hashes/sha3\";\n\nimport { getBytes, hexlify } from \"../utils/index.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\n\nlet locked = false;\n\nconst _keccak256 = function(data: Uint8Array): Uint8Array {\n    return keccak_256(data);\n}\n\nlet __keccak256: (data: Uint8Array) => BytesLike = _keccak256;\n\n/**\n *  Compute the cryptographic KECCAK256 hash of %%data%%.\n *\n *  The %%data%% **must** be a data representation, to compute the\n *  hash of UTF-8 data use the [[id]] function.\n *\n *  @returns DataHexstring\n *  @example:\n *    keccak256(\"0x\")\n *    //_result:\n *\n *    keccak256(\"0x1337\")\n *    //_result:\n *\n *    keccak256(new Uint8Array([ 0x13, 0x37 ]))\n *    //_result:\n *\n *    // Strings are assumed to be DataHexString, otherwise it will\n *    // throw. To hash UTF-8 data, see the note above.\n *    keccak256(\"Hello World\")\n *    //_error:\n */\nexport function keccak256(_data: BytesLike): string {\n    const data = getBytes(_data, \"data\");\n    return hexlify(__keccak256(data));\n}\nkeccak256._ = _keccak256;\nkeccak256.lock = function(): void { locked = true; }\nkeccak256.register = function(func: (data: Uint8Array) => BytesLike) {\n    if (locked) { throw new TypeError(\"keccak256 is locked\"); }\n    __keccak256 = func;\n}\nObject.freeze(keccak256);\n", "import { bytes, exists, number, output } from './_assert.js';\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.js';\nimport {\n  Hash,\n  u32,\n  Input,\n  toBytes,\n  wrapConstructor,\n  wrapXOFConstructorWithOpts,\n  HashXOF,\n} from './utils.js';\n\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA]: [number[], number[], bigint[]] = [[], [], []];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n  // Pi\n  [x, y] = [y, (2 * x + 3 * y) % 5];\n  SHA3_PI.push(2 * (5 * y + x));\n  // Rotational\n  SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n  // Iota\n  let t = _0n;\n  for (let j = 0; j < 7; j++) {\n    R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n    if (R & _2n) t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n  }\n  _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);\n\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h: number, l: number, s: number) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h: number, l: number, s: number) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s: Uint32Array, rounds: number = 24) {\n  const B = new Uint32Array(5 * 2);\n  // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n  for (let round = 24 - rounds; round < 24; round++) {\n    // Theta \u03B8\n    for (let x = 0; x < 10; x++) B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n    for (let x = 0; x < 10; x += 2) {\n      const idx1 = (x + 8) % 10;\n      const idx0 = (x + 2) % 10;\n      const B0 = B[idx0];\n      const B1 = B[idx0 + 1];\n      const Th = rotlH(B0, B1, 1) ^ B[idx1];\n      const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n      for (let y = 0; y < 50; y += 10) {\n        s[x + y] ^= Th;\n        s[x + y + 1] ^= Tl;\n      }\n    }\n    // Rho (\u03C1) and Pi (\u03C0)\n    let curH = s[2];\n    let curL = s[3];\n    for (let t = 0; t < 24; t++) {\n      const shift = SHA3_ROTL[t];\n      const Th = rotlH(curH, curL, shift);\n      const Tl = rotlL(curH, curL, shift);\n      const PI = SHA3_PI[t];\n      curH = s[PI];\n      curL = s[PI + 1];\n      s[PI] = Th;\n      s[PI + 1] = Tl;\n    }\n    // Chi (\u03C7)\n    for (let y = 0; y < 50; y += 10) {\n      for (let x = 0; x < 10; x++) B[x] = s[y + x];\n      for (let x = 0; x < 10; x++) s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n    }\n    // Iota (\u03B9)\n    s[0] ^= SHA3_IOTA_H[round];\n    s[1] ^= SHA3_IOTA_L[round];\n  }\n  B.fill(0);\n}\n\nexport class Keccak extends Hash<Keccak> implements HashXOF<Keccak> {\n  protected state: Uint8Array;\n  protected pos = 0;\n  protected posOut = 0;\n  protected finished = false;\n  protected state32: Uint32Array;\n  protected destroyed = false;\n  // NOTE: we accept arguments in bytes instead of bits here.\n  constructor(\n    public blockLen: number,\n    public suffix: number,\n    public outputLen: number,\n    protected enableXOF = false,\n    protected rounds: number = 24\n  ) {\n    super();\n    // Can be passed from user as dkLen\n    number(outputLen);\n    // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n    if (0 >= this.blockLen || this.blockLen >= 200)\n      throw new Error('Sha3 supports only keccak-f1600 function');\n    this.state = new Uint8Array(200);\n    this.state32 = u32(this.state);\n  }\n  protected keccak() {\n    keccakP(this.state32, this.rounds);\n    this.posOut = 0;\n    this.pos = 0;\n  }\n  update(data: Input) {\n    exists(this);\n    const { blockLen, state } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      for (let i = 0; i < take; i++) state[this.pos++] ^= data[pos++];\n      if (this.pos === blockLen) this.keccak();\n    }\n    return this;\n  }\n  protected finish() {\n    if (this.finished) return;\n    this.finished = true;\n    const { state, suffix, pos, blockLen } = this;\n    // Do the padding\n    state[pos] ^= suffix;\n    if ((suffix & 0x80) !== 0 && pos === blockLen - 1) this.keccak();\n    state[blockLen - 1] ^= 0x80;\n    this.keccak();\n  }\n  protected writeInto(out: Uint8Array): Uint8Array {\n    exists(this, false);\n    bytes(out);\n    this.finish();\n    const bufferOut = this.state;\n    const { blockLen } = this;\n    for (let pos = 0, len = out.length; pos < len; ) {\n      if (this.posOut >= blockLen) this.keccak();\n      const take = Math.min(blockLen - this.posOut, len - pos);\n      out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n      this.posOut += take;\n      pos += take;\n    }\n    return out;\n  }\n  xofInto(out: Uint8Array): Uint8Array {\n    // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n    if (!this.enableXOF) throw new Error('XOF is not possible for this instance');\n    return this.writeInto(out);\n  }\n  xof(bytes: number): Uint8Array {\n    number(bytes);\n    return this.xofInto(new Uint8Array(bytes));\n  }\n  digestInto(out: Uint8Array) {\n    output(out, this);\n    if (this.finished) throw new Error('digest() was already called');\n    this.writeInto(out);\n    this.destroy();\n    return out;\n  }\n  digest() {\n    return this.digestInto(new Uint8Array(this.outputLen));\n  }\n  destroy() {\n    this.destroyed = true;\n    this.state.fill(0);\n  }\n  _cloneInto(to?: Keccak): Keccak {\n    const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n    to ||= new Keccak(blockLen, suffix, outputLen, enableXOF, rounds);\n    to.state32.set(this.state32);\n    to.pos = this.pos;\n    to.posOut = this.posOut;\n    to.finished = this.finished;\n    to.rounds = rounds;\n    // Suffix can change in cSHAKE\n    to.suffix = suffix;\n    to.outputLen = outputLen;\n    to.enableXOF = enableXOF;\n    to.destroyed = this.destroyed;\n    return to;\n  }\n}\n\nconst gen = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\n\nexport const sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\nexport const sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\nexport const sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\nexport const keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\nexport const keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\nexport const keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\n\nexport type ShakeOpts = { dkLen?: number };\n\nconst genShake = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapXOFConstructorWithOpts<HashXOF<Keccak>, ShakeOpts>(\n    (opts: ShakeOpts = {}) =>\n      new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true)\n  );\n\nexport const shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\nexport const shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n", "function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nfunction bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\nfunction bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!(b instanceof Uint8Array)) throw new Error('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nfunction hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nfunction exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nfunction output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nexport { number, bool, bytes, hash, exists, output };\n\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n", "const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n: bigint, le = false) {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nfunction split(lst: bigint[], le = false) {\n  let Ah = new Uint32Array(lst.length);\n  let Al = new Uint32Array(lst.length);\n  for (let i = 0; i < lst.length; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nconst toBig = (h: number, l: number) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, _l: number, s: number) => h >>> s;\nconst shrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h: number, l: number) => l;\nconst rotr32L = (h: number, _l: number) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number) => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah: number, Al: number, Bh: number, Bl: number) {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number) =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number) =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nexport {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\n// prettier-ignore\nconst u64 = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n", "/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\nconst u8a = (a: any): a is Uint8Array => a instanceof Uint8Array;\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const len = hex.length;\n  if (len % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n  const array = new Uint8Array(len / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!u8a(data)) throw new Error(`expected Uint8Array, got ${typeof data}`);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n  let pad = 0; // walk through each item, ensure they have proper type\n  arrays.forEach((a) => {\n    if (!u8a(a)) throw new Error('Uint8Array expected');\n    r.set(a, pad);\n    pad += a.length;\n  });\n  return r;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\nconst toStr = {}.toString;\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashCons: () => Hash<T>) {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n", "// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// See utils.ts for details.\n// The file will throw on node.js 14 and earlier.\n// @ts-ignore\nimport * as nc from 'node:crypto';\nexport const crypto =\n  nc && typeof nc === 'object' && 'webcrypto' in nc ? (nc.webcrypto as any) : undefined;\n", "import { ripemd160 as noble_ripemd160 } from \"@noble/hashes/ripemd160\";\n\nimport { getBytes,  hexlify } from \"../utils/index.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\n\nlet locked = false;\n\nconst _ripemd160 = function(data: Uint8Array): Uint8Array {\n    return noble_ripemd160(data);\n}\n\nlet __ripemd160: (data: Uint8Array) => BytesLike = _ripemd160;\n\n/**\n *  Compute the cryptographic RIPEMD-160 hash of %%data%%.\n *\n *  @_docloc: api/crypto:Hash Functions\n *  @returns DataHexstring\n *\n *  @example:\n *    ripemd160(\"0x\")\n *    //_result:\n *\n *    ripemd160(\"0x1337\")\n *    //_result:\n *\n *    ripemd160(new Uint8Array([ 0x13, 0x37 ]))\n *    //_result:\n *\n */\nexport function ripemd160(_data: BytesLike): string {\n    const data = getBytes(_data, \"data\");\n    return hexlify(__ripemd160(data));\n}\nripemd160._ = _ripemd160;\nripemd160.lock = function(): void { locked = true; }\nripemd160.register = function(func: (data: Uint8Array) => BytesLike) {\n    if (locked) { throw new TypeError(\"ripemd160 is locked\"); }\n    __ripemd160 = func;\n}\nObject.freeze(ripemd160);\n", "import { SHA2 } from './_sha2.js';\nimport { wrapConstructor } from './utils.js';\n\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160.html\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160/pdf/AB-9601/AB-9601.pdf\nconst Rho = /* @__PURE__ */ new Uint8Array([7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]);\nconst Id = /* @__PURE__ */ Uint8Array.from({ length: 16 }, (_, i) => i);\nconst Pi = /* @__PURE__ */ Id.map((i) => (9 * i + 5) % 16);\nlet idxL = [Id];\nlet idxR = [Pi];\nfor (let i = 0; i < 4; i++) for (let j of [idxL, idxR]) j.push(j[i].map((k) => Rho[k]));\n\nconst shifts = /* @__PURE__ */ [\n  [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],\n  [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],\n  [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],\n  [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],\n  [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],\n].map((i) => new Uint8Array(i));\nconst shiftsL = /* @__PURE__ */ idxL.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst shiftsR = /* @__PURE__ */ idxR.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst Kl = /* @__PURE__ */ new Uint32Array([\n  0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e,\n]);\nconst Kr = /* @__PURE__ */ new Uint32Array([\n  0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000,\n]);\n// The rotate left (circular left shift) operation for uint32\nconst rotl = (word: number, shift: number) => (word << shift) | (word >>> (32 - shift));\n// It's called f() in spec.\nfunction f(group: number, x: number, y: number, z: number): number {\n  if (group === 0) return x ^ y ^ z;\n  else if (group === 1) return (x & y) | (~x & z);\n  else if (group === 2) return (x | ~y) ^ z;\n  else if (group === 3) return (x & z) | (y & ~z);\n  else return x ^ (y | ~z);\n}\n// Temporary buffer, not used to store anything between runs\nconst BUF = /* @__PURE__ */ new Uint32Array(16);\nexport class RIPEMD160 extends SHA2<RIPEMD160> {\n  private h0 = 0x67452301 | 0;\n  private h1 = 0xefcdab89 | 0;\n  private h2 = 0x98badcfe | 0;\n  private h3 = 0x10325476 | 0;\n  private h4 = 0xc3d2e1f0 | 0;\n\n  constructor() {\n    super(64, 20, 8, true);\n  }\n  protected get(): [number, number, number, number, number] {\n    const { h0, h1, h2, h3, h4 } = this;\n    return [h0, h1, h2, h3, h4];\n  }\n  protected set(h0: number, h1: number, h2: number, h3: number, h4: number) {\n    this.h0 = h0 | 0;\n    this.h1 = h1 | 0;\n    this.h2 = h2 | 0;\n    this.h3 = h3 | 0;\n    this.h4 = h4 | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    for (let i = 0; i < 16; i++, offset += 4) BUF[i] = view.getUint32(offset, true);\n    // prettier-ignore\n    let al = this.h0 | 0, ar = al,\n        bl = this.h1 | 0, br = bl,\n        cl = this.h2 | 0, cr = cl,\n        dl = this.h3 | 0, dr = dl,\n        el = this.h4 | 0, er = el;\n\n    // Instead of iterating 0 to 80, we split it into 5 groups\n    // And use the groups in constants, functions, etc. Much simpler\n    for (let group = 0; group < 5; group++) {\n      const rGroup = 4 - group;\n      const hbl = Kl[group], hbr = Kr[group]; // prettier-ignore\n      const rl = idxL[group], rr = idxR[group]; // prettier-ignore\n      const sl = shiftsL[group], sr = shiftsR[group]; // prettier-ignore\n      for (let i = 0; i < 16; i++) {\n        const tl = (rotl(al + f(group, bl, cl, dl) + BUF[rl[i]] + hbl, sl[i]) + el) | 0;\n        al = el, el = dl, dl = rotl(cl, 10) | 0, cl = bl, bl = tl; // prettier-ignore\n      }\n      // 2 loops are 10% faster\n      for (let i = 0; i < 16; i++) {\n        const tr = (rotl(ar + f(rGroup, br, cr, dr) + BUF[rr[i]] + hbr, sr[i]) + er) | 0;\n        ar = er, er = dr, dr = rotl(cr, 10) | 0, cr = br, br = tr; // prettier-ignore\n      }\n    }\n    // Add the compressed chunk to the current hash value\n    this.set(\n      (this.h1 + cl + dr) | 0,\n      (this.h2 + dl + er) | 0,\n      (this.h3 + el + ar) | 0,\n      (this.h4 + al + br) | 0,\n      (this.h0 + bl + cr) | 0\n    );\n  }\n  protected roundClean() {\n    BUF.fill(0);\n  }\n  destroy() {\n    this.destroyed = true;\n    this.buffer.fill(0);\n    this.set(0, 0, 0, 0, 0);\n  }\n}\n\n/**\n * RIPEMD-160 - a hash function from 1990s.\n * @param message - msg that would be hashed\n */\nexport const ripemd160 = /* @__PURE__ */ wrapConstructor(() => new RIPEMD160());\n", "import { exists, output } from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Base SHA2 class (RFC 6234)\nexport abstract class SHA2<T extends SHA2<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    exists(this);\n    output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n", "/**\n *  A **Password-Based Key-Derivation Function** is designed to create\n *  a sequence of bytes suitible as a **key** from a human-rememberable\n *  password.\n *\n *  @_subsection: api/crypto:Passwords  [about-pbkdf]\n */\n\nimport { pbkdf2Sync } from \"./crypto.js\";\n\nimport { getBytes, hexlify } from \"../utils/index.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\n\nlet locked = false;\n\nconst _pbkdf2 = function(password: Uint8Array, salt: Uint8Array, iterations: number, keylen: number, algo: \"sha256\" | \"sha512\"): BytesLike {\n    return pbkdf2Sync(password, salt, iterations, keylen, algo);\n}\n\nlet __pbkdf2 = _pbkdf2;\n\n/**\n *  Return the [[link-pbkdf2]] for %%keylen%% bytes for %%password%% using\n *  the %%salt%% and using %%iterations%% of %%algo%%.\n *\n *  This PBKDF is outdated and should not be used in new projects, but is\n *  required to decrypt older files.\n *\n *  @example:\n *    // The password must be converted to bytes, and it is generally\n *    // best practices to ensure the string has been normalized. Many\n *    // formats explicitly indicate the normalization form to use.\n *    password = \"hello\"\n *    passwordBytes = toUtf8Bytes(password, \"NFKC\")\n *\n *    salt = id(\"some-salt\")\n *\n *    // Compute the PBKDF2\n *    pbkdf2(passwordBytes, salt, 1024, 16, \"sha256\")\n *    //_result:\n */\nexport function pbkdf2(_password: BytesLike, _salt: BytesLike, iterations: number, keylen: number, algo: \"sha256\" | \"sha512\"): string {\n    const password = getBytes(_password, \"password\");\n    const salt = getBytes(_salt, \"salt\");\n    return hexlify(__pbkdf2(password, salt, iterations, keylen, algo));\n}\npbkdf2._ = _pbkdf2;\npbkdf2.lock = function(): void { locked = true; }\npbkdf2.register = function(func: (password: Uint8Array, salt: Uint8Array, iterations: number, keylen: number, algo: \"sha256\" | \"sha512\") => BytesLike) {\n    if (locked) { throw new Error(\"pbkdf2 is locked\"); }\n    __pbkdf2 = func;\n}\nObject.freeze(pbkdf2);\n", "/**\n *  A **Cryptographically Secure Random Value** is one that has been\n *  generated with additional care take to prevent side-channels\n *  from allowing others to detect it and prevent others from through\n *  coincidence generate the same values.\n *\n *  @_subsection: api/crypto:Random Values  [about-crypto-random]\n */\nimport { randomBytes as crypto_random } from \"./crypto.js\";\n\nlet locked = false;\n\nconst _randomBytes = function(length: number): Uint8Array {\n    return new Uint8Array(crypto_random(length));\n}\n\nlet __randomBytes = _randomBytes;\n\n/**\n *  Return %%length%% bytes of cryptographically secure random data.\n *\n *  @example:\n *    randomBytes(8)\n *    //_result:\n */\nexport function randomBytes(length: number): Uint8Array {\n    return __randomBytes(length);\n}\n\nrandomBytes._ = _randomBytes;\nrandomBytes.lock = function(): void { locked = true; }\nrandomBytes.register = function(func: (length: number) => Uint8Array) {\n    if (locked) { throw new Error(\"randomBytes is locked\"); }\n    __randomBytes = func;\n}\nObject.freeze(randomBytes);\n", "import { scrypt as _nobleSync, scryptAsync as _nobleAsync } from \"@noble/hashes/scrypt\";\n\nimport { getBytes, hexlify as H } from \"../utils/index.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\n/**\n *  A callback during long-running operations to update any\n *  UI or provide programatic access to the progress.\n *\n *  The %%percent%% is a value between ``0`` and ``1``.\n *\n *  @_docloc: api/crypto:Passwords\n */\nexport type ProgressCallback = (percent: number) => void;\n\n\nlet lockedSync = false, lockedAsync = false;\n\nconst _scryptAsync = async function(passwd: Uint8Array, salt: Uint8Array, N: number, r: number, p: number, dkLen: number, onProgress?: ProgressCallback) {\n    return await _nobleAsync(passwd, salt, { N, r, p, dkLen, onProgress });\n}\nconst _scryptSync = function(passwd: Uint8Array, salt: Uint8Array, N: number, r: number, p: number, dkLen: number) {\n    return _nobleSync(passwd, salt, { N, r, p, dkLen });\n}\n\nlet __scryptAsync: (passwd: Uint8Array, salt: Uint8Array, N: number, r: number, p: number, dkLen: number, onProgress?: ProgressCallback) => Promise<BytesLike> = _scryptAsync;\nlet __scryptSync: (passwd: Uint8Array, salt: Uint8Array, N: number, r: number, p: number, dkLen: number) => BytesLike = _scryptSync\n\n\n/**\n *  The [[link-wiki-scrypt]] uses a memory and cpu hard method of\n *  derivation to increase the resource cost to brute-force a password\n *  for a given key.\n *\n *  This means this algorithm is intentionally slow, and can be tuned to\n *  become slower. As computation and memory speed improve over time,\n *  increasing the difficulty maintains the cost of an attacker.\n *\n *  For example, if a target time of 5 seconds is used, a legitimate user\n *  which knows their password requires only 5 seconds to unlock their\n *  account. A 6 character password has 68 billion possibilities, which\n *  would require an attacker to invest over 10,000 years of CPU time. This\n *  is of course a crude example (as password generally aren't random),\n *  but demonstrates to value of imposing large costs to decryption.\n *\n *  For this reason, if building a UI which involved decrypting or\n *  encrypting datsa using scrypt, it is recommended to use a\n *  [[ProgressCallback]] (as event short periods can seem lik an eternity\n *  if the UI freezes). Including the phrase //\"decrypting\"// in the UI\n *  can also help, assuring the user their waiting is for a good reason.\n *\n *  @_docloc: api/crypto:Passwords\n *\n *  @example:\n *    // The password must be converted to bytes, and it is generally\n *    // best practices to ensure the string has been normalized. Many\n *    // formats explicitly indicate the normalization form to use.\n *    password = \"hello\"\n *    passwordBytes = toUtf8Bytes(password, \"NFKC\")\n *\n *    salt = id(\"some-salt\")\n *\n *    // Compute the scrypt\n *    scrypt(passwordBytes, salt, 1024, 8, 1, 16)\n *    //_result:\n */\nexport async function scrypt(_passwd: BytesLike, _salt: BytesLike, N: number, r: number, p: number, dkLen: number, progress?: ProgressCallback): Promise<string> {\n    const passwd = getBytes(_passwd, \"passwd\");\n    const salt = getBytes(_salt, \"salt\");\n    return H(await __scryptAsync(passwd, salt, N, r, p, dkLen, progress));\n}\nscrypt._ = _scryptAsync;\nscrypt.lock = function(): void { lockedAsync = true; }\nscrypt.register = function(func: (passwd: Uint8Array, salt: Uint8Array, N: number, r: number, p: number, dkLen: number, progress?: ProgressCallback) => Promise<BytesLike>) {\n    if (lockedAsync) { throw new Error(\"scrypt is locked\"); }\n    __scryptAsync = func;\n}\nObject.freeze(scrypt);\n\n/**\n *  Provides a synchronous variant of [[scrypt]].\n *\n *  This will completely lock up and freeze the UI in a browser and will\n *  prevent any event loop from progressing. For this reason, it is\n *  preferred to use the [async variant](scrypt).\n *\n *  @_docloc: api/crypto:Passwords\n *\n *  @example:\n *    // The password must be converted to bytes, and it is generally\n *    // best practices to ensure the string has been normalized. Many\n *    // formats explicitly indicate the normalization form to use.\n *    password = \"hello\"\n *    passwordBytes = toUtf8Bytes(password, \"NFKC\")\n *\n *    salt = id(\"some-salt\")\n *\n *    // Compute the scrypt\n *    scryptSync(passwordBytes, salt, 1024, 8, 1, 16)\n *    //_result:\n */\nexport function scryptSync(_passwd: BytesLike, _salt: BytesLike, N: number, r: number, p: number, dkLen: number): string {\n    const passwd = getBytes(_passwd, \"passwd\");\n    const salt = getBytes(_salt, \"salt\");\n    return H(__scryptSync(passwd, salt, N, r, p, dkLen));\n}\nscryptSync._ = _scryptSync;\nscryptSync.lock = function(): void { lockedSync = true; }\nscryptSync.register = function(func: (passwd: Uint8Array, salt: Uint8Array, N: number, r: number, p: number, dkLen: number) => BytesLike) {\n    if (lockedSync) { throw new Error(\"scryptSync is locked\"); }\n    __scryptSync = func;\n}\nObject.freeze(scryptSync);\n", "import { number as assertNumber } from './_assert.js';\nimport { sha256 } from './sha256.js';\nimport { pbkdf2 } from './pbkdf2.js';\nimport { asyncLoop, checkOpts, Input, u32 } from './utils.js';\n\n// RFC 7914 Scrypt KDF\n\n// Left rotate for uint32\nconst rotl = (a: number, b: number) => (a << b) | (a >>> (32 - b));\n\n// The main Scrypt loop: uses Salsa extensively.\n// Six versions of the function were tried, this is the fastest one.\n// prettier-ignore\nfunction XorAndSalsa(\n  prev: Uint32Array,\n  pi: number,\n  input: Uint32Array,\n  ii: number,\n  out: Uint32Array,\n  oi: number\n) {\n  // Based on https://cr.yp.to/salsa20.html\n  // Xor blocks\n  let y00 = prev[pi++] ^ input[ii++], y01 = prev[pi++] ^ input[ii++];\n  let y02 = prev[pi++] ^ input[ii++], y03 = prev[pi++] ^ input[ii++];\n  let y04 = prev[pi++] ^ input[ii++], y05 = prev[pi++] ^ input[ii++];\n  let y06 = prev[pi++] ^ input[ii++], y07 = prev[pi++] ^ input[ii++];\n  let y08 = prev[pi++] ^ input[ii++], y09 = prev[pi++] ^ input[ii++];\n  let y10 = prev[pi++] ^ input[ii++], y11 = prev[pi++] ^ input[ii++];\n  let y12 = prev[pi++] ^ input[ii++], y13 = prev[pi++] ^ input[ii++];\n  let y14 = prev[pi++] ^ input[ii++], y15 = prev[pi++] ^ input[ii++];\n  // Save state to temporary variables (salsa)\n  let x00 = y00, x01 = y01, x02 = y02, x03 = y03,\n      x04 = y04, x05 = y05, x06 = y06, x07 = y07,\n      x08 = y08, x09 = y09, x10 = y10, x11 = y11,\n      x12 = y12, x13 = y13, x14 = y14, x15 = y15;\n  // Main loop (salsa)\n  for (let i = 0; i < 8; i += 2) {\n    x04 ^= rotl(x00 + x12 | 0,  7); x08 ^= rotl(x04 + x00 | 0,  9);\n    x12 ^= rotl(x08 + x04 | 0, 13); x00 ^= rotl(x12 + x08 | 0, 18);\n    x09 ^= rotl(x05 + x01 | 0,  7); x13 ^= rotl(x09 + x05 | 0,  9);\n    x01 ^= rotl(x13 + x09 | 0, 13); x05 ^= rotl(x01 + x13 | 0, 18);\n    x14 ^= rotl(x10 + x06 | 0,  7); x02 ^= rotl(x14 + x10 | 0,  9);\n    x06 ^= rotl(x02 + x14 | 0, 13); x10 ^= rotl(x06 + x02 | 0, 18);\n    x03 ^= rotl(x15 + x11 | 0,  7); x07 ^= rotl(x03 + x15 | 0,  9);\n    x11 ^= rotl(x07 + x03 | 0, 13); x15 ^= rotl(x11 + x07 | 0, 18);\n    x01 ^= rotl(x00 + x03 | 0,  7); x02 ^= rotl(x01 + x00 | 0,  9);\n    x03 ^= rotl(x02 + x01 | 0, 13); x00 ^= rotl(x03 + x02 | 0, 18);\n    x06 ^= rotl(x05 + x04 | 0,  7); x07 ^= rotl(x06 + x05 | 0,  9);\n    x04 ^= rotl(x07 + x06 | 0, 13); x05 ^= rotl(x04 + x07 | 0, 18);\n    x11 ^= rotl(x10 + x09 | 0,  7); x08 ^= rotl(x11 + x10 | 0,  9);\n    x09 ^= rotl(x08 + x11 | 0, 13); x10 ^= rotl(x09 + x08 | 0, 18);\n    x12 ^= rotl(x15 + x14 | 0,  7); x13 ^= rotl(x12 + x15 | 0,  9);\n    x14 ^= rotl(x13 + x12 | 0, 13); x15 ^= rotl(x14 + x13 | 0, 18);\n  }\n  // Write output (salsa)\n  out[oi++] = (y00 + x00) | 0; out[oi++] = (y01 + x01) | 0;\n  out[oi++] = (y02 + x02) | 0; out[oi++] = (y03 + x03) | 0;\n  out[oi++] = (y04 + x04) | 0; out[oi++] = (y05 + x05) | 0;\n  out[oi++] = (y06 + x06) | 0; out[oi++] = (y07 + x07) | 0;\n  out[oi++] = (y08 + x08) | 0; out[oi++] = (y09 + x09) | 0;\n  out[oi++] = (y10 + x10) | 0; out[oi++] = (y11 + x11) | 0;\n  out[oi++] = (y12 + x12) | 0; out[oi++] = (y13 + x13) | 0;\n  out[oi++] = (y14 + x14) | 0; out[oi++] = (y15 + x15) | 0;\n}\n\nfunction BlockMix(input: Uint32Array, ii: number, out: Uint32Array, oi: number, r: number) {\n  // The block B is r 128-byte chunks (which is equivalent of 2r 64-byte chunks)\n  let head = oi + 0;\n  let tail = oi + 16 * r;\n  for (let i = 0; i < 16; i++) out[tail + i] = input[ii + (2 * r - 1) * 16 + i]; // X \u2190 B[2r\u22121]\n  for (let i = 0; i < r; i++, head += 16, ii += 16) {\n    // We write odd & even Yi at same time. Even: 0bXXXXX0 Odd:  0bXXXXX1\n    XorAndSalsa(out, tail, input, ii, out, head); // head[i] = Salsa(blockIn[2*i] ^ tail[i-1])\n    if (i > 0) tail += 16; // First iteration overwrites tmp value in tail\n    XorAndSalsa(out, head, input, (ii += 16), out, tail); // tail[i] = Salsa(blockIn[2*i+1] ^ head[i])\n  }\n}\n\nexport type ScryptOpts = {\n  N: number; // cost factor\n  r: number; // block size\n  p: number; // parallelization\n  dkLen?: number; // key length\n  asyncTick?: number; // block execution max time\n  maxmem?: number;\n  onProgress?: (progress: number) => void;\n};\n\n// Common prologue and epilogue for sync/async functions\nfunction scryptInit(password: Input, salt: Input, _opts?: ScryptOpts) {\n  // Maxmem - 1GB+1KB by default\n  const opts = checkOpts(\n    {\n      dkLen: 32,\n      asyncTick: 10,\n      maxmem: 1024 ** 3 + 1024,\n    },\n    _opts\n  );\n  const { N, r, p, dkLen, asyncTick, maxmem, onProgress } = opts;\n  assertNumber(N);\n  assertNumber(r);\n  assertNumber(p);\n  assertNumber(dkLen);\n  assertNumber(asyncTick);\n  assertNumber(maxmem);\n  if (onProgress !== undefined && typeof onProgress !== 'function')\n    throw new Error('progressCb should be function');\n  const blockSize = 128 * r;\n  const blockSize32 = blockSize / 4;\n  if (N <= 1 || (N & (N - 1)) !== 0 || N >= 2 ** (blockSize / 8) || N > 2 ** 32) {\n    // NOTE: we limit N to be less than 2**32 because of 32 bit variant of Integrify function\n    // There is no JS engines that allows alocate more than 4GB per single Uint8Array for now, but can change in future.\n    throw new Error(\n      'Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32'\n    );\n  }\n  if (p < 0 || p > ((2 ** 32 - 1) * 32) / blockSize) {\n    throw new Error(\n      'Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)'\n    );\n  }\n  if (dkLen < 0 || dkLen > (2 ** 32 - 1) * 32) {\n    throw new Error(\n      'Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32'\n    );\n  }\n  const memUsed = blockSize * (N + p);\n  if (memUsed > maxmem) {\n    throw new Error(\n      `Scrypt: parameters too large, ${memUsed} (128 * r * (N + p)) > ${maxmem} (maxmem)`\n    );\n  }\n  // [B0...Bp\u22121] \u2190 PBKDF2HMAC-SHA256(Passphrase, Salt, 1, blockSize*ParallelizationFactor)\n  // Since it has only one iteration there is no reason to use async variant\n  const B = pbkdf2(sha256, password, salt, { c: 1, dkLen: blockSize * p });\n  const B32 = u32(B);\n  // Re-used between parallel iterations. Array(iterations) of B\n  const V = u32(new Uint8Array(blockSize * N));\n  const tmp = u32(new Uint8Array(blockSize));\n  let blockMixCb = () => {};\n  if (onProgress) {\n    const totalBlockMix = 2 * N * p;\n    // Invoke callback if progress changes from 10.01 to 10.02\n    // Allows to draw smooth progress bar on up to 8K screen\n    const callbackPer = Math.max(Math.floor(totalBlockMix / 10000), 1);\n    let blockMixCnt = 0;\n    blockMixCb = () => {\n      blockMixCnt++;\n      if (onProgress && (!(blockMixCnt % callbackPer) || blockMixCnt === totalBlockMix))\n        onProgress(blockMixCnt / totalBlockMix);\n    };\n  }\n  return { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb, asyncTick };\n}\n\nfunction scryptOutput(\n  password: Input,\n  dkLen: number,\n  B: Uint8Array,\n  V: Uint32Array,\n  tmp: Uint32Array\n) {\n  const res = pbkdf2(sha256, password, B, { c: 1, dkLen });\n  B.fill(0);\n  V.fill(0);\n  tmp.fill(0);\n  return res;\n}\n\n/**\n * Scrypt KDF from RFC 7914.\n * @param password - pass\n * @param salt - salt\n * @param opts - parameters\n * - `N` is cpu/mem work factor (power of 2 e.g. 2**18)\n * - `r` is block size (8 is common), fine-tunes sequential memory read size and performance\n * - `p` is parallelization factor (1 is common)\n * - `dkLen` is output key length in bytes e.g. 32.\n * - `asyncTick` - (default: 10) max time in ms for which async function can block execution\n * - `maxmem` - (default: `1024 ** 3 + 1024` aka 1GB+1KB). A limit that the app could use for scrypt\n * - `onProgress` - callback function that would be executed for progress report\n * @returns Derived key\n */\nexport function scrypt(password: Input, salt: Input, opts: ScryptOpts) {\n  const { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb } = scryptInit(\n    password,\n    salt,\n    opts\n  );\n  for (let pi = 0; pi < p; pi++) {\n    const Pi = blockSize32 * pi;\n    for (let i = 0; i < blockSize32; i++) V[i] = B32[Pi + i]; // V[0] = B[i]\n    for (let i = 0, pos = 0; i < N - 1; i++) {\n      BlockMix(V, pos, V, (pos += blockSize32), r); // V[i] = BlockMix(V[i-1]);\n      blockMixCb();\n    }\n    BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element\n    blockMixCb();\n    for (let i = 0; i < N; i++) {\n      // First u32 of the last 64-byte block (u32 is LE)\n      const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations\n      for (let k = 0; k < blockSize32; k++) tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]\n      BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])\n      blockMixCb();\n    }\n  }\n  return scryptOutput(password, dkLen, B, V, tmp);\n}\n\n/**\n * Scrypt KDF from RFC 7914.\n */\nexport async function scryptAsync(password: Input, salt: Input, opts: ScryptOpts) {\n  const { N, r, p, dkLen, blockSize32, V, B32, B, tmp, blockMixCb, asyncTick } = scryptInit(\n    password,\n    salt,\n    opts\n  );\n  for (let pi = 0; pi < p; pi++) {\n    const Pi = blockSize32 * pi;\n    for (let i = 0; i < blockSize32; i++) V[i] = B32[Pi + i]; // V[0] = B[i]\n    let pos = 0;\n    await asyncLoop(N - 1, asyncTick, () => {\n      BlockMix(V, pos, V, (pos += blockSize32), r); // V[i] = BlockMix(V[i-1]);\n      blockMixCb();\n    });\n    BlockMix(V, (N - 1) * blockSize32, B32, Pi, r); // Process last element\n    blockMixCb();\n    await asyncLoop(N, asyncTick, () => {\n      // First u32 of the last 64-byte block (u32 is LE)\n      const j = B32[Pi + blockSize32 - 16] % N; // j = Integrify(X) % iterations\n      for (let k = 0; k < blockSize32; k++) tmp[k] = B32[Pi + k] ^ V[j * blockSize32 + k]; // tmp = B ^ V[j]\n      BlockMix(tmp, 0, B32, Pi, r); // B = BlockMix(B ^ V[j])\n      blockMixCb();\n    });\n  }\n  return scryptOutput(password, dkLen, B, V, tmp);\n}\n", "import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n\n// Choice: a ? b : c\nconst Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = /* @__PURE__ */new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nclass SHA256 extends SHA2<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = IV[0] | 0;\n  B = IV[1] | 0;\n  C = IV[2] | 0;\n  D = IV[3] | 0;\n  E = IV[4] | 0;\n  F = IV[5] | 0;\n  G = IV[6] | 0;\n  H = IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n", "import { hash as assertHash, number as assertNumber } from './_assert.js';\nimport { hmac } from './hmac.js';\nimport { Hash, CHash, Input, createView, toBytes, checkOpts, asyncLoop } from './utils.js';\n\n// PBKDF (RFC 2898)\nexport type Pbkdf2Opt = {\n  c: number; // Iterations\n  dkLen?: number; // Desired key length in bytes (Intended output length in octets of the derived key\n  asyncTick?: number; // Maximum time in ms for which async function can block execution\n};\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash: CHash, _password: Input, _salt: Input, _opts: Pbkdf2Opt) {\n  assertHash(hash);\n  const opts = checkOpts({ dkLen: 32, asyncTick: 10 }, _opts);\n  const { c, dkLen, asyncTick } = opts;\n  assertNumber(c);\n  assertNumber(dkLen);\n  assertNumber(asyncTick);\n  if (c < 1) throw new Error('PBKDF2: iterations (c) should be >= 1');\n  const password = toBytes(_password);\n  const salt = toBytes(_salt);\n  // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n  const DK = new Uint8Array(dkLen);\n  // U1 = PRF(Password, Salt + INT_32_BE(i))\n  const PRF = hmac.create(hash, password);\n  const PRFSalt = PRF._cloneInto().update(salt);\n  return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\n\nfunction pbkdf2Output<T extends Hash<T>>(\n  PRF: Hash<T>,\n  PRFSalt: Hash<T>,\n  DK: Uint8Array,\n  prfW: Hash<T>,\n  u: Uint8Array\n) {\n  PRF.destroy();\n  PRFSalt.destroy();\n  if (prfW) prfW.destroy();\n  u.fill(0);\n  return DK;\n}\n\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n */\nexport function pbkdf2(hash: CHash, password: Input, salt: Input, opts: Pbkdf2Opt) {\n  const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n  let prfW: any; // Working copy\n  const arr = new Uint8Array(4);\n  const view = createView(arr);\n  const u = new Uint8Array(PRF.outputLen);\n  // DK = T1 + T2 + \u22EF + Tdklen/hlen\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false);\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ \u22EF ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n    Ti.set(u.subarray(0, Ti.length));\n    for (let ui = 1; ui < c; ui++) {\n      // Uc = PRF(Password, Uc\u22121)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    }\n  }\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n\nexport async function pbkdf2Async(hash: CHash, password: Input, salt: Input, opts: Pbkdf2Opt) {\n  const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n  let prfW: any; // Working copy\n  const arr = new Uint8Array(4);\n  const view = createView(arr);\n  const u = new Uint8Array(PRF.outputLen);\n  // DK = T1 + T2 + \u22EF + Tdklen/hlen\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false);\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ \u22EF ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n    Ti.set(u.subarray(0, Ti.length));\n    await asyncLoop(c - 1, asyncTick, () => {\n      // Uc = PRF(Password, Uc\u22121)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    });\n  }\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n", "import { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, CHash, Input, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    assertHash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new Error('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    pad.fill(0);\n  }\n  update(buf: Input) {\n    assertExists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assertExists(this);\n    assertBytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest() {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n", "import { createHash } from \"./crypto.js\";\n\nimport { getBytes, hexlify } from \"../utils/index.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\n\nconst _sha256 = function(data: Uint8Array): Uint8Array {\n    return createHash(\"sha256\").update(data).digest();\n}\n\nconst _sha512 = function(data: Uint8Array): Uint8Array {\n    return createHash(\"sha512\").update(data).digest();\n}\n\nlet __sha256: (data: Uint8Array) => BytesLike = _sha256;\nlet __sha512: (data: Uint8Array) => BytesLike = _sha512;\n\nlet locked256 = false, locked512 = false;\n\n\n/**\n *  Compute the cryptographic SHA2-256 hash of %%data%%.\n *\n *  @_docloc: api/crypto:Hash Functions\n *  @returns DataHexstring\n *\n *  @example:\n *    sha256(\"0x\")\n *    //_result:\n *\n *    sha256(\"0x1337\")\n *    //_result:\n *\n *    sha256(new Uint8Array([ 0x13, 0x37 ]))\n *    //_result:\n *\n */\nexport function sha256(_data: BytesLike): string {\n    const data = getBytes(_data, \"data\");\n    return hexlify(__sha256(data));\n}\nsha256._ = _sha256;\nsha256.lock = function(): void { locked256 = true; }\nsha256.register = function(func: (data: Uint8Array) => BytesLike): void {\n    if (locked256) { throw new Error(\"sha256 is locked\"); }\n    __sha256 = func;\n}\nObject.freeze(sha256);\n\n\n/**\n *  Compute the cryptographic SHA2-512 hash of %%data%%.\n *\n *  @_docloc: api/crypto:Hash Functions\n *  @returns DataHexstring\n *\n *  @example:\n *    sha512(\"0x\")\n *    //_result:\n *\n *    sha512(\"0x1337\")\n *    //_result:\n *\n *    sha512(new Uint8Array([ 0x13, 0x37 ]))\n *    //_result:\n */\nexport function sha512(_data: BytesLike): string {\n    const data = getBytes(_data, \"data\");\n    return hexlify(__sha512(data));\n}\nsha512._ = _sha512;\nsha512.lock = function(): void { locked512 = true; }\nsha512.register = function(func: (data: Uint8Array) => BytesLike): void {\n    if (locked512) { throw new Error(\"sha512 is locked\"); }\n    __sha512 = func;\n}\nObject.freeze(sha256);\n", "/**\n *  Add details about signing here.\n *\n *  @_subsection: api/crypto:Signing  [about-signing]\n */\n\nimport { secp256k1 } from \"@noble/curves/secp256k1\";\n\nimport {\n    concat, dataLength, getBytes, getBytesCopy, hexlify, toBeHex,\n    assertArgument\n} from \"../utils/index.js\";\n\nimport { Signature } from \"./signature.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\nimport type { SignatureLike } from \"./index.js\";\n\n\n/**\n *  A **SigningKey** provides high-level access to the elliptic curve\n *  cryptography (ECC) operations and key management.\n */\nexport class SigningKey {\n    #privateKey: string;\n\n    /**\n     *  Creates a new **SigningKey** for %%privateKey%%.\n     */\n    constructor(privateKey: BytesLike) {\n        assertArgument(dataLength(privateKey) === 32, \"invalid private key\", \"privateKey\", \"[REDACTED]\");\n        this.#privateKey = hexlify(privateKey);\n    }\n\n    /**\n     *  The private key.\n     */\n    get privateKey(): string { return this.#privateKey; }\n\n    /**\n     *  The uncompressed public key.\n     *\n     * This will always begin with the prefix ``0x04`` and be 132\n     * characters long (the ``0x`` prefix and 130 hexadecimal nibbles).\n     */\n    get publicKey(): string { return SigningKey.computePublicKey(this.#privateKey); }\n\n    /**\n     *  The compressed public key.\n     *\n     *  This will always begin with either the prefix ``0x02`` or ``0x03``\n     *  and be 68 characters long (the ``0x`` prefix and 33 hexadecimal\n     *  nibbles)\n     */\n    get compressedPublicKey(): string { return SigningKey.computePublicKey(this.#privateKey, true); }\n\n    /**\n     *  Return the signature of the signed %%digest%%.\n     */\n    sign(digest: BytesLike): Signature {\n        assertArgument(dataLength(digest) === 32, \"invalid digest length\", \"digest\", digest);\n\n        const sig = secp256k1.sign(getBytesCopy(digest), getBytesCopy(this.#privateKey), {\n            lowS: true\n        });\n\n        return Signature.from({\n            r: toBeHex(sig.r, 32),\n            s: toBeHex(sig.s, 32),\n            v: (sig.recovery ? 0x1c: 0x1b)\n        });\n    }\n\n    /**\n     *  Returns the [[link-wiki-ecdh]] shared secret between this\n     *  private key and the %%other%% key.\n     *\n     *  The %%other%% key may be any type of key, a raw public key,\n     *  a compressed/uncompressed pubic key or aprivate key.\n     *\n     *  Best practice is usually to use a cryptographic hash on the\n     *  returned value before using it as a symetric secret.\n     *\n     *  @example:\n     *    sign1 = new SigningKey(id(\"some-secret-1\"))\n     *    sign2 = new SigningKey(id(\"some-secret-2\"))\n     *\n     *    // Notice that privA.computeSharedSecret(pubB)...\n     *    sign1.computeSharedSecret(sign2.publicKey)\n     *    //_result:\n     *\n     *    // ...is equal to privB.computeSharedSecret(pubA).\n     *    sign2.computeSharedSecret(sign1.publicKey)\n     *    //_result:\n     */\n    computeSharedSecret(other: BytesLike): string {\n        const pubKey = SigningKey.computePublicKey(other);\n        return hexlify(secp256k1.getSharedSecret(getBytesCopy(this.#privateKey), getBytes(pubKey), false));\n    }\n\n    /**\n     *  Compute the public key for %%key%%, optionally %%compressed%%.\n     *\n     *  The %%key%% may be any type of key, a raw public key, a\n     *  compressed/uncompressed public key or private key.\n     *\n     *  @example:\n     *    sign = new SigningKey(id(\"some-secret\"));\n     *\n     *    // Compute the uncompressed public key for a private key\n     *    SigningKey.computePublicKey(sign.privateKey)\n     *    //_result:\n     *\n     *    // Compute the compressed public key for a private key\n     *    SigningKey.computePublicKey(sign.privateKey, true)\n     *    //_result:\n     *\n     *    // Compute the uncompressed public key\n     *    SigningKey.computePublicKey(sign.publicKey, false);\n     *    //_result:\n     *\n     *    // Compute the Compressed a public key\n     *    SigningKey.computePublicKey(sign.publicKey, true);\n     *    //_result:\n     */\n    static computePublicKey(key: BytesLike, compressed?: boolean): string {\n        let bytes = getBytes(key, \"key\");\n\n        // private key\n        if (bytes.length === 32) {\n            const pubKey = secp256k1.getPublicKey(bytes, !!compressed);\n            return hexlify(pubKey);\n        }\n\n        // raw public key; use uncompressed key with 0x04 prefix\n        if (bytes.length === 64) {\n            const pub = new Uint8Array(65);\n            pub[0] = 0x04;\n            pub.set(bytes, 1);\n            bytes = pub;\n        }\n\n        const point = secp256k1.ProjectivePoint.fromHex(bytes);\n        return hexlify(point.toRawBytes(compressed));\n    }\n\n    /**\n     *  Returns the public key for the private key which produced the\n     *  %%signature%% for the given %%digest%%.\n     *\n     *  @example:\n     *    key = new SigningKey(id(\"some-secret\"))\n     *    digest = id(\"hello world\")\n     *    sig = key.sign(digest)\n     *\n     *    // Notice the signer public key...\n     *    key.publicKey\n     *    //_result:\n     *\n     *    // ...is equal to the recovered public key\n     *    SigningKey.recoverPublicKey(digest, sig)\n     *    //_result:\n     *\n     */\n    static recoverPublicKey(digest: BytesLike, signature: SignatureLike): string {\n        assertArgument(dataLength(digest) === 32, \"invalid digest length\", \"digest\", digest);\n\n        const sig = Signature.from(signature);\n\n        let secpSig = secp256k1.Signature.fromCompact(getBytesCopy(concat([ sig.r, sig.s ])));\n        secpSig = secpSig.addRecoveryBit(sig.yParity);\n\n        const pubKey = secpSig.recoverPublicKey(getBytesCopy(digest));\n        assertArgument(pubKey != null, \"invalid signature for digest\", \"signature\", signature);\n\n        return \"0x\" + pubKey.toHex(false);\n    }\n\n    /**\n     *  Returns the point resulting from adding the ellipic curve points\n     *  %%p0%% and %%p1%%.\n     *\n     *  This is not a common function most developers should require, but\n     *  can be useful for certain privacy-specific techniques.\n     *\n     *  For example, it is used by [[HDNodeWallet]] to compute child\n     *  addresses from parent public keys and chain codes.\n     */\n    static addPoints(p0: BytesLike, p1: BytesLike, compressed?: boolean): string {\n        const pub0 = secp256k1.ProjectivePoint.fromHex(SigningKey.computePublicKey(p0).substring(2));\n        const pub1 = secp256k1.ProjectivePoint.fromHex(SigningKey.computePublicKey(p1).substring(2));\n        return \"0x\" + pub0.add(pub1).toHex(!!compressed)\n    }\n}\n\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { ProjPointType as PointType, mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nimport type { Hex, PrivKey } from './abstract/utils.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport { createHasher, isogenyMap } from './abstract/hash-to-curve.js';\nimport { createCurve } from './_shortw_utils.js';\n\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a: bigint, b: bigint) => (a + b / _2n) / b;\n\n/**\n * \u221An = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y: bigint): bigint {\n  const P = secp256k1P;\n  // prettier-ignore\n  const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n  // prettier-ignore\n  const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n  const b2 = (y * y * y) % P; // x^3, 11\n  const b3 = (b2 * b2 * y) % P; // x^7\n  const b6 = (pow2(b3, _3n, P) * b3) % P;\n  const b9 = (pow2(b6, _3n, P) * b3) % P;\n  const b11 = (pow2(b9, _2n, P) * b2) % P;\n  const b22 = (pow2(b11, _11n, P) * b11) % P;\n  const b44 = (pow2(b22, _22n, P) * b22) % P;\n  const b88 = (pow2(b44, _44n, P) * b44) % P;\n  const b176 = (pow2(b88, _88n, P) * b88) % P;\n  const b220 = (pow2(b176, _44n, P) * b44) % P;\n  const b223 = (pow2(b220, _3n, P) * b3) % P;\n  const t1 = (pow2(b223, _23n, P) * b22) % P;\n  const t2 = (pow2(t1, _6n, P) * b2) % P;\n  const root = pow2(t2, _2n, P);\n  if (!Fp.eql(Fp.sqr(root), y)) throw new Error('Cannot find square root');\n  return root;\n}\n\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\n\nexport const secp256k1 = createCurve(\n  {\n    a: BigInt(0), // equation params: a, b\n    b: BigInt(7), // Seem to be rigid: bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975\n    Fp, // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n\n    n: secp256k1N, // Curve order, total count of valid points in the field\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1), // Cofactor\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n      beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n      splitScalar: (k: bigint) => {\n        const n = secp256k1N;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg) k1 = n - k1;\n        if (k2neg) k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n          throw new Error('splitScalar: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n      },\n    },\n  },\n  sha256\n);\n\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES: { [tag: string]: Uint8Array } = {};\nfunction taggedHash(tag: string, ...messages: Uint8Array[]): Uint8Array {\n  let tagP = TAGGED_HASH_PREFIXES[tag];\n  if (tagP === undefined) {\n    const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n    tagP = concatBytes(tagH, tagH);\n    TAGGED_HASH_PREFIXES[tag] = tagP;\n  }\n  return sha256(concatBytes(tagP, ...messages));\n}\n\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point: PointType<bigint>) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n: bigint) => numberToBytesBE(n, 32);\nconst modP = (x: bigint) => mod(x, secp256k1P);\nconst modN = (x: bigint) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q: PointType<bigint>, a: bigint, b: bigint) =>\n  Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv: PrivKey) {\n  let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n  let p = Point.fromPrivateKey(d_); // P = d'\u22C5G; 0 < d' < n check is done inside\n  const scalar = p.hasEvenY() ? d_ : modN(-d_);\n  return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x: bigint): PointType<bigint> {\n  if (!fe(x)) throw new Error('bad x: need 0 < x < p'); // Fail if x \u2265 p.\n  const xx = modP(x * x);\n  const c = modP(xx * x + BigInt(7)); // Let c = x\u00B3 + 7 mod p.\n  let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n  if (y % _2n !== _0n) y = modP(-y); // Return the unique point P such that x(P) = x and\n  const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n  p.assertValidity();\n  return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args: Uint8Array[]): bigint {\n  return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey: Hex): Uint8Array {\n  return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'\u2265n. Ret bytes(d'\u22C5G)\n}\n\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(\n  message: Hex,\n  privateKey: PrivKey,\n  auxRand: Hex = randomBytes(32)\n): Uint8Array {\n  const m = ensureBytes('message', message);\n  const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n  const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n  const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n  const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n  const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n  if (k_ === _0n) throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n  const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'\u22C5G.\n  const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n  const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n  sig.set(rx, 0);\n  sig.set(numTo32b(modN(k + e * d)), 32);\n  // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n  if (!schnorrVerify(sig, m, px)) throw new Error('sign: Invalid signature produced');\n  return sig;\n}\n\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature: Hex, message: Hex, publicKey: Hex): boolean {\n  const sig = ensureBytes('signature', signature, 64);\n  const m = ensureBytes('message', message);\n  const pub = ensureBytes('publicKey', publicKey, 32);\n  try {\n    const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n    const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r \u2265 p.\n    if (!fe(r)) return false;\n    const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s \u2265 n.\n    if (!ge(s)) return false;\n    const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n    const R = GmulAdd(P, s, modN(-e)); // R = s\u22C5G - e\u22C5P\n    if (!R || !R.hasEvenY() || R.toAffine().x !== r) return false; // -eP == (n-e)P\n    return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) \u2260 r.\n  } catch (error) {\n    return false;\n  }\n}\n\nexport const schnorr = /* @__PURE__ */ (() => ({\n  getPublicKey: schnorrGetPublicKey,\n  sign: schnorrSign,\n  verify: schnorrVerify,\n  utils: {\n    randomPrivateKey: secp256k1.utils.randomPrivateKey,\n    lift_x,\n    pointToBytes,\n    numberToBytesBE,\n    bytesToNumberBE,\n    taggedHash,\n    mod,\n  },\n}))();\n\nconst isoMap = /* @__PURE__ */ (() =>\n  isogenyMap(\n    Fp,\n    [\n      // xNum\n      [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n      ],\n      // xDen\n      [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n      ],\n      // yNum\n      [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n      ],\n      // yDen\n      [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n      ],\n    ].map((i) => i.map((j) => BigInt(j))) as [bigint[], bigint[], bigint[], bigint[]]\n  ))();\nconst mapSWU = /* @__PURE__ */ (() =>\n  mapToCurveSimpleSWU(Fp, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fp.create(BigInt('-11')),\n  }))();\nconst htf = /* @__PURE__ */ (() =>\n  createHasher(\n    secp256k1.ProjectivePoint,\n    (scalars: bigint[]) => {\n      const { x, y } = mapSWU(Fp.create(scalars[0]));\n      return isoMap(x, y);\n    },\n    {\n      DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n      encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n      p: Fp.ORDER,\n      m: 1,\n      k: 128,\n      expand: 'xmd',\n      hash: sha256,\n    }\n  ))();\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport {\n  bitMask,\n  numberToBytesBE,\n  numberToBytesLE,\n  bytesToNumberBE,\n  bytesToNumberLE,\n  ensureBytes,\n  validateObject,\n} from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n\n// Calculates a modulo b\nexport function mod(a: bigint, b: bigint): bigint {\n  const result = a % b;\n  return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num: bigint, power: bigint, modulo: bigint): bigint {\n  if (modulo <= _0n || power < _0n) throw new Error('Expected power/modulo > 0');\n  if (modulo === _1n) return _0n;\n  let res = _1n;\n  while (power > _0n) {\n    if (power & _1n) res = (res * num) % modulo;\n    num = (num * num) % modulo;\n    power >>= _1n;\n  }\n  return res;\n}\n\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x: bigint, power: bigint, modulo: bigint): bigint {\n  let res = x;\n  while (power-- > _0n) {\n    res *= res;\n    res %= modulo;\n  }\n  return res;\n}\n\n// Inverses number over modulo\nexport function invert(number: bigint, modulo: bigint): bigint {\n  if (number === _0n || modulo <= _0n) {\n    throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n  }\n  // Euclidean GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n  // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n  let a = mod(number, modulo);\n  let b = modulo;\n  // prettier-ignore\n  let x = _0n, y = _1n, u = _1n, v = _0n;\n  while (a !== _0n) {\n    // JIT applies optimization if those two lines follow each other\n    const q = b / a;\n    const r = b % a;\n    const m = x - u * q;\n    const n = y - v * q;\n    // prettier-ignore\n    b = a, a = r, x = u, y = v, u = m, v = n;\n  }\n  const gcd = b;\n  if (gcd !== _1n) throw new Error('invert: does not exist');\n  return mod(x, modulo);\n}\n\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P: bigint) {\n  // Legendre constant: used to calculate Legendre symbol (a | p),\n  // which denotes the value of a^((p-1)/2) (mod p).\n  // (a | p) \u2261 1    if a is a square (mod p)\n  // (a | p) \u2261 -1   if a is not a square (mod p)\n  // (a | p) \u2261 0    if a \u2261 0 (mod p)\n  const legendreC = (P - _1n) / _2n;\n\n  let Q: bigint, S: number, Z: bigint;\n  // Step 1: By factoring out powers of 2 from p - 1,\n  // find q and s such that p - 1 = q*(2^s) with q odd\n  for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++);\n\n  // Step 2: Select a non-square z such that (z | p) \u2261 -1 and set c \u2261 zq\n  for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++);\n\n  // Fast-path\n  if (S === 1) {\n    const p1div4 = (P + _1n) / _4n;\n    return function tonelliFast<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Slow-path\n  const Q1div2 = (Q + _1n) / _2n;\n  return function tonelliSlow<T>(Fp: IField<T>, n: T): T {\n    // Step 0: Check that n is indeed a square: (n | p) should not be \u2261 -1\n    if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE)) throw new Error('Cannot find square root');\n    let r = S;\n    // TODO: will fail at Fp2/etc\n    let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n    let x = Fp.pow(n, Q1div2); // first guess at the square root\n    let b = Fp.pow(n, Q); // first guess at the fudge factor\n\n    while (!Fp.eql(b, Fp.ONE)) {\n      if (Fp.eql(b, Fp.ZERO)) return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n      // Find m such b^(2^m)==1\n      let m = 1;\n      for (let t2 = Fp.sqr(b); m < r; m++) {\n        if (Fp.eql(t2, Fp.ONE)) break;\n        t2 = Fp.sqr(t2); // t2 *= t2\n      }\n      // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n      const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n      g = Fp.sqr(ge); // g = ge * ge\n      x = Fp.mul(x, ge); // x *= ge\n      b = Fp.mul(b, g); // b *= g\n      r = m;\n    }\n    return x;\n  };\n}\n\nexport function FpSqrt(P: bigint) {\n  // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n  // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n\n  // P \u2261 3 (mod 4)\n  // \u221An = n^((P+1)/4)\n  if (P % _4n === _3n) {\n    // Not all roots possible!\n    // const ORDER =\n    //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n    // const NUM = 72057594037927816n;\n    const p1div4 = (P + _1n) / _4n;\n    return function sqrt3mod4<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      // Throw if root**2 != n\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Atkin algorithm for q \u2261 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n  if (P % _8n === _5n) {\n    const c1 = (P - _5n) / _8n;\n    return function sqrt5mod8<T>(Fp: IField<T>, n: T) {\n      const n2 = Fp.mul(n, _2n);\n      const v = Fp.pow(n2, c1);\n      const nv = Fp.mul(n, v);\n      const i = Fp.mul(Fp.mul(nv, _2n), v);\n      const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // P \u2261 9 (mod 16)\n  if (P % _16n === _9n) {\n    // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n    // Means we cannot use sqrt for constants at all!\n    //\n    // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n    // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n    // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n    // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n    // sqrt = (x) => {\n    //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n    //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n    //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n    //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n    //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n    //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n    //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n    //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n    //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n    //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n    // }\n  }\n\n  // Other cases: Tonelli-Shanks algorithm\n  return tonelliShanks(P);\n}\n\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num: bigint, modulo: bigint) => (mod(num, modulo) & _1n) === _1n;\n\n// Field is not always over prime: for example, Fp2 has ORDER(q)=p^m\nexport interface IField<T> {\n  ORDER: bigint;\n  BYTES: number;\n  BITS: number;\n  MASK: bigint;\n  ZERO: T;\n  ONE: T;\n  // 1-arg\n  create: (num: T) => T;\n  isValid: (num: T) => boolean;\n  is0: (num: T) => boolean;\n  neg(num: T): T;\n  inv(num: T): T;\n  sqrt(num: T): T;\n  sqr(num: T): T;\n  // 2-args\n  eql(lhs: T, rhs: T): boolean;\n  add(lhs: T, rhs: T): T;\n  sub(lhs: T, rhs: T): T;\n  mul(lhs: T, rhs: T | bigint): T;\n  pow(lhs: T, power: bigint): T;\n  div(lhs: T, rhs: T | bigint): T;\n  // N for NonNormalized (for now)\n  addN(lhs: T, rhs: T): T;\n  subN(lhs: T, rhs: T): T;\n  mulN(lhs: T, rhs: T | bigint): T;\n  sqrN(num: T): T;\n\n  // Optional\n  // Should be same as sgn0 function in\n  // [RFC9380](https://www.rfc-editor.org/rfc/rfc9380#section-4.1).\n  // NOTE: sgn0 is 'negative in LE', which is same as odd. And negative in LE is kinda strange definition anyway.\n  isOdd?(num: T): boolean; // Odd instead of even since we have it for Fp2\n  // legendre?(num: T): T;\n  pow(lhs: T, power: bigint): T;\n  invertBatch: (lst: T[]) => T[];\n  toBytes(num: T): Uint8Array;\n  fromBytes(bytes: Uint8Array): T;\n  // If c is False, CMOV returns a, otherwise it returns b.\n  cmov(a: T, b: T, c: boolean): T;\n}\n// prettier-ignore\nconst FIELD_FIELDS = [\n  'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n  'eql', 'add', 'sub', 'mul', 'pow', 'div',\n  'addN', 'subN', 'mulN', 'sqrN'\n] as const;\nexport function validateField<T>(field: IField<T>) {\n  const initial = {\n    ORDER: 'bigint',\n    MASK: 'bigint',\n    BYTES: 'isSafeInteger',\n    BITS: 'isSafeInteger',\n  } as Record<string, string>;\n  const opts = FIELD_FIELDS.reduce((map, val: string) => {\n    map[val] = 'function';\n    return map;\n  }, initial);\n  return validateObject(field, opts);\n}\n\n// Generic field functions\n\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow<T>(f: IField<T>, num: T, power: bigint): T {\n  // Should have same speed as pow for bigints\n  // TODO: benchmark!\n  if (power < _0n) throw new Error('Expected power > 0');\n  if (power === _0n) return f.ONE;\n  if (power === _1n) return num;\n  let p = f.ONE;\n  let d = num;\n  while (power > _0n) {\n    if (power & _1n) p = f.mul(p, d);\n    d = f.sqr(d);\n    power >>= _1n;\n  }\n  return p;\n}\n\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch<T>(f: IField<T>, nums: T[]): T[] {\n  const tmp = new Array(nums.length);\n  // Walk from first to last, multiply them by each other MOD p\n  const lastMultiplied = nums.reduce((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = acc;\n    return f.mul(acc, num);\n  }, f.ONE);\n  // Invert last element\n  const inverted = f.inv(lastMultiplied);\n  // Walk from last to first, multiply them by inverted each other MOD p\n  nums.reduceRight((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = f.mul(acc, tmp[i]);\n    return f.mul(acc, num);\n  }, inverted);\n  return tmp;\n}\n\nexport function FpDiv<T>(f: IField<T>, lhs: T, rhs: T | bigint): T {\n  return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare<T>(f: IField<T>) {\n  const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n  return (x: T): boolean => {\n    const p = f.pow(x, legendreConst);\n    return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n  };\n}\n\n// CURVE.n lengths\nexport function nLength(n: bigint, nBitLength?: number) {\n  // Bit size, byte size of CURVE.n\n  const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n  const nByteLength = Math.ceil(_nBitLength / 8);\n  return { nBitLength: _nBitLength, nByteLength };\n}\n\ntype FpField = IField<bigint> & Required<Pick<IField<bigint>, 'isOdd'>>;\n/**\n * Initializes a finite field over prime. **Non-primes are not supported.**\n * Do not init in loop: slow. Very fragile: always run a benchmark on a change.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(\n  ORDER: bigint,\n  bitLen?: number,\n  isLE = false,\n  redef: Partial<IField<bigint>> = {}\n): Readonly<FpField> {\n  if (ORDER <= _0n) throw new Error(`Expected Field ORDER > 0, got ${ORDER}`);\n  const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n  if (BYTES > 2048) throw new Error('Field lengths over 2048 bytes are not supported');\n  const sqrtP = FpSqrt(ORDER);\n  const f: Readonly<FpField> = Object.freeze({\n    ORDER,\n    BITS,\n    BYTES,\n    MASK: bitMask(BITS),\n    ZERO: _0n,\n    ONE: _1n,\n    create: (num) => mod(num, ORDER),\n    isValid: (num) => {\n      if (typeof num !== 'bigint')\n        throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n      return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n    },\n    is0: (num) => num === _0n,\n    isOdd: (num) => (num & _1n) === _1n,\n    neg: (num) => mod(-num, ORDER),\n    eql: (lhs, rhs) => lhs === rhs,\n\n    sqr: (num) => mod(num * num, ORDER),\n    add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n    sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n    mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n    pow: (num, power) => FpPow(f, num, power),\n    div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n\n    // Same as above, but doesn't normalize\n    sqrN: (num) => num * num,\n    addN: (lhs, rhs) => lhs + rhs,\n    subN: (lhs, rhs) => lhs - rhs,\n    mulN: (lhs, rhs) => lhs * rhs,\n\n    inv: (num) => invert(num, ORDER),\n    sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n    invertBatch: (lst) => FpInvertBatch(f, lst),\n    // TODO: do we really need constant cmov?\n    // We don't have const-time bigints anyway, so probably will be not very useful\n    cmov: (a, b, c) => (c ? b : a),\n    toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n    fromBytes: (bytes) => {\n      if (bytes.length !== BYTES)\n        throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n      return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n    },\n  } as FpField);\n  return Object.freeze(f);\n}\n\nexport function FpSqrtOdd<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? root : Fp.neg(root);\n}\n\nexport function FpSqrtEven<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use mapKeyToField instead\n */\nexport function hashToPrivateScalar(\n  hash: string | Uint8Array,\n  groupOrder: bigint,\n  isLE = false\n): bigint {\n  hash = ensureBytes('privateHash', hash);\n  const hashLen = hash.length;\n  const minLen = nLength(groupOrder).nByteLength + 8;\n  if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n    throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n  const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n  return mod(num, groupOrder - _1n) + _1n;\n}\n\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder: bigint): number {\n  if (typeof fieldOrder !== 'bigint') throw new Error('field order must be bigint');\n  const bitLength = fieldOrder.toString(2).length;\n  return Math.ceil(bitLength / 8);\n}\n\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder: bigint): number {\n  const length = getFieldBytesLength(fieldOrder);\n  return length + Math.ceil(length / 2);\n}\n\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key: Uint8Array, fieldOrder: bigint, isLE = false): Uint8Array {\n  const len = key.length;\n  const fieldLen = getFieldBytesLength(fieldOrder);\n  const minLen = getMinHashLength(fieldOrder);\n  // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n  if (len < 16 || len < minLen || len > 1024)\n    throw new Error(`expected ${minLen}-1024 bytes of input, got ${len}`);\n  const num = isLE ? bytesToNumberBE(key) : bytesToNumberLE(key);\n  // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n  const reduced = mod(num, fieldOrder - _1n) + _1n;\n  return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst u8a = (a: any): a is Uint8Array => a instanceof Uint8Array;\nexport type Hex = Uint8Array | string; // hex strings are accepted for simplicity\nexport type PrivKey = Hex | bigint; // bigints are accepted to ease learning curve\nexport type CHash = {\n  (message: Uint8Array | string): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create(opts?: { dkLen?: number }): any; // For shake\n};\nexport type FHash = (message: Uint8Array | string) => Uint8Array;\n\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\nexport function numberToHexUnpadded(num: number | bigint): string {\n  const hex = num.toString(16);\n  return hex.length & 1 ? `0${hex}` : hex;\n}\n\nexport function hexToNumber(hex: string): bigint {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // Big Endian\n  return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const len = hex.length;\n  if (len % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + len);\n  const array = new Uint8Array(len / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes: Uint8Array): bigint {\n  return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes: Uint8Array): bigint {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\n\nexport function numberToBytesBE(n: number | bigint, len: number): Uint8Array {\n  return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n: number | bigint, len: number): Uint8Array {\n  return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n: number | bigint): Uint8Array {\n  return hexToBytes(numberToHexUnpadded(n));\n}\n\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title: string, hex: Hex, expectedLength?: number): Uint8Array {\n  let res: Uint8Array;\n  if (typeof hex === 'string') {\n    try {\n      res = hexToBytes(hex);\n    } catch (e) {\n      throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n    }\n  } else if (u8a(hex)) {\n    // Uint8Array.from() instead of hash.slice() because node.js Buffer\n    // is instance of Uint8Array, and its slice() creates **mutable** copy\n    res = Uint8Array.from(hex);\n  } else {\n    throw new Error(`${title} must be hex string or Uint8Array`);\n  }\n  const len = res.length;\n  if (typeof expectedLength === 'number' && len !== expectedLength)\n    throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n  return res;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  const r = new Uint8Array(arrays.reduce((sum, a) => sum + a.length, 0));\n  let pad = 0; // walk through each item, ensure they have proper type\n  arrays.forEach((a) => {\n    if (!u8a(a)) throw new Error('Uint8Array expected');\n    r.set(a, pad);\n    pad += a.length;\n  });\n  return r;\n}\n\nexport function equalBytes(b1: Uint8Array, b2: Uint8Array) {\n  // We don't care about timing attacks here\n  if (b1.length !== b2.length) return false;\n  for (let i = 0; i < b1.length; i++) if (b1[i] !== b2[i]) return false;\n  return true;\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\n// Bit operations\n\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n: bigint) {\n  let len;\n  for (len = 0; n > _0n; n >>= _1n, len += 1);\n  return len;\n}\n\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n: bigint, pos: number) {\n  return (n >> BigInt(pos)) & _1n;\n}\n\n/**\n * Sets single bit at position.\n */\nexport const bitSet = (n: bigint, pos: number, value: boolean) => {\n  return n | ((value ? _1n : _0n) << BigInt(pos));\n};\n\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n: number) => (_2n << BigInt(n - 1)) - _1n;\n\n// DRBG\n\nconst u8n = (data?: any) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr: any) => Uint8Array.from(arr); // another shortcut\ntype Pred<T> = (v: Uint8Array) => T | undefined;\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg<T>(\n  hashLen: number,\n  qByteLen: number,\n  hmacFn: (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array\n): (seed: Uint8Array, predicate: Pred<T>) => T {\n  if (typeof hashLen !== 'number' || hashLen < 2) throw new Error('hashLen must be a number');\n  if (typeof qByteLen !== 'number' || qByteLen < 2) throw new Error('qByteLen must be a number');\n  if (typeof hmacFn !== 'function') throw new Error('hmacFn must be a function');\n  // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n  let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n  let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n  let i = 0; // Iterations counter, will throw when over 1000\n  const reset = () => {\n    v.fill(1);\n    k.fill(0);\n    i = 0;\n  };\n  const h = (...b: Uint8Array[]) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n  const reseed = (seed = u8n()) => {\n    // HMAC-DRBG reseed() function. Steps D-G\n    k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n    v = h(); // v = hmac(k || v)\n    if (seed.length === 0) return;\n    k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n    v = h(); // v = hmac(k || v)\n  };\n  const gen = () => {\n    // HMAC-DRBG generate() function\n    if (i++ >= 1000) throw new Error('drbg: tried 1000 values');\n    let len = 0;\n    const out: Uint8Array[] = [];\n    while (len < qByteLen) {\n      v = h();\n      const sl = v.slice();\n      out.push(sl);\n      len += v.length;\n    }\n    return concatBytes(...out);\n  };\n  const genUntil = (seed: Uint8Array, pred: Pred<T>): T => {\n    reset();\n    reseed(seed); // Steps D-G\n    let res: T | undefined = undefined; // Step H: grind until k is in [1..n-1]\n    while (!(res = pred(gen()))) reseed();\n    reset();\n    return res;\n  };\n  return genUntil;\n}\n\n// Validating curves and fields\n\nconst validatorFns = {\n  bigint: (val: any) => typeof val === 'bigint',\n  function: (val: any) => typeof val === 'function',\n  boolean: (val: any) => typeof val === 'boolean',\n  string: (val: any) => typeof val === 'string',\n  stringOrUint8Array: (val: any) => typeof val === 'string' || val instanceof Uint8Array,\n  isSafeInteger: (val: any) => Number.isSafeInteger(val),\n  array: (val: any) => Array.isArray(val),\n  field: (val: any, object: any) => (object as any).Fp.isValid(val),\n  hash: (val: any) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n} as const;\ntype Validator = keyof typeof validatorFns;\ntype ValMap<T extends Record<string, any>> = { [K in keyof T]?: Validator };\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\n\nexport function validateObject<T extends Record<string, any>>(\n  object: T,\n  validators: ValMap<T>,\n  optValidators: ValMap<T> = {}\n) {\n  const checkField = (fieldName: keyof T, type: Validator, isOptional: boolean) => {\n    const checkVal = validatorFns[type];\n    if (typeof checkVal !== 'function')\n      throw new Error(`Invalid validator \"${type}\", expected function`);\n\n    const val = object[fieldName as keyof typeof object];\n    if (isOptional && val === undefined) return;\n    if (!checkVal(val, object)) {\n      throw new Error(\n        `Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`\n      );\n    }\n  };\n  for (const [fieldName, type] of Object.entries(validators)) checkField(fieldName, type!, false);\n  for (const [fieldName, type] of Object.entries(optValidators)) checkField(fieldName, type!, true);\n  return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y\u00B2 = x\u00B3 + ax + b\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { CHash, Hex, PrivKey, ensureBytes } from './utils.js';\nimport { Group, GroupConstructor, wNAF, BasicCurve, validateBasic, AffinePoint } from './curve.js';\n\nexport type { AffinePoint };\ntype HmacFnSync = (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array;\ntype EndomorphismOpts = {\n  beta: bigint;\n  splitScalar: (k: bigint) => { k1neg: boolean; k1: bigint; k2neg: boolean; k2: bigint };\n};\nexport type BasicWCurve<T> = BasicCurve<T> & {\n  // Params: a, b\n  a: T;\n  b: T;\n\n  // Optional params\n  allowedPrivateKeyLengths?: readonly number[]; // for P521\n  wrapPrivateKey?: boolean; // bls12-381 requires mod(n) instead of rejecting keys >= n\n  endo?: EndomorphismOpts; // Endomorphism options for Koblitz curves\n  // When a cofactor != 1, there can be an effective methods to:\n  // 1. Determine whether a point is torsion-free\n  isTorsionFree?: (c: ProjConstructor<T>, point: ProjPointType<T>) => boolean;\n  // 2. Clear torsion component\n  clearCofactor?: (c: ProjConstructor<T>, point: ProjPointType<T>) => ProjPointType<T>;\n};\n\ntype Entropy = Hex | true;\nexport type SignOpts = { lowS?: boolean; extraEntropy?: Entropy; prehash?: boolean };\nexport type VerOpts = { lowS?: boolean; prehash?: boolean };\n\n/**\n * ### Design rationale for types\n *\n * * Interaction between classes from different curves should fail:\n *   `k256.Point.BASE.add(p256.Point.BASE)`\n * * For this purpose we want to use `instanceof` operator, which is fast and works during runtime\n * * Different calls of `curve()` would return different classes -\n *   `curve(params) !== curve(params)`: if somebody decided to monkey-patch their curve,\n *   it won't affect others\n *\n * TypeScript can't infer types for classes created inside a function. Classes is one instance of nominative types in TypeScript and interfaces only check for shape, so it's hard to create unique type for every function call.\n *\n * We can use generic types via some param, like curve opts, but that would:\n *     1. Enable interaction between `curve(params)` and `curve(params)` (curves of same params)\n *     which is hard to debug.\n *     2. Params can be generic and we can't enforce them to be constant value:\n *     if somebody creates curve from non-constant params,\n *     it would be allowed to interact with other curves with non-constant params\n *\n * TODO: https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html#unique-symbol\n */\n\n// Instance for 3d XYZ points\nexport interface ProjPointType<T> extends Group<ProjPointType<T>> {\n  readonly px: T;\n  readonly py: T;\n  readonly pz: T;\n  get x(): T;\n  get y(): T;\n  multiply(scalar: bigint): ProjPointType<T>;\n  toAffine(iz?: T): AffinePoint<T>;\n  isTorsionFree(): boolean;\n  clearCofactor(): ProjPointType<T>;\n  assertValidity(): void;\n  hasEvenY(): boolean;\n  toRawBytes(isCompressed?: boolean): Uint8Array;\n  toHex(isCompressed?: boolean): string;\n\n  multiplyUnsafe(scalar: bigint): ProjPointType<T>;\n  multiplyAndAddUnsafe(Q: ProjPointType<T>, a: bigint, b: bigint): ProjPointType<T> | undefined;\n  _setWindowSize(windowSize: number): void;\n}\n// Static methods for 3d XYZ points\nexport interface ProjConstructor<T> extends GroupConstructor<ProjPointType<T>> {\n  new (x: T, y: T, z: T): ProjPointType<T>;\n  fromAffine(p: AffinePoint<T>): ProjPointType<T>;\n  fromHex(hex: Hex): ProjPointType<T>;\n  fromPrivateKey(privateKey: PrivKey): ProjPointType<T>;\n  normalizeZ(points: ProjPointType<T>[]): ProjPointType<T>[];\n}\n\nexport type CurvePointsType<T> = BasicWCurve<T> & {\n  // Bytes\n  fromBytes?: (bytes: Uint8Array) => AffinePoint<T>;\n  toBytes?: (c: ProjConstructor<T>, point: ProjPointType<T>, isCompressed: boolean) => Uint8Array;\n};\n\nfunction validatePointOpts<T>(curve: CurvePointsType<T>) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      a: 'field',\n      b: 'field',\n    },\n    {\n      allowedPrivateKeyLengths: 'array',\n      wrapPrivateKey: 'boolean',\n      isTorsionFree: 'function',\n      clearCofactor: 'function',\n      allowInfinityPoint: 'boolean',\n      fromBytes: 'function',\n      toBytes: 'function',\n    }\n  );\n  const { endo, Fp, a } = opts;\n  if (endo) {\n    if (!Fp.eql(a, Fp.ZERO)) {\n      throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n    }\n    if (\n      typeof endo !== 'object' ||\n      typeof endo.beta !== 'bigint' ||\n      typeof endo.splitScalar !== 'function'\n    ) {\n      throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n    }\n  }\n  return Object.freeze({ ...opts } as const);\n}\n\nexport type CurvePointsRes<T> = {\n  ProjectivePoint: ProjConstructor<T>;\n  normPrivateKeyToScalar: (key: PrivKey) => bigint;\n  weierstrassEquation: (x: T) => T;\n  isWithinCurveOrder: (num: bigint) => boolean;\n};\n\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n  // asn.1 DER encoding utils\n  Err: class DERErr extends Error {\n    constructor(m = '') {\n      super(m);\n    }\n  },\n  _parseInt(data: Uint8Array): { d: bigint; l: Uint8Array } {\n    const { Err: E } = DER;\n    if (data.length < 2 || data[0] !== 0x02) throw new E('Invalid signature integer tag');\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) throw new E('Invalid signature integer: wrong length');\n    // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n    // since we always use positive integers here. It must always be empty:\n    // - add zero byte if exists\n    // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n    if (res[0] & 0b10000000) throw new E('Invalid signature integer: negative');\n    if (res[0] === 0x00 && !(res[1] & 0b10000000))\n      throw new E('Invalid signature integer: unnecessary leading zero');\n    return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n  },\n  toSig(hex: string | Uint8Array): { r: bigint; s: bigint } {\n    // parse DER signature\n    const { Err: E } = DER;\n    const data = typeof hex === 'string' ? h2b(hex) : hex;\n    if (!(data instanceof Uint8Array)) throw new Error('ui8a expected');\n    let l = data.length;\n    if (l < 2 || data[0] != 0x30) throw new E('Invalid signature tag');\n    if (data[1] !== l - 2) throw new E('Invalid signature: incorrect length');\n    const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n    const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n    if (rBytesLeft.length) throw new E('Invalid signature: left bytes after parsing');\n    return { r, s };\n  },\n  hexFromSig(sig: { r: bigint; s: bigint }): string {\n    // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n    const slice = (s: string): string => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n    const h = (num: number | bigint) => {\n      const hex = num.toString(16);\n      return hex.length & 1 ? `0${hex}` : hex;\n    };\n    const s = slice(h(sig.s));\n    const r = slice(h(sig.r));\n    const shl = s.length / 2;\n    const rhl = r.length / 2;\n    const sl = h(shl);\n    const rl = h(rhl);\n    return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n  },\n};\n\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\n\nexport function weierstrassPoints<T>(opts: CurvePointsType<T>) {\n  const CURVE = validatePointOpts(opts);\n  const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n\n  const toBytes =\n    CURVE.toBytes ||\n    ((_c: ProjConstructor<T>, point: ProjPointType<T>, _isCompressed: boolean) => {\n      const a = point.toAffine();\n      return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n    });\n  const fromBytes =\n    CURVE.fromBytes ||\n    ((bytes: Uint8Array) => {\n      // const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n      const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n      const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n      return { x, y };\n    });\n\n  /**\n   * y\u00B2 = x\u00B3 + ax + b: Short weierstrass curve formula\n   * @returns y\u00B2\n   */\n  function weierstrassEquation(x: T): T {\n    const { a, b } = CURVE;\n    const x2 = Fp.sqr(x); // x * x\n    const x3 = Fp.mul(x2, x); // x2 * x\n    return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n  }\n  // Validate whether the passed curve params are valid.\n  // We check if curve equation works for generator point.\n  // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n  // ProjectivePoint class has not been initialized yet.\n  if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n    throw new Error('bad generator point: equation left != right');\n\n  // Valid group elements reside in range 1..n-1\n  function isWithinCurveOrder(num: bigint): boolean {\n    return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n  }\n  function assertGE(num: bigint) {\n    if (!isWithinCurveOrder(num)) throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n  }\n  // Validates if priv key is valid and converts it to bigint.\n  // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n  function normPrivateKeyToScalar(key: PrivKey): bigint {\n    const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n    if (lengths && typeof key !== 'bigint') {\n      if (key instanceof Uint8Array) key = ut.bytesToHex(key);\n      // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n      if (typeof key !== 'string' || !lengths.includes(key.length)) throw new Error('Invalid key');\n      key = key.padStart(nByteLength * 2, '0');\n    }\n    let num: bigint;\n    try {\n      num =\n        typeof key === 'bigint'\n          ? key\n          : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n    } catch (error) {\n      throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n    }\n    if (wrapPrivateKey) num = mod.mod(num, n); // disabled by default, enabled for BLS\n    assertGE(num); // num in range [1..N-1]\n    return num;\n  }\n\n  const pointPrecomputes = new Map<Point, Point[]>();\n  function assertPrjPoint(other: unknown) {\n    if (!(other instanceof Point)) throw new Error('ProjectivePoint expected');\n  }\n  /**\n   * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) \u220B (x=x/z, y=y/z)\n   * Default Point works in 2d / affine coordinates: (x, y)\n   * We're doing calculations in projective, because its operations don't require costly inversion.\n   */\n  class Point implements ProjPointType<T> {\n    static readonly BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    static readonly ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n\n    constructor(readonly px: T, readonly py: T, readonly pz: T) {\n      if (px == null || !Fp.isValid(px)) throw new Error('x required');\n      if (py == null || !Fp.isValid(py)) throw new Error('y required');\n      if (pz == null || !Fp.isValid(pz)) throw new Error('z required');\n    }\n\n    // Does not validate if the point is on-curve.\n    // Use fromHex instead, or call assertValidity() later.\n    static fromAffine(p: AffinePoint<T>): Point {\n      const { x, y } = p || {};\n      if (!p || !Fp.isValid(x) || !Fp.isValid(y)) throw new Error('invalid affine point');\n      if (p instanceof Point) throw new Error('projective point not allowed');\n      const is0 = (i: T) => Fp.eql(i, Fp.ZERO);\n      // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n      if (is0(x) && is0(y)) return Point.ZERO;\n      return new Point(x, y, Fp.ONE);\n    }\n\n    get x(): T {\n      return this.toAffine().x;\n    }\n    get y(): T {\n      return this.toAffine().y;\n    }\n\n    /**\n     * Takes a bunch of Projective Points but executes only one\n     * inversion on all of them. Inversion is very slow operation,\n     * so this improves performance massively.\n     * Optimization: converts a list of projective points to a list of identical points with Z=1.\n     */\n    static normalizeZ(points: Point[]): Point[] {\n      const toInv = Fp.invertBatch(points.map((p) => p.pz));\n      return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n    }\n\n    /**\n     * Converts hash string or Uint8Array to Point.\n     * @param hex short/long ECDSA hex\n     */\n    static fromHex(hex: Hex): Point {\n      const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n      P.assertValidity();\n      return P;\n    }\n\n    // Multiplies generator point by privateKey.\n    static fromPrivateKey(privateKey: PrivKey) {\n      return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n    }\n\n    // We calculate precomputes for elliptic curve point multiplication\n    // using windowed method. This specifies window size and\n    // stores precomputed values. Usually only base point would be precomputed.\n    _WINDOW_SIZE?: number;\n\n    // \"Private method\", don't use it directly\n    _setWindowSize(windowSize: number) {\n      this._WINDOW_SIZE = windowSize;\n      pointPrecomputes.delete(this);\n    }\n\n    // A point on curve is valid if it conforms to equation.\n    assertValidity(): void {\n      if (this.is0()) {\n        // (0, 1, 0) aka ZERO is invalid in most contexts.\n        // In BLS, ZERO can be serialized, so we allow it.\n        // (0, 0, 0) is wrong representation of ZERO and is always invalid.\n        if (CURVE.allowInfinityPoint && !Fp.is0(this.py)) return;\n        throw new Error('bad point: ZERO');\n      }\n      // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n      const { x, y } = this.toAffine();\n      // Check if x, y are valid field elements\n      if (!Fp.isValid(x) || !Fp.isValid(y)) throw new Error('bad point: x or y not FE');\n      const left = Fp.sqr(y); // y\u00B2\n      const right = weierstrassEquation(x); // x\u00B3 + ax + b\n      if (!Fp.eql(left, right)) throw new Error('bad point: equation left != right');\n      if (!this.isTorsionFree()) throw new Error('bad point: not in prime-order subgroup');\n    }\n    hasEvenY(): boolean {\n      const { y } = this.toAffine();\n      if (Fp.isOdd) return !Fp.isOdd(y);\n      throw new Error(\"Field doesn't support isOdd\");\n    }\n\n    /**\n     * Compare one point to another.\n     */\n    equals(other: Point): boolean {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n      const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n      return U1 && U2;\n    }\n\n    /**\n     * Flips point to one corresponding to (x, -y) in Affine coordinates.\n     */\n    negate(): Point {\n      return new Point(this.px, Fp.neg(this.py), this.pz);\n    }\n\n    // Renes-Costello-Batina exception-free doubling formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 3\n    // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n    double() {\n      const { a, b } = CURVE;\n      const b3 = Fp.mul(b, _3n);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      let t0 = Fp.mul(X1, X1); // step 1\n      let t1 = Fp.mul(Y1, Y1);\n      let t2 = Fp.mul(Z1, Z1);\n      let t3 = Fp.mul(X1, Y1);\n      t3 = Fp.add(t3, t3); // step 5\n      Z3 = Fp.mul(X1, Z1);\n      Z3 = Fp.add(Z3, Z3);\n      X3 = Fp.mul(a, Z3);\n      Y3 = Fp.mul(b3, t2);\n      Y3 = Fp.add(X3, Y3); // step 10\n      X3 = Fp.sub(t1, Y3);\n      Y3 = Fp.add(t1, Y3);\n      Y3 = Fp.mul(X3, Y3);\n      X3 = Fp.mul(t3, X3);\n      Z3 = Fp.mul(b3, Z3); // step 15\n      t2 = Fp.mul(a, t2);\n      t3 = Fp.sub(t0, t2);\n      t3 = Fp.mul(a, t3);\n      t3 = Fp.add(t3, Z3);\n      Z3 = Fp.add(t0, t0); // step 20\n      t0 = Fp.add(Z3, t0);\n      t0 = Fp.add(t0, t2);\n      t0 = Fp.mul(t0, t3);\n      Y3 = Fp.add(Y3, t0);\n      t2 = Fp.mul(Y1, Z1); // step 25\n      t2 = Fp.add(t2, t2);\n      t0 = Fp.mul(t2, t3);\n      X3 = Fp.sub(X3, t0);\n      Z3 = Fp.mul(t2, t1);\n      Z3 = Fp.add(Z3, Z3); // step 30\n      Z3 = Fp.add(Z3, Z3);\n      return new Point(X3, Y3, Z3);\n    }\n\n    // Renes-Costello-Batina exception-free addition formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 1\n    // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n    add(other: Point): Point {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      const a = CURVE.a;\n      const b3 = Fp.mul(CURVE.b, _3n);\n      let t0 = Fp.mul(X1, X2); // step 1\n      let t1 = Fp.mul(Y1, Y2);\n      let t2 = Fp.mul(Z1, Z2);\n      let t3 = Fp.add(X1, Y1);\n      let t4 = Fp.add(X2, Y2); // step 5\n      t3 = Fp.mul(t3, t4);\n      t4 = Fp.add(t0, t1);\n      t3 = Fp.sub(t3, t4);\n      t4 = Fp.add(X1, Z1);\n      let t5 = Fp.add(X2, Z2); // step 10\n      t4 = Fp.mul(t4, t5);\n      t5 = Fp.add(t0, t2);\n      t4 = Fp.sub(t4, t5);\n      t5 = Fp.add(Y1, Z1);\n      X3 = Fp.add(Y2, Z2); // step 15\n      t5 = Fp.mul(t5, X3);\n      X3 = Fp.add(t1, t2);\n      t5 = Fp.sub(t5, X3);\n      Z3 = Fp.mul(a, t4);\n      X3 = Fp.mul(b3, t2); // step 20\n      Z3 = Fp.add(X3, Z3);\n      X3 = Fp.sub(t1, Z3);\n      Z3 = Fp.add(t1, Z3);\n      Y3 = Fp.mul(X3, Z3);\n      t1 = Fp.add(t0, t0); // step 25\n      t1 = Fp.add(t1, t0);\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.mul(b3, t4);\n      t1 = Fp.add(t1, t2);\n      t2 = Fp.sub(t0, t2); // step 30\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.add(t4, t2);\n      t0 = Fp.mul(t1, t4);\n      Y3 = Fp.add(Y3, t0);\n      t0 = Fp.mul(t5, t4); // step 35\n      X3 = Fp.mul(t3, X3);\n      X3 = Fp.sub(X3, t0);\n      t0 = Fp.mul(t3, t1);\n      Z3 = Fp.mul(t5, Z3);\n      Z3 = Fp.add(Z3, t0); // step 40\n      return new Point(X3, Y3, Z3);\n    }\n\n    subtract(other: Point) {\n      return this.add(other.negate());\n    }\n\n    private is0() {\n      return this.equals(Point.ZERO);\n    }\n    private wNAF(n: bigint): { p: Point; f: Point } {\n      return wnaf.wNAFCached(this, pointPrecomputes, n, (comp: Point[]) => {\n        const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n        return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n      });\n    }\n\n    /**\n     * Non-constant-time multiplication. Uses double-and-add algorithm.\n     * It's faster, but should only be used when you don't care about\n     * an exposed private key e.g. sig verification, which works over *public* keys.\n     */\n    multiplyUnsafe(n: bigint): Point {\n      const I = Point.ZERO;\n      if (n === _0n) return I;\n      assertGE(n); // Will throw on 0\n      if (n === _1n) return this;\n      const { endo } = CURVE;\n      if (!endo) return wnaf.unsafeLadder(this, n);\n\n      // Apply endomorphism\n      let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n      let k1p = I;\n      let k2p = I;\n      let d: Point = this;\n      while (k1 > _0n || k2 > _0n) {\n        if (k1 & _1n) k1p = k1p.add(d);\n        if (k2 & _1n) k2p = k2p.add(d);\n        d = d.double();\n        k1 >>= _1n;\n        k2 >>= _1n;\n      }\n      if (k1neg) k1p = k1p.negate();\n      if (k2neg) k2p = k2p.negate();\n      k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n      return k1p.add(k2p);\n    }\n\n    /**\n     * Constant time multiplication.\n     * Uses wNAF method. Windowed method may be 10% faster,\n     * but takes 2x longer to generate and consumes 2x memory.\n     * Uses precomputes when available.\n     * Uses endomorphism for Koblitz curves.\n     * @param scalar by which the point would be multiplied\n     * @returns New point\n     */\n    multiply(scalar: bigint): Point {\n      assertGE(scalar);\n      let n = scalar;\n      let point: Point, fake: Point; // Fake point is used to const-time mult\n      const { endo } = CURVE;\n      if (endo) {\n        const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let { p: k1p, f: f1p } = this.wNAF(k1);\n        let { p: k2p, f: f2p } = this.wNAF(k2);\n        k1p = wnaf.constTimeNegate(k1neg, k1p);\n        k2p = wnaf.constTimeNegate(k2neg, k2p);\n        k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n        point = k1p.add(k2p);\n        fake = f1p.add(f2p);\n      } else {\n        const { p, f } = this.wNAF(n);\n        point = p;\n        fake = f;\n      }\n      // Normalize `z` for both points, but return only real one\n      return Point.normalizeZ([point, fake])[0];\n    }\n\n    /**\n     * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n     * Not using Strauss-Shamir trick: precomputation tables are faster.\n     * The trick could be useful if both P and Q are not G (not in our case).\n     * @returns non-zero affine point\n     */\n    multiplyAndAddUnsafe(Q: Point, a: bigint, b: bigint): Point | undefined {\n      const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n      const mul = (\n        P: Point,\n        a: bigint // Select faster multiply() method\n      ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n      const sum = mul(this, a).add(mul(Q, b));\n      return sum.is0() ? undefined : sum;\n    }\n\n    // Converts Projective point to affine (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    // (x, y, z) \u220B (x=x/z, y=y/z)\n    toAffine(iz?: T): AffinePoint<T> {\n      const { px: x, py: y, pz: z } = this;\n      const is0 = this.is0();\n      // If invZ was 0, we return zero point. However we still want to execute\n      // all operations, so we replace invZ with a random number, 1.\n      if (iz == null) iz = is0 ? Fp.ONE : Fp.inv(z);\n      const ax = Fp.mul(x, iz);\n      const ay = Fp.mul(y, iz);\n      const zz = Fp.mul(z, iz);\n      if (is0) return { x: Fp.ZERO, y: Fp.ZERO };\n      if (!Fp.eql(zz, Fp.ONE)) throw new Error('invZ was invalid');\n      return { x: ax, y: ay };\n    }\n    isTorsionFree(): boolean {\n      const { h: cofactor, isTorsionFree } = CURVE;\n      if (cofactor === _1n) return true; // No subgroups, always torsion-free\n      if (isTorsionFree) return isTorsionFree(Point, this);\n      throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n    }\n    clearCofactor(): Point {\n      const { h: cofactor, clearCofactor } = CURVE;\n      if (cofactor === _1n) return this; // Fast-path\n      if (clearCofactor) return clearCofactor(Point, this) as Point;\n      return this.multiplyUnsafe(CURVE.h);\n    }\n\n    toRawBytes(isCompressed = true): Uint8Array {\n      this.assertValidity();\n      return toBytes(Point, this, isCompressed);\n    }\n\n    toHex(isCompressed = true): string {\n      return ut.bytesToHex(this.toRawBytes(isCompressed));\n    }\n  }\n  const _bits = CURVE.nBitLength;\n  const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n  // Validate if generator point is on curve\n  return {\n    CURVE,\n    ProjectivePoint: Point as ProjConstructor<T>,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  };\n}\n\n// Instance\nexport interface SignatureType {\n  readonly r: bigint;\n  readonly s: bigint;\n  readonly recovery?: number;\n  assertValidity(): void;\n  addRecoveryBit(recovery: number): RecoveredSignatureType;\n  hasHighS(): boolean;\n  normalizeS(): SignatureType;\n  recoverPublicKey(msgHash: Hex): ProjPointType<bigint>;\n  toCompactRawBytes(): Uint8Array;\n  toCompactHex(): string;\n  // DER-encoded\n  toDERRawBytes(isCompressed?: boolean): Uint8Array;\n  toDERHex(isCompressed?: boolean): string;\n}\nexport type RecoveredSignatureType = SignatureType & {\n  readonly recovery: number;\n};\n// Static methods\nexport type SignatureConstructor = {\n  new (r: bigint, s: bigint): SignatureType;\n  fromCompact(hex: Hex): SignatureType;\n  fromDER(hex: Hex): SignatureType;\n};\ntype SignatureLike = { r: bigint; s: bigint };\n\nexport type PubKey = Hex | ProjPointType<bigint>;\n\nexport type CurveType = BasicWCurve<bigint> & {\n  hash: CHash; // CHash not FHash because we need outputLen for DRBG\n  hmac: HmacFnSync;\n  randomBytes: (bytesLength?: number) => Uint8Array;\n  lowS?: boolean;\n  bits2int?: (bytes: Uint8Array) => bigint;\n  bits2int_modN?: (bytes: Uint8Array) => bigint;\n};\n\nfunction validateOpts(curve: CurveType) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      hash: 'hash',\n      hmac: 'function',\n      randomBytes: 'function',\n    },\n    {\n      bits2int: 'function',\n      bits2int_modN: 'function',\n      lowS: 'boolean',\n    }\n  );\n  return Object.freeze({ lowS: true, ...opts } as const);\n}\n\nexport type CurveFn = {\n  CURVE: ReturnType<typeof validateOpts>;\n  getPublicKey: (privateKey: PrivKey, isCompressed?: boolean) => Uint8Array;\n  getSharedSecret: (privateA: PrivKey, publicB: Hex, isCompressed?: boolean) => Uint8Array;\n  sign: (msgHash: Hex, privKey: PrivKey, opts?: SignOpts) => RecoveredSignatureType;\n  verify: (signature: Hex | SignatureLike, msgHash: Hex, publicKey: Hex, opts?: VerOpts) => boolean;\n  ProjectivePoint: ProjConstructor<bigint>;\n  Signature: SignatureConstructor;\n  utils: {\n    normPrivateKeyToScalar: (key: PrivKey) => bigint;\n    isValidPrivateKey(privateKey: PrivKey): boolean;\n    randomPrivateKey: () => Uint8Array;\n    precompute: (windowSize?: number, point?: ProjPointType<bigint>) => ProjPointType<bigint>;\n  };\n};\n\nexport function weierstrass(curveDef: CurveType): CurveFn {\n  const CURVE = validateOpts(curveDef) as ReturnType<typeof validateOpts>;\n  const { Fp, n: CURVE_ORDER } = CURVE;\n  const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n  const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n\n  function isValidFieldElement(num: bigint): boolean {\n    return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n  }\n  function modN(a: bigint) {\n    return mod.mod(a, CURVE_ORDER);\n  }\n  function invN(a: bigint) {\n    return mod.invert(a, CURVE_ORDER);\n  }\n\n  const {\n    ProjectivePoint: Point,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  } = weierstrassPoints({\n    ...CURVE,\n    toBytes(_c, point, isCompressed: boolean): Uint8Array {\n      const a = point.toAffine();\n      const x = Fp.toBytes(a.x);\n      const cat = ut.concatBytes;\n      if (isCompressed) {\n        return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n      } else {\n        return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n      }\n    },\n    fromBytes(bytes: Uint8Array) {\n      const len = bytes.length;\n      const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // this.assertValidity() is done inside of fromHex\n      if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n        const x = ut.bytesToNumberBE(tail);\n        if (!isValidFieldElement(x)) throw new Error('Point is not on curve');\n        const y2 = weierstrassEquation(x); // y\u00B2 = x\u00B3 + ax + b\n        let y = Fp.sqrt(y2); // y = y\u00B2 ^ (p+1)/4\n        const isYOdd = (y & _1n) === _1n;\n        // ECDSA\n        const isHeadOdd = (head & 1) === 1;\n        if (isHeadOdd !== isYOdd) y = Fp.neg(y);\n        return { x, y };\n      } else if (len === uncompressedLen && head === 0x04) {\n        const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n        const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n        return { x, y };\n      } else {\n        throw new Error(\n          `Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`\n        );\n      }\n    },\n  });\n  const numToNByteStr = (num: bigint): string =>\n    ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n\n  function isBiggerThanHalfOrder(number: bigint) {\n    const HALF = CURVE_ORDER >> _1n;\n    return number > HALF;\n  }\n\n  function normalizeS(s: bigint) {\n    return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n  }\n  // slice bytes num\n  const slcNum = (b: Uint8Array, from: number, to: number) => ut.bytesToNumberBE(b.slice(from, to));\n\n  /**\n   * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n   */\n  class Signature implements SignatureType {\n    constructor(readonly r: bigint, readonly s: bigint, readonly recovery?: number) {\n      this.assertValidity();\n    }\n\n    // pair (bytes of r, bytes of s)\n    static fromCompact(hex: Hex) {\n      const l = CURVE.nByteLength;\n      hex = ensureBytes('compactSignature', hex, l * 2);\n      return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n    }\n\n    // DER encoded ECDSA signature\n    // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n    static fromDER(hex: Hex) {\n      const { r, s } = DER.toSig(ensureBytes('DER', hex));\n      return new Signature(r, s);\n    }\n\n    assertValidity(): void {\n      // can use assertGE here\n      if (!isWithinCurveOrder(this.r)) throw new Error('r must be 0 < r < CURVE.n');\n      if (!isWithinCurveOrder(this.s)) throw new Error('s must be 0 < s < CURVE.n');\n    }\n\n    addRecoveryBit(recovery: number): RecoveredSignature {\n      return new Signature(this.r, this.s, recovery) as RecoveredSignature;\n    }\n\n    recoverPublicKey(msgHash: Hex): typeof Point.BASE {\n      const { r, s, recovery: rec } = this;\n      const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n      if (rec == null || ![0, 1, 2, 3].includes(rec)) throw new Error('recovery id invalid');\n      const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n      if (radj >= Fp.ORDER) throw new Error('recovery id 2 or 3 invalid');\n      const prefix = (rec & 1) === 0 ? '02' : '03';\n      const R = Point.fromHex(prefix + numToNByteStr(radj));\n      const ir = invN(radj); // r^-1\n      const u1 = modN(-h * ir); // -hr^-1\n      const u2 = modN(s * ir); // sr^-1\n      const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n      if (!Q) throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n      Q.assertValidity();\n      return Q;\n    }\n\n    // Signatures should be low-s, to prevent malleability.\n    hasHighS(): boolean {\n      return isBiggerThanHalfOrder(this.s);\n    }\n\n    normalizeS() {\n      return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n    }\n\n    // DER-encoded\n    toDERRawBytes() {\n      return ut.hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n      return DER.hexFromSig({ r: this.r, s: this.s });\n    }\n\n    // padded bytes of r, then padded bytes of s\n    toCompactRawBytes() {\n      return ut.hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n      return numToNByteStr(this.r) + numToNByteStr(this.s);\n    }\n  }\n  type RecoveredSignature = Signature & { recovery: number };\n\n  const utils = {\n    isValidPrivateKey(privateKey: PrivKey) {\n      try {\n        normPrivateKeyToScalar(privateKey);\n        return true;\n      } catch (error) {\n        return false;\n      }\n    },\n    normPrivateKeyToScalar: normPrivateKeyToScalar,\n\n    /**\n     * Produces cryptographically secure private key from random of size\n     * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n     */\n    randomPrivateKey: (): Uint8Array => {\n      const length = mod.getMinHashLength(CURVE.n);\n      return mod.mapHashToField(CURVE.randomBytes(length), CURVE.n);\n    },\n\n    /**\n     * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n     * Allows to massively speed-up `point.multiply(scalar)`.\n     * @returns cached point\n     * @example\n     * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n     * fast.multiply(privKey); // much faster ECDH now\n     */\n    precompute(windowSize = 8, point = Point.BASE): typeof Point.BASE {\n      point._setWindowSize(windowSize);\n      point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n      return point;\n    },\n  };\n\n  /**\n   * Computes public key for a private key. Checks for validity of the private key.\n   * @param privateKey private key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns Public key, full when isCompressed=false; short when isCompressed=true\n   */\n  function getPublicKey(privateKey: PrivKey, isCompressed = true): Uint8Array {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n  }\n\n  /**\n   * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n   */\n  function isProbPub(item: PrivKey | PubKey): boolean {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && (item as Hex).length;\n    if (arr) return len === compressedLen || len === uncompressedLen;\n    if (str) return len === 2 * compressedLen || len === 2 * uncompressedLen;\n    if (item instanceof Point) return true;\n    return false;\n  }\n\n  /**\n   * ECDH (Elliptic Curve Diffie Hellman).\n   * Computes shared public key from private key and public key.\n   * Checks: 1) private key validity 2) shared key is on-curve.\n   * Does NOT hash the result.\n   * @param privateA private key\n   * @param publicB different public key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns shared public key\n   */\n  function getSharedSecret(privateA: PrivKey, publicB: Hex, isCompressed = true): Uint8Array {\n    if (isProbPub(privateA)) throw new Error('first arg must be private key');\n    if (!isProbPub(publicB)) throw new Error('second arg must be public key');\n    const b = Point.fromHex(publicB); // check for being on-curve\n    return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n  }\n\n  // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n  // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n  // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n  // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n  const bits2int =\n    CURVE.bits2int ||\n    function (bytes: Uint8Array): bigint {\n      // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n      // for some cases, since bytes.length * 8 is not actual bitLength.\n      const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n      const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n      return delta > 0 ? num >> BigInt(delta) : num;\n    };\n  const bits2int_modN =\n    CURVE.bits2int_modN ||\n    function (bytes: Uint8Array): bigint {\n      return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n    };\n  // NOTE: pads output with zero as per spec\n  const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n  /**\n   * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n   */\n  function int2octets(num: bigint): Uint8Array {\n    if (typeof num !== 'bigint') throw new Error('bigint expected');\n    if (!(_0n <= num && num < ORDER_MASK))\n      throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n    // works with order, can have different size than numToField!\n    return ut.numberToBytesBE(num, CURVE.nByteLength);\n  }\n\n  // Steps A, D of RFC6979 3.2\n  // Creates RFC6979 seed; converts msg/privKey to numbers.\n  // Used only in sign, not in verify.\n  // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n  // Also it can be bigger for P224 + SHA256\n  function prepSig(msgHash: Hex, privateKey: PrivKey, opts = defaultSigOpts) {\n    if (['recovered', 'canonical'].some((k) => k in opts))\n      throw new Error('sign() legacy options not supported');\n    const { hash, randomBytes } = CURVE;\n    let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n    if (lowS == null) lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n    msgHash = ensureBytes('msgHash', msgHash);\n    if (prehash) msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n\n    // We can't later call bits2octets, since nested bits2int is broken for curves\n    // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n    // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n    const h1int = bits2int_modN(msgHash);\n    const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n    const seedArgs = [int2octets(d), int2octets(h1int)];\n    // extraEntropy. RFC6979 3.6: additional k' (optional).\n    if (ent != null) {\n      // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n      const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n      seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n    }\n    const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n    const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n    // Converts signature params into point w r/s, checks result for validity.\n    function k2sig(kBytes: Uint8Array): RecoveredSignature | undefined {\n      // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n      const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n      if (!isWithinCurveOrder(k)) return; // Important: all mod() calls here must be done over N\n      const ik = invN(k); // k^-1 mod n\n      const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n      const r = modN(q.x); // r = q.x mod n\n      if (r === _0n) return;\n      // Can use scalar blinding b^-1(bm + bdr) where b \u2208 [1,q\u22121] according to\n      // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n      // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n      const s = modN(ik * modN(m + r * d)); // Not using blinding here\n      if (s === _0n) return;\n      let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n      let normS = s;\n      if (lowS && isBiggerThanHalfOrder(s)) {\n        normS = normalizeS(s); // if lowS was passed, ensure s is always\n        recovery ^= 1; // // in the bottom half of N\n      }\n      return new Signature(r, normS, recovery) as RecoveredSignature; // use normS, not s\n    }\n    return { seed, k2sig };\n  }\n  const defaultSigOpts: SignOpts = { lowS: CURVE.lowS, prehash: false };\n  const defaultVerOpts: VerOpts = { lowS: CURVE.lowS, prehash: false };\n\n  /**\n   * Signs message hash with a private key.\n   * ```\n   * sign(m, d, k) where\n   *   (x, y) = G \u00D7 k\n   *   r = x mod n\n   *   s = (m + dr)/k mod n\n   * ```\n   * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n   * @param privKey private key\n   * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n   * @returns signature with recovery param\n   */\n  function sign(msgHash: Hex, privKey: PrivKey, opts = defaultSigOpts): RecoveredSignature {\n    const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n    const C = CURVE;\n    const drbg = ut.createHmacDrbg<RecoveredSignature>(C.hash.outputLen, C.nByteLength, C.hmac);\n    return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n  }\n\n  // Enable precomputes. Slows down first publicKey computation by 20ms.\n  Point.BASE._setWindowSize(8);\n  // utils.precompute(8, ProjectivePoint.BASE)\n\n  /**\n   * Verifies a signature against message hash and public key.\n   * Rejects lowS signatures by default: to override,\n   * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n   *\n   * ```\n   * verify(r, s, h, P) where\n   *   U1 = hs^-1 mod n\n   *   U2 = rs^-1 mod n\n   *   R = U1\u22C5G - U2\u22C5P\n   *   mod(R.x, n) == r\n   * ```\n   */\n  function verify(\n    signature: Hex | SignatureLike,\n    msgHash: Hex,\n    publicKey: Hex,\n    opts = defaultVerOpts\n  ): boolean {\n    const sg = signature;\n    msgHash = ensureBytes('msgHash', msgHash);\n    publicKey = ensureBytes('publicKey', publicKey);\n    if ('strict' in opts) throw new Error('options.strict was renamed to lowS');\n    const { lowS, prehash } = opts;\n\n    let _sig: Signature | undefined = undefined;\n    let P: ProjPointType<bigint>;\n    try {\n      if (typeof sg === 'string' || sg instanceof Uint8Array) {\n        // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n        // Since DER can also be 2*nByteLength bytes, we check for it first.\n        try {\n          _sig = Signature.fromDER(sg);\n        } catch (derError) {\n          if (!(derError instanceof DER.Err)) throw derError;\n          _sig = Signature.fromCompact(sg);\n        }\n      } else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n        const { r, s } = sg;\n        _sig = new Signature(r, s);\n      } else {\n        throw new Error('PARSE');\n      }\n      P = Point.fromHex(publicKey);\n    } catch (error) {\n      if ((error as Error).message === 'PARSE')\n        throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n      return false;\n    }\n    if (lowS && _sig.hasHighS()) return false;\n    if (prehash) msgHash = CURVE.hash(msgHash);\n    const { r, s } = _sig;\n    const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n    const is = invN(s); // s^-1\n    const u1 = modN(h * is); // u1 = hs^-1 mod n\n    const u2 = modN(r * is); // u2 = rs^-1 mod n\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1\u22C5G + u2\u22C5P\n    if (!R) return false;\n    const v = modN(R.x);\n    return v === r;\n  }\n  return {\n    CURVE,\n    getPublicKey,\n    getSharedSecret,\n    sign,\n    verify,\n    ProjectivePoint: Point,\n    Signature,\n    utils,\n  };\n}\n\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio<T>(Fp: mod.IField<T>, Z: T) {\n  // Generic implementation\n  const q = Fp.ORDER;\n  let l = _0n;\n  for (let o = q - _1n; o % _2n === _0n; o /= _2n) l += _1n;\n  const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n  // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n  // 2n ** c1 == 2n << (c1-1)\n  const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n  const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n  const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n  const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n  const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n  const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n  const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n  const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n  let sqrtRatio = (u: T, v: T): { isValid: boolean; value: T } => {\n    let tv1 = c6; // 1. tv1 = c6\n    let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n    let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n    tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n    let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n    tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n    tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n    tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n    tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n    let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n    tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n    let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n    tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n    tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n    tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n    tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n    // 17. for i in (c1, c1 - 1, ..., 2):\n    for (let i = c1; i > _1n; i--) {\n      let tv5 = i - _2n; // 18.    tv5 = i - 2\n      tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n      let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n      const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n      tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n      tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n      tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n      tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n      tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n    }\n    return { isValid: isQR, value: tv3 };\n  };\n  if (Fp.ORDER % _4n === _3n) {\n    // sqrt_ratio_3mod4(u, v)\n    const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n    const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n    sqrtRatio = (u: T, v: T) => {\n      let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n      const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n      tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n      let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n      y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n      const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n      const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n      const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n      let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n      return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n    };\n  }\n  // No curves uses that\n  // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n  return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU<T>(\n  Fp: mod.IField<T>,\n  opts: {\n    A: T;\n    B: T;\n    Z: T;\n  }\n) {\n  mod.validateField(Fp);\n  if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n    throw new Error('mapToCurveSimpleSWU: invalid opts');\n  const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n  if (!Fp.isOdd) throw new Error('Fp.isOdd is not implemented!');\n  // Input: u, an element of F.\n  // Output: (x, y), a point on E.\n  return (u: T): { x: T; y: T } => {\n    // prettier-ignore\n    let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n    tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n    tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n    tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n    tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n    tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n    tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n    tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n    tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n    tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n    tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n    tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n    tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n    tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n    tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n    tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n    x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n    const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n    y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n    y = Fp.mul(y, value); // 20.   y = y * y1\n    x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n    y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n    const e1 = Fp.isOdd!(u) === Fp.isOdd!(y); // 23.  e1 = sgn0(u) == sgn0(y)\n    y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n    x = Fp.div(x, tv4); // 25.   x = x / tv4\n    return { x, y };\n  };\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { IField, validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n\nexport type AffinePoint<T> = {\n  x: T;\n  y: T;\n} & { z?: never; t?: never };\n\nexport interface Group<T extends Group<T>> {\n  double(): T;\n  negate(): T;\n  add(other: T): T;\n  subtract(other: T): T;\n  equals(other: T): boolean;\n  multiply(scalar: bigint): T;\n}\n\nexport type GroupConstructor<T> = {\n  BASE: T;\n  ZERO: T;\n};\nexport type Mapper<T> = (i: T[]) => T[];\n\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / \uD835\uDC4A) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF<T extends Group<T>>(c: GroupConstructor<T>, bits: number) {\n  const constTimeNegate = (condition: boolean, item: T): T => {\n    const neg = item.negate();\n    return condition ? neg : item;\n  };\n  const opts = (W: number) => {\n    const windows = Math.ceil(bits / W) + 1; // +1, because\n    const windowSize = 2 ** (W - 1); // -1 because we skip zero\n    return { windows, windowSize };\n  };\n  return {\n    constTimeNegate,\n    // non-const time multiplication ladder\n    unsafeLadder(elm: T, n: bigint) {\n      let p = c.ZERO;\n      let d: T = elm;\n      while (n > _0n) {\n        if (n & _1n) p = p.add(d);\n        d = d.double();\n        n >>= _1n;\n      }\n      return p;\n    },\n\n    /**\n     * Creates a wNAF precomputation window. Used for caching.\n     * Default window size is set by `utils.precompute()` and is equal to 8.\n     * Number of precomputed points depends on the curve size:\n     * 2^(\uD835\uDC4A\u22121) * (Math.ceil(\uD835\uDC5B / \uD835\uDC4A) + 1), where:\n     * - \uD835\uDC4A is the window size\n     * - \uD835\uDC5B is the bitlength of the curve order.\n     * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n     * @returns precomputed point tables flattened to a single array\n     */\n    precomputeWindow(elm: T, W: number): Group<T>[] {\n      const { windows, windowSize } = opts(W);\n      const points: T[] = [];\n      let p: T = elm;\n      let base = p;\n      for (let window = 0; window < windows; window++) {\n        base = p;\n        points.push(base);\n        // =1, because we skip zero\n        for (let i = 1; i < windowSize; i++) {\n          base = base.add(p);\n          points.push(base);\n        }\n        p = base.double();\n      }\n      return points;\n    },\n\n    /**\n     * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n     * @param W window size\n     * @param precomputes precomputed tables\n     * @param n scalar (we don't check here, but should be less than curve order)\n     * @returns real and fake (for const-time) points\n     */\n    wNAF(W: number, precomputes: T[], n: bigint): { p: T; f: T } {\n      // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n      // But need to carefully remove other checks before wNAF. ORDER == bits here\n      const { windows, windowSize } = opts(W);\n\n      let p = c.ZERO;\n      let f = c.BASE;\n\n      const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n      const maxNumber = 2 ** W;\n      const shiftBy = BigInt(W);\n\n      for (let window = 0; window < windows; window++) {\n        const offset = window * windowSize;\n        // Extract W bits.\n        let wbits = Number(n & mask);\n\n        // Shift number by W bits.\n        n >>= shiftBy;\n\n        // If the bits are bigger than max size, we'll split those.\n        // +224 => 256 - 32\n        if (wbits > windowSize) {\n          wbits -= maxNumber;\n          n += _1n;\n        }\n\n        // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n        // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n        // there is negate now: it is possible that negated element from low value\n        // would be the same as high element, which will create carry into next window.\n        // It's not obvious how this can fail, but still worth investigating later.\n\n        // Check if we're onto Zero point.\n        // Add random point inside current window to f.\n        const offset1 = offset;\n        const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n        const cond1 = window % 2 !== 0;\n        const cond2 = wbits < 0;\n        if (wbits === 0) {\n          // The most important part for const-time getPublicKey\n          f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n        } else {\n          p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n        }\n      }\n      // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n      // Even if the variable is still unused, there are some checks which will\n      // throw an exception, so compiler needs to prove they won't happen, which is hard.\n      // At this point there is a way to F be infinity-point even if p is not,\n      // which makes it less const-time: around 1 bigint multiply.\n      return { p, f };\n    },\n\n    wNAFCached(P: T, precomputesMap: Map<T, T[]>, n: bigint, transform: Mapper<T>): { p: T; f: T } {\n      // @ts-ignore\n      const W: number = P._WINDOW_SIZE || 1;\n      // Calculate precomputes on a first run, reuse them after\n      let comp = precomputesMap.get(P);\n      if (!comp) {\n        comp = this.precomputeWindow(P, W) as T[];\n        if (W !== 1) {\n          precomputesMap.set(P, transform(comp));\n        }\n      }\n      return this.wNAF(W, comp, n);\n    },\n  };\n}\n\n// Generic BasicCurve interface: works even for polynomial fields (BLS): P, n, h would be ok.\n// Though generator can be different (Fp2 / Fp6 for BLS).\nexport type BasicCurve<T> = {\n  Fp: IField<T>; // Field over which we'll do calculations (Fp)\n  n: bigint; // Curve order, total count of valid points in the field\n  nBitLength?: number; // bit length of curve order\n  nByteLength?: number; // byte length of curve order\n  h: bigint; // cofactor. we can assign default=1, but users will just ignore it w/o validation\n  hEff?: bigint; // Number to multiply to clear cofactor\n  Gx: T; // base point X coordinate\n  Gy: T; // base point Y coordinate\n  allowInfinityPoint?: boolean; // bls12-381 requires it. ZERO point is valid, but invalid pubkey\n};\n\nexport function validateBasic<FP, T>(curve: BasicCurve<FP> & T) {\n  validateField(curve.Fp);\n  validateObject(\n    curve,\n    {\n      n: 'bigint',\n      h: 'bigint',\n      Gx: 'field',\n      Gy: 'field',\n    },\n    {\n      nBitLength: 'isSafeInteger',\n      nByteLength: 'isSafeInteger',\n    }\n  );\n  // Set defaults\n  return Object.freeze({\n    ...nLength(curve.n, curve.nBitLength),\n    ...curve,\n    ...{ p: curve.Fp.ORDER },\n  } as const);\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass, CurveType } from './abstract/weierstrass.js';\nimport { CHash } from './abstract/utils.js';\n\n// connects noble-curves to noble-hashes\nexport function getHash(hash: CHash) {\n  return {\n    hash,\n    hmac: (key: Uint8Array, ...msgs: Uint8Array[]) => hmac(hash, key, concatBytes(...msgs)),\n    randomBytes,\n  };\n}\n// Same API as @noble/hashes, with ability to create curve with custom hash\ntype CurveDef = Readonly<Omit<CurveType, 'hash' | 'hmac' | 'randomBytes'>>;\nexport function createCurve(curveDef: CurveDef, defHash: CHash) {\n  const create = (hash: CHash) => weierstrass({ ...curveDef, ...getHash(hash) });\n  return Object.freeze({ ...create(defHash), create });\n}\n", "\nimport { ZeroHash } from \"../constants/index.js\";\nimport {\n    concat, dataLength, getBigInt, getBytes, getNumber, hexlify,\n    toBeArray, isHexString, zeroPadValue,\n    assertArgument, assertPrivate\n} from \"../utils/index.js\";\n\nimport type {\n    BigNumberish, BytesLike, Numeric\n} from \"../utils/index.js\";\n\n\n// Constants\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\nconst BN_2 = BigInt(2);\nconst BN_27 = BigInt(27);\nconst BN_28 = BigInt(28);\nconst BN_35 = BigInt(35);\n\n\nconst _guard = { };\n\n// @TODO: Allow Uint8Array\n\n/**\n *  A SignatureLike\n *\n *  @_docloc: api/crypto:Signing\n */\nexport type SignatureLike = Signature | string | {\n    r: string;\n    s: string;\n    v: BigNumberish;\n    yParity?: 0 | 1;\n    yParityAndS?: string;\n} | {\n    r: string;\n    yParityAndS: string;\n    yParity?: 0 | 1;\n    s?: string;\n    v?: number;\n} | {\n    r: string;\n    s: string;\n    yParity: 0 | 1;\n    v?: BigNumberish;\n    yParityAndS?: string;\n};\n\nfunction toUint256(value: BigNumberish): string {\n    return zeroPadValue(toBeArray(value), 32);\n}\n\n/**\n *  A Signature  @TODO\n *\n *\n *  @_docloc: api/crypto:Signing\n */\nexport class Signature {\n    #r: string;\n    #s: string;\n    #v: 27 | 28;\n    #networkV: null | bigint;\n\n    /**\n     *  The ``r`` value for a signature.\n     *\n     *  This represents the ``x`` coordinate of a \"reference\" or\n     *  challenge point, from which the ``y`` can be computed.\n     */\n    get r(): string { return this.#r; }\n    set r(value: BytesLike) {\n        assertArgument(dataLength(value) === 32, \"invalid r\", \"value\", value);\n        this.#r = hexlify(value);\n    }\n\n    /**\n     *  The ``s`` value for a signature.\n     */\n    get s(): string {\n        assertArgument(parseInt(this.#s.substring(0, 3)) < 8, \"non-canonical s; use ._s\", \"s\", this.#s);\n        return this.#s;\n    }\n    set s(_value: BytesLike) {\n        assertArgument(dataLength(_value) === 32, \"invalid s\", \"value\", _value);\n        this.#s = hexlify(_value);\n    }\n\n    /**\n     *  Return the s value, unchecked for EIP-2 compliance.\n     *\n     *  This should generally not be used and is for situations where\n     *  a non-canonical S value might be relevant, such as Frontier blocks\n     *  that were mined prior to EIP-2 or invalid Authorization List\n     *  signatures.\n     */\n    get _s(): string { return this.#s; }\n\n    /**\n     *  Returns true if the Signature is valid for [[link-eip-2]] signatures.\n     */\n    isValid(): boolean {\n        return (parseInt(this.#s.substring(0, 3)) < 8);\n    }\n\n    /**\n     *  The ``v`` value for a signature.\n     *\n     *  Since a given ``x`` value for ``r`` has two possible values for\n     *  its correspondin ``y``, the ``v`` indicates which of the two ``y``\n     *  values to use.\n     *\n     *  It is normalized to the values ``27`` or ``28`` for legacy\n     *  purposes.\n     */\n    get v(): 27 | 28 { return this.#v; }\n    set v(value: BigNumberish) {\n        const v = getNumber(value, \"value\");\n        assertArgument(v === 27 || v === 28, \"invalid v\", \"v\", value);\n        this.#v = v;\n    }\n\n    /**\n     *  The EIP-155 ``v`` for legacy transactions. For non-legacy\n     *  transactions, this value is ``null``.\n     */\n    get networkV(): null | bigint { return this.#networkV; }\n\n    /**\n     *  The chain ID for EIP-155 legacy transactions. For non-legacy\n     *  transactions, this value is ``null``.\n     */\n    get legacyChainId(): null | bigint {\n        const v = this.networkV;\n        if (v == null) { return null; }\n        return Signature.getChainId(v);\n    }\n\n    /**\n     *  The ``yParity`` for the signature.\n     *\n     *  See ``v`` for more details on how this value is used.\n     */\n    get yParity(): 0 | 1 {\n        return (this.v === 27) ? 0: 1;\n    }\n\n    /**\n     *  The [[link-eip-2098]] compact representation of the ``yParity``\n     *  and ``s`` compacted into a single ``bytes32``.\n     */\n    get yParityAndS(): string {\n        // The EIP-2098 compact representation\n        const yParityAndS = getBytes(this.s);\n        if (this.yParity) { yParityAndS[0] |= 0x80; }\n        return hexlify(yParityAndS);\n    }\n\n    /**\n     *  The [[link-eip-2098]] compact representation.\n     */\n    get compactSerialized(): string {\n        return concat([ this.r, this.yParityAndS ]);\n    }\n\n    /**\n     *  The serialized representation.\n     */\n    get serialized(): string {\n        return concat([ this.r, this.s, (this.yParity ? \"0x1c\": \"0x1b\") ]);\n    }\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, r: string, s: string, v: 27 | 28) {\n        assertPrivate(guard, _guard, \"Signature\");\n        this.#r = r;\n        this.#s = s;\n        this.#v = v;\n        this.#networkV = null;\n    }\n\n    [Symbol.for('nodejs.util.inspect.custom')](): string {\n        return `Signature { r: \"${ this.r }\", s: \"${ this._s }\"${ this.isValid() ? \"\": ', valid: \"false\"'}, yParity: ${ this.yParity }, networkV: ${ this.networkV } }`;\n    }\n\n    /**\n     *  Returns a new identical [[Signature]].\n     */\n    clone(): Signature {\n        const clone = new Signature(_guard, this.r, this._s, this.v);\n        if (this.networkV) { clone.#networkV = this.networkV; }\n        return clone;\n    }\n\n    /**\n     *  Returns a representation that is compatible with ``JSON.stringify``.\n     */\n    toJSON(): any {\n        const networkV = this.networkV;\n        return {\n            _type: \"signature\",\n            networkV: ((networkV != null) ? networkV.toString(): null),\n            r: this.r, s: this._s, v: this.v,\n        };\n    }\n\n    /**\n     *  Compute the chain ID from the ``v`` in a legacy EIP-155 transactions.\n     *\n     *  @example:\n     *    Signature.getChainId(45)\n     *    //_result:\n     *\n     *    Signature.getChainId(46)\n     *    //_result:\n     */\n    static getChainId(v: BigNumberish): bigint {\n        const bv = getBigInt(v, \"v\");\n\n        // The v is not an EIP-155 v, so it is the unspecified chain ID\n        if ((bv == BN_27) || (bv == BN_28)) { return BN_0; }\n\n        // Bad value for an EIP-155 v\n        assertArgument(bv >= BN_35, \"invalid EIP-155 v\", \"v\", v);\n\n        return (bv - BN_35) / BN_2;\n    }\n\n    /**\n     *  Compute the ``v`` for a chain ID for a legacy EIP-155 transactions.\n     *\n     *  Legacy transactions which use [[link-eip-155]] hijack the ``v``\n     *  property to include the chain ID.\n     *\n     *  @example:\n     *    Signature.getChainIdV(5, 27)\n     *    //_result:\n     *\n     *    Signature.getChainIdV(5, 28)\n     *    //_result:\n     *\n     */\n    static getChainIdV(chainId: BigNumberish, v: 27 | 28): bigint {\n        return (getBigInt(chainId) * BN_2) + BigInt(35 + v - 27);\n    }\n\n    /**\n     *  Compute the normalized legacy transaction ``v`` from a ``yParirty``,\n     *  a legacy transaction ``v`` or a legacy [[link-eip-155]] transaction.\n     *\n     *  @example:\n     *    // The values 0 and 1 imply v is actually yParity\n     *    Signature.getNormalizedV(0)\n     *    //_result:\n     *\n     *    // Legacy non-EIP-1559 transaction (i.e. 27 or 28)\n     *    Signature.getNormalizedV(27)\n     *    //_result:\n     *\n     *    // Legacy EIP-155 transaction (i.e. >= 35)\n     *    Signature.getNormalizedV(46)\n     *    //_result:\n     *\n     *    // Invalid values throw\n     *    Signature.getNormalizedV(5)\n     *    //_error:\n     */\n    static getNormalizedV(v: BigNumberish): 27 | 28 {\n        const bv = getBigInt(v);\n\n        if (bv === BN_0 || bv === BN_27) { return 27; }\n        if (bv === BN_1 || bv === BN_28) { return 28; }\n\n        assertArgument(bv >= BN_35, \"invalid v\", \"v\", v);\n\n        // Otherwise, EIP-155 v means odd is 27 and even is 28\n        return (bv & BN_1) ? 27: 28;\n    }\n\n    /**\n     *  Creates a new [[Signature]].\n     *\n     *  If no %%sig%% is provided, a new [[Signature]] is created\n     *  with default values.\n     *\n     *  If %%sig%% is a string, it is parsed.\n     */\n    static from(sig?: SignatureLike): Signature {\n        function assertError(check: unknown, message: string): asserts check {\n            assertArgument(check, message, \"signature\", sig);\n        };\n\n        if (sig == null) {\n            return new Signature(_guard, ZeroHash, ZeroHash, 27);\n        }\n\n        if (typeof(sig) === \"string\") {\n            const bytes = getBytes(sig, \"signature\");\n            if (bytes.length === 64) {\n                const r = hexlify(bytes.slice(0, 32));\n                const s = bytes.slice(32, 64);\n                const v = (s[0] & 0x80) ? 28: 27;\n                s[0] &= 0x7f;\n                return new Signature(_guard, r, hexlify(s), v);\n            }\n\n            if (bytes.length === 65) {\n                const r = hexlify(bytes.slice(0, 32));\n                const s = hexlify(bytes.slice(32, 64));\n                const v = Signature.getNormalizedV(bytes[64]);\n                return new Signature(_guard, r, s, v);\n            }\n\n            assertError(false, \"invalid raw signature length\");\n        }\n\n        if (sig instanceof Signature) { return sig.clone(); }\n\n        // Get r\n        const _r = sig.r;\n        assertError(_r != null, \"missing r\");\n        const r = toUint256(_r);\n\n        // Get s; by any means necessary (we check consistency below)\n        const s = (function(s?: string, yParityAndS?: string) {\n            if (s != null) { return toUint256(s); }\n\n            if (yParityAndS != null) {\n                assertError(isHexString(yParityAndS, 32), \"invalid yParityAndS\");\n                const bytes = getBytes(yParityAndS);\n                bytes[0] &= 0x7f;\n                return hexlify(bytes);\n            }\n\n            assertError(false, \"missing s\");\n        })(sig.s, sig.yParityAndS);\n\n        // Get v; by any means necessary (we check consistency below)\n        const { networkV, v } = (function(_v?: BigNumberish, yParityAndS?: string, yParity?: Numeric): { networkV?: bigint, v: 27 | 28 } {\n            if (_v != null) {\n                const v = getBigInt(_v);\n                return {\n                    networkV: ((v >= BN_35) ? v: undefined),\n                    v: Signature.getNormalizedV(v)\n                };\n            }\n\n            if (yParityAndS != null) {\n                assertError(isHexString(yParityAndS, 32), \"invalid yParityAndS\");\n                return { v: ((getBytes(yParityAndS)[0] & 0x80) ? 28: 27) };\n            }\n\n            if (yParity != null) {\n                switch (getNumber(yParity, \"sig.yParity\")) {\n                    case 0: return { v: 27 };\n                    case 1: return { v: 28 };\n                }\n                assertError(false, \"invalid yParity\");\n            }\n\n            assertError(false, \"missing v\");\n        })(sig.v, sig.yParityAndS, sig.yParity);\n\n        const result = new Signature(_guard, r, s, v);\n        if (networkV) { result.#networkV =  networkV; }\n\n        // If multiple of v, yParity, yParityAndS we given, check they match\n        assertError(sig.yParity == null || getNumber(sig.yParity, \"sig.yParity\") === result.yParity, \"yParity mismatch\");\n        assertError(sig.yParityAndS == null || sig.yParityAndS === result.yParityAndS, \"yParityAndS mismatch\");\n\n        return result;\n    }\n}\n", "/**\n *  Some common constants useful for Ethereum.\n *\n *  @_section: api/constants: Constants  [about-constants]\n */\n\nexport { ZeroAddress } from \"./addresses.js\";\nexport { ZeroHash } from \"./hashes.js\";\nexport {\n    N,\n    WeiPerEther,\n    MaxUint256,\n    MinInt256,\n    MaxInt256\n} from \"./numbers.js\";\nexport { EtherSymbol, MessagePrefix } from \"./strings.js\";\n", "\n/**\n *  A constant for the zero address.\n *\n *  (**i.e.** ``\"0x0000000000000000000000000000000000000000\"``)\n */\nexport const ZeroAddress: string = \"0x0000000000000000000000000000000000000000\";\n\n", "/**\n *  A constant for the zero hash.\n *\n *  (**i.e.** ``\"0x0000000000000000000000000000000000000000000000000000000000000000\"``)\n */\nexport const ZeroHash: string = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n\n", "\n/**\n *  A constant for the order N for the secp256k1 curve.\n *\n *  (**i.e.** ``0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141n``)\n */\nexport const N: bigint = BigInt(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\");\n\n/**\n *  A constant for the number of wei in a single ether.\n *\n *  (**i.e.** ``1000000000000000000n``)\n */\nexport const WeiPerEther: bigint = BigInt(\"1000000000000000000\");\n\n/**\n *  A constant for the maximum value for a ``uint256``.\n *\n *  (**i.e.** ``0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffn``)\n */\nexport const MaxUint256: bigint = BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n\n/**\n *  A constant for the minimum value for an ``int256``.\n *\n *  (**i.e.** ``-8000000000000000000000000000000000000000000000000000000000000000n``)\n */\nexport const MinInt256: bigint = BigInt(\"0x8000000000000000000000000000000000000000000000000000000000000000\") * BigInt(-1);\n\n/**\n *  A constant for the maximum value for an ``int256``.\n *\n *  (**i.e.** ``0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffn``)\n */\nexport const MaxInt256: bigint = BigInt(\"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n", "// NFKC (composed)             // (decomposed)\n\n/**\n *  A constant for the ether symbol (normalized using NFKC).\n *\n *  (**i.e.** ``\"\\\\u039e\"``)\n */\nexport const EtherSymbol: string = \"\\u039e\";  // \"\\uD835\\uDF63\";\n\n\n/**\n *  A constant for the [[link-eip-191]] personal message prefix.\n *\n *  (**i.e.** ``\"\\\\x19Ethereum Signed Message:\\\\n\"``)\n */\nexport const MessagePrefix: string = \"\\x19Ethereum Signed Message:\\n\";\n", "import { keccak256 } from \"../crypto/index.js\";\nimport {\n    concat, dataSlice, getBigInt, getBytes, encodeRlp, assertArgument\n} from \"../utils/index.js\";\n\nimport { getAddress } from \"./address.js\";\n\nimport type { BigNumberish, BytesLike } from \"../utils/index.js\";\n\n\n// http://ethereum.stackexchange.com/questions/760/how-is-the-address-of-an-ethereum-contract-computed\n\n/**\n *  Returns the address that would result from a ``CREATE`` for %%tx%%.\n *\n *  This can be used to compute the address a contract will be\n *  deployed to by an EOA when sending a deployment transaction (i.e.\n *  when the ``to`` address is ``null``).\n *\n *  This can also be used to compute the address a contract will be\n *  deployed to by a contract, by using the contract's address as the\n *  ``to`` and the contract's nonce.\n *\n *  @example\n *    from = \"0x8ba1f109551bD432803012645Ac136ddd64DBA72\";\n *    nonce = 5;\n *\n *    getCreateAddress({ from, nonce });\n *    //_result:\n */\nexport function getCreateAddress(tx: { from: string, nonce: BigNumberish }): string {\n    const from = getAddress(tx.from);\n    const nonce = getBigInt(tx.nonce, \"tx.nonce\");\n\n    let nonceHex = nonce.toString(16);\n    if (nonceHex === \"0\") {\n        nonceHex = \"0x\";\n    } else if (nonceHex.length % 2) {\n        nonceHex = \"0x0\" + nonceHex;\n    } else {\n        nonceHex = \"0x\" + nonceHex;\n    }\n\n    return getAddress(dataSlice(keccak256(encodeRlp([ from, nonceHex ])), 12));\n}\n\n/**\n *  Returns the address that would result from a ``CREATE2`` operation\n *  with the given %%from%%, %%salt%% and %%initCodeHash%%.\n *\n *  To compute the %%initCodeHash%% from a contract's init code, use\n *  the [[keccak256]] function.\n *\n *  For a quick overview and example of ``CREATE2``, see [[link-ricmoo-wisps]].\n *\n *  @example\n *    // The address of the contract\n *    from = \"0x8ba1f109551bD432803012645Ac136ddd64DBA72\"\n *\n *    // The salt\n *    salt = id(\"HelloWorld\")\n *\n *    // The hash of the initCode\n *    initCode = \"0x6394198df16000526103ff60206004601c335afa6040516060f3\";\n *    initCodeHash = keccak256(initCode)\n *\n *    getCreate2Address(from, salt, initCodeHash)\n *    //_result:\n */\nexport function getCreate2Address(_from: string, _salt: BytesLike, _initCodeHash: BytesLike): string {\n    const from = getAddress(_from);\n    const salt = getBytes(_salt, \"salt\");\n    const initCodeHash = getBytes(_initCodeHash, \"initCodeHash\");\n\n    assertArgument(salt.length === 32, \"salt must be 32 bytes\", \"salt\", _salt);\n\n    assertArgument(initCodeHash.length === 32, \"initCodeHash must be 32 bytes\", \"initCodeHash\", _initCodeHash);\n\n    return getAddress(dataSlice(keccak256(concat([ \"0xff\", from, salt, initCodeHash ])), 12))\n}\n", "import { assert, assertArgument } from \"../utils/index.js\";\n\nimport { getAddress } from \"./address.js\";\n\nimport type { Addressable, AddressLike, NameResolver } from \"./index.js\";\n\n\n/**\n *  Returns true if %%value%% is an object which implements the\n *  [[Addressable]] interface.\n *\n *  @example:\n *    // Wallets and AbstractSigner sub-classes\n *    isAddressable(Wallet.createRandom())\n *    //_result:\n *\n *    // Contracts\n *    contract = new Contract(\"dai.tokens.ethers.eth\", [ ], provider)\n *    isAddressable(contract)\n *    //_result:\n */\nexport function isAddressable(value: any): value is Addressable {\n    return (value && typeof(value.getAddress) === \"function\");\n}\n\n/**\n *  Returns true if %%value%% is a valid address.\n *\n *  @example:\n *    // Valid address\n *    isAddress(\"0x8ba1f109551bD432803012645Ac136ddd64DBA72\")\n *    //_result:\n *\n *    // Valid ICAP address\n *    isAddress(\"XE65GB6LDNXYOFTX0NSV3FUWKOWIXAMJK36\")\n *    //_result:\n *\n *    // Invalid checksum\n *    isAddress(\"0x8Ba1f109551bD432803012645Ac136ddd64DBa72\")\n *    //_result:\n *\n *    // Invalid ICAP checksum\n *    isAddress(\"0x8Ba1f109551bD432803012645Ac136ddd64DBA72\")\n *    //_result:\n *\n *    // Not an address (an ENS name requires a provided and an\n *    // asynchronous API to access)\n *    isAddress(\"ricmoo.eth\")\n *    //_result:\n */\nexport function isAddress(value: any): value is string {\n    try {\n        getAddress(value);\n        return true;\n    } catch (error) { }\n    return false;\n}\n\nasync function checkAddress(target: any, promise: Promise<null | string>): Promise<string> {\n    const result = await promise;\n    if (result == null || result === \"0x0000000000000000000000000000000000000000\") {\n        assert(typeof(target) !== \"string\", \"unconfigured name\", \"UNCONFIGURED_NAME\", { value: target });\n        assertArgument(false, \"invalid AddressLike value; did not resolve to a value address\", \"target\", target);\n    }\n    return getAddress(result);\n}\n\n/**\n *  Resolves to an address for the %%target%%, which may be any\n *  supported address type, an [[Addressable]] or a Promise which\n *  resolves to an address.\n *\n *  If an ENS name is provided, but that name has not been correctly\n *  configured a [[UnconfiguredNameError]] is thrown.\n *\n *  @example:\n *    addr = \"0x6B175474E89094C44Da98b954EedeAC495271d0F\"\n *\n *    // Addresses are return synchronously\n *    resolveAddress(addr, provider)\n *    //_result:\n *\n *    // Address promises are resolved asynchronously\n *    resolveAddress(Promise.resolve(addr))\n *    //_result:\n *\n *    // ENS names are resolved asynchronously\n *    resolveAddress(\"dai.tokens.ethers.eth\", provider)\n *    //_result:\n *\n *    // Addressable objects are resolved asynchronously\n *    contract = new Contract(addr, [ ])\n *    resolveAddress(contract, provider)\n *    //_result:\n *\n *    // Unconfigured ENS names reject\n *    resolveAddress(\"nothing-here.ricmoo.eth\", provider)\n *    //_error:\n *\n *    // ENS names require a NameResolver object passed in\n *    // (notice the provider was omitted)\n *    resolveAddress(\"nothing-here.ricmoo.eth\")\n *    //_error:\n */\nexport function resolveAddress(target: AddressLike, resolver?: null | NameResolver): string | Promise<string> {\n\n    if (typeof(target) === \"string\") {\n        if (target.match(/^0x[0-9a-f]{40}$/i)) { return getAddress(target); }\n\n        assert(resolver != null, \"ENS resolution requires a provider\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"resolveName\" });\n\n        return checkAddress(target, resolver.resolveName(target));\n\n    } else if (isAddressable(target)) {\n        return checkAddress(target, target.getAddress());\n\n    } else if (target && typeof(target.then) === \"function\") {\n        return checkAddress(target, target);\n    }\n\n    assertArgument(false, \"unsupported addressable value\", \"target\", target);\n}\n", "/**\n *  A Typed object allows a value to have its type explicitly\n *  specified.\n *\n *  For example, in Solidity, the value ``45`` could represent a\n *  ``uint8`` or a ``uint256``. The value ``0x1234`` could represent\n *  a ``bytes2`` or ``bytes``.\n *\n *  Since JavaScript has no meaningful way to explicitly inform any\n *  APIs which what the type is, this allows transparent interoperation\n *  with Soldity.\n *\n *  @_subsection: api/abi:Typed Values\n */\n\nimport { assertPrivate, defineProperties } from \"../utils/index.js\";\n\nimport type { Addressable } from \"../address/index.js\";\nimport type { BigNumberish, BytesLike } from \"../utils/index.js\";\n\nimport type { Result } from \"./coders/abstract-coder.js\";\n\nconst _gaurd = { };\n\nfunction n(value: BigNumberish, width: number): Typed {\n    let signed = false;\n    if (width < 0) {\n        signed = true;\n        width *= -1;\n    }\n\n    // @TODO: Check range is valid for value\n    return new Typed(_gaurd, `${ signed ? \"\": \"u\" }int${ width }`, value, { signed, width });\n}\n\nfunction b(value: BytesLike, size?: number): Typed {\n    // @TODO: Check range is valid for value\n    return new Typed(_gaurd, `bytes${ (size) ? size: \"\" }`, value, { size });\n}\n\n// @TODO: Remove this in v7, it was replaced by TypedBigInt\n/**\n *  @_ignore:\n */\nexport interface TypedNumber extends Typed {\n    value: number;\n    defaultValue(): number;\n    minValue(): number;\n    maxValue(): number;\n}\n\n/**\n *  A **Typed** that represents a numeric value.\n */\nexport interface TypedBigInt extends Typed {\n    /**\n     *  The value.\n     */\n    value: bigint;\n\n    /**\n     *  The default value for all numeric types is ``0``.\n     */\n    defaultValue(): bigint;\n\n    /**\n     *  The minimum value for this type, accounting for bit-width and signed-ness.\n     */\n    minValue(): bigint;\n\n    /**\n     *  The minimum value for this type, accounting for bit-width.\n     */\n    maxValue(): bigint;\n}\n\n/**\n *  A **Typed** that represents a binary sequence of data as bytes.\n */\nexport interface TypedData extends Typed {\n    /**\n     *  The value.\n     */\n    value: string;\n\n    /**\n     *  The default value for this type.\n     */\n    defaultValue(): string;\n}\n\n/**\n *  A **Typed** that represents a UTF-8 sequence of bytes.\n */\nexport interface TypedString extends Typed {\n    /**\n     *  The value.\n     */\n    value: string;\n\n    /**\n     *  The default value for the string type is the empty string (i.e. ``\"\"``).\n     */\n    defaultValue(): string;\n}\n\nconst _typedSymbol = Symbol.for(\"_ethers_typed\");\n\n/**\n *  The **Typed** class to wrap values providing explicit type information.\n */\nexport class Typed {\n\n    /**\n     *  The type, as a Solidity-compatible type.\n     */\n    readonly type!: string;\n\n    /**\n     *  The actual value.\n     */\n    readonly value!: any;\n\n    readonly #options: any;\n\n    /**\n     *  @_ignore:\n     */\n    readonly _typedSymbol!: Symbol;\n\n    /**\n     *  @_ignore:\n     */\n    constructor(gaurd: any, type: string, value: any, options?: any) {\n        if (options == null) { options = null; }\n        assertPrivate(_gaurd, gaurd, \"Typed\");\n        defineProperties<Typed>(this, { _typedSymbol, type, value });\n        this.#options = options;\n\n        // Check the value is valid\n        this.format();\n    }\n\n    /**\n     *  Format the type as a Human-Readable type.\n     */\n    format(): string {\n        if (this.type === \"array\") {\n            throw new Error(\"\");\n        } else if (this.type === \"dynamicArray\") {\n            throw new Error(\"\");\n        } else if (this.type === \"tuple\") {\n            return `tuple(${ this.value.map((v: Typed) => v.format()).join(\",\") })`\n        }\n\n        return this.type;\n    }\n\n    /**\n     *  The default value returned by this type.\n     */\n    defaultValue(): string | number | bigint | Result {\n        return 0;\n    }\n\n    /**\n     *  The minimum value for numeric types.\n     */\n    minValue(): string | number | bigint {\n        return 0;\n    }\n\n    /**\n     *  The maximum value for numeric types.\n     */\n    maxValue(): string | number | bigint {\n        return 0;\n    }\n\n    /**\n     *  Returns ``true`` and provides a type guard is this is a [[TypedBigInt]].\n     */\n    isBigInt(): this is TypedBigInt {\n        return !!(this.type.match(/^u?int[0-9]+$/));\n    }\n\n    /**\n     *  Returns ``true`` and provides a type guard is this is a [[TypedData]].\n     */\n    isData(): this is TypedData {\n        return this.type.startsWith(\"bytes\");\n    }\n\n    /**\n     *  Returns ``true`` and provides a type guard is this is a [[TypedString]].\n     */\n    isString(): this is TypedString {\n        return (this.type === \"string\");\n    }\n\n    /**\n     *  Returns the tuple name, if this is a tuple. Throws otherwise.\n     */\n    get tupleName(): null | string {\n        if (this.type !== \"tuple\") { throw TypeError(\"not a tuple\"); }\n        return this.#options;\n    }\n\n    // Returns the length of this type as an array\n    // - `null` indicates the length is unforced, it could be dynamic\n    // - `-1` indicates the length is dynamic\n    // - any other value indicates it is a static array and is its length\n\n    /**\n     *  Returns the length of the array type or ``-1`` if it is dynamic.\n     *\n     *  Throws if the type is not an array.\n     */\n    get arrayLength(): null | number {\n        if (this.type !== \"array\") { throw TypeError(\"not an array\"); }\n        if (this.#options === true) { return -1; }\n        if (this.#options === false) { return (<Array<any>>(this.value)).length; }\n        return null;\n    }\n\n    /**\n     *  Returns a new **Typed** of %%type%% with the %%value%%.\n     */\n    static from(type: string, value: any): Typed {\n        return new Typed(_gaurd, type, value);\n    }\n\n    /**\n     *  Return a new ``uint8`` type for %%v%%.\n     */\n    static uint8(v: BigNumberish): Typed { return n(v, 8); }\n\n    /**\n     *  Return a new ``uint16`` type for %%v%%.\n     */\n    static uint16(v: BigNumberish): Typed { return n(v, 16); }\n\n    /**\n     *  Return a new ``uint24`` type for %%v%%.\n     */\n    static uint24(v: BigNumberish): Typed { return n(v, 24); }\n\n    /**\n     *  Return a new ``uint32`` type for %%v%%.\n     */\n    static uint32(v: BigNumberish): Typed { return n(v, 32); }\n\n    /**\n     *  Return a new ``uint40`` type for %%v%%.\n     */\n    static uint40(v: BigNumberish): Typed { return n(v, 40); }\n\n    /**\n     *  Return a new ``uint48`` type for %%v%%.\n     */\n    static uint48(v: BigNumberish): Typed { return n(v, 48); }\n\n    /**\n     *  Return a new ``uint56`` type for %%v%%.\n     */\n    static uint56(v: BigNumberish): Typed { return n(v, 56); }\n\n    /**\n     *  Return a new ``uint64`` type for %%v%%.\n     */\n    static uint64(v: BigNumberish): Typed { return n(v, 64); }\n\n    /**\n     *  Return a new ``uint72`` type for %%v%%.\n     */\n    static uint72(v: BigNumberish): Typed { return n(v, 72); }\n\n    /**\n     *  Return a new ``uint80`` type for %%v%%.\n     */\n    static uint80(v: BigNumberish): Typed { return n(v, 80); }\n\n    /**\n     *  Return a new ``uint88`` type for %%v%%.\n     */\n    static uint88(v: BigNumberish): Typed { return n(v, 88); }\n\n    /**\n     *  Return a new ``uint96`` type for %%v%%.\n     */\n    static uint96(v: BigNumberish): Typed { return n(v, 96); }\n\n    /**\n     *  Return a new ``uint104`` type for %%v%%.\n     */\n    static uint104(v: BigNumberish): Typed { return n(v, 104); }\n\n    /**\n     *  Return a new ``uint112`` type for %%v%%.\n     */\n    static uint112(v: BigNumberish): Typed { return n(v, 112); }\n\n    /**\n     *  Return a new ``uint120`` type for %%v%%.\n     */\n    static uint120(v: BigNumberish): Typed { return n(v, 120); }\n\n    /**\n     *  Return a new ``uint128`` type for %%v%%.\n     */\n    static uint128(v: BigNumberish): Typed { return n(v, 128); }\n\n    /**\n     *  Return a new ``uint136`` type for %%v%%.\n     */\n    static uint136(v: BigNumberish): Typed { return n(v, 136); }\n\n    /**\n     *  Return a new ``uint144`` type for %%v%%.\n     */\n    static uint144(v: BigNumberish): Typed { return n(v, 144); }\n\n    /**\n     *  Return a new ``uint152`` type for %%v%%.\n     */\n    static uint152(v: BigNumberish): Typed { return n(v, 152); }\n\n    /**\n     *  Return a new ``uint160`` type for %%v%%.\n     */\n    static uint160(v: BigNumberish): Typed { return n(v, 160); }\n\n    /**\n     *  Return a new ``uint168`` type for %%v%%.\n     */\n    static uint168(v: BigNumberish): Typed { return n(v, 168); }\n\n    /**\n     *  Return a new ``uint176`` type for %%v%%.\n     */\n    static uint176(v: BigNumberish): Typed { return n(v, 176); }\n\n    /**\n     *  Return a new ``uint184`` type for %%v%%.\n     */\n    static uint184(v: BigNumberish): Typed { return n(v, 184); }\n\n    /**\n     *  Return a new ``uint192`` type for %%v%%.\n     */\n    static uint192(v: BigNumberish): Typed { return n(v, 192); }\n\n    /**\n     *  Return a new ``uint200`` type for %%v%%.\n     */\n    static uint200(v: BigNumberish): Typed { return n(v, 200); }\n\n    /**\n     *  Return a new ``uint208`` type for %%v%%.\n     */\n    static uint208(v: BigNumberish): Typed { return n(v, 208); }\n\n    /**\n     *  Return a new ``uint216`` type for %%v%%.\n     */\n    static uint216(v: BigNumberish): Typed { return n(v, 216); }\n\n    /**\n     *  Return a new ``uint224`` type for %%v%%.\n     */\n    static uint224(v: BigNumberish): Typed { return n(v, 224); }\n\n    /**\n     *  Return a new ``uint232`` type for %%v%%.\n     */\n    static uint232(v: BigNumberish): Typed { return n(v, 232); }\n\n    /**\n     *  Return a new ``uint240`` type for %%v%%.\n     */\n    static uint240(v: BigNumberish): Typed { return n(v, 240); }\n\n    /**\n     *  Return a new ``uint248`` type for %%v%%.\n     */\n    static uint248(v: BigNumberish): Typed { return n(v, 248); }\n\n    /**\n     *  Return a new ``uint256`` type for %%v%%.\n     */\n    static uint256(v: BigNumberish): Typed { return n(v, 256); }\n\n    /**\n     *  Return a new ``uint256`` type for %%v%%.\n     */\n    static uint(v: BigNumberish): Typed { return n(v, 256); }\n\n    /**\n     *  Return a new ``int8`` type for %%v%%.\n     */\n    static int8(v: BigNumberish): Typed { return n(v, -8); }\n\n    /**\n     *  Return a new ``int16`` type for %%v%%.\n     */\n    static int16(v: BigNumberish): Typed { return n(v, -16); }\n\n    /**\n     *  Return a new ``int24`` type for %%v%%.\n     */\n    static int24(v: BigNumberish): Typed { return n(v, -24); }\n\n    /**\n     *  Return a new ``int32`` type for %%v%%.\n     */\n    static int32(v: BigNumberish): Typed { return n(v, -32); }\n\n    /**\n     *  Return a new ``int40`` type for %%v%%.\n     */\n    static int40(v: BigNumberish): Typed { return n(v, -40); }\n\n    /**\n     *  Return a new ``int48`` type for %%v%%.\n     */\n    static int48(v: BigNumberish): Typed { return n(v, -48); }\n\n    /**\n     *  Return a new ``int56`` type for %%v%%.\n     */\n    static int56(v: BigNumberish): Typed { return n(v, -56); }\n\n    /**\n     *  Return a new ``int64`` type for %%v%%.\n     */\n    static int64(v: BigNumberish): Typed { return n(v, -64); }\n\n    /**\n     *  Return a new ``int72`` type for %%v%%.\n     */\n    static int72(v: BigNumberish): Typed { return n(v, -72); }\n\n    /**\n     *  Return a new ``int80`` type for %%v%%.\n     */\n    static int80(v: BigNumberish): Typed { return n(v, -80); }\n\n    /**\n     *  Return a new ``int88`` type for %%v%%.\n     */\n    static int88(v: BigNumberish): Typed { return n(v, -88); }\n\n    /**\n     *  Return a new ``int96`` type for %%v%%.\n     */\n    static int96(v: BigNumberish): Typed { return n(v, -96); }\n\n    /**\n     *  Return a new ``int104`` type for %%v%%.\n     */\n    static int104(v: BigNumberish): Typed { return n(v, -104); }\n\n    /**\n     *  Return a new ``int112`` type for %%v%%.\n     */\n    static int112(v: BigNumberish): Typed { return n(v, -112); }\n\n    /**\n     *  Return a new ``int120`` type for %%v%%.\n     */\n    static int120(v: BigNumberish): Typed { return n(v, -120); }\n\n    /**\n     *  Return a new ``int128`` type for %%v%%.\n     */\n    static int128(v: BigNumberish): Typed { return n(v, -128); }\n\n    /**\n     *  Return a new ``int136`` type for %%v%%.\n     */\n    static int136(v: BigNumberish): Typed { return n(v, -136); }\n\n    /**\n     *  Return a new ``int144`` type for %%v%%.\n     */\n    static int144(v: BigNumberish): Typed { return n(v, -144); }\n\n    /**\n     *  Return a new ``int52`` type for %%v%%.\n     */\n    static int152(v: BigNumberish): Typed { return n(v, -152); }\n\n    /**\n     *  Return a new ``int160`` type for %%v%%.\n     */\n    static int160(v: BigNumberish): Typed { return n(v, -160); }\n\n    /**\n     *  Return a new ``int168`` type for %%v%%.\n     */\n    static int168(v: BigNumberish): Typed { return n(v, -168); }\n\n    /**\n     *  Return a new ``int176`` type for %%v%%.\n     */\n    static int176(v: BigNumberish): Typed { return n(v, -176); }\n\n    /**\n     *  Return a new ``int184`` type for %%v%%.\n     */\n    static int184(v: BigNumberish): Typed { return n(v, -184); }\n\n    /**\n     *  Return a new ``int92`` type for %%v%%.\n     */\n    static int192(v: BigNumberish): Typed { return n(v, -192); }\n\n    /**\n     *  Return a new ``int200`` type for %%v%%.\n     */\n    static int200(v: BigNumberish): Typed { return n(v, -200); }\n\n    /**\n     *  Return a new ``int208`` type for %%v%%.\n     */\n    static int208(v: BigNumberish): Typed { return n(v, -208); }\n\n    /**\n     *  Return a new ``int216`` type for %%v%%.\n     */\n    static int216(v: BigNumberish): Typed { return n(v, -216); }\n\n    /**\n     *  Return a new ``int224`` type for %%v%%.\n     */\n    static int224(v: BigNumberish): Typed { return n(v, -224); }\n\n    /**\n     *  Return a new ``int232`` type for %%v%%.\n     */\n    static int232(v: BigNumberish): Typed { return n(v, -232); }\n\n    /**\n     *  Return a new ``int240`` type for %%v%%.\n     */\n    static int240(v: BigNumberish): Typed { return n(v, -240); }\n\n    /**\n     *  Return a new ``int248`` type for %%v%%.\n     */\n    static int248(v: BigNumberish): Typed { return n(v, -248); }\n\n    /**\n     *  Return a new ``int256`` type for %%v%%.\n     */\n    static int256(v: BigNumberish): Typed { return n(v, -256); }\n\n    /**\n     *  Return a new ``int256`` type for %%v%%.\n     */\n    static int(v: BigNumberish): Typed { return n(v, -256); }\n\n    /**\n     *  Return a new ``bytes1`` type for %%v%%.\n     */\n    static bytes1(v: BytesLike): Typed { return b(v, 1); }\n\n    /**\n     *  Return a new ``bytes2`` type for %%v%%.\n     */\n    static bytes2(v: BytesLike): Typed { return b(v, 2); }\n\n    /**\n     *  Return a new ``bytes3`` type for %%v%%.\n     */\n    static bytes3(v: BytesLike): Typed { return b(v, 3); }\n\n    /**\n     *  Return a new ``bytes4`` type for %%v%%.\n     */\n    static bytes4(v: BytesLike): Typed { return b(v, 4); }\n\n    /**\n     *  Return a new ``bytes5`` type for %%v%%.\n     */\n    static bytes5(v: BytesLike): Typed { return b(v, 5); }\n\n    /**\n     *  Return a new ``bytes6`` type for %%v%%.\n     */\n    static bytes6(v: BytesLike): Typed { return b(v, 6); }\n\n    /**\n     *  Return a new ``bytes7`` type for %%v%%.\n     */\n    static bytes7(v: BytesLike): Typed { return b(v, 7); }\n\n    /**\n     *  Return a new ``bytes8`` type for %%v%%.\n     */\n    static bytes8(v: BytesLike): Typed { return b(v, 8); }\n\n    /**\n     *  Return a new ``bytes9`` type for %%v%%.\n     */\n    static bytes9(v: BytesLike): Typed { return b(v, 9); }\n\n    /**\n     *  Return a new ``bytes10`` type for %%v%%.\n     */\n    static bytes10(v: BytesLike): Typed { return b(v, 10); }\n\n    /**\n     *  Return a new ``bytes11`` type for %%v%%.\n     */\n    static bytes11(v: BytesLike): Typed { return b(v, 11); }\n\n    /**\n     *  Return a new ``bytes12`` type for %%v%%.\n     */\n    static bytes12(v: BytesLike): Typed { return b(v, 12); }\n\n    /**\n     *  Return a new ``bytes13`` type for %%v%%.\n     */\n    static bytes13(v: BytesLike): Typed { return b(v, 13); }\n\n    /**\n     *  Return a new ``bytes14`` type for %%v%%.\n     */\n    static bytes14(v: BytesLike): Typed { return b(v, 14); }\n\n    /**\n     *  Return a new ``bytes15`` type for %%v%%.\n     */\n    static bytes15(v: BytesLike): Typed { return b(v, 15); }\n\n    /**\n     *  Return a new ``bytes16`` type for %%v%%.\n     */\n    static bytes16(v: BytesLike): Typed { return b(v, 16); }\n\n    /**\n     *  Return a new ``bytes17`` type for %%v%%.\n     */\n    static bytes17(v: BytesLike): Typed { return b(v, 17); }\n\n    /**\n     *  Return a new ``bytes18`` type for %%v%%.\n     */\n    static bytes18(v: BytesLike): Typed { return b(v, 18); }\n\n    /**\n     *  Return a new ``bytes19`` type for %%v%%.\n     */\n    static bytes19(v: BytesLike): Typed { return b(v, 19); }\n\n    /**\n     *  Return a new ``bytes20`` type for %%v%%.\n     */\n    static bytes20(v: BytesLike): Typed { return b(v, 20); }\n\n    /**\n     *  Return a new ``bytes21`` type for %%v%%.\n     */\n    static bytes21(v: BytesLike): Typed { return b(v, 21); }\n\n    /**\n     *  Return a new ``bytes22`` type for %%v%%.\n     */\n    static bytes22(v: BytesLike): Typed { return b(v, 22); }\n\n    /**\n     *  Return a new ``bytes23`` type for %%v%%.\n     */\n    static bytes23(v: BytesLike): Typed { return b(v, 23); }\n\n    /**\n     *  Return a new ``bytes24`` type for %%v%%.\n     */\n    static bytes24(v: BytesLike): Typed { return b(v, 24); }\n\n    /**\n     *  Return a new ``bytes25`` type for %%v%%.\n     */\n    static bytes25(v: BytesLike): Typed { return b(v, 25); }\n\n    /**\n     *  Return a new ``bytes26`` type for %%v%%.\n     */\n    static bytes26(v: BytesLike): Typed { return b(v, 26); }\n\n    /**\n     *  Return a new ``bytes27`` type for %%v%%.\n     */\n    static bytes27(v: BytesLike): Typed { return b(v, 27); }\n\n    /**\n     *  Return a new ``bytes28`` type for %%v%%.\n     */\n    static bytes28(v: BytesLike): Typed { return b(v, 28); }\n\n    /**\n     *  Return a new ``bytes29`` type for %%v%%.\n     */\n    static bytes29(v: BytesLike): Typed { return b(v, 29); }\n\n    /**\n     *  Return a new ``bytes30`` type for %%v%%.\n     */\n    static bytes30(v: BytesLike): Typed { return b(v, 30); }\n\n    /**\n     *  Return a new ``bytes31`` type for %%v%%.\n     */\n    static bytes31(v: BytesLike): Typed { return b(v, 31); }\n\n    /**\n     *  Return a new ``bytes32`` type for %%v%%.\n     */\n    static bytes32(v: BytesLike): Typed { return b(v, 32); }\n\n\n    /**\n     *  Return a new ``address`` type for %%v%%.\n     */\n    static address(v: string | Addressable): Typed { return new Typed(_gaurd, \"address\", v); }\n\n    /**\n     *  Return a new ``bool`` type for %%v%%.\n     */\n    static bool(v: any): Typed { return new Typed(_gaurd, \"bool\", !!v); }\n\n    /**\n     *  Return a new ``bytes`` type for %%v%%.\n     */\n    static bytes(v: BytesLike): Typed { return new Typed(_gaurd, \"bytes\", v); }\n\n    /**\n     *  Return a new ``string`` type for %%v%%.\n     */\n    static string(v: string): Typed { return new Typed(_gaurd, \"string\", v); }\n\n\n    /**\n     *  Return a new ``array`` type for %%v%%, allowing %%dynamic%% length.\n     */\n    static array(v: Array<any | Typed>, dynamic?: null | boolean): Typed {\n        throw new Error(\"not implemented yet\");\n        return new Typed(_gaurd, \"array\", v, dynamic);\n    }\n\n\n    /**\n     *  Return a new ``tuple`` type for %%v%%, with the optional %%name%%.\n     */\n    static tuple(v: Array<any | Typed> | Record<string, any | Typed>, name?: string): Typed {\n        throw new Error(\"not implemented yet\");\n        return new Typed(_gaurd, \"tuple\", v, name);\n    }\n\n\n    /**\n     *  Return a new ``uint8`` type for %%v%%.\n     */\n    static overrides(v: Record<string, any>): Typed {\n        return new Typed(_gaurd, \"overrides\", Object.assign({ }, v));\n    }\n\n    /**\n     *  Returns true only if %%value%% is a [[Typed]] instance.\n     */\n    static isTyped(value: any): value is Typed {\n        return (value\n            && typeof(value) === \"object\"\n            && \"_typedSymbol\" in value\n            && value._typedSymbol === _typedSymbol);\n    }\n\n    /**\n     *  If the value is a [[Typed]] instance, validates the underlying value\n     *  and returns it, otherwise returns value directly.\n     *\n     *  This is useful for functions that with to accept either a [[Typed]]\n     *  object or values.\n     */\n    static dereference<T>(value: Typed | T, type: string): T {\n        if (Typed.isTyped(value)) {\n            if (value.type !== type) {\n                throw new Error(`invalid type: expecetd ${ type }, got ${ value.type }`);\n            }\n            return value.value;\n        }\n        return value;\n    }\n}\n", "import {\n    defineProperties, isError, assert, assertArgument, assertArgumentCount\n} from \"../../utils/index.js\";\n\nimport { Typed } from \"../typed.js\";\n\nimport { Coder, Result, WordSize, Writer } from \"./abstract-coder.js\";\nimport { AnonymousCoder } from \"./anonymous.js\";\n\nimport type { Reader } from \"./abstract-coder.js\";\n\n/**\n *  @_ignore\n */\nexport function pack(writer: Writer, coders: ReadonlyArray<Coder>, values: Array<any> | { [ name: string ]: any }): number {\n    let arrayValues: Array<any> = [ ];\n\n    if (Array.isArray(values)) {\n       arrayValues = values;\n\n    } else if (values && typeof(values) === \"object\") {\n        let unique: { [ name: string ]: boolean } = { };\n\n        arrayValues = coders.map((coder) => {\n            const name = coder.localName;\n            assert(name, \"cannot encode object for signature with missing names\",\n                \"INVALID_ARGUMENT\", { argument: \"values\", info: { coder }, value: values });\n\n            assert(!unique[name], \"cannot encode object for signature with duplicate names\",\n                \"INVALID_ARGUMENT\", { argument: \"values\", info: { coder }, value: values });\n\n            unique[name] = true;\n\n            return values[name];\n        });\n\n    } else {\n        assertArgument(false, \"invalid tuple value\", \"tuple\", values);\n    }\n\n    assertArgument(coders.length === arrayValues.length, \"types/value length mismatch\", \"tuple\", values);\n\n    let staticWriter = new Writer();\n    let dynamicWriter = new Writer();\n\n    let updateFuncs: Array<(baseOffset: number) => void> = [];\n    coders.forEach((coder, index) => {\n        let value = arrayValues[index];\n\n        if (coder.dynamic) {\n            // Get current dynamic offset (for the future pointer)\n            let dynamicOffset = dynamicWriter.length;\n\n            // Encode the dynamic value into the dynamicWriter\n            coder.encode(dynamicWriter, value);\n\n            // Prepare to populate the correct offset once we are done\n            let updateFunc = staticWriter.writeUpdatableValue();\n            updateFuncs.push((baseOffset: number) => {\n                updateFunc(baseOffset + dynamicOffset);\n            });\n\n        } else {\n            coder.encode(staticWriter, value);\n        }\n    });\n\n    // Backfill all the dynamic offsets, now that we know the static length\n    updateFuncs.forEach((func) => { func(staticWriter.length); });\n\n    let length = writer.appendWriter(staticWriter);\n    length += writer.appendWriter(dynamicWriter);\n    return length;\n}\n\n/**\n *  @_ignore\n */\nexport function unpack(reader: Reader, coders: ReadonlyArray<Coder>): Result {\n    let values: Array<any> = [];\n    let keys: Array<null | string> = [ ];\n\n    // A reader anchored to this base\n    let baseReader = reader.subReader(0);\n\n    coders.forEach((coder) => {\n        let value: any = null;\n\n        if (coder.dynamic) {\n            let offset = reader.readIndex();\n            let offsetReader = baseReader.subReader(offset);\n            try {\n                value = coder.decode(offsetReader);\n            } catch (error: any) {\n                // Cannot recover from this\n                if (isError(error, \"BUFFER_OVERRUN\")) {\n                    throw error;\n                }\n\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n\n        } else {\n            try {\n                value = coder.decode(reader);\n            } catch (error: any) {\n                // Cannot recover from this\n                if (isError(error, \"BUFFER_OVERRUN\")) {\n                    throw error;\n                }\n\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n\n        if (value == undefined) {\n            throw new Error(\"investigate\");\n        }\n\n        values.push(value);\n        keys.push(coder.localName || null);\n    });\n\n    return Result.fromItems(values, keys);\n}\n\n/**\n *  @_ignore\n */\nexport class ArrayCoder extends Coder {\n    readonly coder!: Coder;\n    readonly length!: number;\n\n    constructor(coder: Coder, length: number, localName: string) {\n        const type = (coder.type + \"[\" + (length >= 0 ? length: \"\") + \"]\");\n        const dynamic = (length === -1 || coder.dynamic);\n        super(\"array\", type, localName, dynamic);\n        defineProperties<ArrayCoder>(this, { coder, length });\n    }\n\n    defaultValue(): Array<any> {\n        // Verifies the child coder is valid (even if the array is dynamic or 0-length)\n        const defaultChild = this.coder.defaultValue();\n\n        const result: Array<any> = [];\n        for (let i = 0; i < this.length; i++) {\n            result.push(defaultChild);\n        }\n        return result;\n    }\n\n    encode(writer: Writer, _value: Array<any> | Typed): number {\n        const value = Typed.dereference(_value, \"array\");\n\n        if(!Array.isArray(value)) {\n            this._throwError(\"expected array value\", value);\n        }\n\n        let count = this.length;\n\n        if (count === -1) {\n            count = value.length;\n            writer.writeValue(value.length);\n        }\n\n        assertArgumentCount(value.length, count, \"coder array\" + (this.localName? (\" \"+ this.localName): \"\"));\n\n        let coders: Array<Coder> = [ ];\n        for (let i = 0; i < value.length; i++) { coders.push(this.coder); }\n\n        return pack(writer, coders, value);\n    }\n\n    decode(reader: Reader): any {\n        let count = this.length;\n        if (count === -1) {\n            count = reader.readIndex();\n\n            // Check that there is *roughly* enough data to ensure\n            // stray random data is not being read as a length. Each\n            // slot requires at least 32 bytes for their value (or 32\n            // bytes as a link to the data). This could use a much\n            // tighter bound, but we are erroring on the side of safety.\n            assert(count * WordSize <= reader.dataLength, \"insufficient data length\",\n                \"BUFFER_OVERRUN\", { buffer: reader.bytes, offset: count * WordSize, length: reader.dataLength });\n        }\n        let coders: Array<Coder> = [];\n        for (let i = 0; i < count; i++) { coders.push(new AnonymousCoder(this.coder)); }\n\n        return unpack(reader, coders);\n    }\n}\n\n", "import { Coder } from \"./abstract-coder.js\";\n\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\n/**\n *  Clones the functionality of an existing Coder, but without a localName\n *\n *  @_ignore\n */\nexport class AnonymousCoder extends Coder {\n    private coder: Coder;\n\n    constructor(coder: Coder) {\n        super(coder.name, coder.type, \"_\", coder.dynamic);\n        this.coder = coder;\n    }\n\n    defaultValue(): any {\n        return this.coder.defaultValue();\n    }\n\n    encode(writer: Writer, value: any): number {\n        return this.coder.encode(writer, value);\n    }\n\n    decode(reader: Reader): any {\n        return this.coder.decode(reader);\n    }\n}\n", "import { Typed } from \"../typed.js\";\nimport { Coder } from \"./abstract-coder.js\";\n\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\n/**\n *  @_ignore\n */\nexport class BooleanCoder extends Coder {\n\n    constructor(localName: string) {\n        super(\"bool\", \"bool\", localName, false);\n    }\n\n    defaultValue(): boolean {\n        return false;\n    }\n\n    encode(writer: Writer, _value: boolean | Typed): number {\n        const value = Typed.dereference(_value, \"bool\");\n        return writer.writeValue(value ? 1: 0);\n    }\n\n    decode(reader: Reader): any {\n        return !!reader.readValue();\n    }\n}\n", "import { getBytesCopy, hexlify } from \"../../utils/index.js\";\n\nimport { Coder } from \"./abstract-coder.js\";\n\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\n\n/**\n *  @_ignore\n */\nexport class DynamicBytesCoder extends Coder {\n    constructor(type: string, localName: string) {\n       super(type, type, localName, true);\n    }\n\n    defaultValue(): string {\n        return \"0x\";\n    }\n\n    encode(writer: Writer, value: any): number {\n        value = getBytesCopy(value);\n        let length = writer.writeValue(value.length);\n        length += writer.writeBytes(value);\n        return length;\n    }\n\n    decode(reader: Reader): any {\n        return reader.readBytes(reader.readIndex(), true);\n    }\n}\n\n/**\n *  @_ignore\n */\nexport class BytesCoder extends DynamicBytesCoder {\n    constructor(localName: string) {\n        super(\"bytes\", localName);\n    }\n\n    decode(reader: Reader): any {\n        return hexlify(super.decode(reader));\n    }\n}\n", "\nimport { defineProperties, getBytesCopy, hexlify } from \"../../utils/index.js\";\n\nimport { Typed } from \"../typed.js\";\nimport { Coder } from \"./abstract-coder.js\";\n\nimport type { BytesLike } from \"../../utils/index.js\";\n\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\n\n/**\n *  @_ignore\n */\nexport class FixedBytesCoder extends Coder {\n    readonly size!: number;\n\n    constructor(size: number, localName: string) {\n        let name = \"bytes\" + String(size);\n        super(name, name, localName, false);\n        defineProperties<FixedBytesCoder>(this, { size }, { size: \"number\" });\n    }\n\n    defaultValue(): string {\n        return (\"0x0000000000000000000000000000000000000000000000000000000000000000\").substring(0, 2 + this.size * 2);\n    }\n\n    encode(writer: Writer, _value: BytesLike | Typed): number {\n        let data = getBytesCopy(Typed.dereference(_value, this.type));\n        if (data.length !== this.size) { this._throwError(\"incorrect data length\", _value); }\n        return writer.writeBytes(data);\n    }\n\n    decode(reader: Reader): any {\n        return hexlify(reader.readBytes(this.size));\n    }\n}\n", "import { Coder } from \"./abstract-coder.js\";\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\nconst Empty = new Uint8Array([ ]);\n\n/**\n *  @_ignore\n */\nexport class NullCoder extends Coder {\n\n    constructor(localName: string) {\n        super(\"null\", \"\", localName, false);\n    }\n\n    defaultValue(): null {\n        return null;\n    }\n\n    encode(writer: Writer, value: any): number {\n        if (value != null) { this._throwError(\"not null\", value); }\n        return writer.writeBytes(Empty);\n    }\n\n    decode(reader: Reader): any {\n        reader.readBytes(0);\n        return null;\n    }\n}\n", "import {\n    defineProperties, fromTwos, getBigInt, mask, toTwos\n} from \"../../utils/index.js\";\n\nimport { Typed } from \"../typed.js\";\nimport { Coder, WordSize } from \"./abstract-coder.js\";\n\nimport type { BigNumberish } from \"../../utils/index.js\";\n\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\n\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\nconst BN_MAX_UINT256 = BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n\n/**\n *  @_ignore\n */\nexport class NumberCoder extends Coder {\n    readonly size!: number;\n    readonly signed!: boolean;\n\n    constructor(size: number, signed: boolean, localName: string) {\n        const name = ((signed ? \"int\": \"uint\") + (size * 8));\n        super(name, name, localName, false);\n\n        defineProperties<NumberCoder>(this, { size, signed }, { size: \"number\", signed: \"boolean\" });\n    }\n\n    defaultValue(): number {\n        return 0;\n    }\n\n    encode(writer: Writer, _value: BigNumberish | Typed): number {\n        let value = getBigInt(Typed.dereference(_value, this.type));\n\n        // Check bounds are safe for encoding\n        let maxUintValue = mask(BN_MAX_UINT256, WordSize * 8);\n        if (this.signed) {\n            let bounds = mask(maxUintValue, (this.size * 8) - 1);\n            if (value > bounds || value < -(bounds + BN_1)) {\n                this._throwError(\"value out-of-bounds\", _value);\n            }\n            value = toTwos(value, 8 * WordSize);\n        } else if (value < BN_0 || value > mask(maxUintValue, this.size * 8)) {\n            this._throwError(\"value out-of-bounds\", _value);\n        }\n\n        return writer.writeValue(value);\n    }\n\n    decode(reader: Reader): any {\n        let value = mask(reader.readValue(), this.size * 8);\n\n        if (this.signed) {\n            value = fromTwos(value, this.size * 8);\n        }\n\n        return value;\n    }\n}\n\n", "import { toUtf8Bytes, toUtf8String } from \"../../utils/utf8.js\";\n\nimport { Typed } from \"../typed.js\";\nimport { DynamicBytesCoder } from \"./bytes.js\";\n\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\n\n/**\n *  @_ignore\n */\nexport class StringCoder extends DynamicBytesCoder {\n\n    constructor(localName: string) {\n        super(\"string\", localName);\n    }\n\n    defaultValue(): string {\n        return \"\";\n    }\n\n    encode(writer: Writer, _value: string | Typed): number {\n        return super.encode(writer, toUtf8Bytes(Typed.dereference(_value, \"string\")));\n    }\n\n    decode(reader: Reader): any {\n        return toUtf8String(super.decode(reader));\n    }\n}\n", "import { defineProperties } from \"../../utils/properties.js\";\n\nimport { Typed } from \"../typed.js\";\nimport { Coder } from \"./abstract-coder.js\";\n\nimport { pack, unpack } from \"./array.js\";\n\nimport type { Reader, Writer } from \"./abstract-coder.js\";\n\n/**\n *  @_ignore\n */\nexport class TupleCoder extends Coder {\n    readonly coders!: ReadonlyArray<Coder>;\n\n    constructor(coders: Array<Coder>, localName: string) {\n        let dynamic = false;\n        const types: Array<string> = [];\n        coders.forEach((coder) => {\n            if (coder.dynamic) { dynamic = true; }\n            types.push(coder.type);\n        });\n        const type = (\"tuple(\" + types.join(\",\") + \")\");\n\n        super(\"tuple\", type, localName, dynamic);\n        defineProperties<TupleCoder>(this, { coders: Object.freeze(coders.slice()) });\n    }\n\n    defaultValue(): any {\n        const values: any = [ ];\n        this.coders.forEach((coder) => {\n            values.push(coder.defaultValue());\n        });\n\n        // We only output named properties for uniquely named coders\n        const uniqueNames = this.coders.reduce((accum, coder) => {\n            const name = coder.localName;\n            if (name) {\n                if (!accum[name]) { accum[name] = 0; }\n                accum[name]++;\n            }\n            return accum;\n        }, <{ [ name: string ]: number }>{ });\n\n        // Add named values\n        this.coders.forEach((coder: Coder, index: number) => {\n            let name = coder.localName;\n            if (!name || uniqueNames[name] !== 1) { return; }\n\n            if (name === \"length\") { name = \"_length\"; }\n\n            if (values[name] != null) { return; }\n\n            values[name] = values[index];\n        });\n\n        return Object.freeze(values);\n    }\n\n    encode(writer: Writer, _value: Array<any> | { [ name: string ]: any } | Typed): number {\n        const value = Typed.dereference(_value, \"tuple\");\n        return pack(writer, this.coders, value);\n    }\n\n    decode(reader: Reader): any {\n        return unpack(reader, this.coders);\n    }\n}\n\n", "/**\n *  A fragment is a single item from an ABI, which may represent any of:\n *\n *  - [Functions](FunctionFragment)\n *  - [Events](EventFragment)\n *  - [Constructors](ConstructorFragment)\n *  - Custom [Errors](ErrorFragment)\n *  - [Fallback or Receive](FallbackFragment) functions\n *\n *  @_subsection api/abi/abi-coder:Fragments  [about-fragments]\n */\n\nimport {\n    defineProperties, getBigInt, getNumber,\n    assert, assertPrivate, assertArgument\n} from \"../utils/index.js\";\nimport { id } from \"../hash/index.js\";\n\n/**\n *  A Type description in a [JSON ABI format](link-solc-jsonabi).\n */\nexport interface JsonFragmentType {\n    /**\n     *  The parameter name.\n     */\n    readonly name?: string;\n\n    /**\n     *  If the parameter is indexed.\n     */\n    readonly indexed?: boolean;\n\n    /**\n     *  The type of the parameter.\n     */\n    readonly type?: string;\n\n    /**\n     *  The internal Solidity type.\n     */\n    readonly internalType?: string;\n\n    /**\n     *  The components for a tuple.\n     */\n    readonly components?: ReadonlyArray<JsonFragmentType>;\n}\n\n/**\n *  A fragment for a method, event or error in a [JSON ABI format](link-solc-jsonabi).\n */\nexport interface JsonFragment {\n    /**\n     *  The name of the error, event, function, etc.\n     */\n    readonly name?: string;\n\n    /**\n     *  The type of the fragment (e.g. ``event``, ``\"function\"``, etc.)\n     */\n    readonly type?: string;\n\n    /**\n     *  If the event is anonymous.\n     */\n    readonly anonymous?: boolean;\n\n    /**\n     *  If the function is payable.\n     */\n    readonly payable?: boolean;\n\n    /**\n     *  If the function is constant.\n     */\n    readonly constant?: boolean;\n\n    /**\n     *  The mutability state of the function.\n     */\n    readonly stateMutability?: string;\n\n    /**\n     *  The input parameters.\n     */\n    readonly inputs?: ReadonlyArray<JsonFragmentType>;\n\n    /**\n     *  The output parameters.\n     */\n    readonly outputs?: ReadonlyArray<JsonFragmentType>;\n\n    /**\n     *  The gas limit to use when sending a transaction for this function.\n     */\n    readonly gas?: string;\n};\n\n/**\n *  The format to serialize the output as.\n *\n *  **``\"sighash\"``** - the bare formatting, used to compute the selector\n *  or topic hash; this format cannot be reversed (as it discards ``indexed``)\n *  so cannot by used to export an [[Interface]].\n *\n *  **``\"minimal\"``** - Human-Readable ABI with minimal spacing and without\n *  names, so it is compact, but will result in Result objects that cannot\n *  be accessed by name.\n *\n *  **``\"full\"``** - Full Human-Readable ABI, with readable spacing and names\n *  intact; this is generally the recommended format.\n *\n *  **``\"json\"``** - The [JSON ABI format](link-solc-jsonabi).\n */\nexport type FormatType = \"sighash\" | \"minimal\" | \"full\" | \"json\";\n\n// [ \"a\", \"b\" ] => { \"a\": 1, \"b\": 1 }\nfunction setify(items: Array<string>): ReadonlySet<string> {\n    const result: Set<string> = new Set();\n    items.forEach((k) => result.add(k));\n    return Object.freeze(result);\n}\n\nconst _kwVisibDeploy = \"external public payable override\";\nconst KwVisibDeploy = setify(_kwVisibDeploy.split(\" \"));\n\n// Visibility Keywords\nconst _kwVisib = \"constant external internal payable private public pure view override\";\nconst KwVisib = setify(_kwVisib.split(\" \"));\n\nconst _kwTypes = \"constructor error event fallback function receive struct\";\nconst KwTypes = setify(_kwTypes.split(\" \"));\n\nconst _kwModifiers = \"calldata memory storage payable indexed\";\nconst KwModifiers = setify(_kwModifiers.split(\" \"));\n\nconst _kwOther = \"tuple returns\";\n\n// All Keywords\nconst _keywords = [ _kwTypes, _kwModifiers, _kwOther, _kwVisib ].join(\" \");\nconst Keywords = setify(_keywords.split(\" \"));\n\n// Single character tokens\nconst SimpleTokens: Record<string, string> = {\n  \"(\": \"OPEN_PAREN\", \")\": \"CLOSE_PAREN\",\n  \"[\": \"OPEN_BRACKET\", \"]\": \"CLOSE_BRACKET\",\n  \",\": \"COMMA\", \"@\": \"AT\"\n};\n\n// Parser regexes to consume the next token\nconst regexWhitespacePrefix = new RegExp(\"^(\\\\s*)\");\nconst regexNumberPrefix = new RegExp(\"^([0-9]+)\");\nconst regexIdPrefix = new RegExp(\"^([a-zA-Z$_][a-zA-Z0-9$_]*)\");\n\n// Parser regexs to check validity\nconst regexId = new RegExp(\"^([a-zA-Z$_][a-zA-Z0-9$_]*)$\");\nconst regexType = new RegExp(\"^(address|bool|bytes([0-9]*)|string|u?int([0-9]*))$\");\n\n/**\n *  @ignore:\n */\ntype Token = Readonly<{\n    // Type of token (e.g. TYPE, KEYWORD, NUMBER, etc)\n    type: string;\n\n    // Offset into the original source code\n    offset: number;\n\n    // Actual text content of the token\n    text: string;\n\n    // The parenthesis depth\n    depth: number;\n\n    // If a parenthesis, the offset (in tokens) that balances it\n    match: number;\n\n    // For parenthesis and commas, the offset (in tokens) to the\n    // previous/next parenthesis or comma in the list\n    linkBack: number;\n    linkNext: number;\n\n    // If a BRACKET, the value inside\n    value: number;\n}>;\n\nclass TokenString {\n    #offset: number;\n    #tokens: ReadonlyArray<Token>;\n\n    get offset(): number { return this.#offset; }\n    get length(): number { return this.#tokens.length - this.#offset; }\n\n    constructor(tokens: ReadonlyArray<Token>) {\n        this.#offset = 0;\n        this.#tokens = tokens.slice();\n    }\n\n    clone(): TokenString { return new TokenString(this.#tokens); }\n    reset(): void { this.#offset = 0; }\n\n    #subTokenString(from: number = 0, to: number = 0): TokenString {\n        return new TokenString(this.#tokens.slice(from, to).map((t) => {\n            return Object.freeze(Object.assign({ }, t, {\n                match: (t.match - from),\n                linkBack: (t.linkBack - from),\n                linkNext: (t.linkNext - from),\n            }));\n        }));\n    }\n\n    // Pops and returns the value of the next token, if it is a keyword in allowed; throws if out of tokens\n    popKeyword(allowed: ReadonlySet<string>): string {\n        const top = this.peek();\n        if (top.type !== \"KEYWORD\" || !allowed.has(top.text)) { throw new Error(`expected keyword ${ top.text }`); }\n        return this.pop().text;\n    }\n\n    // Pops and returns the value of the next token if it is `type`; throws if out of tokens\n    popType(type: string): string {\n        if (this.peek().type !== type) {\n            const top = this.peek();\n            throw new Error(`expected ${ type }; got ${ top.type } ${ JSON.stringify(top.text) }`);\n        }\n        return this.pop().text;\n    }\n\n    // Pops and returns a \"(\" TOKENS \")\"\n    popParen(): TokenString {\n        const top = this.peek();\n        if (top.type !== \"OPEN_PAREN\") { throw new Error(\"bad start\"); }\n        const result = this.#subTokenString(this.#offset + 1, top.match + 1);\n        this.#offset = top.match + 1;\n        return result;\n    }\n\n    // Pops and returns the items within \"(\" ITEM1 \",\" ITEM2 \",\" ... \")\"\n    popParams(): Array<TokenString> {\n        const top = this.peek();\n\n        if (top.type !== \"OPEN_PAREN\") { throw new Error(\"bad start\"); }\n\n        const result: Array<TokenString> = [ ];\n\n        while(this.#offset < top.match - 1) {\n            const link = this.peek().linkNext;\n            result.push(this.#subTokenString(this.#offset + 1, link));\n            this.#offset = link;\n        }\n\n        this.#offset = top.match + 1;\n\n        return result;\n    }\n\n    // Returns the top Token, throwing if out of tokens\n    peek(): Token {\n        if (this.#offset >= this.#tokens.length) {\n            throw new Error(\"out-of-bounds\");\n        }\n        return this.#tokens[this.#offset];\n    }\n\n    // Returns the next value, if it is a keyword in `allowed`\n    peekKeyword(allowed: ReadonlySet<string>): null | string {\n        const top = this.peekType(\"KEYWORD\");\n        return (top != null && allowed.has(top)) ? top: null;\n    }\n\n    // Returns the value of the next token if it is `type`\n    peekType(type: string): null | string {\n        if (this.length === 0) { return null; }\n        const top = this.peek();\n        return (top.type === type) ? top.text: null;\n    }\n\n    // Returns the next token; throws if out of tokens\n    pop(): Token {\n        const result = this.peek();\n        this.#offset++;\n        return result;\n    }\n\n    toString(): string {\n        const tokens: Array<string> = [ ];\n        for (let i = this.#offset; i < this.#tokens.length; i++) {\n            const token = this.#tokens[i];\n            tokens.push(`${ token.type }:${ token.text }`);\n        }\n        return `<TokenString ${ tokens.join(\" \") }>`\n    }\n}\n\ntype Writeable<T> = { -readonly [P in keyof T]: T[P] };\n\nfunction lex(text: string): TokenString {\n    const tokens: Array<Token> = [ ];\n\n    const throwError = (message: string) => {\n        const token = (offset < text.length) ? JSON.stringify(text[offset]): \"$EOI\";\n        throw new Error(`invalid token ${ token } at ${ offset }: ${ message }`);\n    };\n\n    let brackets: Array<number> = [ ];\n    let commas: Array<number> = [ ];\n\n    let offset = 0;\n    while (offset < text.length) {\n\n        // Strip off any leading whitespace\n        let cur = text.substring(offset);\n        let match = cur.match(regexWhitespacePrefix);\n        if (match) {\n            offset += match[1].length;\n            cur = text.substring(offset);\n        }\n\n        const token = { depth: brackets.length, linkBack: -1, linkNext: -1, match: -1, type: \"\", text: \"\", offset, value: -1 };\n        tokens.push(token);\n\n        let type = (SimpleTokens[cur[0]] || \"\");\n        if (type) {\n            token.type = type;\n            token.text = cur[0];\n            offset++;\n\n            if (type === \"OPEN_PAREN\") {\n                brackets.push(tokens.length - 1);\n                commas.push(tokens.length - 1);\n\n            } else if (type == \"CLOSE_PAREN\") {\n                if (brackets.length === 0) { throwError(\"no matching open bracket\"); }\n\n                token.match = brackets.pop() as number;\n                (<Writeable<Token>>(tokens[token.match])).match = tokens.length - 1;\n                token.depth--;\n\n                token.linkBack = commas.pop() as number;\n                (<Writeable<Token>>(tokens[token.linkBack])).linkNext = tokens.length - 1;\n\n            } else if (type === \"COMMA\") {\n                token.linkBack = commas.pop() as number;\n                (<Writeable<Token>>(tokens[token.linkBack])).linkNext = tokens.length - 1;\n                commas.push(tokens.length - 1);\n\n            } else if (type === \"OPEN_BRACKET\") {\n                token.type = \"BRACKET\";\n\n            } else if (type === \"CLOSE_BRACKET\") {\n                // Remove the CLOSE_BRACKET\n                let suffix = (tokens.pop() as Token).text;\n                if (tokens.length > 0 && tokens[tokens.length - 1].type === \"NUMBER\") {\n                    const value = (tokens.pop() as Token).text;\n                    suffix = value + suffix;\n                    (<Writeable<Token>>(tokens[tokens.length - 1])).value = getNumber(value);\n                }\n                if (tokens.length === 0 || tokens[tokens.length - 1].type !== \"BRACKET\") {\n                    throw new Error(\"missing opening bracket\");\n                }\n                (<Writeable<Token>>(tokens[tokens.length - 1])).text += suffix;\n            }\n\n            continue;\n        }\n\n        match = cur.match(regexIdPrefix);\n        if (match) {\n            token.text = match[1];\n            offset += token.text.length;\n\n            if (Keywords.has(token.text)) {\n                token.type = \"KEYWORD\";\n                continue;\n            }\n\n            if (token.text.match(regexType)) {\n                token.type = \"TYPE\";\n                continue;\n            }\n\n            token.type = \"ID\";\n            continue;\n        }\n\n        match = cur.match(regexNumberPrefix);\n        if (match) {\n            token.text = match[1];\n            token.type = \"NUMBER\";\n            offset += token.text.length;\n            continue;\n        }\n\n        throw new Error(`unexpected token ${ JSON.stringify(cur[0]) } at position ${ offset }`);\n    }\n\n    return new TokenString(tokens.map((t) => Object.freeze(t)));\n}\n\n// Check only one of `allowed` is in `set`\nfunction allowSingle(set: ReadonlySet<string>, allowed: ReadonlySet<string>): void {\n    let included: Array<string> = [ ];\n    for (const key in allowed.keys()) {\n        if (set.has(key)) { included.push(key); }\n    }\n    if (included.length > 1) { throw new Error(`conflicting types: ${ included.join(\", \") }`); }\n}\n\n// Functions to process a Solidity Signature TokenString from left-to-right for...\n\n// ...the name with an optional type, returning the name\nfunction consumeName(type: string, tokens: TokenString): string {\n    if (tokens.peekKeyword(KwTypes)) {\n        const keyword = tokens.pop().text;\n        if (keyword !== type) {\n            throw new Error(`expected ${ type }, got ${ keyword }`);\n        }\n    }\n\n    return tokens.popType(\"ID\");\n}\n\n// ...all keywords matching allowed, returning the keywords\nfunction consumeKeywords(tokens: TokenString, allowed?: ReadonlySet<string>): ReadonlySet<string> {\n    const keywords: Set<string> = new Set();\n    while (true) {\n        const keyword = tokens.peekType(\"KEYWORD\");\n\n        if (keyword == null || (allowed && !allowed.has(keyword))) { break; }\n        tokens.pop();\n\n        if (keywords.has(keyword)) { throw new Error(`duplicate keywords: ${ JSON.stringify(keyword) }`); }\n        keywords.add(keyword);\n    }\n\n    return Object.freeze(keywords);\n}\n\n// ...all visibility keywords, returning the coalesced mutability\nfunction consumeMutability(tokens: TokenString): \"payable\" | \"nonpayable\" | \"view\" | \"pure\" {\n    let modifiers = consumeKeywords(tokens, KwVisib);\n\n    // Detect conflicting modifiers\n    allowSingle(modifiers, setify(\"constant payable nonpayable\".split(\" \")));\n    allowSingle(modifiers, setify(\"pure view payable nonpayable\".split(\" \")));\n\n    // Process mutability states\n    if (modifiers.has(\"view\")) { return \"view\"; }\n    if (modifiers.has(\"pure\")) { return \"pure\"; }\n    if (modifiers.has(\"payable\")) { return \"payable\"; }\n    if (modifiers.has(\"nonpayable\")) { return \"nonpayable\"; }\n\n    // Process legacy `constant` last\n    if (modifiers.has(\"constant\")) { return \"view\"; }\n\n    return \"nonpayable\";\n}\n\n// ...a parameter list, returning the ParamType list\nfunction consumeParams(tokens: TokenString, allowIndexed?: boolean): Array<ParamType> {\n    return tokens.popParams().map((t) => ParamType.from(t, allowIndexed));\n}\n\n// ...a gas limit, returning a BigNumber or null if none\nfunction consumeGas(tokens: TokenString): null | bigint {\n    if (tokens.peekType(\"AT\")) {\n        tokens.pop();\n        if (tokens.peekType(\"NUMBER\")) {\n            return getBigInt(tokens.pop().text);\n        }\n        throw new Error(\"invalid gas\");\n    }\n    return null;\n}\n\nfunction consumeEoi(tokens: TokenString): void {\n    if (tokens.length) {\n        throw new Error(`unexpected tokens at offset ${ tokens.offset }: ${ tokens.toString() }`);\n    }\n}\n\nconst regexArrayType = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\n\nfunction verifyBasicType(type: string): string {\n    const match = type.match(regexType);\n    assertArgument(match, \"invalid type\", \"type\", type);\n    if (type === \"uint\") { return \"uint256\"; }\n    if (type === \"int\") { return \"int256\"; }\n\n    if (match[2]) {\n        // bytesXX\n        const length = parseInt(match[2]);\n        assertArgument(length !== 0 && length <= 32, \"invalid bytes length\", \"type\", type);\n\n    } else if (match[3]) {\n        // intXX or uintXX\n        const size = parseInt(match[3] as string);\n        assertArgument(size !== 0 && size <= 256 && (size % 8) === 0, \"invalid numeric width\", \"type\", type);\n    }\n\n    return type;\n}\n\n// Make the Fragment constructors effectively private\nconst _guard = { };\n\n\n/**\n *  When [walking](ParamType-walk) a [[ParamType]], this is called\n *  on each component.\n */\nexport type ParamTypeWalkFunc = (type: string, value: any) => any;\n\n/**\n *  When [walking asynchronously](ParamType-walkAsync) a [[ParamType]],\n *  this is called on each component.\n */\nexport type ParamTypeWalkAsyncFunc = (type: string, value: any) => any | Promise<any>;\n\nconst internal = Symbol.for(\"_ethers_internal\");\n\nconst ParamTypeInternal = \"_ParamTypeInternal\";\nconst ErrorFragmentInternal = \"_ErrorInternal\";\nconst EventFragmentInternal = \"_EventInternal\";\nconst ConstructorFragmentInternal = \"_ConstructorInternal\";\nconst FallbackFragmentInternal = \"_FallbackInternal\";\nconst FunctionFragmentInternal = \"_FunctionInternal\";\nconst StructFragmentInternal = \"_StructInternal\";\n\n/**\n *  Each input and output of a [[Fragment]] is an Array of **ParamType**.\n */\nexport class ParamType {\n\n    /**\n     *  The local name of the parameter (or ``\"\"`` if unbound)\n     */\n    readonly name!: string;\n\n    /**\n     *  The fully qualified type (e.g. ``\"address\"``, ``\"tuple(address)\"``,\n     *  ``\"uint256[3][]\"``)\n     */\n    readonly type!: string;\n\n    /**\n     *  The base type (e.g. ``\"address\"``, ``\"tuple\"``, ``\"array\"``)\n     */\n    readonly baseType!: string;\n\n    /**\n     *  True if the parameters is indexed.\n     *\n     *  For non-indexable types this is ``null``.\n     */\n    readonly indexed!: null | boolean;\n\n    /**\n     *  The components for the tuple.\n     *\n     *  For non-tuple types this is ``null``.\n     */\n    readonly components!: null | ReadonlyArray<ParamType>;\n\n    /**\n     *  The array length, or ``-1`` for dynamic-lengthed arrays.\n     *\n     *  For non-array types this is ``null``.\n     */\n    readonly arrayLength!: null | number;\n\n    /**\n     *  The type of each child in the array.\n     *\n     *  For non-array types this is ``null``.\n     */\n    readonly arrayChildren!: null | ParamType;\n\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, name: string, type: string, baseType: string, indexed: null | boolean, components: null | ReadonlyArray<ParamType>, arrayLength: null | number, arrayChildren: null | ParamType) {\n        assertPrivate(guard, _guard, \"ParamType\");\n        Object.defineProperty(this, internal, { value: ParamTypeInternal });\n\n        if (components) { components = Object.freeze(components.slice()); }\n\n        if (baseType === \"array\") {\n            if (arrayLength == null || arrayChildren == null) {\n                throw new Error(\"\");\n            }\n        } else if (arrayLength != null || arrayChildren != null) {\n            throw new Error(\"\");\n        }\n\n        if (baseType === \"tuple\") {\n            if (components == null) { throw new Error(\"\"); }\n        } else if (components != null) {\n            throw new Error(\"\");\n        }\n\n        defineProperties<ParamType>(this, {\n            name, type, baseType, indexed, components, arrayLength, arrayChildren\n        });\n    }\n\n    /**\n     *  Return a string representation of this type.\n     *\n     *  For example,\n     *\n     *  ``sighash\" => \"(uint256,address)\"``\n     *\n     *  ``\"minimal\" => \"tuple(uint256,address) indexed\"``\n     *\n     *  ``\"full\" => \"tuple(uint256 foo, address bar) indexed baz\"``\n     */\n    format(format?: FormatType): string {\n        if (format == null) { format = \"sighash\"; }\n        if (format === \"json\") {\n            const name = this.name || \"\";\n\n            if (this.isArray()) {\n                const result = JSON.parse(this.arrayChildren.format(\"json\"));\n                result.name = name;\n                result.type += `[${ (this.arrayLength < 0 ? \"\": String(this.arrayLength)) }]`;\n                return JSON.stringify(result);\n            }\n\n            const result: any = {\n                type: ((this.baseType === \"tuple\") ? \"tuple\": this.type),\n                name\n            };\n\n\n            if (typeof(this.indexed) === \"boolean\") { result.indexed = this.indexed; }\n            if (this.isTuple()) {\n                result.components = this.components.map((c) => JSON.parse(c.format(format)));\n            }\n            return JSON.stringify(result);\n        }\n\n        let result = \"\";\n\n        // Array\n        if (this.isArray()) {\n            result += this.arrayChildren.format(format);\n            result += `[${ (this.arrayLength < 0 ? \"\": String(this.arrayLength)) }]`;\n        } else {\n            if (this.isTuple()) {\n                result += \"(\" + this.components.map(\n                    (comp) => comp.format(format)\n                ).join((format === \"full\") ? \", \": \",\") + \")\";\n            } else {\n                result += this.type;\n            }\n        }\n\n        if (format !== \"sighash\") {\n            if (this.indexed === true) { result += \" indexed\"; }\n            if (format === \"full\" && this.name) {\n                result += \" \" + this.name;\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     *  Returns true if %%this%% is an Array type.\n     *\n     *  This provides a type gaurd ensuring that [[arrayChildren]]\n     *  and [[arrayLength]] are non-null.\n     */\n    isArray(): this is (ParamType & { arrayChildren: ParamType, arrayLength: number }) {\n        return (this.baseType === \"array\")\n    }\n\n    /**\n     *  Returns true if %%this%% is a Tuple type.\n     *\n     *  This provides a type gaurd ensuring that [[components]]\n     *  is non-null.\n     */\n    isTuple(): this is (ParamType & { components: ReadonlyArray<ParamType> }) {\n        return (this.baseType === \"tuple\");\n    }\n\n    /**\n     *  Returns true if %%this%% is an Indexable type.\n     *\n     *  This provides a type gaurd ensuring that [[indexed]]\n     *  is non-null.\n     */\n    isIndexable(): this is (ParamType & { indexed: boolean }) {\n        return (this.indexed != null);\n    }\n\n    /**\n     *  Walks the **ParamType** with %%value%%, calling %%process%%\n     *  on each type, destructing the %%value%% recursively.\n     */\n    walk(value: any, process: ParamTypeWalkFunc): any {\n        if (this.isArray()) {\n            if (!Array.isArray(value)) { throw new Error(\"invalid array value\"); }\n            if (this.arrayLength !== -1 && value.length !== this.arrayLength) {\n                throw new Error(\"array is wrong length\");\n            }\n            const _this = this;\n            return value.map((v) => (_this.arrayChildren.walk(v, process)));\n        }\n\n        if (this.isTuple()) {\n            if (!Array.isArray(value)) { throw new Error(\"invalid tuple value\"); }\n            if (value.length !== this.components.length) {\n                throw new Error(\"array is wrong length\");\n            }\n            const _this = this;\n            return value.map((v, i) => (_this.components[i].walk(v, process)));\n        }\n\n        return process(this.type, value);\n    }\n\n    #walkAsync(promises: Array<Promise<void>>, value: any, process: ParamTypeWalkAsyncFunc, setValue: (value: any) => void): void {\n\n        if (this.isArray()) {\n            if (!Array.isArray(value)) { throw new Error(\"invalid array value\"); }\n            if (this.arrayLength !== -1 && value.length !== this.arrayLength) {\n                throw new Error(\"array is wrong length\");\n            }\n            const childType = this.arrayChildren;\n\n            const result = value.slice();\n            result.forEach((value, index) => {\n                childType.#walkAsync(promises, value, process, (value: any) => {\n                    result[index] = value;\n                });\n            });\n            setValue(result);\n            return;\n        }\n\n        if (this.isTuple()) {\n            const components = this.components;\n\n            // Convert the object into an array\n            let result: Array<any>;\n            if (Array.isArray(value)) {\n                result = value.slice();\n\n            } else {\n                if (value == null || typeof(value) !== \"object\") {\n                    throw new Error(\"invalid tuple value\");\n                }\n\n                result = components.map((param) => {\n                    if (!param.name) { throw new Error(\"cannot use object value with unnamed components\"); }\n                    if (!(param.name in value)) {\n                        throw new Error(`missing value for component ${ param.name }`);\n                    }\n                    return value[param.name];\n                });\n            }\n\n            if (result.length !== this.components.length) {\n                throw new Error(\"array is wrong length\");\n            }\n\n            result.forEach((value, index) => {\n                components[index].#walkAsync(promises, value, process, (value: any) => {\n                    result[index] = value;\n                });\n            });\n            setValue(result);\n            return;\n        }\n\n        const result = process(this.type, value);\n        if (result.then) {\n            promises.push((async function() { setValue(await result); })());\n        } else {\n            setValue(result);\n        }\n    }\n\n    /**\n     *  Walks the **ParamType** with %%value%%, asynchronously calling\n     *  %%process%% on each type, destructing the %%value%% recursively.\n     *\n     *  This can be used to resolve ENS names by walking and resolving each\n     *  ``\"address\"`` type.\n     */\n    async walkAsync(value: any, process: ParamTypeWalkAsyncFunc): Promise<any> {\n        const promises: Array<Promise<void>> = [ ];\n        const result: [ any ] = [ value ];\n        this.#walkAsync(promises, value, process, (value: any) => {\n            result[0] = value;\n        });\n        if (promises.length) { await Promise.all(promises); }\n        return result[0];\n    }\n\n    /**\n     *  Creates a new **ParamType** for %%obj%%.\n     *\n     *  If %%allowIndexed%% then the ``indexed`` keyword is permitted,\n     *  otherwise the ``indexed`` keyword will throw an error.\n     */\n    static from(obj: any, allowIndexed?: boolean): ParamType {\n        if (ParamType.isParamType(obj)) { return obj; }\n\n        if (typeof(obj) === \"string\") {\n            try {\n                return ParamType.from(lex(obj), allowIndexed);\n            } catch (error) {\n                assertArgument(false, \"invalid param type\", \"obj\", obj);\n            }\n\n        } else if (obj instanceof TokenString) {\n            let type = \"\", baseType = \"\";\n            let comps: null | Array<ParamType> = null;\n\n            if (consumeKeywords(obj, setify([ \"tuple\" ])).has(\"tuple\") || obj.peekType(\"OPEN_PAREN\")) {\n                // Tuple\n                baseType = \"tuple\";\n                comps = obj.popParams().map((t) => ParamType.from(t));\n                type = `tuple(${ comps.map((c) => c.format()).join(\",\") })`;\n            } else {\n                // Normal\n                type = verifyBasicType(obj.popType(\"TYPE\"));\n                baseType = type;\n            }\n\n            // Check for Array\n            let arrayChildren: null | ParamType  = null;\n            let arrayLength: null | number = null;\n\n            while (obj.length && obj.peekType(\"BRACKET\")) {\n                const bracket = obj.pop(); //arrays[i];\n                arrayChildren = new ParamType(_guard, \"\", type, baseType, null, comps, arrayLength, arrayChildren);\n                arrayLength = bracket.value;\n                type += bracket.text;\n                baseType = \"array\";\n                comps = null;\n            }\n\n            let indexed: null | boolean = null;\n            const keywords = consumeKeywords(obj, KwModifiers);\n            if (keywords.has(\"indexed\")) {\n                if (!allowIndexed) { throw new Error(\"\"); }\n                indexed = true;\n            }\n\n            const name = (obj.peekType(\"ID\") ? obj.pop().text: \"\");\n\n            if (obj.length) { throw new Error(\"leftover tokens\"); }\n\n            return new ParamType(_guard, name, type, baseType, indexed, comps, arrayLength, arrayChildren);\n        }\n\n        const name = obj.name;\n        assertArgument(!name || (typeof(name) === \"string\" && name.match(regexId)),\n            \"invalid name\", \"obj.name\", name);\n\n        let indexed = obj.indexed;\n        if (indexed != null) {\n            assertArgument(allowIndexed, \"parameter cannot be indexed\", \"obj.indexed\", obj.indexed);\n            indexed = !!indexed;\n        }\n\n        let type = obj.type;\n\n        let arrayMatch = type.match(regexArrayType);\n        if (arrayMatch) {\n            const arrayLength = parseInt(arrayMatch[2] || \"-1\");\n            const arrayChildren = ParamType.from({\n                type: arrayMatch[1],\n                components: obj.components\n            });\n\n            return new ParamType(_guard, name || \"\", type, \"array\", indexed, null, arrayLength, arrayChildren);\n        }\n\n        if (type === \"tuple\" || type.startsWith(\"tuple(\"/* fix: ) */) || type.startsWith(\"(\" /* fix: ) */)) {\n            const comps = (obj.components != null) ? obj.components.map((c: any) => ParamType.from(c)): null;\n            const tuple = new ParamType(_guard, name || \"\", type, \"tuple\", indexed, comps, null, null);\n            // @TODO: use lexer to validate and normalize type\n            return tuple;\n        }\n\n        type = verifyBasicType(obj.type);\n\n        return new ParamType(_guard, name || \"\", type, type, indexed, null, null, null);\n    }\n\n    /**\n     *  Returns true if %%value%% is a **ParamType**.\n     */\n    static isParamType(value: any): value is ParamType {\n        return (value && value[internal] === ParamTypeInternal);\n    }\n}\n\n/**\n *  The type of a [[Fragment]].\n */\nexport type FragmentType = \"constructor\" | \"error\" | \"event\" | \"fallback\" | \"function\" | \"struct\";\n\n/**\n *  An abstract class to represent An individual fragment from a parse ABI.\n */\nexport abstract class Fragment {\n    /**\n     *  The type of the fragment.\n     */\n    readonly type!: FragmentType;\n\n    /**\n     *  The inputs for the fragment.\n     */\n    readonly inputs!: ReadonlyArray<ParamType>;\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, type: FragmentType, inputs: ReadonlyArray<ParamType>) {\n        assertPrivate(guard, _guard, \"Fragment\");\n        inputs = Object.freeze(inputs.slice());\n        defineProperties<Fragment>(this, { type, inputs });\n    }\n\n    /**\n     *  Returns a string representation of this fragment as %%format%%.\n     */\n    abstract format(format?: FormatType): string;\n\n    /**\n     *  Creates a new **Fragment** for %%obj%%, wich can be any supported\n     *  ABI frgament type.\n     */\n    static from(obj: any): Fragment {\n        if (typeof(obj) === \"string\") {\n\n            // Try parsing JSON...\n            try {\n                Fragment.from(JSON.parse(obj));\n            } catch (e) { }\n\n            // ...otherwise, use the human-readable lexer\n            return Fragment.from(lex(obj));\n        }\n\n        if (obj instanceof TokenString) {\n            // Human-readable ABI (already lexed)\n\n            const type = obj.peekKeyword(KwTypes);\n\n            switch (type) {\n                case \"constructor\": return ConstructorFragment.from(obj);\n                case \"error\": return ErrorFragment.from(obj);\n                case \"event\": return EventFragment.from(obj);\n                case \"fallback\": case \"receive\":\n                    return FallbackFragment.from(obj);\n                case \"function\": return FunctionFragment.from(obj);\n                case \"struct\": return StructFragment.from(obj);\n            }\n\n        } else if (typeof(obj) === \"object\") {\n            // JSON ABI\n\n            switch (obj.type) {\n                case \"constructor\": return ConstructorFragment.from(obj);\n                case \"error\": return ErrorFragment.from(obj);\n                case \"event\": return EventFragment.from(obj);\n                case \"fallback\": case \"receive\":\n                    return FallbackFragment.from(obj);\n                case \"function\": return FunctionFragment.from(obj);\n                case \"struct\": return StructFragment.from(obj);\n            }\n\n            assert(false, `unsupported type: ${ obj.type }`, \"UNSUPPORTED_OPERATION\", {\n                operation: \"Fragment.from\"\n            });\n        }\n\n        assertArgument(false, \"unsupported frgament object\", \"obj\", obj);\n    }\n\n    /**\n     *  Returns true if %%value%% is a [[ConstructorFragment]].\n     */\n    static isConstructor(value: any): value is ConstructorFragment {\n        return ConstructorFragment.isFragment(value);\n    }\n\n    /**\n     *  Returns true if %%value%% is an [[ErrorFragment]].\n     */\n    static isError(value: any): value is ErrorFragment {\n        return ErrorFragment.isFragment(value);\n    }\n\n    /**\n     *  Returns true if %%value%% is an [[EventFragment]].\n     */\n    static isEvent(value: any): value is EventFragment {\n        return EventFragment.isFragment(value);\n    }\n\n    /**\n     *  Returns true if %%value%% is a [[FunctionFragment]].\n     */\n    static isFunction(value: any): value is FunctionFragment {\n        return FunctionFragment.isFragment(value);\n    }\n\n    /**\n     *  Returns true if %%value%% is a [[StructFragment]].\n     */\n    static isStruct(value: any): value is StructFragment {\n        return StructFragment.isFragment(value);\n    }\n}\n\n/**\n *  An abstract class to represent An individual fragment\n *  which has a name from a parse ABI.\n */\nexport abstract class NamedFragment extends Fragment {\n    /**\n     *  The name of the fragment.\n     */\n    readonly name!: string;\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, type: FragmentType, name: string, inputs: ReadonlyArray<ParamType>) {\n        super(guard, type, inputs);\n        assertArgument(typeof(name) === \"string\" && name.match(regexId),\n            \"invalid identifier\", \"name\", name);\n        inputs = Object.freeze(inputs.slice());\n        defineProperties<NamedFragment>(this, { name });\n    }\n}\n\nfunction joinParams(format: FormatType, params: ReadonlyArray<ParamType>): string { \n    return \"(\" + params.map((p) => p.format(format)).join((format === \"full\") ? \", \": \",\") + \")\";\n}\n\n/**\n *  A Fragment which represents a //Custom Error//.\n */\nexport class ErrorFragment extends NamedFragment {\n    /**\n     *  @private\n     */\n    constructor(guard: any, name: string, inputs: ReadonlyArray<ParamType>) {\n        super(guard, \"error\", name, inputs);\n        Object.defineProperty(this, internal, { value: ErrorFragmentInternal });\n    }\n\n    /**\n     *  The Custom Error selector.\n     */\n    get selector(): string {\n        return id(this.format(\"sighash\")).substring(0, 10);\n    }\n\n    /**\n     *  Returns a string representation of this fragment as %%format%%.\n     */\n    format(format?: FormatType): string {\n        if (format == null) { format = \"sighash\"; }\n        if (format === \"json\") {\n            return JSON.stringify({\n                type: \"error\",\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n            });\n        }\n\n        const result: Array<string> = [ ];\n        if (format !== \"sighash\") { result.push(\"error\"); }\n        result.push(this.name + joinParams(format, this.inputs));\n        return result.join(\" \");\n    }\n\n    /**\n     *  Returns a new **ErrorFragment** for %%obj%%.\n     */\n    static from(obj: any): ErrorFragment {\n        if (ErrorFragment.isFragment(obj)) { return obj; }\n\n        if (typeof(obj) === \"string\") {\n            return ErrorFragment.from(lex(obj));\n\n        } else if (obj instanceof TokenString) {\n            const name = consumeName(\"error\", obj);\n            const inputs = consumeParams(obj);\n            consumeEoi(obj);\n\n            return new ErrorFragment(_guard, name, inputs);\n        }\n\n        return new ErrorFragment(_guard, obj.name,\n            obj.inputs ? obj.inputs.map(ParamType.from): [ ]);\n    }\n\n    /**\n     *  Returns ``true`` and provides a type guard if %%value%% is an\n     *  **ErrorFragment**.\n     */\n    static isFragment(value: any): value is ErrorFragment {\n        return (value && value[internal] === ErrorFragmentInternal);\n    }\n}\n\n/**\n *  A Fragment which represents an Event.\n */\nexport class EventFragment extends NamedFragment {\n    /**\n     *  Whether this event is anonymous.\n     */\n    readonly anonymous!: boolean;\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, name: string, inputs: ReadonlyArray<ParamType>, anonymous: boolean) {\n        super(guard, \"event\", name, inputs);\n        Object.defineProperty(this, internal, { value: EventFragmentInternal });\n        defineProperties<EventFragment>(this, { anonymous });\n    }\n\n    /**\n     *  The Event topic hash.\n     */\n    get topicHash(): string {\n        return id(this.format(\"sighash\"));\n    }\n\n    /**\n     *  Returns a string representation of this event as %%format%%.\n     */\n    format(format?: FormatType): string {\n        if (format == null) { format = \"sighash\"; }\n        if (format === \"json\") {\n            return JSON.stringify({\n                type: \"event\",\n                anonymous: this.anonymous,\n                name: this.name,\n                inputs: this.inputs.map((i) => JSON.parse(i.format(format)))\n            });\n        }\n\n        const result: Array<string> = [ ];\n        if (format !== \"sighash\") { result.push(\"event\"); }\n        result.push(this.name + joinParams(format, this.inputs));\n        if (format !== \"sighash\" && this.anonymous) { result.push(\"anonymous\"); }\n        return result.join(\" \");\n    }\n\n    /**\n     *  Return the topic hash for an event with %%name%% and %%params%%.\n     */\n    static getTopicHash(name: string, params?: Array<any>): string {\n        params = (params || []).map((p) => ParamType.from(p));\n        const fragment = new EventFragment(_guard, name, params, false);\n        return fragment.topicHash;\n    }\n\n    /**\n     *  Returns a new **EventFragment** for %%obj%%.\n     */\n    static from(obj: any): EventFragment {\n        if (EventFragment.isFragment(obj)) { return obj; }\n\n        if (typeof(obj) === \"string\") {\n            try {\n                return EventFragment.from(lex(obj));\n            } catch (error) {\n                assertArgument(false, \"invalid event fragment\", \"obj\", obj);\n            }\n\n        } else if (obj instanceof TokenString) {\n            const name = consumeName(\"event\", obj);\n            const inputs = consumeParams(obj, true);\n            const anonymous = !!consumeKeywords(obj, setify([ \"anonymous\" ])).has(\"anonymous\");\n            consumeEoi(obj);\n\n            return new EventFragment(_guard, name, inputs, anonymous);\n        }\n\n        return new EventFragment(_guard, obj.name,\n            obj.inputs ? obj.inputs.map((p: any) => ParamType.from(p, true)): [ ], !!obj.anonymous);\n    }\n\n    /**\n     *  Returns ``true`` and provides a type guard if %%value%% is an\n     *  **EventFragment**.\n     */\n    static isFragment(value: any): value is EventFragment {\n        return (value && value[internal] === EventFragmentInternal);\n    }\n}\n\n/**\n *  A Fragment which represents a constructor.\n */\nexport class ConstructorFragment extends Fragment {\n\n    /**\n     *  Whether the constructor can receive an endowment.\n     */\n    readonly payable!: boolean;\n\n    /**\n     *  The recommended gas limit for deployment or ``null``.\n     */\n    readonly gas!: null | bigint;\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, type: FragmentType, inputs: ReadonlyArray<ParamType>, payable: boolean, gas: null | bigint) {\n        super(guard, type, inputs);\n        Object.defineProperty(this, internal, { value: ConstructorFragmentInternal });\n        defineProperties<ConstructorFragment>(this, { payable, gas });\n    }\n\n    /**\n     *  Returns a string representation of this constructor as %%format%%.\n     */\n    format(format?: FormatType): string {\n        assert(format != null && format !== \"sighash\", \"cannot format a constructor for sighash\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"format(sighash)\" });\n\n        if (format === \"json\") {\n            return JSON.stringify({\n                type: \"constructor\",\n                stateMutability: (this.payable ? \"payable\": \"undefined\"),\n                payable: this.payable,\n                gas: ((this.gas != null) ? this.gas: undefined),\n                inputs: this.inputs.map((i) => JSON.parse(i.format(format)))\n            });\n        }\n\n        const result = [ `constructor${ joinParams(format, this.inputs) }` ];\n        if (this.payable) { result.push(\"payable\"); }\n        if (this.gas != null) { result.push(`@${ this.gas.toString() }`); }\n        return result.join(\" \");\n    }\n\n    /**\n     *  Returns a new **ConstructorFragment** for %%obj%%.\n     */\n    static from(obj: any): ConstructorFragment {\n        if (ConstructorFragment.isFragment(obj)) { return obj; }\n\n        if (typeof(obj) === \"string\") {\n            try {\n                return ConstructorFragment.from(lex(obj));\n            } catch (error) {\n                assertArgument(false, \"invalid constuctor fragment\", \"obj\", obj);\n            }\n\n        } else if (obj instanceof TokenString) {\n            consumeKeywords(obj, setify([ \"constructor\" ]));\n            const inputs = consumeParams(obj);\n            const payable = !!consumeKeywords(obj, KwVisibDeploy).has(\"payable\");\n            const gas = consumeGas(obj);\n            consumeEoi(obj);\n\n            return new ConstructorFragment(_guard, \"constructor\", inputs, payable, gas);\n        }\n\n        return new ConstructorFragment(_guard, \"constructor\",\n            obj.inputs ? obj.inputs.map(ParamType.from): [ ],\n            !!obj.payable, (obj.gas != null) ? obj.gas: null);\n    }\n\n    /**\n     *  Returns ``true`` and provides a type guard if %%value%% is a\n     *  **ConstructorFragment**.\n     */\n    static isFragment(value: any): value is ConstructorFragment {\n        return (value && value[internal] === ConstructorFragmentInternal);\n    }\n}\n\n/**\n *  A Fragment which represents a method.\n */\nexport class FallbackFragment extends Fragment {\n\n    /**\n     *  If the function can be sent value during invocation.\n     */\n    readonly payable!: boolean;\n\n    constructor(guard: any, inputs: ReadonlyArray<ParamType>, payable: boolean) {\n        super(guard, \"fallback\", inputs);\n        Object.defineProperty(this, internal, { value: FallbackFragmentInternal });\n        defineProperties<FallbackFragment>(this, { payable });\n    }\n\n    /**\n     *  Returns a string representation of this fallback as %%format%%.\n     */\n    format(format?: FormatType): string {\n        const type = ((this.inputs.length === 0) ? \"receive\": \"fallback\");\n\n        if (format === \"json\") {\n            const stateMutability = (this.payable ? \"payable\": \"nonpayable\");\n            return JSON.stringify({ type, stateMutability });\n        }\n\n        return `${ type }()${ this.payable ? \" payable\": \"\" }`;\n    }\n\n    /**\n     *  Returns a new **FallbackFragment** for %%obj%%.\n     */\n    static from(obj: any): FallbackFragment {\n        if (FallbackFragment.isFragment(obj)) { return obj; }\n\n        if (typeof(obj) === \"string\") {\n            try {\n                return FallbackFragment.from(lex(obj));\n            } catch (error) {\n                assertArgument(false, \"invalid fallback fragment\", \"obj\", obj);\n            }\n\n        } else if (obj instanceof TokenString) {\n            const errorObj = obj.toString();\n\n            const topIsValid = obj.peekKeyword(setify([ \"fallback\", \"receive\" ]));\n            assertArgument(topIsValid, \"type must be fallback or receive\", \"obj\", errorObj);\n\n            const type = obj.popKeyword(setify([ \"fallback\", \"receive\" ]));\n\n            // receive()\n            if (type === \"receive\") {\n                const inputs = consumeParams(obj);\n                assertArgument(inputs.length === 0, `receive cannot have arguments`, \"obj.inputs\", inputs);\n                consumeKeywords(obj, setify([ \"payable\" ]));\n                consumeEoi(obj);\n                return new FallbackFragment(_guard, [ ], true);\n            }\n\n            // fallback() [payable]\n            // fallback(bytes) [payable] returns (bytes)\n            let inputs = consumeParams(obj);\n            if (inputs.length) {\n                assertArgument(inputs.length === 1 && inputs[0].type === \"bytes\",\n                    \"invalid fallback inputs\", \"obj.inputs\",\n                    inputs.map((i) => i.format(\"minimal\")).join(\", \"));\n            } else {\n                inputs = [ ParamType.from(\"bytes\") ];\n            }\n\n            const mutability = consumeMutability(obj);\n            assertArgument(mutability === \"nonpayable\" || mutability === \"payable\", \"fallback cannot be constants\", \"obj.stateMutability\", mutability);\n\n            if (consumeKeywords(obj, setify([ \"returns\" ])).has(\"returns\")) {\n                const outputs = consumeParams(obj);\n                assertArgument(outputs.length === 1 && outputs[0].type === \"bytes\",\n                    \"invalid fallback outputs\", \"obj.outputs\",\n                    outputs.map((i) => i.format(\"minimal\")).join(\", \"));\n            }\n\n            consumeEoi(obj);\n\n            return new FallbackFragment(_guard, inputs, mutability === \"payable\");\n        }\n\n        if (obj.type === \"receive\") {\n            return new FallbackFragment(_guard, [ ], true);\n        }\n\n        if (obj.type === \"fallback\") {\n            const inputs = [ ParamType.from(\"bytes\") ];\n            const payable = (obj.stateMutability === \"payable\");\n            return new FallbackFragment(_guard, inputs, payable);\n        }\n\n        assertArgument(false, \"invalid fallback description\", \"obj\", obj);\n    }\n\n    /**\n     *  Returns ``true`` and provides a type guard if %%value%% is a\n     *  **FallbackFragment**.\n     */\n    static isFragment(value: any): value is FallbackFragment {\n        return (value && value[internal] === FallbackFragmentInternal);\n    }\n}\n\n\n/**\n *  A Fragment which represents a method.\n */\nexport class FunctionFragment extends NamedFragment {\n    /**\n     *  If the function is constant (e.g. ``pure`` or ``view`` functions).\n     */\n    readonly constant!: boolean;\n\n    /**\n     *  The returned types for the result of calling this function.\n     */\n    readonly outputs!: ReadonlyArray<ParamType>;\n\n    /**\n     *  The state mutability (e.g. ``payable``, ``nonpayable``, ``view``\n     *  or ``pure``)\n     */\n    readonly stateMutability!: \"payable\" | \"nonpayable\" | \"view\" | \"pure\";\n\n    /**\n     *  If the function can be sent value during invocation.\n     */\n    readonly payable!: boolean;\n\n    /**\n     *  The recommended gas limit to send when calling this function.\n     */\n    readonly gas!: null | bigint;\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, name: string, stateMutability: \"payable\" | \"nonpayable\" | \"view\" | \"pure\", inputs: ReadonlyArray<ParamType>, outputs: ReadonlyArray<ParamType>, gas: null | bigint) {\n        super(guard, \"function\", name, inputs);\n        Object.defineProperty(this, internal, { value: FunctionFragmentInternal });\n        outputs = Object.freeze(outputs.slice());\n        const constant = (stateMutability === \"view\" || stateMutability === \"pure\");\n        const payable = (stateMutability === \"payable\");\n        defineProperties<FunctionFragment>(this, { constant, gas, outputs, payable, stateMutability });\n    }\n\n    /**\n     *  The Function selector.\n     */\n    get selector(): string {\n        return id(this.format(\"sighash\")).substring(0, 10);\n    }\n\n    /**\n     *  Returns a string representation of this function as %%format%%.\n     */\n    format(format?: FormatType): string {\n        if (format == null) { format = \"sighash\"; }\n        if (format === \"json\") {\n            return JSON.stringify({\n                type: \"function\",\n                name: this.name,\n                constant: this.constant,\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability: undefined),\n                payable: this.payable,\n                gas: ((this.gas != null) ? this.gas: undefined),\n                inputs: this.inputs.map((i) => JSON.parse(i.format(format))),\n                outputs: this.outputs.map((o) => JSON.parse(o.format(format))),\n            });\n        }\n\n        const result: Array<string> = [];\n\n        if (format !== \"sighash\") { result.push(\"function\"); }\n\n        result.push(this.name + joinParams(format, this.inputs));\n\n        if (format !== \"sighash\") {\n            if (this.stateMutability !== \"nonpayable\") {\n                result.push(this.stateMutability);\n            }\n\n            if (this.outputs && this.outputs.length) {\n                result.push(\"returns\");\n                result.push(joinParams(format, this.outputs));\n            }\n\n            if (this.gas != null) { result.push(`@${ this.gas.toString() }`); }\n        }\n        return result.join(\" \");\n    }\n\n    /**\n     *  Return the selector for a function with %%name%% and %%params%%.\n     */\n    static getSelector(name: string, params?: Array<any>): string {\n        params = (params || []).map((p) => ParamType.from(p));\n        const fragment = new FunctionFragment(_guard, name, \"view\", params, [ ], null);\n        return fragment.selector;\n    }\n\n    /**\n     *  Returns a new **FunctionFragment** for %%obj%%.\n     */\n    static from(obj: any): FunctionFragment {\n        if (FunctionFragment.isFragment(obj)) { return obj; }\n\n        if (typeof(obj) === \"string\") {\n            try {\n                return FunctionFragment.from(lex(obj));\n            } catch (error) {\n                assertArgument(false, \"invalid function fragment\", \"obj\", obj);\n            }\n\n        } else if (obj instanceof TokenString) {\n            const name = consumeName(\"function\", obj);\n            const inputs = consumeParams(obj);\n            const mutability = consumeMutability(obj);\n\n            let outputs: Array<ParamType> = [ ];\n            if (consumeKeywords(obj, setify([ \"returns\" ])).has(\"returns\")) {\n                outputs = consumeParams(obj);\n            }\n\n            const gas = consumeGas(obj);\n\n            consumeEoi(obj);\n\n            return new FunctionFragment(_guard, name, mutability, inputs, outputs, gas);\n        }\n\n        let stateMutability = obj.stateMutability;\n\n        // Use legacy Solidity ABI logic if stateMutability is missing\n        if (stateMutability == null) {\n            stateMutability = \"payable\";\n\n            if (typeof(obj.constant) === \"boolean\") {\n                stateMutability = \"view\";\n                if (!obj.constant) {\n                    stateMutability = \"payable\"\n                    if (typeof(obj.payable) === \"boolean\" && !obj.payable) {\n                        stateMutability = \"nonpayable\";\n                    }\n                }\n            } else if (typeof(obj.payable) === \"boolean\" && !obj.payable) {\n                stateMutability = \"nonpayable\";\n            }\n        }\n\n        // @TODO: verifyState for stateMutability (e.g. throw if\n        //        payable: false but stateMutability is \"nonpayable\")\n\n        return new FunctionFragment(_guard, obj.name, stateMutability,\n             obj.inputs ? obj.inputs.map(ParamType.from): [ ],\n             obj.outputs ? obj.outputs.map(ParamType.from): [ ],\n             (obj.gas != null) ? obj.gas: null);\n    }\n\n    /**\n     *  Returns ``true`` and provides a type guard if %%value%% is a\n     *  **FunctionFragment**.\n     */\n    static isFragment(value: any): value is FunctionFragment {\n        return (value && value[internal] === FunctionFragmentInternal);\n    }\n}\n\n/**\n *  A Fragment which represents a structure.\n */\nexport class StructFragment extends NamedFragment {\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, name: string, inputs: ReadonlyArray<ParamType>) {\n        super(guard, \"struct\", name, inputs);\n        Object.defineProperty(this, internal, { value: StructFragmentInternal });\n    }\n\n    /**\n     *  Returns a string representation of this struct as %%format%%.\n     */\n    format(): string {\n        throw new Error(\"@TODO\");\n    }\n\n    /**\n     *  Returns a new **StructFragment** for %%obj%%.\n     */\n    static from(obj: any): StructFragment {\n        if (typeof(obj) === \"string\") {\n            try {\n                return StructFragment.from(lex(obj));\n            } catch (error) {\n                assertArgument(false, \"invalid struct fragment\", \"obj\", obj);\n            }\n\n        } else if (obj instanceof TokenString) {\n            const name = consumeName(\"struct\", obj);\n            const inputs = consumeParams(obj);\n            consumeEoi(obj);\n            return new StructFragment(_guard, name, inputs);\n        }\n\n        return new StructFragment(_guard, obj.name, obj.inputs ? obj.inputs.map(ParamType.from): [ ]);\n    }\n\n// @TODO: fix this return type\n    /**\n     *  Returns ``true`` and provides a type guard if %%value%% is a\n     *  **StructFragment**.\n     */\n    static isFragment(value: any): value is FunctionFragment {\n        return (value && value[internal] === StructFragmentInternal);\n    }\n}\n\n", "/**\n *  Utilities for common tasks involving hashing. Also see\n *  [cryptographic hashing](about-crypto-hashing).\n *\n *  @_section: api/hashing:Hashing Utilities  [about-hashing]\n */\n\nexport { hashAuthorization, verifyAuthorization } from \"./authorization.js\";\nexport { id } from \"./id.js\"\nexport { ensNormalize, isValidName, namehash, dnsEncode } from \"./namehash.js\";\nexport { hashMessage, verifyMessage } from \"./message.js\";\nexport {\n    solidityPacked, solidityPackedKeccak256, solidityPackedSha256\n} from \"./solidity.js\";\nexport { TypedDataEncoder, verifyTypedData } from \"./typed-data.js\";\n\nexport type { AuthorizationRequest } from \"./authorization.js\";\nexport type { TypedDataDomain, TypedDataField } from \"./typed-data.js\";\n", "import { getAddress } from \"../address/index.js\";\nimport { keccak256 } from \"../crypto/index.js\";\nimport { recoverAddress } from \"../transaction/index.js\";\nimport {\n    assertArgument, concat, encodeRlp, toBeArray\n} from \"../utils/index.js\";\n\nimport type { Addressable } from \"../address/index.js\";\nimport type { SignatureLike } from \"../crypto/index.js\";\nimport type { BigNumberish, Numeric } from \"../utils/index.js\";\n\nexport interface AuthorizationRequest {\n    address: string | Addressable;\n    nonce?: Numeric;\n    chainId?: BigNumberish;\n}\n\n/**\n *  Computes the [[link-eip-7702]] authorization digest to sign.\n */\nexport function hashAuthorization(auth: AuthorizationRequest): string {\n    assertArgument(typeof(auth.address) === \"string\", \"invalid address for hashAuthorization\", \"auth.address\", auth);\n    return keccak256(concat([\n        \"0x05\", encodeRlp([\n            (auth.chainId != null) ? toBeArray(auth.chainId): \"0x\",\n            getAddress(auth.address),\n            (auth.nonce != null) ? toBeArray(auth.nonce): \"0x\",\n        ])\n    ]));\n}\n\n/**\n *  Return the address of the private key that produced\n *  the signature %%sig%% during signing for %%message%%.\n */\nexport function verifyAuthorization(auth: AuthorizationRequest, sig: SignatureLike): string {\n    return recoverAddress(hashAuthorization(auth), sig);\n}\n", "/**\n *  Each state-changing operation on Ethereum requires a transaction.\n *\n *  @_section api/transaction:Transactions  [about-transactions]\n */\n\nnull;\n\nimport type { BigNumberish } from \"../utils/maths.js\";\nimport type { Signature, SignatureLike } from \"../crypto/index.js\";\n\n/**\n *  A single [[AccessList]] entry of storage keys (slots) for an address.\n */\nexport type AccessListEntry = { address: string, storageKeys: Array<string> };\n\n/**\n *  An ordered collection of [[AccessList]] entries.\n */\nexport type AccessList = Array<AccessListEntry>;\n\n/**\n *  Any ethers-supported access list structure.\n */\nexport type AccessListish = AccessList |\n                            Array<[ string, Array<string> ]> |\n                            Record<string, Array<string>>;\n\n// Keep here?\nexport interface Authorization {\n    address: string;\n    nonce: bigint;\n    chainId: bigint;\n    signature: Signature;\n}\n\nexport type AuthorizationLike = {\n    address: string;\n    nonce: BigNumberish;\n    chainId: BigNumberish;\n    signature: SignatureLike\n};\n\nexport { accessListify } from \"./accesslist.js\";\nexport { authorizationify } from \"./authorization.js\";\nexport { computeAddress, recoverAddress } from \"./address.js\";\nexport { Transaction } from \"./transaction.js\";\n\nexport type {\n    Blob, BlobLike, KzgLibrary, KzgLibraryLike, TransactionLike\n} from \"./transaction.js\";\n", "import { getAddress } from \"../address/index.js\";\nimport { assertArgument, isHexString } from \"../utils/index.js\";\n\nimport type { AccessList, AccessListish } from \"./index.js\";\n\n\nfunction accessSetify(addr: string, storageKeys: Array<string>): { address: string,storageKeys: Array<string> } {\n    return {\n        address: getAddress(addr),\n        storageKeys: storageKeys.map((storageKey, index) => {\n            assertArgument(isHexString(storageKey, 32), \"invalid slot\", `storageKeys[${ index }]`, storageKey);\n            return storageKey.toLowerCase();\n        })\n    };\n}\n\n/**\n *  Returns a [[AccessList]] from any ethers-supported access-list structure.\n */\nexport function accessListify(value: AccessListish): AccessList {\n    if (Array.isArray(value)) {\n        return (<Array<[ string, Array<string>] | { address: string, storageKeys: Array<string>}>>value).map((set, index) => {\n            if (Array.isArray(set)) {\n                assertArgument(set.length === 2, \"invalid slot set\", `value[${ index }]`, set);\n                return accessSetify(set[0], set[1])\n            }\n            assertArgument(set != null && typeof(set) === \"object\", \"invalid address-slot set\", \"value\", value);\n            return accessSetify(set.address, set.storageKeys);\n        });\n    }\n\n    assertArgument(value != null && typeof(value) === \"object\", \"invalid access list\", \"value\", value);\n\n    const result: Array<{ address: string, storageKeys: Array<string> }> = Object.keys(value).map((addr) => {\n        const storageKeys: Record<string, true> = value[addr].reduce((accum, storageKey) => {\n            accum[storageKey] = true;\n            return accum;\n        }, <Record<string, true>>{ });\n        return accessSetify(addr, Object.keys(storageKeys).sort())\n    });\n    result.sort((a, b) => (a.address.localeCompare(b.address)));\n    return result;\n}\n", "import { getAddress } from \"../address/index.js\";\nimport { Signature } from \"../crypto/index.js\";\nimport { getBigInt } from \"../utils/index.js\";\n\nimport type { Authorization, AuthorizationLike } from \"./index.js\";\n\nexport function authorizationify(auth: AuthorizationLike): Authorization {\n    return {\n        address: getAddress(auth.address),\n        nonce: getBigInt((auth.nonce != null) ? auth.nonce: 0),\n        chainId: getBigInt((auth.chainId != null)? auth.chainId: 0),\n        signature: Signature.from(auth.signature)\n    };\n}\n", "import { getAddress } from \"../address/index.js\";\nimport { keccak256, SigningKey } from \"../crypto/index.js\";\n\nimport type { SignatureLike } from \"../crypto/index.js\";\nimport type { BytesLike } from \"../utils/index.js\";\n\n/**\n *  Returns the address for the %%key%%.\n *\n *  The key may be any standard form of public key or a private key.\n */\nexport function computeAddress(key: string | SigningKey): string {\n    let pubkey: string;\n    if (typeof(key) === \"string\") {\n        pubkey = SigningKey.computePublicKey(key, false);\n    } else {\n        pubkey = key.publicKey;\n    }\n    return getAddress(keccak256(\"0x\" + pubkey.substring(4)).substring(26));\n}\n\n/**\n *  Returns the recovered address for the private key that was\n *  used to sign %%digest%% that resulted in %%signature%%.\n */\nexport function recoverAddress(digest: BytesLike, signature: SignatureLike): string {\n    return computeAddress(SigningKey.recoverPublicKey(digest, signature));\n}\n", "\nimport { getAddress } from \"../address/index.js\";\nimport { ZeroAddress } from \"../constants/addresses.js\";\nimport {\n    keccak256, sha256, Signature, SigningKey\n} from \"../crypto/index.js\";\nimport {\n    concat, decodeRlp, encodeRlp, getBytes, getBigInt, getNumber, hexlify,\n    assert, assertArgument, isBytesLike, isHexString, toBeArray, zeroPadValue\n} from \"../utils/index.js\";\n\nimport { accessListify } from \"./accesslist.js\";\nimport { authorizationify } from \"./authorization.js\";\nimport { recoverAddress } from \"./address.js\";\n\nimport type { BigNumberish, BytesLike } from \"../utils/index.js\";\nimport type { SignatureLike } from \"../crypto/index.js\";\n\nimport type {\n    AccessList, AccessListish, Authorization, AuthorizationLike\n} from \"./index.js\";\n\n\nconst BN_0 = BigInt(0);\nconst BN_2 = BigInt(2);\nconst BN_27 = BigInt(27)\nconst BN_28 = BigInt(28)\nconst BN_35 = BigInt(35);\nconst BN_MAX_UINT = BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n\nconst BLOB_SIZE = 4096 * 32;\n\n// The BLS Modulo; each field within a BLOb must be less than this\n//const BLOB_BLS_MODULO = BigInt(\"0x73eda753299d7d483339d80809a1d80553bda402fffe5bfeffffffff00000001\");\n\n/**\n *  A **TransactionLike** is an object which is appropriate as a loose\n *  input for many operations which will populate missing properties of\n *  a transaction.\n */\nexport interface TransactionLike<A = string> {\n    /**\n     *  The type.\n     */\n    type?: null | number;\n\n    /**\n     *  The recipient address or ``null`` for an ``init`` transaction.\n     */\n    to?: null | A;\n\n    /**\n     *  The sender.\n     */\n    from?: null | A;\n\n    /**\n     *  The nonce.\n     */\n    nonce?: null | number;\n\n    /**\n     *  The maximum amount of gas that can be used.\n     */\n    gasLimit?: null | BigNumberish;\n\n    /**\n     *  The gas price for legacy and berlin transactions.\n     */\n    gasPrice?: null | BigNumberish;\n\n    /**\n     *  The maximum priority fee per gas for london transactions.\n     */\n    maxPriorityFeePerGas?: null | BigNumberish;\n\n    /**\n     *  The maximum total fee per gas for london transactions.\n     */\n    maxFeePerGas?: null | BigNumberish;\n\n    /**\n     *  The data.\n     */\n    data?: null | string;\n\n    /**\n     *  The value (in wei) to send.\n     */\n    value?: null | BigNumberish;\n\n    /**\n     *  The chain ID the transaction is valid on.\n     */\n    chainId?: null | BigNumberish;\n\n    /**\n     *  The transaction hash.\n     */\n    hash?: null | string;\n\n    /**\n     *  The signature provided by the sender.\n     */\n    signature?: null | SignatureLike;\n\n    /**\n     *  The access list for berlin and london transactions.\n     */\n    accessList?: null | AccessListish;\n\n    /**\n     *  The maximum fee per blob gas (see [[link-eip-4844]]).\n     */\n    maxFeePerBlobGas?: null | BigNumberish;\n\n    /**\n     *  The versioned hashes (see [[link-eip-4844]]).\n     */\n    blobVersionedHashes?: null | Array<string>;\n\n    /**\n     *  The blobs (if any) attached to this transaction (see [[link-eip-4844]]).\n     */\n    blobs?: null | Array<BlobLike>\n\n    /**\n     *  An external library for computing the KZG commitments and\n     *  proofs necessary for EIP-4844 transactions (see [[link-eip-4844]]).\n     *\n     *  This is generally ``null``, unless you are creating BLOb\n     *  transactions.\n     */\n    kzg?: null | KzgLibraryLike;\n\n    /**\n     *  The [[link-eip-7702]] authorizations (if any).\n     */\n    authorizationList?: null | Array<Authorization>;\n}\n\n/**\n *  A full-valid BLOb object for [[link-eip-4844]] transactions.\n *\n *  The commitment and proof should have been computed using a\n *  KZG library.\n */\nexport interface Blob {\n    data: string;\n    proof: string;\n    commitment: string;\n}\n\n/**\n *  A BLOb object that can be passed for [[link-eip-4844]]\n *  transactions.\n *\n *  It may have had its commitment and proof already provided\n *  or rely on an attached [[KzgLibrary]] to compute them.\n */\nexport type BlobLike = BytesLike | {\n    data: BytesLike;\n    proof: BytesLike;\n    commitment: BytesLike;\n};\n\n/**\n *  A KZG Library with the necessary functions to compute\n *  BLOb commitments and proofs.\n */\nexport interface KzgLibrary {\n    blobToKzgCommitment: (blob: Uint8Array) => Uint8Array;\n    computeBlobKzgProof: (blob: Uint8Array, commitment: Uint8Array) => Uint8Array;\n}\n\n/**\n *  A KZG Library with any of the various API configurations.\n *  As the library is still experimental and the API is not\n *  stable, depending on the version used the method names and\n *  signatures are still in flux.\n *\n *  This allows any of the versions to be passed into Transaction\n *  while providing a stable external API.\n */\nexport type KzgLibraryLike  = KzgLibrary | {\n    // kzg-wasm >= 0.5.0\n    blobToKZGCommitment: (blob: string) => string;\n    computeBlobKZGProof: (blob: string, commitment: string) => string;\n} | {\n    // micro-ecc-signer\n    blobToKzgCommitment: (blob: string) => string | Uint8Array;\n    computeBlobProof: (blob: string, commitment: string) => string | Uint8Array;\n};\n\nfunction getKzgLibrary(kzg: KzgLibraryLike): KzgLibrary {\n\n    const blobToKzgCommitment = (blob: Uint8Array) => {\n\n        if (\"computeBlobProof\" in kzg) {\n            // micro-ecc-signer; check for computeBlobProof since this API\n            // expects a string while the kzg-wasm below expects a Unit8Array\n\n            if (\"blobToKzgCommitment\" in kzg && typeof(kzg.blobToKzgCommitment) === \"function\") {\n                return getBytes(kzg.blobToKzgCommitment(hexlify(blob)))\n            }\n\n        } else if (\"blobToKzgCommitment\" in kzg && typeof(kzg.blobToKzgCommitment) === \"function\") {\n            // kzg-wasm <0.5.0; blobToKzgCommitment(Uint8Array) => Uint8Array\n\n            return getBytes(kzg.blobToKzgCommitment(blob));\n        }\n\n        // kzg-wasm >= 0.5.0; blobToKZGCommitment(string) => string\n        if (\"blobToKZGCommitment\" in kzg && typeof(kzg.blobToKZGCommitment) === \"function\") {\n            return getBytes(kzg.blobToKZGCommitment(hexlify(blob)));\n        }\n\n        assertArgument(false, \"unsupported KZG library\", \"kzg\", kzg);\n    };\n\n    const computeBlobKzgProof = (blob: Uint8Array, commitment: Uint8Array) => {\n\n        // micro-ecc-signer\n        if (\"computeBlobProof\" in kzg && typeof(kzg.computeBlobProof) === \"function\") {\n            return getBytes(kzg.computeBlobProof(hexlify(blob), hexlify(commitment)))\n        }\n\n        // kzg-wasm <0.5.0; computeBlobKzgProof(Uint8Array, Uint8Array) => Uint8Array\n        if (\"computeBlobKzgProof\" in kzg && typeof(kzg.computeBlobKzgProof) === \"function\") {\n            return kzg.computeBlobKzgProof(blob, commitment);\n        }\n\n        // kzg-wasm >= 0.5.0; computeBlobKZGProof(string, string) => string\n        if (\"computeBlobKZGProof\" in kzg && typeof(kzg.computeBlobKZGProof) === \"function\") {\n            return getBytes(kzg.computeBlobKZGProof(hexlify(blob), hexlify(commitment)));\n        }\n\n        assertArgument(false, \"unsupported KZG library\", \"kzg\", kzg);\n    };\n\n    return { blobToKzgCommitment, computeBlobKzgProof };\n}\n\nfunction getVersionedHash(version: number, hash: BytesLike): string {\n    let versioned = version.toString(16);\n    while (versioned.length < 2) { versioned = \"0\" + versioned; }\n    versioned += sha256(hash).substring(4);\n    return \"0x\" + versioned;\n}\n\nfunction handleAddress(value: string): null | string {\n    if (value === \"0x\") { return null; }\n    return getAddress(value);\n}\n\nfunction handleAccessList(value: any, param: string): AccessList {\n    try {\n        return accessListify(value);\n    } catch (error: any) {\n        assertArgument(false, error.message, param, value);\n    }\n}\n\nfunction handleAuthorizationList(value: any, param: string): Array<Authorization> {\n    try {\n        if (!Array.isArray(value)) { throw new Error(\"authorizationList: invalid array\"); }\n        const result: Array<Authorization> = [ ];\n        for (let i = 0; i < value.length; i++) {\n            const auth: Array<string> = value[i];\n            if (!Array.isArray(auth)) { throw new Error(`authorization[${ i }]: invalid array`); }\n            if (auth.length !== 6) { throw new Error(`authorization[${ i }]: wrong length`); }\n            if (!auth[1]) { throw new Error(`authorization[${ i }]: null address`); }\n            result.push({\n                address: <string>handleAddress(auth[1]),\n                nonce: handleUint(auth[2], \"nonce\"),\n                chainId: handleUint(auth[0], \"chainId\"),\n                signature: Signature.from({\n                    yParity: <0 | 1>handleNumber(auth[3], \"yParity\"),\n                    r: zeroPadValue(auth[4], 32),\n                    s: zeroPadValue(auth[5], 32)\n                })\n            });\n        }\n        return result;\n    } catch (error: any) {\n        assertArgument(false, error.message, param, value);\n    }\n}\n\nfunction handleNumber(_value: string, param: string): number {\n    if (_value === \"0x\") { return 0; }\n    return getNumber(_value, param);\n}\n\nfunction handleUint(_value: string, param: string): bigint {\n    if (_value === \"0x\") { return BN_0; }\n    const value = getBigInt(_value, param);\n    assertArgument(value <= BN_MAX_UINT, \"value exceeds uint size\", param, value);\n    return value;\n}\n\nfunction formatNumber(_value: BigNumberish, name: string): Uint8Array {\n    const value = getBigInt(_value, \"value\");\n    const result = toBeArray(value);\n    assertArgument(result.length <= 32, `value too large`, `tx.${ name }`, value);\n    return result;\n}\n\nfunction formatAccessList(value: AccessListish): Array<[ string, Array<string> ]> {\n    return accessListify(value).map((set) => [ set.address, set.storageKeys ]);\n}\n\nfunction formatAuthorizationList(value: Array<Authorization>): Array<Array<string | Uint8Array>> {\n    return value.map((a) => {\n        return [\n            formatNumber(a.chainId, \"chainId\"),\n            a.address,\n            formatNumber(a.nonce, \"nonce\"),\n            formatNumber(a.signature.yParity, \"yParity\"),\n            toBeArray(a.signature.r),\n            toBeArray(a.signature.s)\n        ];\n    });\n}\n\nfunction formatHashes(value: Array<string>, param: string): Array<string> {\n    assertArgument(Array.isArray(value), `invalid ${ param }`, \"value\", value);\n    for (let i = 0; i < value.length; i++) {\n        assertArgument(isHexString(value[i], 32), \"invalid ${ param } hash\", `value[${ i }]`, value[i]);\n    }\n    return value;\n}\n\nfunction _parseLegacy(data: Uint8Array): TransactionLike {\n    const fields: any = decodeRlp(data);\n\n    assertArgument(Array.isArray(fields) && (fields.length === 9 || fields.length === 6),\n        \"invalid field count for legacy transaction\", \"data\", data);\n\n    const tx: TransactionLike = {\n        type:     0,\n        nonce:    handleNumber(fields[0], \"nonce\"),\n        gasPrice: handleUint(fields[1], \"gasPrice\"),\n        gasLimit: handleUint(fields[2], \"gasLimit\"),\n        to:       handleAddress(fields[3]),\n        value:    handleUint(fields[4], \"value\"),\n        data:     hexlify(fields[5]),\n        chainId:  BN_0\n    };\n\n    // Legacy unsigned transaction\n    if (fields.length === 6) { return tx; }\n\n    const v = handleUint(fields[6], \"v\");\n    const r = handleUint(fields[7], \"r\");\n    const s = handleUint(fields[8], \"s\");\n\n    if (r === BN_0 && s === BN_0) {\n        // EIP-155 unsigned transaction\n        tx.chainId = v;\n\n    } else {\n\n        // Compute the EIP-155 chain ID (or 0 for legacy)\n        let chainId = (v - BN_35) / BN_2;\n        if (chainId < BN_0) { chainId = BN_0; }\n        tx.chainId = chainId\n\n        // Signed Legacy Transaction\n        assertArgument(chainId !== BN_0 || (v === BN_27 || v === BN_28), \"non-canonical legacy v\", \"v\", fields[6]);\n\n        tx.signature = Signature.from({\n            r: zeroPadValue(fields[7], 32),\n            s: zeroPadValue(fields[8], 32),\n            v\n        });\n\n        //tx.hash = keccak256(data);\n    }\n\n    return tx;\n}\n\nfunction _serializeLegacy(tx: Transaction, sig: null | Signature): string {\n    const fields: Array<any> = [\n        formatNumber(tx.nonce, \"nonce\"),\n        formatNumber(tx.gasPrice || 0, \"gasPrice\"),\n        formatNumber(tx.gasLimit, \"gasLimit\"),\n        (tx.to || \"0x\"),\n        formatNumber(tx.value, \"value\"),\n        tx.data,\n    ];\n\n    let chainId = BN_0;\n    if (tx.chainId != BN_0) {\n        // A chainId was provided; if non-zero we'll use EIP-155\n        chainId = getBigInt(tx.chainId, \"tx.chainId\");\n\n        // We have a chainId in the tx and an EIP-155 v in the signature,\n        // make sure they agree with each other\n        assertArgument(!sig || sig.networkV == null || sig.legacyChainId === chainId,\n             \"tx.chainId/sig.v mismatch\", \"sig\", sig);\n\n    } else if (tx.signature) {\n        // No explicit chainId, but EIP-155 have a derived implicit chainId\n        const legacy = tx.signature.legacyChainId;\n        if (legacy != null) { chainId = legacy; }\n    }\n\n    // Requesting an unsigned transaction\n    if (!sig) {\n        // We have an EIP-155 transaction (chainId was specified and non-zero)\n        if (chainId !== BN_0) {\n            fields.push(toBeArray(chainId));\n            fields.push(\"0x\");\n            fields.push(\"0x\");\n        }\n\n        return encodeRlp(fields);\n    }\n\n    // @TODO: We should probably check that tx.signature, chainId, and sig\n    //        match but that logic could break existing code, so schedule\n    //        this for the next major bump.\n\n    // Compute the EIP-155 v\n    let v = BigInt(27 + sig.yParity);\n    if (chainId !== BN_0) {\n        v = Signature.getChainIdV(chainId, sig.v);\n    } else if (BigInt(sig.v) !== v) {\n        assertArgument(false, \"tx.chainId/sig.v mismatch\", \"sig\", sig);\n    }\n\n    // Add the signature\n    fields.push(toBeArray(v));\n    fields.push(toBeArray(sig.r));\n    fields.push(toBeArray(sig.s));\n\n    return encodeRlp(fields);\n}\n\nfunction _parseEipSignature(tx: TransactionLike, fields: Array<string>): void {\n    let yParity: number;\n    try {\n        yParity = handleNumber(fields[0], \"yParity\");\n        if (yParity !== 0 && yParity !== 1) { throw new Error(\"bad yParity\"); }\n    } catch (error) {\n        assertArgument(false, \"invalid yParity\", \"yParity\", fields[0]);\n    }\n\n    const r = zeroPadValue(fields[1], 32);\n    const s = zeroPadValue(fields[2], 32);\n\n    const signature = Signature.from({ r, s, yParity });\n    tx.signature = signature;\n}\n\nfunction _parseEip1559(data: Uint8Array): TransactionLike {\n    const fields: any = decodeRlp(getBytes(data).slice(1));\n\n    assertArgument(Array.isArray(fields) && (fields.length === 9 || fields.length === 12),\n        \"invalid field count for transaction type: 2\", \"data\", hexlify(data));\n\n    const tx: TransactionLike = {\n        type:                  2,\n        chainId:               handleUint(fields[0], \"chainId\"),\n        nonce:                 handleNumber(fields[1], \"nonce\"),\n        maxPriorityFeePerGas:  handleUint(fields[2], \"maxPriorityFeePerGas\"),\n        maxFeePerGas:          handleUint(fields[3], \"maxFeePerGas\"),\n        gasPrice:              null,\n        gasLimit:              handleUint(fields[4], \"gasLimit\"),\n        to:                    handleAddress(fields[5]),\n        value:                 handleUint(fields[6], \"value\"),\n        data:                  hexlify(fields[7]),\n        accessList:            handleAccessList(fields[8], \"accessList\"),\n    };\n\n    // Unsigned EIP-1559 Transaction\n    if (fields.length === 9) { return tx; }\n\n    //tx.hash = keccak256(data);\n\n    _parseEipSignature(tx, fields.slice(9));\n\n    return tx;\n}\n\nfunction _serializeEip1559(tx: Transaction, sig: null | Signature): string {\n    const fields: Array<any> = [\n        formatNumber(tx.chainId, \"chainId\"),\n        formatNumber(tx.nonce, \"nonce\"),\n        formatNumber(tx.maxPriorityFeePerGas || 0, \"maxPriorityFeePerGas\"),\n        formatNumber(tx.maxFeePerGas || 0, \"maxFeePerGas\"),\n        formatNumber(tx.gasLimit, \"gasLimit\"),\n        (tx.to || \"0x\"),\n        formatNumber(tx.value, \"value\"),\n        tx.data,\n        formatAccessList(tx.accessList || [ ])\n    ];\n\n    if (sig) {\n        fields.push(formatNumber(sig.yParity, \"yParity\"));\n        fields.push(toBeArray(sig.r));\n        fields.push(toBeArray(sig.s));\n    }\n\n    return concat([ \"0x02\", encodeRlp(fields)]);\n}\n\nfunction _parseEip2930(data: Uint8Array): TransactionLike {\n    const fields: any = decodeRlp(getBytes(data).slice(1));\n\n    assertArgument(Array.isArray(fields) && (fields.length === 8 || fields.length === 11),\n        \"invalid field count for transaction type: 1\", \"data\", hexlify(data));\n\n    const tx: TransactionLike = {\n        type:       1,\n        chainId:    handleUint(fields[0], \"chainId\"),\n        nonce:      handleNumber(fields[1], \"nonce\"),\n        gasPrice:   handleUint(fields[2], \"gasPrice\"),\n        gasLimit:   handleUint(fields[3], \"gasLimit\"),\n        to:         handleAddress(fields[4]),\n        value:      handleUint(fields[5], \"value\"),\n        data:       hexlify(fields[6]),\n        accessList: handleAccessList(fields[7], \"accessList\")\n    };\n\n    // Unsigned EIP-2930 Transaction\n    if (fields.length === 8) { return tx; }\n\n    //tx.hash = keccak256(data);\n\n    _parseEipSignature(tx, fields.slice(8));\n\n    return tx;\n}\n\nfunction _serializeEip2930(tx: Transaction, sig: null | Signature): string {\n    const fields: any = [\n        formatNumber(tx.chainId, \"chainId\"),\n        formatNumber(tx.nonce, \"nonce\"),\n        formatNumber(tx.gasPrice || 0, \"gasPrice\"),\n        formatNumber(tx.gasLimit, \"gasLimit\"),\n        (tx.to || \"0x\"),\n        formatNumber(tx.value, \"value\"),\n        tx.data,\n        formatAccessList(tx.accessList || [ ])\n    ];\n\n    if (sig) {\n        fields.push(formatNumber(sig.yParity, \"recoveryParam\"));\n        fields.push(toBeArray(sig.r));\n        fields.push(toBeArray(sig.s));\n    }\n\n    return concat([ \"0x01\", encodeRlp(fields)]);\n}\n\nfunction _parseEip4844(data: Uint8Array): TransactionLike {\n    let fields: any = decodeRlp(getBytes(data).slice(1));\n\n    let typeName = \"3\";\n\n    let blobs: null | Array<Blob> = null;\n\n    // Parse the network format\n    if (fields.length === 4 && Array.isArray(fields[0])) {\n        typeName = \"3 (network format)\";\n        const fBlobs = fields[1], fCommits = fields[2], fProofs = fields[3];\n        assertArgument(Array.isArray(fBlobs), \"invalid network format: blobs not an array\", \"fields[1]\", fBlobs);\n        assertArgument(Array.isArray(fCommits), \"invalid network format: commitments not an array\", \"fields[2]\", fCommits);\n        assertArgument(Array.isArray(fProofs), \"invalid network format: proofs not an array\", \"fields[3]\", fProofs);\n        assertArgument(fBlobs.length === fCommits.length, \"invalid network format: blobs/commitments length mismatch\", \"fields\", fields);\n        assertArgument(fBlobs.length === fProofs.length, \"invalid network format: blobs/proofs length mismatch\", \"fields\", fields);\n\n        blobs = [ ];\n        for (let i = 0; i < fields[1].length; i++) {\n            blobs.push({\n                data: fBlobs[i],\n                commitment: fCommits[i],\n                proof: fProofs[i],\n            });\n        }\n\n        fields = fields[0];\n    }\n\n    assertArgument(Array.isArray(fields) && (fields.length === 11 || fields.length === 14),\n        `invalid field count for transaction type: ${ typeName }`, \"data\", hexlify(data));\n\n    const tx: TransactionLike = {\n        type:                  3,\n        chainId:               handleUint(fields[0], \"chainId\"),\n        nonce:                 handleNumber(fields[1], \"nonce\"),\n        maxPriorityFeePerGas:  handleUint(fields[2], \"maxPriorityFeePerGas\"),\n        maxFeePerGas:          handleUint(fields[3], \"maxFeePerGas\"),\n        gasPrice:              null,\n        gasLimit:              handleUint(fields[4], \"gasLimit\"),\n        to:                    handleAddress(fields[5]),\n        value:                 handleUint(fields[6], \"value\"),\n        data:                  hexlify(fields[7]),\n        accessList:            handleAccessList(fields[8], \"accessList\"),\n        maxFeePerBlobGas:      handleUint(fields[9], \"maxFeePerBlobGas\"),\n        blobVersionedHashes:   fields[10]\n    };\n\n    if (blobs) { tx.blobs = blobs; }\n\n    assertArgument(tx.to != null, `invalid address for transaction type: ${ typeName }`, \"data\", data);\n\n    assertArgument(Array.isArray(tx.blobVersionedHashes), \"invalid blobVersionedHashes: must be an array\", \"data\", data);\n    for (let i = 0; i < tx.blobVersionedHashes.length; i++) {\n        assertArgument(isHexString(tx.blobVersionedHashes[i], 32), `invalid blobVersionedHash at index ${ i }: must be length 32`, \"data\", data);\n    }\n\n    // Unsigned EIP-4844 Transaction\n    if (fields.length === 11) { return tx; }\n\n    // @TODO: Do we need to do this? This is only called internally\n    // and used to verify hashes; it might save time to not do this\n    //tx.hash = keccak256(concat([ \"0x03\", encodeRlp(fields) ]));\n\n    _parseEipSignature(tx, fields.slice(11));\n\n    return tx;\n}\n\nfunction _serializeEip4844(tx: Transaction, sig: null | Signature, blobs: null | Array<Blob>): string {\n    const fields: Array<any> = [\n        formatNumber(tx.chainId, \"chainId\"),\n        formatNumber(tx.nonce, \"nonce\"),\n        formatNumber(tx.maxPriorityFeePerGas || 0, \"maxPriorityFeePerGas\"),\n        formatNumber(tx.maxFeePerGas || 0, \"maxFeePerGas\"),\n        formatNumber(tx.gasLimit, \"gasLimit\"),\n        (tx.to || ZeroAddress),\n        formatNumber(tx.value, \"value\"),\n        tx.data,\n        formatAccessList(tx.accessList || [ ]),\n        formatNumber(tx.maxFeePerBlobGas || 0, \"maxFeePerBlobGas\"),\n        formatHashes(tx.blobVersionedHashes || [ ], \"blobVersionedHashes\")\n    ];\n\n    if (sig) {\n        fields.push(formatNumber(sig.yParity, \"yParity\"));\n        fields.push(toBeArray(sig.r));\n        fields.push(toBeArray(sig.s));\n\n        // We have blobs; return the network wrapped format\n        if (blobs) {\n            return concat([\n                \"0x03\",\n                encodeRlp([\n                    fields,\n                    blobs.map((b) => b.data),\n                    blobs.map((b) => b.commitment),\n                    blobs.map((b) => b.proof),\n                ])\n            ]);\n        }\n\n    }\n\n    return concat([ \"0x03\", encodeRlp(fields)]);\n}\n\nfunction _parseEip7702(data: Uint8Array): TransactionLike {\n    const fields: any = decodeRlp(getBytes(data).slice(1));\n\n    assertArgument(Array.isArray(fields) && (fields.length === 10 || fields.length === 13),\n        \"invalid field count for transaction type: 4\", \"data\", hexlify(data));\n\n    const tx: TransactionLike = {\n        type:                  4,\n        chainId:               handleUint(fields[0], \"chainId\"),\n        nonce:                 handleNumber(fields[1], \"nonce\"),\n        maxPriorityFeePerGas:  handleUint(fields[2], \"maxPriorityFeePerGas\"),\n        maxFeePerGas:          handleUint(fields[3], \"maxFeePerGas\"),\n        gasPrice:              null,\n        gasLimit:              handleUint(fields[4], \"gasLimit\"),\n        to:                    handleAddress(fields[5]),\n        value:                 handleUint(fields[6], \"value\"),\n        data:                  hexlify(fields[7]),\n        accessList:            handleAccessList(fields[8], \"accessList\"),\n        authorizationList:     handleAuthorizationList(fields[9], \"authorizationList\"),\n    };\n\n    // Unsigned EIP-7702 Transaction\n    if (fields.length === 10) { return tx; }\n\n    _parseEipSignature(tx, fields.slice(10));\n\n    return tx;\n}\n\nfunction _serializeEip7702(tx: Transaction, sig: null | Signature): string {\n    const fields: Array<any> = [\n        formatNumber(tx.chainId, \"chainId\"),\n        formatNumber(tx.nonce, \"nonce\"),\n        formatNumber(tx.maxPriorityFeePerGas || 0, \"maxPriorityFeePerGas\"),\n        formatNumber(tx.maxFeePerGas || 0, \"maxFeePerGas\"),\n        formatNumber(tx.gasLimit, \"gasLimit\"),\n        (tx.to || \"0x\"),\n        formatNumber(tx.value, \"value\"),\n        tx.data,\n        formatAccessList(tx.accessList || [ ]),\n        formatAuthorizationList(tx.authorizationList || [ ])\n    ];\n\n    if (sig) {\n        fields.push(formatNumber(sig.yParity, \"yParity\"));\n        fields.push(toBeArray(sig.r));\n        fields.push(toBeArray(sig.s));\n    }\n\n    return concat([ \"0x04\", encodeRlp(fields)]);\n}\n\n/**\n *  A **Transaction** describes an operation to be executed on\n *  Ethereum by an Externally Owned Account (EOA). It includes\n *  who (the [[to]] address), what (the [[data]]) and how much (the\n *  [[value]] in ether) the operation should entail.\n *\n *  @example:\n *    tx = new Transaction()\n *    //_result:\n *\n *    tx.data = \"0x1234\";\n *    //_result:\n */\nexport class Transaction implements TransactionLike<string> {\n    #type: null | number;\n    #to: null | string;\n    #data: string;\n    #nonce: number;\n    #gasLimit: bigint;\n    #gasPrice: null | bigint;\n    #maxPriorityFeePerGas: null | bigint;\n    #maxFeePerGas: null | bigint;\n    #value: bigint;\n    #chainId: bigint;\n    #sig: null | Signature;\n    #accessList: null | AccessList;\n    #maxFeePerBlobGas: null | bigint;\n    #blobVersionedHashes: null | Array<string>;\n    #kzg: null | KzgLibrary;\n    #blobs: null | Array<Blob>;\n    #auths: null | Array<Authorization>;\n\n    /**\n     *  The transaction type.\n     *\n     *  If null, the type will be automatically inferred based on\n     *  explicit properties.\n     */\n    get type(): null | number { return this.#type; }\n    set type(value: null | number | string) {\n        switch (value) {\n            case null:\n                this.#type = null;\n                break;\n            case 0: case \"legacy\":\n                this.#type = 0;\n                break;\n            case 1: case \"berlin\": case \"eip-2930\":\n                this.#type = 1;\n                break;\n            case 2: case \"london\": case \"eip-1559\":\n                this.#type = 2;\n                break;\n            case 3: case \"cancun\": case \"eip-4844\":\n                this.#type = 3;\n                break;\n            case 4: case \"pectra\": case \"eip-7702\":\n                this.#type = 4;\n                break;\n            default:\n                assertArgument(false, \"unsupported transaction type\", \"type\", value);\n        }\n    }\n\n    /**\n     *  The name of the transaction type.\n     */\n    get typeName(): null | string {\n        switch (this.type) {\n            case 0: return \"legacy\";\n            case 1: return \"eip-2930\";\n            case 2: return \"eip-1559\";\n            case 3: return \"eip-4844\";\n            case 4: return \"eip-7702\";\n        }\n\n        return null;\n    }\n\n    /**\n     *  The ``to`` address for the transaction or ``null`` if the\n     *  transaction is an ``init`` transaction.\n     */\n    get to(): null | string {\n        const value = this.#to;\n        if (value == null && this.type === 3) { return ZeroAddress; }\n        return value;\n    }\n    set to(value: null | string) {\n        this.#to = (value == null) ? null: getAddress(value);\n    }\n\n    /**\n     *  The transaction nonce.\n     */\n    get nonce(): number { return this.#nonce; }\n    set nonce(value: BigNumberish) { this.#nonce = getNumber(value, \"value\"); }\n\n    /**\n     *  The gas limit.\n     */\n    get gasLimit(): bigint { return this.#gasLimit; }\n    set gasLimit(value: BigNumberish) { this.#gasLimit = getBigInt(value); }\n\n    /**\n     *  The gas price.\n     *\n     *  On legacy networks this defines the fee that will be paid. On\n     *  EIP-1559 networks, this should be ``null``.\n     */\n    get gasPrice(): null | bigint {\n        const value = this.#gasPrice;\n        if (value == null && (this.type === 0 || this.type === 1)) { return BN_0; }\n        return value;\n    }\n    set gasPrice(value: null | BigNumberish) {\n        this.#gasPrice = (value == null) ? null: getBigInt(value, \"gasPrice\");\n    }\n\n    /**\n     *  The maximum priority fee per unit of gas to pay. On legacy\n     *  networks this should be ``null``.\n     */\n    get maxPriorityFeePerGas(): null | bigint {\n        const value = this.#maxPriorityFeePerGas;\n        if (value == null) {\n            if (this.type === 2 || this.type === 3) { return BN_0; }\n            return null;\n        }\n        return value;\n    }\n    set maxPriorityFeePerGas(value: null | BigNumberish) {\n        this.#maxPriorityFeePerGas = (value == null) ? null: getBigInt(value, \"maxPriorityFeePerGas\");\n    }\n\n    /**\n     *  The maximum total fee per unit of gas to pay. On legacy\n     *  networks this should be ``null``.\n     */\n    get maxFeePerGas(): null | bigint {\n        const value = this.#maxFeePerGas;\n        if (value == null) {\n            if (this.type === 2 || this.type === 3) { return BN_0; }\n            return null;\n        }\n        return value;\n    }\n    set maxFeePerGas(value: null | BigNumberish) {\n        this.#maxFeePerGas = (value == null) ? null: getBigInt(value, \"maxFeePerGas\");\n    }\n\n    /**\n     *  The transaction data. For ``init`` transactions this is the\n     *  deployment code.\n     */\n    get data(): string { return this.#data; }\n    set data(value: BytesLike) { this.#data = hexlify(value); }\n\n    /**\n     *  The amount of ether (in wei) to send in this transactions.\n     */\n    get value(): bigint { return this.#value; }\n    set value(value: BigNumberish) {\n        this.#value = getBigInt(value, \"value\");\n    }\n\n    /**\n     *  The chain ID this transaction is valid on.\n     */\n    get chainId(): bigint { return this.#chainId; }\n    set chainId(value: BigNumberish) { this.#chainId = getBigInt(value); }\n\n    /**\n     *  If signed, the signature for this transaction.\n     */\n    get signature(): null | Signature { return this.#sig || null; }\n    set signature(value: null | SignatureLike) {\n        this.#sig = (value == null) ? null: Signature.from(value);\n    }\n\n    /**\n     *  The access list.\n     *\n     *  An access list permits discounted (but pre-paid) access to\n     *  bytecode and state variable access within contract execution.\n     */\n    get accessList(): null | AccessList {\n        const value = this.#accessList || null;\n        if (value == null) {\n            if (this.type === 1 || this.type === 2 || this.type === 3) {\n                // @TODO: in v7, this should assign the value or become\n                // a live object itself, otherwise mutation is inconsistent\n                return [ ];\n            }\n            return null;\n        }\n        return value;\n    }\n    set accessList(value: null | AccessListish) {\n        this.#accessList = (value == null) ? null: accessListify(value);\n    }\n\n    get authorizationList(): null | Array<Authorization> {\n        const value = this.#auths || null;\n        if (value == null) {\n            if (this.type === 4) {\n                // @TODO: in v7, this should become a live object itself,\n                // otherwise mutation is inconsistent\n                return [ ];\n            }\n        }\n        return value;\n    }\n    set authorizationList(auths: null | Array<AuthorizationLike>) {\n        this.#auths = (auths == null) ? null: auths.map((a) =>\n          authorizationify(a));\n    }\n\n    /**\n     *  The max fee per blob gas for Cancun transactions.\n     */\n    get maxFeePerBlobGas(): null | bigint {\n        const value = this.#maxFeePerBlobGas;\n        if (value == null && this.type === 3) { return BN_0; }\n        return value;\n    }\n    set maxFeePerBlobGas(value: null | BigNumberish) {\n        this.#maxFeePerBlobGas = (value == null) ? null: getBigInt(value, \"maxFeePerBlobGas\");\n    }\n\n    /**\n     *  The BLOb versioned hashes for Cancun transactions.\n     */\n    get blobVersionedHashes(): null | Array<string> {\n        // @TODO: Mutation is inconsistent; if unset, the returned value\n        // cannot mutate the object, if set it can\n        let value = this.#blobVersionedHashes;\n        if (value == null && this.type === 3) { return [ ]; }\n        return value;\n    }\n    set blobVersionedHashes(value: null | Array<string>) {\n        if (value != null) {\n            assertArgument(Array.isArray(value), \"blobVersionedHashes must be an Array\", \"value\", value);\n            value = value.slice();\n            for (let i = 0; i < value.length; i++) {\n                assertArgument(isHexString(value[i], 32), \"invalid blobVersionedHash\", `value[${ i }]`, value[i]);\n            }\n        }\n        this.#blobVersionedHashes = value;\n    }\n\n    /**\n     *  The BLObs for the Transaction, if any.\n     *\n     *  If ``blobs`` is non-``null``, then the [[seriailized]]\n     *  will return the network formatted sidecar, otherwise it\n     *  will return the standard [[link-eip-2718]] payload. The\n     *  [[unsignedSerialized]] is unaffected regardless.\n     *\n     *  When setting ``blobs``, either fully valid [[Blob]] objects\n     *  may be specified (i.e. correctly padded, with correct\n     *  committments and proofs) or a raw [[BytesLike]] may\n     *  be provided.\n     *\n     *  If raw [[BytesLike]] are provided, the [[kzg]] property **must**\n     *  be already set. The blob will be correctly padded and the\n     *  [[KzgLibrary]] will be used to compute the committment and\n     *  proof for the blob.\n     *\n     *  A BLOb is a sequence of field elements, each of which must\n     *  be within the BLS field modulo, so some additional processing\n     *  may be required to encode arbitrary data to ensure each 32 byte\n     *  field is within the valid range.\n     *\n     *  Setting this automatically populates [[blobVersionedHashes]],\n     *  overwriting any existing values. Setting this to ``null``\n     *  does **not** remove the [[blobVersionedHashes]], leaving them\n     *  present.\n     */\n    get blobs(): null | Array<Blob> {\n        if (this.#blobs == null) { return null; }\n        return this.#blobs.map((b) => Object.assign({ }, b));\n    }\n    set blobs(_blobs: null | Array<BlobLike>) {\n        if (_blobs == null) {\n            this.#blobs = null;\n            return;\n        }\n\n        const blobs: Array<Blob> = [ ];\n        const versionedHashes: Array<string> = [ ];\n        for (let i = 0; i < _blobs.length; i++) {\n            const blob = _blobs[i];\n\n            if (isBytesLike(blob)) {\n                assert(this.#kzg, \"adding a raw blob requires a KZG library\", \"UNSUPPORTED_OPERATION\", {\n                    operation: \"set blobs()\"\n                });\n\n                let data = getBytes(blob);\n                assertArgument(data.length <= BLOB_SIZE, \"blob is too large\", `blobs[${ i }]`, blob);\n\n                // Pad blob if necessary\n                if (data.length !== BLOB_SIZE) {\n                    const padded = new Uint8Array(BLOB_SIZE);\n                    padded.set(data);\n                    data = padded;\n                }\n\n                const commit = this.#kzg.blobToKzgCommitment(data);\n                const proof = hexlify(this.#kzg.computeBlobKzgProof(data, commit));\n\n                blobs.push({\n                    data: hexlify(data),\n                    commitment: hexlify(commit),\n                    proof\n                });\n                versionedHashes.push(getVersionedHash(1, commit));\n\n            } else {\n                const commit = hexlify(blob.commitment);\n                blobs.push({\n                    data: hexlify(blob.data),\n                    commitment: commit,\n                    proof: hexlify(blob.proof)\n                });\n                versionedHashes.push(getVersionedHash(1, commit));\n            }\n        }\n\n        this.#blobs = blobs;\n        this.#blobVersionedHashes = versionedHashes;\n    }\n\n    get kzg(): null | KzgLibrary { return this.#kzg; }\n    set kzg(kzg: null | KzgLibraryLike) {\n        if (kzg == null) {\n            this.#kzg = null;\n        } else {\n            this.#kzg = getKzgLibrary(kzg);\n        }\n    }\n\n    /**\n     *  Creates a new Transaction with default values.\n     */\n    constructor() {\n        this.#type = null;\n        this.#to = null;\n        this.#nonce = 0;\n        this.#gasLimit = BN_0;\n        this.#gasPrice = null;\n        this.#maxPriorityFeePerGas = null;\n        this.#maxFeePerGas = null;\n        this.#data = \"0x\";\n        this.#value = BN_0;\n        this.#chainId = BN_0;\n        this.#sig = null;\n        this.#accessList = null;\n        this.#maxFeePerBlobGas = null;\n        this.#blobVersionedHashes = null;\n        this.#kzg = null;\n        this.#blobs = null;\n        this.#auths = null;\n    }\n\n    /**\n     *  The transaction hash, if signed. Otherwise, ``null``.\n     */\n    get hash(): null | string {\n        if (this.signature == null) { return null; }\n        return keccak256(this.#getSerialized(true, false));\n    }\n\n    /**\n     *  The pre-image hash of this transaction.\n     *\n     *  This is the digest that a [[Signer]] must sign to authorize\n     *  this transaction.\n     */\n    get unsignedHash(): string {\n        return keccak256(this.unsignedSerialized);\n    }\n\n    /**\n     *  The sending address, if signed. Otherwise, ``null``.\n     */\n    get from(): null | string {\n        if (this.signature == null) { return null; }\n        return recoverAddress(this.unsignedHash, this.signature);\n    }\n\n    /**\n     *  The public key of the sender, if signed. Otherwise, ``null``.\n     */\n    get fromPublicKey(): null | string {\n        if (this.signature == null) { return null; }\n        return SigningKey.recoverPublicKey(this.unsignedHash, this.signature);\n    }\n\n    /**\n     *  Returns true if signed.\n     *\n     *  This provides a Type Guard that properties requiring a signed\n     *  transaction are non-null.\n     */\n    isSigned(): this is (Transaction & { type: number, typeName: string, from: string, signature: Signature }) {\n        return this.signature != null;\n    }\n\n    #getSerialized(signed: boolean, sidecar: boolean): string {\n        assert(!signed || this.signature != null, \"cannot serialize unsigned transaction; maybe you meant .unsignedSerialized\", \"UNSUPPORTED_OPERATION\", { operation: \".serialized\"});\n\n        const sig = signed ? this.signature: null;\n        switch (this.inferType()) {\n            case 0:\n                return _serializeLegacy(this, sig);\n            case 1:\n                return _serializeEip2930(this, sig);\n            case 2:\n                return _serializeEip1559(this, sig);\n            case 3:\n                return _serializeEip4844(this, sig, sidecar ? this.blobs: null);\n            case 4:\n                return _serializeEip7702(this, sig);\n        }\n\n        assert(false, \"unsupported transaction type\", \"UNSUPPORTED_OPERATION\", { operation: \".serialized\" });\n    }\n\n    /**\n     *  The serialized transaction.\n     *\n     *  This throws if the transaction is unsigned. For the pre-image,\n     *  use [[unsignedSerialized]].\n     */\n    get serialized(): string {\n        return this.#getSerialized(true, true);\n    }\n\n    /**\n     *  The transaction pre-image.\n     *\n     *  The hash of this is the digest which needs to be signed to\n     *  authorize this transaction.\n     */\n    get unsignedSerialized(): string {\n        return this.#getSerialized(false, false);\n    }\n\n    /**\n     *  Return the most \"likely\" type; currently the highest\n     *  supported transaction type.\n     */\n    inferType(): number {\n        const types = this.inferTypes();\n\n        // Prefer London (EIP-1559) over Cancun (BLOb)\n        if (types.indexOf(2) >= 0) { return 2; }\n\n        // Return the highest inferred type\n        return <number>(types.pop());\n    }\n\n    /**\n     *  Validates the explicit properties and returns a list of compatible\n     *  transaction types.\n     */\n    inferTypes(): Array<number> {\n\n        // Checks that there are no conflicting properties set\n        const hasGasPrice = this.gasPrice != null;\n        const hasFee = (this.maxFeePerGas != null || this.maxPriorityFeePerGas != null);\n        const hasAccessList = (this.accessList != null);\n        const hasBlob = (this.#maxFeePerBlobGas != null || this.#blobVersionedHashes);\n\n        //if (hasGasPrice && hasFee) {\n        //    throw new Error(\"transaction cannot have gasPrice and maxFeePerGas\");\n        //}\n\n        if (this.maxFeePerGas != null && this.maxPriorityFeePerGas != null) {\n            assert(this.maxFeePerGas >= this.maxPriorityFeePerGas, \"priorityFee cannot be more than maxFee\", \"BAD_DATA\", { value: this });\n        }\n\n        //if (this.type === 2 && hasGasPrice) {\n        //    throw new Error(\"eip-1559 transaction cannot have gasPrice\");\n        //}\n\n        assert(!hasFee || (this.type !== 0 && this.type !== 1), \"transaction type cannot have maxFeePerGas or maxPriorityFeePerGas\", \"BAD_DATA\", { value: this });\n        assert(this.type !== 0 || !hasAccessList, \"legacy transaction cannot have accessList\", \"BAD_DATA\", { value: this })\n\n        const types: Array<number> = [ ];\n\n        // Explicit type\n        if (this.type != null) {\n            types.push(this.type);\n\n        } else {\n            if (this.authorizationList && this.authorizationList.length) {\n                types.push(4);\n            } else if (hasFee) {\n                types.push(2);\n            } else if (hasGasPrice) {\n                types.push(1);\n                if (!hasAccessList) { types.push(0); }\n            } else if (hasAccessList) {\n                types.push(1);\n                types.push(2);\n            } else if (hasBlob && this.to) {\n                types.push(3);\n            } else {\n                types.push(0);\n                types.push(1);\n                types.push(2);\n                types.push(3);\n            }\n        }\n\n        types.sort();\n\n        return types;\n    }\n\n    /**\n     *  Returns true if this transaction is a legacy transaction (i.e.\n     *  ``type === 0``).\n     *\n     *  This provides a Type Guard that the related properties are\n     *  non-null.\n     */\n    isLegacy(): this is (Transaction & { type: 0, gasPrice: bigint }) {\n        return (this.type === 0);\n    }\n\n    /**\n     *  Returns true if this transaction is berlin hardform transaction (i.e.\n     *  ``type === 1``).\n     *\n     *  This provides a Type Guard that the related properties are\n     *  non-null.\n     */\n    isBerlin(): this is (Transaction & { type: 1, gasPrice: bigint, accessList: AccessList }) {\n        return (this.type === 1);\n    }\n\n    /**\n     *  Returns true if this transaction is london hardform transaction (i.e.\n     *  ``type === 2``).\n     *\n     *  This provides a Type Guard that the related properties are\n     *  non-null.\n     */\n    isLondon(): this is (Transaction & { type: 2, accessList: AccessList, maxFeePerGas: bigint, maxPriorityFeePerGas: bigint }) {\n        return (this.type === 2);\n    }\n\n    /**\n     *  Returns true if this transaction is an [[link-eip-4844]] BLOB\n     *  transaction.\n     *\n     *  This provides a Type Guard that the related properties are\n     *  non-null.\n     */\n    isCancun(): this is (Transaction & { type: 3, to: string, accessList: AccessList, maxFeePerGas: bigint, maxPriorityFeePerGas: bigint, maxFeePerBlobGas: bigint, blobVersionedHashes: Array<string> }) {\n        return (this.type === 3);\n    }\n\n    /**\n     *  Create a copy of this transaciton.\n     */\n    clone(): Transaction {\n        return Transaction.from(this);\n    }\n\n    /**\n     *  Return a JSON-friendly object.\n     */\n    toJSON(): any {\n        const s = (v: null | bigint) => {\n            if (v == null) { return null; }\n            return v.toString();\n        };\n\n        return {\n            type: this.type,\n            to: this.to,\n//            from: this.from,\n            data: this.data,\n            nonce: this.nonce,\n            gasLimit: s(this.gasLimit),\n            gasPrice: s(this.gasPrice),\n            maxPriorityFeePerGas: s(this.maxPriorityFeePerGas),\n            maxFeePerGas: s(this.maxFeePerGas),\n            value: s(this.value),\n            chainId: s(this.chainId),\n            sig: this.signature ? this.signature.toJSON(): null,\n            accessList: this.accessList\n        };\n    }\n\n    /**\n     *  Create a **Transaction** from a serialized transaction or a\n     *  Transaction-like object.\n     */\n    static from(tx?: string | TransactionLike<string>): Transaction {\n        if (tx == null) { return new Transaction(); }\n\n        if (typeof(tx) === \"string\") {\n            const payload = getBytes(tx);\n\n            if (payload[0] >= 0x7f) { // @TODO: > vs >= ??\n                return Transaction.from(_parseLegacy(payload));\n            }\n\n            switch(payload[0]) {\n                case 1: return Transaction.from(_parseEip2930(payload));\n                case 2: return Transaction.from(_parseEip1559(payload));\n                case 3: return Transaction.from(_parseEip4844(payload));\n                case 4: return Transaction.from(_parseEip7702(payload));\n            }\n            assert(false, \"unsupported transaction type\", \"UNSUPPORTED_OPERATION\", { operation: \"from\" });\n        }\n\n        const result = new Transaction();\n        if (tx.type != null) { result.type = tx.type; }\n        if (tx.to != null) { result.to = tx.to; }\n        if (tx.nonce != null) { result.nonce = tx.nonce; }\n        if (tx.gasLimit != null) { result.gasLimit = tx.gasLimit; }\n        if (tx.gasPrice != null) { result.gasPrice = tx.gasPrice; }\n        if (tx.maxPriorityFeePerGas != null) { result.maxPriorityFeePerGas = tx.maxPriorityFeePerGas; }\n        if (tx.maxFeePerGas != null) { result.maxFeePerGas = tx.maxFeePerGas; }\n        if (tx.maxFeePerBlobGas != null) { result.maxFeePerBlobGas = tx.maxFeePerBlobGas; }\n        if (tx.data != null) { result.data = tx.data; }\n        if (tx.value != null) { result.value = tx.value; }\n        if (tx.chainId != null) { result.chainId = tx.chainId; }\n        if (tx.signature != null) { result.signature = Signature.from(tx.signature); }\n        if (tx.accessList != null) { result.accessList = tx.accessList; }\n        if (tx.authorizationList != null) {\n            result.authorizationList = tx.authorizationList;\n        }\n\n        // This will get overwritten by blobs, if present\n        if (tx.blobVersionedHashes != null) { result.blobVersionedHashes = tx.blobVersionedHashes; }\n\n        // Make sure we assign the kzg before assigning blobs, which\n        // require the library in the event raw blob data is provided.\n        if (tx.kzg != null) { result.kzg = tx.kzg; }\n        if (tx.blobs != null) { result.blobs = tx.blobs; }\n\n        if (tx.hash != null) {\n            assertArgument(result.isSigned(), \"unsigned transaction cannot define '.hash'\", \"tx\", tx);\n            assertArgument(result.hash === tx.hash, \"hash mismatch\", \"tx\", tx);\n        }\n\n        if (tx.from != null) {\n            assertArgument(result.isSigned(), \"unsigned transaction cannot define '.from'\", \"tx\", tx);\n            assertArgument(result.from.toLowerCase() === (tx.from || \"\").toLowerCase(), \"from mismatch\", \"tx\", tx);\n        }\n\n        return result;\n    }\n}\n", "import { keccak256 } from \"../crypto/index.js\";\nimport { toUtf8Bytes } from \"../utils/index.js\";\n\n/**\n *  A simple hashing function which operates on UTF-8 strings to\n *  compute an 32-byte identifier.\n *\n *  This simply computes the [UTF-8 bytes](toUtf8Bytes) and computes\n *  the [[keccak256]].\n *\n *  @example:\n *    id(\"hello world\")\n *    //_result:\n */\nexport function id(value: string): string {\n    return keccak256(toUtf8Bytes(value));\n}\n", "\nimport { keccak256 } from \"../crypto/index.js\";\nimport {\n    concat, hexlify, assertArgument, toUtf8Bytes\n} from \"../utils/index.js\";\n\n\nimport { ens_normalize } from \"@adraffy/ens-normalize\";\n\nconst Zeros = new Uint8Array(32);\nZeros.fill(0);\n\nfunction checkComponent(comp: Uint8Array): Uint8Array {\n    assertArgument(comp.length !== 0, \"invalid ENS name; empty component\", \"comp\", comp)\n    return comp;\n}\n\nfunction ensNameSplit(name: string): Array<Uint8Array> {\n    const bytes = toUtf8Bytes(ensNormalize(name));\n    const comps: Array<Uint8Array> = [ ];\n\n    if (name.length === 0) { return comps; }\n\n    let last = 0;\n    for (let i = 0; i < bytes.length; i++) {\n        const d = bytes[i];\n\n        // A separator (i.e. \".\"); copy this component\n        if (d === 0x2e) {\n            comps.push(checkComponent(bytes.slice(last, i)));\n            last = i + 1;\n        }\n    }\n\n    // There was a stray separator at the end of the name\n    assertArgument(last < bytes.length, \"invalid ENS name; empty component\", \"name\", name);\n\n    comps.push(checkComponent(bytes.slice(last)));\n    return comps;\n}\n\n/**\n *  Returns the ENS %%name%% normalized.\n */\nexport function ensNormalize(name: string): string {\n    try {\n        if (name.length === 0) { throw new Error(\"empty label\"); }\n        return ens_normalize(name);\n    } catch (error: any) {\n        assertArgument(false, `invalid ENS name (${ error.message })`, \"name\", name);\n    }\n}\n\n/**\n *  Returns ``true`` if %%name%% is a valid ENS name.\n */\nexport function isValidName(name: string): name is string {\n    try {\n        return (ensNameSplit(name).length !== 0);\n    } catch (error) { }\n    return false;\n}\n\n/**\n *  Returns the [[link-namehash]] for %%name%%.\n */\nexport function namehash(name: string): string {\n    assertArgument(typeof(name) === \"string\", \"invalid ENS name; not a string\", \"name\", name);\n\n    assertArgument(name.length, `invalid ENS name (empty label)`, \"name\", name);\n\n    let result: string | Uint8Array = Zeros;\n\n    const comps = ensNameSplit(name);\n    while (comps.length) {\n        result = keccak256(concat([ result, keccak256(<Uint8Array>(comps.pop()))] ));\n    }\n\n    return hexlify(result);\n}\n\n/**\n *  Returns the DNS encoded %%name%%.\n *\n *  This is used for various parts of ENS name resolution, such\n *  as the wildcard resolution.\n */\nexport function dnsEncode(name: string, _maxLength?: number): string {\n    const length = (_maxLength != null) ? _maxLength: 63;\n\n    assertArgument(length <= 255, \"DNS encoded label cannot exceed 255\", \"length\", length);\n\n    return hexlify(concat(ensNameSplit(name).map((comp) => {\n        assertArgument(comp.length <= length, `label ${ JSON.stringify(name) } exceeds ${ length } bytes`, \"name\", name);\n\n        const bytes = new Uint8Array(comp.length + 1);\n        bytes.set(comp, 1);\n        bytes[0] = bytes.length - 1;\n        return bytes;\n    }))) + \"00\";\n}\n", "// created 2023-09-25T01:01:55.148Z\n// compressed base64-encoded blob for include-ens data\n// source: https://github.com/adraffy/ens-normalize.js/blob/main/src/make.js\n// see: https://github.com/adraffy/ens-normalize.js#security\n// SHA-256: 0565ed049b9cf1614bb9e11ba7d8ac6a6fb96c893253d890f7e2b2884b9ded32\nvar COMPRESSED$1 = '';\nconst FENCED = new Map([[8217,\"apostrophe\"],[8260,\"fraction slash\"],[12539,\"middle dot\"]]);\nconst NSM_MAX = 4;\n\nfunction decode_arithmetic(bytes) {\r\n\tlet pos = 0;\r\n\tfunction u16() { return (bytes[pos++] << 8) | bytes[pos++]; }\r\n\t\r\n\t// decode the frequency table\r\n\tlet symbol_count = u16();\r\n\tlet total = 1;\r\n\tlet acc = [0, 1]; // first symbol has frequency 1\r\n\tfor (let i = 1; i < symbol_count; i++) {\r\n\t\tacc.push(total += u16());\r\n\t}\r\n\r\n\t// skip the sized-payload that the last 3 symbols index into\r\n\tlet skip = u16();\r\n\tlet pos_payload = pos;\r\n\tpos += skip;\r\n\r\n\tlet read_width = 0;\r\n\tlet read_buffer = 0; \r\n\tfunction read_bit() {\r\n\t\tif (read_width == 0) {\r\n\t\t\t// this will read beyond end of buffer\r\n\t\t\t// but (undefined|0) => zero pad\r\n\t\t\tread_buffer = (read_buffer << 8) | bytes[pos++];\r\n\t\t\tread_width = 8;\r\n\t\t}\r\n\t\treturn (read_buffer >> --read_width) & 1;\r\n\t}\r\n\r\n\tconst N = 31;\r\n\tconst FULL = 2**N;\r\n\tconst HALF = FULL >>> 1;\r\n\tconst QRTR = HALF >> 1;\r\n\tconst MASK = FULL - 1;\r\n\r\n\t// fill register\r\n\tlet register = 0;\r\n\tfor (let i = 0; i < N; i++) register = (register << 1) | read_bit();\r\n\r\n\tlet symbols = [];\r\n\tlet low = 0;\r\n\tlet range = FULL; // treat like a float\r\n\twhile (true) {\r\n\t\tlet value = Math.floor((((register - low + 1) * total) - 1) / range);\r\n\t\tlet start = 0;\r\n\t\tlet end = symbol_count;\r\n\t\twhile (end - start > 1) { // binary search\r\n\t\t\tlet mid = (start + end) >>> 1;\r\n\t\t\tif (value < acc[mid]) {\r\n\t\t\t\tend = mid;\r\n\t\t\t} else {\r\n\t\t\t\tstart = mid;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (start == 0) break; // first symbol is end mark\r\n\t\tsymbols.push(start);\r\n\t\tlet a = low + Math.floor(range * acc[start]   / total);\r\n\t\tlet b = low + Math.floor(range * acc[start+1] / total) - 1;\r\n\t\twhile (((a ^ b) & HALF) == 0) {\r\n\t\t\tregister = (register << 1) & MASK | read_bit();\r\n\t\t\ta = (a << 1) & MASK;\r\n\t\t\tb = (b << 1) & MASK | 1;\r\n\t\t}\r\n\t\twhile (a & ~b & QRTR) {\r\n\t\t\tregister = (register & HALF) | ((register << 1) & (MASK >>> 1)) | read_bit();\r\n\t\t\ta = (a << 1) ^ HALF;\r\n\t\t\tb = ((b ^ HALF) << 1) | HALF | 1;\r\n\t\t}\r\n\t\tlow = a;\r\n\t\trange = 1 + b - a;\r\n\t}\r\n\tlet offset = symbol_count - 4;\r\n\treturn symbols.map(x => { // index into payload\r\n\t\tswitch (x - offset) {\r\n\t\t\tcase 3: return offset + 0x10100 + ((bytes[pos_payload++] << 16) | (bytes[pos_payload++] << 8) | bytes[pos_payload++]);\r\n\t\t\tcase 2: return offset + 0x100 + ((bytes[pos_payload++] << 8) | bytes[pos_payload++]);\r\n\t\t\tcase 1: return offset + bytes[pos_payload++];\r\n\t\t\tdefault: return x - 1;\r\n\t\t}\r\n\t});\r\n}\t\r\n\r\n// returns an iterator which returns the next symbol\r\nfunction read_payload(v) {\r\n\tlet pos = 0;\r\n\treturn () => v[pos++];\r\n}\r\nfunction read_compressed_payload(s) {\r\n\treturn read_payload(decode_arithmetic(unsafe_atob(s)));\r\n}\r\n\r\n// unsafe in the sense:\r\n// expected well-formed Base64 w/o padding \r\n// 20220922: added for https://github.com/adraffy/ens-normalize.js/issues/4\r\nfunction unsafe_atob(s) {\r\n\tlet lookup = [];\r\n\t[...'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'].forEach((c, i) => lookup[c.charCodeAt(0)] = i);\r\n\tlet n = s.length;\r\n\tlet ret = new Uint8Array((6 * n) >> 3);\r\n\tfor (let i = 0, pos = 0, width = 0, carry = 0; i < n; i++) {\r\n\t\tcarry = (carry << 6) | lookup[s.charCodeAt(i)];\r\n\t\twidth += 6;\r\n\t\tif (width >= 8) {\r\n\t\t\tret[pos++] = (carry >> (width -= 8));\r\n\t\t}\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\n// eg. [0,1,2,3...] => [0,-1,1,-2,...]\r\nfunction signed(i) { \r\n\treturn (i & 1) ? (~i >> 1) : (i >> 1);\r\n}\r\n\r\nfunction read_deltas(n, next) {\r\n\tlet v = Array(n);\r\n\tfor (let i = 0, x = 0; i < n; i++) v[i] = x += signed(next());\r\n\treturn v;\r\n}\r\n\r\n// [123][5] => [0 3] [1 1] [0 0]\r\nfunction read_sorted(next, prev = 0) {\r\n\tlet ret = [];\r\n\twhile (true) {\r\n\t\tlet x = next();\r\n\t\tlet n = next();\r\n\t\tif (!n) break;\r\n\t\tprev += x;\r\n\t\tfor (let i = 0; i < n; i++) {\r\n\t\t\tret.push(prev + i);\r\n\t\t}\r\n\t\tprev += n + 1;\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\nfunction read_sorted_arrays(next) {\r\n\treturn read_array_while(() => { \r\n\t\tlet v = read_sorted(next);\r\n\t\tif (v.length) return v;\r\n\t});\r\n}\r\n\r\n// returns map of x => ys\r\nfunction read_mapped(next) {\r\n\tlet ret = [];\r\n\twhile (true) {\r\n\t\tlet w = next();\r\n\t\tif (w == 0) break;\r\n\t\tret.push(read_linear_table(w, next));\r\n\t}\r\n\twhile (true) {\r\n\t\tlet w = next() - 1;\r\n\t\tif (w < 0) break;\r\n\t\tret.push(read_replacement_table(w, next));\r\n\t}\r\n\treturn ret.flat();\r\n}\r\n\r\n// read until next is falsy\r\n// return array of read values\r\nfunction read_array_while(next) {\r\n\tlet v = [];\r\n\twhile (true) {\r\n\t\tlet x = next(v.length);\r\n\t\tif (!x) break;\r\n\t\tv.push(x);\r\n\t}\r\n\treturn v;\r\n}\r\n\r\n// read w columns of length n\r\n// return as n rows of length w\r\nfunction read_transposed(n, w, next) {\r\n\tlet m = Array(n).fill().map(() => []);\r\n\tfor (let i = 0; i < w; i++) {\r\n\t\tread_deltas(n, next).forEach((x, j) => m[j].push(x));\r\n\t}\r\n\treturn m;\r\n}\r\n \r\n// returns [[x, ys], [x+dx, ys+dy], [x+2*dx, ys+2*dy], ...]\r\n// where dx/dy = steps, n = run size, w = length of y\r\nfunction read_linear_table(w, next) {\r\n\tlet dx = 1 + next();\r\n\tlet dy = next();\r\n\tlet vN = read_array_while(next);\r\n\tlet m = read_transposed(vN.length, 1+w, next);\r\n\treturn m.flatMap((v, i) => {\r\n\t\tlet [x, ...ys] = v;\r\n\t\treturn Array(vN[i]).fill().map((_, j) => {\r\n\t\t\tlet j_dy = j * dy;\r\n\t\t\treturn [x + j * dx, ys.map(y => y + j_dy)];\r\n\t\t});\r\n\t});\r\n}\r\n\r\n// return [[x, ys...], ...]\r\n// where w = length of y\r\nfunction read_replacement_table(w, next) { \r\n\tlet n = 1 + next();\r\n\tlet m = read_transposed(n, 1+w, next);\r\n\treturn m.map(v => [v[0], v.slice(1)]);\r\n}\r\n\r\n\r\nfunction read_trie(next) {\r\n\tlet ret = [];\r\n\tlet sorted = read_sorted(next); \r\n\texpand(decode([]), []);\r\n\treturn ret; // not sorted\r\n\tfunction decode(Q) { // characters that lead into this node\r\n\t\tlet S = next(); // state: valid, save, check\r\n\t\tlet B = read_array_while(() => { // buckets leading to new nodes\r\n\t\t\tlet cps = read_sorted(next).map(i => sorted[i]);\r\n\t\t\tif (cps.length) return decode(cps);\r\n\t\t});\r\n\t\treturn {S, B, Q};\r\n\t}\r\n\tfunction expand({S, B}, cps, saved) {\r\n\t\tif (S & 4 && saved === cps[cps.length-1]) return;\r\n\t\tif (S & 2) saved = cps[cps.length-1];\r\n\t\tif (S & 1) ret.push(cps); \r\n\t\tfor (let br of B) {\r\n\t\t\tfor (let cp of br.Q) {\r\n\t\t\t\texpand(br, [...cps, cp], saved);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\n\nfunction hex_cp(cp) {\r\n\treturn cp.toString(16).toUpperCase().padStart(2, '0');\r\n}\r\n\r\nfunction quote_cp(cp) {\r\n\treturn `{${hex_cp(cp)}}`; // raffy convention: like \"\\u{X}\" w/o the \"\\u\"\r\n}\r\n\r\n/*\r\nexport function explode_cp(s) {\r\n\treturn [...s].map(c => c.codePointAt(0));\r\n}\r\n*/\r\nfunction explode_cp(s) { // this is about 2x faster\r\n\tlet cps = [];\r\n\tfor (let pos = 0, len = s.length; pos < len; ) {\r\n\t\tlet cp = s.codePointAt(pos);\r\n\t\tpos += cp < 0x10000 ? 1 : 2;\r\n\t\tcps.push(cp);\r\n\t}\r\n\treturn cps;\r\n}\r\n\r\nfunction str_from_cps(cps) {\r\n\tconst chunk = 4096;\r\n\tlet len = cps.length;\r\n\tif (len < chunk) return String.fromCodePoint(...cps);\r\n\tlet buf = [];\r\n\tfor (let i = 0; i < len; ) {\r\n\t\tbuf.push(String.fromCodePoint(...cps.slice(i, i += chunk)));\r\n\t}\r\n\treturn buf.join('');\r\n}\r\n\r\nfunction compare_arrays(a, b) {\r\n\tlet n = a.length;\r\n\tlet c = n - b.length;\r\n\tfor (let i = 0; c == 0 && i < n; i++) c = a[i] - b[i];\r\n\treturn c;\r\n}\n\n// created 2023-09-25T01:01:55.148Z\n// compressed base64-encoded blob for include-nf data\n// source: https://github.com/adraffy/ens-normalize.js/blob/main/src/make.js\n// see: https://github.com/adraffy/ens-normalize.js#security\n// SHA-256: a974b6f8541fc29d919bc85118af0a44015851fab5343f8679cb31be2bdb209e\nvar COMPRESSED = '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';\n\n// https://unicode.org/reports/tr15/\r\n// for reference implementation\r\n// see: /derive/nf.js\r\n\r\n\r\n// algorithmic hangul\r\n// https://www.unicode.org/versions/Unicode15.0.0/ch03.pdf (page 144)\r\nconst S0 = 0xAC00;\r\nconst L0 = 0x1100;\r\nconst V0 = 0x1161;\r\nconst T0 = 0x11A7;\r\nconst L_COUNT = 19;\r\nconst V_COUNT = 21;\r\nconst T_COUNT = 28;\r\nconst N_COUNT = V_COUNT * T_COUNT;\r\nconst S_COUNT = L_COUNT * N_COUNT;\r\nconst S1 = S0 + S_COUNT;\r\nconst L1 = L0 + L_COUNT;\r\nconst V1 = V0 + V_COUNT;\r\nconst T1 = T0 + T_COUNT;\r\n\r\nfunction unpack_cc(packed) {\r\n\treturn (packed >> 24) & 0xFF;\r\n}\r\nfunction unpack_cp(packed) {\r\n\treturn packed & 0xFFFFFF;\r\n}\r\n\r\nlet SHIFTED_RANK, EXCLUSIONS, DECOMP, RECOMP;\r\n\r\nfunction init$1() {\r\n\t//console.time('nf');\r\n\tlet r = read_compressed_payload(COMPRESSED);\r\n\tSHIFTED_RANK = new Map(read_sorted_arrays(r).flatMap((v, i) => v.map(x => [x, (i+1) << 24]))); // pre-shifted\r\n\tEXCLUSIONS = new Set(read_sorted(r));\r\n\tDECOMP = new Map();\r\n\tRECOMP = new Map();\r\n\tfor (let [cp, cps] of read_mapped(r)) {\r\n\t\tif (!EXCLUSIONS.has(cp) && cps.length == 2) {\r\n\t\t\tlet [a, b] = cps;\r\n\t\t\tlet bucket = RECOMP.get(a);\r\n\t\t\tif (!bucket) {\r\n\t\t\t\tbucket = new Map();\r\n\t\t\t\tRECOMP.set(a, bucket);\r\n\t\t\t}\r\n\t\t\tbucket.set(b, cp);\r\n\t\t}\r\n\t\tDECOMP.set(cp, cps.reverse()); // stored reversed\r\n\t}\r\n\t//console.timeEnd('nf');\r\n\t// 20230905: 11ms\r\n}\r\n\r\nfunction is_hangul(cp) {\r\n\treturn cp >= S0 && cp < S1;\r\n}\r\n\r\nfunction compose_pair(a, b) {\r\n\tif (a >= L0 && a < L1 && b >= V0 && b < V1) {\r\n\t\treturn S0 + (a - L0) * N_COUNT + (b - V0) * T_COUNT;\r\n\t} else if (is_hangul(a) && b > T0 && b < T1 && (a - S0) % T_COUNT == 0) {\r\n\t\treturn a + (b - T0);\r\n\t} else {\r\n\t\tlet recomp = RECOMP.get(a);\r\n\t\tif (recomp) {\r\n\t\t\trecomp = recomp.get(b);\r\n\t\t\tif (recomp) {\r\n\t\t\t\treturn recomp;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n}\r\n\r\nfunction decomposed(cps) {\r\n\tif (!SHIFTED_RANK) init$1();\r\n\tlet ret = [];\r\n\tlet buf = [];\r\n\tlet check_order = false;\r\n\tfunction add(cp) {\r\n\t\tlet cc = SHIFTED_RANK.get(cp);\r\n\t\tif (cc) {\r\n\t\t\tcheck_order = true;\r\n\t\t\tcp |= cc;\r\n\t\t}\r\n\t\tret.push(cp);\r\n\t}\r\n\tfor (let cp of cps) {\r\n\t\twhile (true) {\r\n\t\t\tif (cp < 0x80) {\r\n\t\t\t\tret.push(cp);\r\n\t\t\t} else if (is_hangul(cp)) {\r\n\t\t\t\tlet s_index = cp - S0;\r\n\t\t\t\tlet l_index = s_index / N_COUNT | 0;\r\n\t\t\t\tlet v_index = (s_index % N_COUNT) / T_COUNT | 0;\r\n\t\t\t\tlet t_index = s_index % T_COUNT;\r\n\t\t\t\tadd(L0 + l_index);\r\n\t\t\t\tadd(V0 + v_index);\r\n\t\t\t\tif (t_index > 0) add(T0 + t_index);\r\n\t\t\t} else {\r\n\t\t\t\tlet mapped = DECOMP.get(cp);\r\n\t\t\t\tif (mapped) {\r\n\t\t\t\t\tbuf.push(...mapped);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tadd(cp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!buf.length) break;\r\n\t\t\tcp = buf.pop();\r\n\t\t}\r\n\t}\r\n\tif (check_order && ret.length > 1) {\r\n\t\tlet prev_cc = unpack_cc(ret[0]);\r\n\t\tfor (let i = 1; i < ret.length; i++) {\r\n\t\t\tlet cc = unpack_cc(ret[i]);\r\n\t\t\tif (cc == 0 || prev_cc <= cc) {\r\n\t\t\t\tprev_cc = cc;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tlet j = i-1;\r\n\t\t\twhile (true) {\r\n\t\t\t\tlet tmp = ret[j+1];\r\n\t\t\t\tret[j+1] = ret[j];\r\n\t\t\t\tret[j] = tmp;\r\n\t\t\t\tif (!j) break;\r\n\t\t\t\tprev_cc = unpack_cc(ret[--j]);\r\n\t\t\t\tif (prev_cc <= cc) break;\r\n\t\t\t}\r\n\t\t\tprev_cc = unpack_cc(ret[i]);\r\n\t\t}\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\nfunction composed_from_decomposed(v) {\r\n\tlet ret = [];\r\n\tlet stack = [];\r\n\tlet prev_cp = -1;\r\n\tlet prev_cc = 0;\r\n\tfor (let packed of v) {\r\n\t\tlet cc = unpack_cc(packed);\r\n\t\tlet cp = unpack_cp(packed);\r\n\t\tif (prev_cp == -1) {\r\n\t\t\tif (cc == 0) {\r\n\t\t\t\tprev_cp = cp;\r\n\t\t\t} else {\r\n\t\t\t\tret.push(cp);\r\n\t\t\t}\r\n\t\t} else if (prev_cc > 0 && prev_cc >= cc) {\r\n\t\t\tif (cc == 0) {\r\n\t\t\t\tret.push(prev_cp, ...stack);\r\n\t\t\t\tstack.length = 0;\r\n\t\t\t\tprev_cp = cp;\r\n\t\t\t} else {\r\n\t\t\t\tstack.push(cp);\r\n\t\t\t}\r\n\t\t\tprev_cc = cc;\r\n\t\t} else {\r\n\t\t\tlet composed = compose_pair(prev_cp, cp);\r\n\t\t\tif (composed >= 0) {\r\n\t\t\t\tprev_cp = composed;\r\n\t\t\t} else if (prev_cc == 0 && cc == 0) {\r\n\t\t\t\tret.push(prev_cp);\r\n\t\t\t\tprev_cp = cp;\r\n\t\t\t} else {\r\n\t\t\t\tstack.push(cp);\r\n\t\t\t\tprev_cc = cc;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (prev_cp >= 0) {\r\n\t\tret.push(prev_cp, ...stack);\t\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\n// note: cps can be iterable\r\nfunction nfd(cps) {\r\n\treturn decomposed(cps).map(unpack_cp);\r\n}\r\nfunction nfc(cps) {\r\n\treturn composed_from_decomposed(decomposed(cps));\r\n}\n\nconst HYPHEN = 0x2D;\r\nconst STOP = 0x2E;\r\nconst STOP_CH = '.';\r\nconst FE0F = 0xFE0F;\r\nconst UNIQUE_PH = 1;\r\n\r\n// 20230913: replace [...v] with Array_from(v) to avoid large spreads\r\nconst Array_from = x => Array.from(x); // Array.from.bind(Array);\r\n\r\nfunction group_has_cp(g, cp) {\r\n\t// 20230913: keep primary and secondary distinct instead of creating valid union\r\n\treturn g.P.has(cp) || g.Q.has(cp);\r\n}\r\n\r\nclass Emoji extends Array {\r\n\tget is_emoji() { return true; } // free tagging system\r\n}\r\n\r\nlet MAPPED, IGNORED, CM, NSM, ESCAPE, NFC_CHECK, GROUPS, WHOLE_VALID, WHOLE_MAP, VALID, EMOJI_LIST, EMOJI_ROOT;\r\n\r\nfunction init() {\r\n\tif (MAPPED) return;\r\n\t\r\n\tlet r = read_compressed_payload(COMPRESSED$1);\r\n\tconst read_sorted_array = () => read_sorted(r);\r\n\tconst read_sorted_set = () => new Set(read_sorted_array());\r\n\tconst set_add_many = (set, v) => v.forEach(x => set.add(x));\r\n\r\n\tMAPPED = new Map(read_mapped(r)); \r\n\tIGNORED = read_sorted_set(); // ignored characters are not valid, so just read raw codepoints\r\n\r\n\t/*\r\n\t// direct include from payload is smaller than the decompression code\r\n\tconst FENCED = new Map(read_array_while(() => {\r\n\t\tlet cp = r();\r\n\t\tif (cp) return [cp, read_str(r())];\r\n\t}));\r\n\t*/\r\n\t// 20230217: we still need all CM for proper error formatting\r\n\t// but norm only needs NSM subset that are potentially-valid\r\n\tCM = read_sorted_array();\r\n\tNSM = new Set(read_sorted_array().map(i => CM[i]));\r\n\tCM = new Set(CM);\r\n\t\r\n\tESCAPE = read_sorted_set(); // characters that should not be printed\r\n\tNFC_CHECK = read_sorted_set(); // only needed to illustrate ens_tokenize() transformations\r\n\r\n\tlet chunks = read_sorted_arrays(r);\r\n\tlet unrestricted = r();\r\n\t//const read_chunked = () => new Set(read_sorted_array().flatMap(i => chunks[i]).concat(read_sorted_array()));\r\n\tconst read_chunked = () => {\r\n\t\t// 20230921: build set in parts, 2x faster\r\n\t\tlet set = new Set();\r\n\t\tread_sorted_array().forEach(i => set_add_many(set, chunks[i]));\r\n\t\tset_add_many(set, read_sorted_array());\r\n\t\treturn set; \r\n\t};\r\n\tGROUPS = read_array_while(i => {\r\n\t\t// minifier property mangling seems unsafe\r\n\t\t// so these are manually renamed to single chars\r\n\t\tlet N = read_array_while(r).map(x => x+0x60);\r\n\t\tif (N.length) {\r\n\t\t\tlet R = i >= unrestricted; // unrestricted then restricted\r\n\t\t\tN[0] -= 32; // capitalize\r\n\t\t\tN = str_from_cps(N);\r\n\t\t\tif (R) N=`Restricted[${N}]`;\r\n\t\t\tlet P = read_chunked(); // primary\r\n\t\t\tlet Q = read_chunked(); // secondary\r\n\t\t\tlet M = !r(); // not-whitelisted, check for NSM\r\n\t\t\t// *** this code currently isn't needed ***\r\n\t\t\t/*\r\n\t\t\tlet V = [...P, ...Q].sort((a, b) => a-b); // derive: sorted valid\r\n\t\t\tlet M = r()-1; // number of combining mark\r\n\t\t\tif (M < 0) { // whitelisted\r\n\t\t\t\tM = new Map(read_array_while(() => {\r\n\t\t\t\t\tlet i = r();\r\n\t\t\t\t\tif (i) return [V[i-1], read_array_while(() => {\r\n\t\t\t\t\t\tlet v = read_array_while(r);\r\n\t\t\t\t\t\tif (v.length) return v.map(x => x-1);\r\n\t\t\t\t\t})];\r\n\t\t\t\t}));\r\n\t\t\t}*/\r\n\t\t\treturn {N, P, Q, M, R};\r\n\t\t}\r\n\t});\r\n\r\n\t// decode compressed wholes\r\n\tWHOLE_VALID = read_sorted_set();\r\n\tWHOLE_MAP = new Map();\r\n\tlet wholes = read_sorted_array().concat(Array_from(WHOLE_VALID)).sort((a, b) => a-b); // must be sorted\r\n\twholes.forEach((cp, i) => {\r\n\t\tlet d = r(); \r\n\t\tlet w = wholes[i] = d ? wholes[i-d] : {V: [], M: new Map()};\r\n\t\tw.V.push(cp); // add to member set\r\n\t\tif (!WHOLE_VALID.has(cp)) {\r\n\t\t\tWHOLE_MAP.set(cp, w);  // register with whole map\r\n\t\t}\r\n\t});\r\n\r\n\t// compute confusable-extent complements\r\n\t// usage: WHOLE_MAP.get(cp).M.get(cp) = complement set\r\n\tfor (let {V, M} of new Set(WHOLE_MAP.values())) {\r\n\t\t// connect all groups that have each whole character\r\n\t\tlet recs = [];\r\n\t\tfor (let cp of V) {\r\n\t\t\tlet gs = GROUPS.filter(g => group_has_cp(g, cp));\r\n\t\t\tlet rec = recs.find(({G}) => gs.some(g => G.has(g)));\r\n\t\t\tif (!rec) {\r\n\t\t\t\trec = {G: new Set(), V: []};\r\n\t\t\t\trecs.push(rec);\r\n\t\t\t}\r\n\t\t\trec.V.push(cp);\r\n\t\t\tset_add_many(rec.G, gs);\r\n\t\t}\r\n\t\t// per character cache groups which are not a member of the extent\r\n\t\tlet union = recs.flatMap(x => Array_from(x.G)); // all of the groups used by this whole\r\n\t\tfor (let {G, V} of recs) {\r\n\t\t\tlet complement = new Set(union.filter(g => !G.has(g))); // groups not covered by the extent\r\n\t\t\tfor (let cp of V) {\r\n\t\t\t\tM.set(cp, complement); // this is the same reference\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// compute valid set\r\n\t// 20230924: VALID was union but can be re-used\r\n\tVALID = new Set(); // exists in 1+ groups\r\n\tlet multi = new Set(); // exists in 2+ groups\r\n\tconst add_to_union = cp => VALID.has(cp) ? multi.add(cp) : VALID.add(cp);\r\n\tfor (let g of GROUPS) {\r\n\t\tfor (let cp of g.P) add_to_union(cp);\r\n\t\tfor (let cp of g.Q) add_to_union(cp);\r\n\t}\r\n\t// dual purpose WHOLE_MAP: return placeholder if unique non-confusable\r\n\tfor (let cp of VALID) {\r\n\t\tif (!WHOLE_MAP.has(cp) && !multi.has(cp)) {\r\n\t\t\tWHOLE_MAP.set(cp, UNIQUE_PH);\r\n\t\t}\r\n\t}\r\n\t// add all decomposed parts\r\n\t// see derive: \"Valid is Closed (via Brute-force)\"\r\n\tset_add_many(VALID, nfd(VALID));\r\n\t\r\n\t// decode emoji\r\n\t// 20230719: emoji are now fully-expanded to avoid quirk logic \r\n\tEMOJI_LIST = read_trie(r).map(v => Emoji.from(v)).sort(compare_arrays);\r\n\tEMOJI_ROOT = new Map(); // this has approx 7K nodes (2+ per emoji)\r\n\tfor (let cps of EMOJI_LIST) {\r\n\t\t// 20230719: change to *slightly* stricter algorithm which disallows \r\n\t\t// insertion of misplaced FE0F in emoji sequences (matching ENSIP-15)\r\n\t\t// example: beautified [A B] (eg. flag emoji) \r\n\t\t//  before: allow: [A FE0F B], error: [A FE0F FE0F B] \r\n\t\t//   after: error: both\r\n\t\t// note: this code now matches ENSNormalize.{cs,java} logic\r\n\t\tlet prev = [EMOJI_ROOT];\r\n\t\tfor (let cp of cps) {\r\n\t\t\tlet next = prev.map(node => {\r\n\t\t\t\tlet child = node.get(cp);\r\n\t\t\t\tif (!child) {\r\n\t\t\t\t\t// should this be object? \r\n\t\t\t\t\t// (most have 1-2 items, few have many)\r\n\t\t\t\t\t// 20230719: no, v8 default map is 4?\r\n\t\t\t\t\tchild = new Map();\r\n\t\t\t\t\tnode.set(cp, child);\r\n\t\t\t\t}\r\n\t\t\t\treturn child;\r\n\t\t\t});\r\n\t\t\tif (cp === FE0F) {\r\n\t\t\t\tprev.push(...next); // less than 20 elements\r\n\t\t\t} else {\r\n\t\t\t\tprev = next;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let x of prev) {\r\n\t\t\tx.V = cps;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// if escaped: {HEX}\r\n//       else: \"x\" {HEX}\r\nfunction quoted_cp(cp) {\r\n\treturn (should_escape(cp) ? '' : `${bidi_qq(safe_str_from_cps([cp]))} `) + quote_cp(cp);\r\n}\r\n\r\n// 20230211: some messages can be mixed-directional and result in spillover\r\n// use 200E after a quoted string to force the remainder of a string from \r\n// acquring the direction of the quote\r\n// https://www.w3.org/International/questions/qa-bidi-unicode-controls#exceptions\r\nfunction bidi_qq(s) {\r\n\treturn `\"${s}\"\\u200E`; // strong LTR\r\n}\r\n\r\nfunction check_label_extension(cps) {\r\n\tif (cps.length >= 4 && cps[2] == HYPHEN && cps[3] == HYPHEN) {\r\n\t\tthrow new Error(`invalid label extension: \"${str_from_cps(cps.slice(0, 4))}\"`); // this can only be ascii so cant be bidi\r\n\t}\r\n}\r\nfunction check_leading_underscore(cps) {\r\n\tconst UNDERSCORE = 0x5F;\r\n\tfor (let i = cps.lastIndexOf(UNDERSCORE); i > 0; ) {\r\n\t\tif (cps[--i] !== UNDERSCORE) {\r\n\t\t\tthrow new Error('underscore allowed only at start');\r\n\t\t}\r\n\t}\r\n}\r\n// check that a fenced cp is not leading, trailing, or touching another fenced cp\r\nfunction check_fenced(cps) {\r\n\tlet cp = cps[0];\r\n\tlet prev = FENCED.get(cp);\r\n\tif (prev) throw error_placement(`leading ${prev}`);\r\n\tlet n = cps.length;\r\n\tlet last = -1; // prevents trailing from throwing\r\n\tfor (let i = 1; i < n; i++) {\r\n\t\tcp = cps[i];\r\n\t\tlet match = FENCED.get(cp);\r\n\t\tif (match) {\r\n\t\t\t// since cps[0] isn't fenced, cps[1] cannot throw\r\n\t\t\tif (last == i) throw error_placement(`${prev} + ${match}`);\r\n\t\t\tlast = i + 1;\r\n\t\t\tprev = match;\r\n\t\t}\r\n\t}\r\n\tif (last == n) throw error_placement(`trailing ${prev}`);\r\n}\r\n\r\n// create a safe to print string \r\n// invisibles are escaped\r\n// leading cm uses placeholder\r\n// if cps exceed max, middle truncate with ellipsis\r\n// quoter(cp) => string, eg. 3000 => \"{3000}\"\r\n// note: in html, you'd call this function then replace [<>&] with entities\r\nfunction safe_str_from_cps(cps, max = Infinity, quoter = quote_cp) {\r\n\t//if (Number.isInteger(cps)) cps = [cps];\r\n\t//if (!Array.isArray(cps)) throw new TypeError(`expected codepoints`);\r\n\tlet buf = [];\r\n\tif (is_combining_mark(cps[0])) buf.push('\u25CC');\r\n\tif (cps.length > max) {\r\n\t\tmax >>= 1;\r\n\t\tcps = [...cps.slice(0, max), 0x2026, ...cps.slice(-max)];\r\n\t}\r\n\tlet prev = 0;\r\n\tlet n = cps.length;\r\n\tfor (let i = 0; i < n; i++) {\r\n\t\tlet cp = cps[i];\r\n\t\tif (should_escape(cp)) {\r\n\t\t\tbuf.push(str_from_cps(cps.slice(prev, i)));\r\n\t\t\tbuf.push(quoter(cp));\r\n\t\t\tprev = i + 1;\r\n\t\t}\r\n\t}\r\n\tbuf.push(str_from_cps(cps.slice(prev, n)));\r\n\treturn buf.join('');\r\n}\r\n\r\n// note: set(s) cannot be exposed because they can be modified\r\n// note: Object.freeze() doesn't work\r\nfunction is_combining_mark(cp) {\r\n\tinit();\r\n\treturn CM.has(cp);\r\n}\r\nfunction should_escape(cp) {\r\n\tinit();\r\n\treturn ESCAPE.has(cp);\r\n}\r\n\r\n// return all supported emoji as fully-qualified emoji \r\n// ordered by length then lexicographic \r\nfunction ens_emoji() {\r\n\tinit();\r\n\treturn EMOJI_LIST.map(x => x.slice()); // emoji are exposed so copy\r\n}\r\n\r\nfunction ens_normalize_fragment(frag, decompose) {\r\n\tinit();\r\n\tlet nf = decompose ? nfd : nfc;\r\n\treturn frag.split(STOP_CH).map(label => str_from_cps(tokens_from_str(explode_cp(label), nf, filter_fe0f).flat())).join(STOP_CH);\r\n}\r\n\r\nfunction ens_normalize(name) {\r\n\treturn flatten(split(name, nfc, filter_fe0f));\r\n}\r\n\r\nfunction ens_beautify(name) {\r\n\tlet labels = split(name, nfc, x => x); // emoji not exposed\r\n\tfor (let {type, output, error} of labels) {\r\n\t\tif (error) break; // flatten will throw\r\n\r\n\t\t// replace leading/trailing hyphen\r\n\t\t// 20230121: consider beautifing all or leading/trailing hyphen to unicode variant\r\n\t\t// not exactly the same in every font, but very similar: \"-\" vs \"\u2010\"\r\n\t\t/*\r\n\t\tconst UNICODE_HYPHEN = 0x2010;\r\n\t\t// maybe this should replace all for visual consistancy?\r\n\t\t// `node tools/reg-count.js regex ^-\\{2,\\}` => 592\r\n\t\t//for (let i = 0; i < output.length; i++) if (output[i] == 0x2D) output[i] = 0x2010;\r\n\t\tif (output[0] == HYPHEN) output[0] = UNICODE_HYPHEN;\r\n\t\tlet end = output.length-1;\r\n\t\tif (output[end] == HYPHEN) output[end] = UNICODE_HYPHEN;\r\n\t\t*/\r\n\t\t// 20230123: WHATWG URL uses \"CheckHyphens\" false\r\n\t\t// https://url.spec.whatwg.org/#idna\r\n\r\n\t\t// update ethereum symbol\r\n\t\t// \u03BE => \u039E if not greek\r\n\t\tif (type !== 'Greek') array_replace(output, 0x3BE, 0x39E);\r\n\r\n\t\t// 20221213: fixes bidi subdomain issue, but breaks invariant (200E is disallowed)\r\n\t\t// could be fixed with special case for: 2D (.) + 200E (LTR)\r\n\t\t// https://discuss.ens.domains/t/bidi-label-ordering-spoof/15824\r\n\t\t//output.splice(0, 0, 0x200E);\r\n\t}\r\n\treturn flatten(labels);\r\n}\r\n\r\nfunction array_replace(v, a, b) {\r\n\tlet prev = 0;\r\n\twhile (true) {\r\n\t\tlet next = v.indexOf(a, prev);\r\n\t\tif (next < 0) break;\r\n\t\tv[next] = b; \r\n\t\tprev = next + 1;\r\n\t}\r\n}\r\n\r\nfunction ens_split(name, preserve_emoji) {\r\n\treturn split(name, nfc, preserve_emoji ? x => x.slice() : filter_fe0f); // emoji are exposed so copy\r\n}\r\n\r\nfunction split(name, nf, ef) {\r\n\tif (!name) return []; // 20230719: empty name allowance\r\n\tinit();\r\n\tlet offset = 0;\r\n\t// https://unicode.org/reports/tr46/#Validity_Criteria\r\n\t// 4.) \"The label must not contain a U+002E ( . ) FULL STOP.\"\r\n\treturn name.split(STOP_CH).map(label => {\r\n\t\tlet input = explode_cp(label);\r\n\t\tlet info = {\r\n\t\t\tinput,\r\n\t\t\toffset, // codepoint, not substring!\r\n\t\t};\r\n\t\toffset += input.length + 1; // + stop\r\n\t\ttry {\r\n\t\t\t// 1.) \"The label must be in Unicode Normalization Form NFC\"\r\n\t\t\tlet tokens = info.tokens = tokens_from_str(input, nf, ef);\r\n\t\t\tlet token_count = tokens.length;\r\n\t\t\tlet type;\r\n\t\t\tif (!token_count) { // the label was effectively empty (could of had ignored characters)\r\n\t\t\t\t//norm = [];\r\n\t\t\t\t//type = 'None'; // use this instead of next match, \"ASCII\"\r\n\t\t\t\t// 20230120: change to strict\r\n\t\t\t\t// https://discuss.ens.domains/t/ens-name-normalization-2nd/14564/59\r\n\t\t\t\tthrow new Error(`empty label`);\r\n\t\t\t} \r\n\t\t\tlet norm = info.output = tokens.flat();\r\n\t\t\tcheck_leading_underscore(norm);\r\n\t\t\tlet emoji = info.emoji = token_count > 1 || tokens[0].is_emoji; // same as: tokens.some(x => x.is_emoji);\r\n\t\t\tif (!emoji && norm.every(cp => cp < 0x80)) { // special case for ascii\r\n\t\t\t\t// 20230123: matches matches WHATWG, see note 3.3\r\n\t\t\t\tcheck_label_extension(norm); // only needed for ascii\r\n\t\t\t\t// cant have fenced\r\n\t\t\t\t// cant have cm\r\n\t\t\t\t// cant have wholes\r\n\t\t\t\t// see derive: \"Fastpath ASCII\"\r\n\t\t\t\ttype = 'ASCII';\r\n\t\t\t} else {\r\n\t\t\t\tlet chars = tokens.flatMap(x => x.is_emoji ? [] : x); // all of the nfc tokens concat together\r\n\t\t\t\tif (!chars.length) { // theres no text, just emoji\r\n\t\t\t\t\ttype = 'Emoji';\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// 5.) \"The label must not begin with a combining mark, that is: General_Category=Mark.\"\r\n\t\t\t\t\tif (CM.has(norm[0])) throw error_placement('leading combining mark');\r\n\t\t\t\t\tfor (let i = 1; i < token_count; i++) { // we've already checked the first token\r\n\t\t\t\t\t\tlet cps = tokens[i];\r\n\t\t\t\t\t\tif (!cps.is_emoji && CM.has(cps[0])) { // every text token has emoji neighbors, eg. EtEEEtEt...\r\n\t\t\t\t\t\t\t// bidi_qq() not needed since emoji is LTR and cps is a CM\r\n\t\t\t\t\t\t\tthrow error_placement(`emoji + combining mark: \"${str_from_cps(tokens[i-1])} + ${safe_str_from_cps([cps[0]])}\"`); \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcheck_fenced(norm);\r\n\t\t\t\t\tlet unique = Array_from(new Set(chars));\r\n\t\t\t\t\tlet [g] = determine_group(unique); // take the first match\r\n\t\t\t\t\t// see derive: \"Matching Groups have Same CM Style\"\r\n\t\t\t\t\t// alternative: could form a hybrid type: Latin/Japanese/...\t\r\n\t\t\t\t\tcheck_group(g, chars); // need text in order\r\n\t\t\t\t\tcheck_whole(g, unique); // only need unique text (order would be required for multiple-char confusables)\r\n\t\t\t\t\ttype = g.N;\r\n\t\t\t\t\t// 20230121: consider exposing restricted flag\r\n\t\t\t\t\t// it's simpler to just check for 'Restricted'\r\n\t\t\t\t\t// or even better: type.endsWith(']')\r\n\t\t\t\t\t//if (g.R) info.restricted = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tinfo.type = type;\r\n\t\t} catch (err) {\r\n\t\t\tinfo.error = err; // use full error object\r\n\t\t}\r\n\t\treturn info;\r\n\t});\r\n}\r\n\r\nfunction check_whole(group, unique) {\r\n\tlet maker;\r\n\tlet shared = [];\r\n\tfor (let cp of unique) {\r\n\t\tlet whole = WHOLE_MAP.get(cp);\r\n\t\tif (whole === UNIQUE_PH) return; // unique, non-confusable\r\n\t\tif (whole) {\r\n\t\t\tlet set = whole.M.get(cp); // groups which have a character that look-like this character\r\n\t\t\tmaker = maker ? maker.filter(g => set.has(g)) : Array_from(set);\r\n\t\t\tif (!maker.length) return; // confusable intersection is empty\r\n\t\t} else {\r\n\t\t\tshared.push(cp); \r\n\t\t}\r\n\t}\r\n\tif (maker) {\r\n\t\t// we have 1+ confusable\r\n\t\t// check if any of the remaining groups\r\n\t\t// contain the shared characters too\r\n\t\tfor (let g of maker) {\r\n\t\t\tif (shared.every(cp => group_has_cp(g, cp))) {\r\n\t\t\t\tthrow new Error(`whole-script confusable: ${group.N}/${g.N}`);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// assumption: unique.size > 0\r\n// returns list of matching groups\r\nfunction determine_group(unique) {\r\n\tlet groups = GROUPS;\r\n\tfor (let cp of unique) {\r\n\t\t// note: we need to dodge CM that are whitelisted\r\n\t\t// but that code isn't currently necessary\r\n\t\tlet gs = groups.filter(g => group_has_cp(g, cp));\r\n\t\tif (!gs.length) {\r\n\t\t\tif (!GROUPS.some(g => group_has_cp(g, cp))) { \r\n\t\t\t\t// the character was composed of valid parts\r\n\t\t\t\t// but it's NFC form is invalid\r\n\t\t\t\t// 20230716: change to more exact statement, see: ENSNormalize.{cs,java}\r\n\t\t\t\t// note: this doesn't have to be a composition\r\n\t\t\t\t// 20230720: change to full check\r\n\t\t\t\tthrow error_disallowed(cp); // this should be rare\r\n\t\t\t} else {\r\n\t\t\t\t// there is no group that contains all these characters\r\n\t\t\t\t// throw using the highest priority group that matched\r\n\t\t\t\t// https://www.unicode.org/reports/tr39/#mixed_script_confusables\r\n\t\t\t\tthrow error_group_member(groups[0], cp);\r\n\t\t\t}\r\n\t\t}\r\n\t\tgroups = gs;\r\n\t\tif (gs.length == 1) break; // there is only one group left\r\n\t}\r\n\t// there are at least 1 group(s) with all of these characters\r\n\treturn groups;\r\n}\r\n\r\n// throw on first error\r\nfunction flatten(split) {\r\n\treturn split.map(({input, error, output}) => {\r\n\t\tif (error) {\r\n\t\t\t// don't print label again if just a single label\r\n\t\t\tlet msg = error.message;\r\n\t\t\t// bidi_qq() only necessary if msg is digits\r\n\t\t\tthrow new Error(split.length == 1 ? msg : `Invalid label ${bidi_qq(safe_str_from_cps(input, 63))}: ${msg}`); \r\n\t\t}\r\n\t\treturn str_from_cps(output);\r\n\t}).join(STOP_CH);\r\n}\r\n\r\nfunction error_disallowed(cp) {\r\n\t// TODO: add cp to error?\r\n\treturn new Error(`disallowed character: ${quoted_cp(cp)}`); \r\n}\r\nfunction error_group_member(g, cp) {\r\n\tlet quoted = quoted_cp(cp);\r\n\tlet gg = GROUPS.find(g => g.P.has(cp)); // only check primary\r\n\tif (gg) {\r\n\t\tquoted = `${gg.N} ${quoted}`;\r\n\t}\r\n\treturn new Error(`illegal mixture: ${g.N} + ${quoted}`);\r\n}\r\nfunction error_placement(where) {\r\n\treturn new Error(`illegal placement: ${where}`);\r\n}\r\n\r\n// assumption: cps.length > 0\r\n// assumption: cps[0] isn't a CM\r\n// assumption: the previous character isn't an emoji\r\nfunction check_group(g, cps) {\r\n\tfor (let cp of cps) {\r\n\t\tif (!group_has_cp(g, cp)) {\r\n\t\t\t// for whitelisted scripts, this will throw illegal mixture on invalid cm, eg. \"e{300}{300}\"\r\n\t\t\t// at the moment, it's unnecessary to introduce an extra error type\r\n\t\t\t// until there exists a whitelisted multi-character\r\n\t\t\t//   eg. if (M < 0 && is_combining_mark(cp)) { ... }\r\n\t\t\t// there are 3 cases:\r\n\t\t\t//   1. illegal cm for wrong group => mixture error\r\n\t\t\t//   2. illegal cm for same group => cm error\r\n\t\t\t//       requires set of whitelist cm per group: \r\n\t\t\t//        eg. new Set([...g.P, ...g.Q].flatMap(nfc).filter(cp => CM.has(cp)))\r\n\t\t\t//   3. wrong group => mixture error\r\n\t\t\tthrow error_group_member(g, cp);\r\n\t\t}\r\n\t}\r\n\t//if (M >= 0) { // we have a known fixed cm count\r\n\tif (g.M) { // we need to check for NSM\r\n\t\tlet decomposed = nfd(cps);\r\n\t\tfor (let i = 1, e = decomposed.length; i < e; i++) { // see: assumption\r\n\t\t\t// 20230210: bugfix: using cps instead of decomposed h/t Carbon225\r\n\t\t\t/*\r\n\t\t\tif (CM.has(decomposed[i])) {\r\n\t\t\t\tlet j = i + 1;\r\n\t\t\t\twhile (j < e && CM.has(decomposed[j])) j++;\r\n\t\t\t\tif (j - i > M) {\r\n\t\t\t\t\tthrow new Error(`too many combining marks: ${g.N} ${bidi_qq(str_from_cps(decomposed.slice(i-1, j)))} (${j-i}/${M})`);\r\n\t\t\t\t}\r\n\t\t\t\ti = j;\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\t// 20230217: switch to NSM counting\r\n\t\t\t// https://www.unicode.org/reports/tr39/#Optional_Detection\r\n\t\t\tif (NSM.has(decomposed[i])) {\r\n\t\t\t\tlet j = i + 1;\r\n\t\t\t\tfor (let cp; j < e && NSM.has(cp = decomposed[j]); j++) {\r\n\t\t\t\t\t// a. Forbid sequences of the same nonspacing mark.\r\n\t\t\t\t\tfor (let k = i; k < j; k++) { // O(n^2) but n < 100\r\n\t\t\t\t\t\tif (decomposed[k] == cp) {\r\n\t\t\t\t\t\t\tthrow new Error(`duplicate non-spacing marks: ${quoted_cp(cp)}`);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// parse to end so we have full nsm count\r\n\t\t\t\t// b. Forbid sequences of more than 4 nonspacing marks (gc=Mn or gc=Me).\r\n\t\t\t\tif (j - i > NSM_MAX) {\r\n\t\t\t\t\t// note: this slice starts with a base char or spacing-mark cm\r\n\t\t\t\t\tthrow new Error(`excessive non-spacing marks: ${bidi_qq(safe_str_from_cps(decomposed.slice(i-1, j)))} (${j-i}/${NSM_MAX})`);\r\n\t\t\t\t}\r\n\t\t\t\ti = j;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// *** this code currently isn't needed ***\r\n\t/*\r\n\tlet cm_whitelist = M instanceof Map;\r\n\tfor (let i = 0, e = cps.length; i < e; ) {\r\n\t\tlet cp = cps[i++];\r\n\t\tlet seqs = cm_whitelist && M.get(cp);\r\n\t\tif (seqs) { \r\n\t\t\t// list of codepoints that can follow\r\n\t\t\t// if this exists, this will always be 1+\r\n\t\t\tlet j = i;\r\n\t\t\twhile (j < e && CM.has(cps[j])) j++;\r\n\t\t\tlet cms = cps.slice(i, j);\r\n\t\t\tlet match = seqs.find(seq => !compare_arrays(seq, cms));\r\n\t\t\tif (!match) throw new Error(`disallowed combining mark sequence: \"${safe_str_from_cps([cp, ...cms])}\"`);\r\n\t\t\ti = j;\r\n\t\t} else if (!V.has(cp)) {\r\n\t\t\t// https://www.unicode.org/reports/tr39/#mixed_script_confusables\r\n\t\t\tlet quoted = quoted_cp(cp);\r\n\t\t\tfor (let cp of cps) {\r\n\t\t\t\tlet u = UNIQUE.get(cp);\r\n\t\t\t\tif (u && u !== g) {\r\n\t\t\t\t\t// if both scripts are restricted this error is confusing\r\n\t\t\t\t\t// because we don't differentiate RestrictedA from RestrictedB \r\n\t\t\t\t\tif (!u.R) quoted = `${quoted} is ${u.N}`;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthrow new Error(`disallowed ${g.N} character: ${quoted}`);\r\n\t\t\t//throw new Error(`disallowed character: ${quoted} (expected ${g.N})`);\r\n\t\t\t//throw new Error(`${g.N} does not allow: ${quoted}`);\r\n\t\t}\r\n\t}\r\n\tif (!cm_whitelist) {\r\n\t\tlet decomposed = nfd(cps);\r\n\t\tfor (let i = 1, e = decomposed.length; i < e; i++) { // we know it can't be cm leading\r\n\t\t\tif (CM.has(decomposed[i])) {\r\n\t\t\t\tlet j = i + 1;\r\n\t\t\t\twhile (j < e && CM.has(decomposed[j])) j++;\r\n\t\t\t\tif (j - i > M) {\r\n\t\t\t\t\tthrow new Error(`too many combining marks: \"${str_from_cps(decomposed.slice(i-1, j))}\" (${j-i}/${M})`);\r\n\t\t\t\t}\r\n\t\t\t\ti = j;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t*/\r\n}\r\n\r\n// given a list of codepoints\r\n// returns a list of lists, where emoji are a fully-qualified (as Array subclass)\r\n// eg. explode_cp(\"abc\uD83D\uDCA9d\") => [[61, 62, 63], Emoji[1F4A9, FE0F], [64]]\r\n// 20230818: rename for 'process' name collision h/t Javarome\r\n// https://github.com/adraffy/ens-normalize.js/issues/23\r\nfunction tokens_from_str(input, nf, ef) {\r\n\tlet ret = [];\r\n\tlet chars = [];\r\n\tinput = input.slice().reverse(); // flip so we can pop\r\n\twhile (input.length) {\r\n\t\tlet emoji = consume_emoji_reversed(input);\r\n\t\tif (emoji) {\r\n\t\t\tif (chars.length) {\r\n\t\t\t\tret.push(nf(chars));\r\n\t\t\t\tchars = [];\r\n\t\t\t}\r\n\t\t\tret.push(ef(emoji));\r\n\t\t} else {\r\n\t\t\tlet cp = input.pop();\r\n\t\t\tif (VALID.has(cp)) {\r\n\t\t\t\tchars.push(cp);\r\n\t\t\t} else {\r\n\t\t\t\tlet cps = MAPPED.get(cp);\r\n\t\t\t\tif (cps) {\r\n\t\t\t\t\tchars.push(...cps); // less than 10 elements\r\n\t\t\t\t} else if (!IGNORED.has(cp)) {\r\n\t\t\t\t\t// 20230912: unicode 15.1 changed the order of processing such that\r\n\t\t\t\t\t// disallowed parts are only rejected after NFC\r\n\t\t\t\t\t// https://unicode.org/reports/tr46/#Validity_Criteria\r\n\t\t\t\t\t// this doesn't impact normalization as of today\r\n\t\t\t\t\t// technically, this error can be removed as the group logic will apply similar logic\r\n\t\t\t\t\t// however the error type might be less clear\r\n\t\t\t\t\tthrow error_disallowed(cp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (chars.length) {\r\n\t\tret.push(nf(chars));\r\n\t}\r\n\treturn ret;\r\n}\r\n\r\nfunction filter_fe0f(cps) {\r\n\treturn cps.filter(cp => cp != FE0F);\r\n}\r\n\r\n// given array of codepoints\r\n// returns the longest valid emoji sequence (or undefined if no match)\r\n// *MUTATES* the supplied array\r\n// disallows interleaved ignored characters\r\n// fills (optional) eaten array with matched codepoints\r\nfunction consume_emoji_reversed(cps, eaten) {\r\n\tlet node = EMOJI_ROOT;\r\n\tlet emoji;\r\n\tlet pos = cps.length;\r\n\twhile (pos) {\r\n\t\tnode = node.get(cps[--pos]);\r\n\t\tif (!node) break;\r\n\t\tlet {V} = node;\r\n\t\tif (V) { // this is a valid emoji (so far)\r\n\t\t\temoji = V;\r\n\t\t\tif (eaten) eaten.push(...cps.slice(pos).reverse()); // (optional) copy input, used for ens_tokenize()\r\n\t\t\tcps.length = pos; // truncate\r\n\t\t}\r\n\t}\r\n\treturn emoji;\r\n}\r\n\r\n// ************************************************************\r\n// tokenizer \r\n\r\nconst TY_VALID = 'valid';\r\nconst TY_MAPPED = 'mapped';\r\nconst TY_IGNORED = 'ignored';\r\nconst TY_DISALLOWED = 'disallowed';\r\nconst TY_EMOJI = 'emoji';\r\nconst TY_NFC = 'nfc';\r\nconst TY_STOP = 'stop';\r\n\r\nfunction ens_tokenize(name, {\r\n\tnf = true, // collapse unnormalized runs into a single token\r\n} = {}) {\r\n\tinit();\r\n\tlet input = explode_cp(name).reverse();\r\n\tlet eaten = [];\r\n\tlet tokens = [];\r\n\twhile (input.length) {\r\n\t\tlet emoji = consume_emoji_reversed(input, eaten);\r\n\t\tif (emoji) {\r\n\t\t\ttokens.push({\r\n\t\t\t\ttype: TY_EMOJI,\r\n\t\t\t\temoji: emoji.slice(), // copy emoji\r\n\t\t\t\tinput: eaten,\r\n\t\t\t\tcps: filter_fe0f(emoji)\r\n\t\t\t});\r\n\t\t\teaten = []; // reset buffer\r\n\t\t} else {\r\n\t\t\tlet cp = input.pop();\r\n\t\t\tif (cp == STOP) {\r\n\t\t\t\ttokens.push({type: TY_STOP, cp});\r\n\t\t\t} else if (VALID.has(cp)) {\r\n\t\t\t\ttokens.push({type: TY_VALID, cps: [cp]});\r\n\t\t\t} else if (IGNORED.has(cp)) {\r\n\t\t\t\ttokens.push({type: TY_IGNORED, cp});\r\n\t\t\t} else {\r\n\t\t\t\tlet cps = MAPPED.get(cp);\r\n\t\t\t\tif (cps) {\r\n\t\t\t\t\ttokens.push({type: TY_MAPPED, cp, cps: cps.slice()});\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttokens.push({type: TY_DISALLOWED, cp});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (nf) {\r\n\t\tfor (let i = 0, start = -1; i < tokens.length; i++) {\r\n\t\t\tlet token = tokens[i];\r\n\t\t\tif (is_valid_or_mapped(token.type)) {\r\n\t\t\t\tif (requires_check(token.cps)) { // normalization might be needed\r\n\t\t\t\t\tlet end = i + 1;\r\n\t\t\t\t\tfor (let pos = end; pos < tokens.length; pos++) { // find adjacent text\r\n\t\t\t\t\t\tlet {type, cps} = tokens[pos];\r\n\t\t\t\t\t\tif (is_valid_or_mapped(type)) {\r\n\t\t\t\t\t\t\tif (!requires_check(cps)) break;\r\n\t\t\t\t\t\t\tend = pos + 1;\r\n\t\t\t\t\t\t} else if (type !== TY_IGNORED) { // || type !== TY_DISALLOWED) { \r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (start < 0) start = i;\r\n\t\t\t\t\tlet slice = tokens.slice(start, end);\r\n\t\t\t\t\tlet cps0 = slice.flatMap(x => is_valid_or_mapped(x.type) ? x.cps : []); // strip junk tokens\r\n\t\t\t\t\tlet cps = nfc(cps0);\r\n\t\t\t\t\tif (compare_arrays(cps, cps0)) { // bundle into an nfc token\r\n\t\t\t\t\t\ttokens.splice(start, end - start, {\r\n\t\t\t\t\t\t\ttype: TY_NFC, \r\n\t\t\t\t\t\t\tinput: cps0, // there are 3 states: tokens0 ==(process)=> input ==(nfc)=> tokens/cps\r\n\t\t\t\t\t\t\tcps, \r\n\t\t\t\t\t\t\ttokens0: collapse_valid_tokens(slice),\r\n\t\t\t\t\t\t\ttokens: ens_tokenize(str_from_cps(cps), {nf: false})\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\ti = start;\r\n\t\t\t\t\t} else { \r\n\t\t\t\t\t\ti = end - 1; // skip to end of slice\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstart = -1; // reset\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstart = i; // remember last\r\n\t\t\t\t}\r\n\t\t\t} else if (token.type !== TY_IGNORED) { // 20221024: is this correct?\r\n\t\t\t\tstart = -1; // reset\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn collapse_valid_tokens(tokens);\r\n}\r\n\r\nfunction is_valid_or_mapped(type) {\r\n\treturn type == TY_VALID || type == TY_MAPPED;\r\n}\r\n\r\nfunction requires_check(cps) {\r\n\treturn cps.some(cp => NFC_CHECK.has(cp));\r\n}\r\n\r\nfunction collapse_valid_tokens(tokens) {\r\n\tfor (let i = 0; i < tokens.length; i++) {\r\n\t\tif (tokens[i].type == TY_VALID) {\r\n\t\t\tlet j = i + 1;\r\n\t\t\twhile (j < tokens.length && tokens[j].type == TY_VALID) j++;\r\n\t\t\ttokens.splice(i, j - i, {type: TY_VALID, cps: tokens.slice(i, j).flatMap(x => x.cps)});\r\n\t\t}\r\n\t}\r\n\treturn tokens;\r\n}\n\nexport { ens_beautify, ens_emoji, ens_normalize, ens_normalize_fragment, ens_split, ens_tokenize, is_combining_mark, nfc, nfd, safe_str_from_cps, should_escape };\n", "import { keccak256 } from \"../crypto/index.js\";\nimport { MessagePrefix } from \"../constants/index.js\";\nimport { recoverAddress } from \"../transaction/index.js\";\nimport { concat, toUtf8Bytes } from \"../utils/index.js\";\n\nimport type { SignatureLike } from \"../crypto/index.js\";\n/**\n *  Computes the [[link-eip-191]] personal-sign message digest to sign.\n *\n *  This prefixes the message with [[MessagePrefix]] and the decimal length\n *  of %%message%% and computes the [[keccak256]] digest.\n *\n *  If %%message%% is a string, it is converted to its UTF-8 bytes\n *  first. To compute the digest of a [[DataHexString]], it must be converted\n *  to [bytes](getBytes).\n *\n *  @example:\n *    hashMessage(\"Hello World\")\n *    //_result:\n *\n *    // Hashes the SIX (6) string characters, i.e.\n *    // [ \"0\", \"x\", \"4\", \"2\", \"4\", \"3\" ]\n *    hashMessage(\"0x4243\")\n *    //_result:\n *\n *    // Hashes the TWO (2) bytes [ 0x42, 0x43 ]...\n *    hashMessage(getBytes(\"0x4243\"))\n *    //_result:\n *\n *    // ...which is equal to using data\n *    hashMessage(new Uint8Array([ 0x42, 0x43 ]))\n *    //_result:\n *\n */\nexport function hashMessage(message: Uint8Array | string): string {\n    if (typeof(message) === \"string\") { message = toUtf8Bytes(message); }\n    return keccak256(concat([\n        toUtf8Bytes(MessagePrefix),\n        toUtf8Bytes(String(message.length)),\n        message\n    ]));\n}\n\n/**\n *  Return the address of the private key that produced\n *  the signature %%sig%% during signing for %%message%%.\n */\nexport function verifyMessage(message: Uint8Array | string, sig: SignatureLike): string {\n    const digest = hashMessage(message);\n    return recoverAddress(digest, sig);\n}\n", "import { getAddress } from \"../address/index.js\";\nimport {\n    keccak256 as _keccak256, sha256 as _sha256\n} from \"../crypto/index.js\";\nimport {\n    concat, dataLength, getBytes, hexlify, toBeArray, toTwos, toUtf8Bytes, zeroPadBytes, zeroPadValue,\n    assertArgument\n} from \"../utils/index.js\";\n\n\nconst regexBytes = new RegExp(\"^bytes([0-9]+)$\");\nconst regexNumber = new RegExp(\"^(u?int)([0-9]*)$\");\nconst regexArray = new RegExp(\"^(.*)\\\\[([0-9]*)\\\\]$\");\n\n\nfunction _pack(type: string, value: any, isArray?: boolean): Uint8Array {\n    switch(type) {\n        case \"address\":\n            if (isArray) { return getBytes(zeroPadValue(value, 32)); }\n            return getBytes(getAddress(value));\n        case \"string\":\n            return toUtf8Bytes(value);\n        case \"bytes\":\n            return getBytes(value);\n        case \"bool\":\n            value = (!!value ? \"0x01\": \"0x00\");\n            if (isArray) { return getBytes(zeroPadValue(value, 32)); }\n            return getBytes(value);\n    }\n\n    let match =  type.match(regexNumber);\n    if (match) {\n        let signed = (match[1] === \"int\");\n        let size = parseInt(match[2] || \"256\")\n\n        assertArgument((!match[2] || match[2] === String(size)) && (size % 8 === 0) && size !== 0 && size <= 256, \"invalid number type\", \"type\", type);\n\n        if (isArray) { size = 256; }\n\n        if (signed) { value = toTwos(value, size); }\n\n        return getBytes(zeroPadValue(toBeArray(value), size / 8));\n    }\n\n    match = type.match(regexBytes);\n    if (match) {\n        const size = parseInt(match[1]);\n\n        assertArgument(String(size) === match[1] && size !== 0 && size <= 32, \"invalid bytes type\", \"type\", type);\n        assertArgument(dataLength(value) === size, `invalid value for ${ type }`, \"value\", value);\n\n        if (isArray) { return getBytes(zeroPadBytes(value, 32)); }\n        return value;\n    }\n\n    match = type.match(regexArray);\n    if (match && Array.isArray(value)) {\n        const baseType = match[1];\n        const count = parseInt(match[2] || String(value.length));\n        assertArgument(count === value.length, `invalid array length for ${ type }`, \"value\", value);\n\n        const result: Array<Uint8Array> = [];\n        value.forEach(function(value) {\n            result.push(_pack(baseType, value, true));\n        });\n        return getBytes(concat(result));\n    }\n\n    assertArgument(false, \"invalid type\", \"type\", type)\n}\n\n// @TODO: Array Enum\n\n/**\n *   Computes the [[link-solc-packed]] representation of %%values%%\n *   respectively to their %%types%%.\n *\n *   @example:\n *       addr = \"0x8ba1f109551bd432803012645ac136ddd64dba72\"\n *       solidityPacked([ \"address\", \"uint\" ], [ addr, 45 ]);\n *       //_result:\n */\nexport function solidityPacked(types: ReadonlyArray<string>, values: ReadonlyArray<any>): string {\n    assertArgument(types.length === values.length, \"wrong number of values; expected ${ types.length }\", \"values\", values);\n\n    const tight: Array<Uint8Array> = [];\n    types.forEach(function(type, index) {\n        tight.push(_pack(type, values[index]));\n    });\n    return hexlify(concat(tight));\n}\n\n/**\n *   Computes the [[link-solc-packed]] [[keccak256]] hash of %%values%%\n *   respectively to their %%types%%.\n *\n *   @example:\n *       addr = \"0x8ba1f109551bd432803012645ac136ddd64dba72\"\n *       solidityPackedKeccak256([ \"address\", \"uint\" ], [ addr, 45 ]);\n *       //_result:\n */\nexport function solidityPackedKeccak256(types: ReadonlyArray<string>, values: ReadonlyArray<any>): string {\n    return _keccak256(solidityPacked(types, values));\n}\n\n/**\n *   Computes the [[link-solc-packed]] [[sha256]] hash of %%values%%\n *   respectively to their %%types%%.\n *\n *   @example:\n *       addr = \"0x8ba1f109551bd432803012645ac136ddd64dba72\"\n *       solidityPackedSha256([ \"address\", \"uint\" ], [ addr, 45 ]);\n *       //_result:\n */\nexport function solidityPackedSha256(types: ReadonlyArray<string>, values: ReadonlyArray<any>): string {\n    return _sha256(solidityPacked(types, values));\n}\n", "//import { TypedDataDomain, TypedDataField } from \"@ethersproject/providerabstract-signer\";\nimport { getAddress } from \"../address/index.js\";\nimport { keccak256 } from \"../crypto/index.js\";\nimport { recoverAddress } from \"../transaction/index.js\";\nimport {\n    concat, defineProperties, getBigInt, getBytes, hexlify, isHexString, mask, toBeHex, toQuantity, toTwos, zeroPadValue,\n    assertArgument\n} from \"../utils/index.js\";\n\nimport { id } from \"./id.js\";\n\nimport type { SignatureLike } from \"../crypto/index.js\";\nimport type { BigNumberish, BytesLike } from \"../utils/index.js\";\n\n\nconst padding = new Uint8Array(32);\npadding.fill(0);\n\nconst BN__1 = BigInt(-1);\nconst BN_0 = BigInt(0);\nconst BN_1 = BigInt(1);\nconst BN_MAX_UINT256 = BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n\n// @TODO: in v7, verifyingContract should be an AddressLike and use resolveAddress\n\n/**\n *  The domain for an [[link-eip-712]] payload.\n */\nexport interface TypedDataDomain {\n    /**\n     *  The human-readable name of the signing domain.\n     */\n    name?: null | string;\n\n    /**\n     *  The major version of the signing domain.\n     */\n    version?: null | string;\n\n    /**\n     *  The chain ID of the signing domain.\n     */\n    chainId?: null | BigNumberish;\n\n    /**\n     *  The the address of the contract that will verify the signature.\n     */\n    verifyingContract?: null | string;\n\n    /**\n     *  A salt used for purposes decided by the specific domain.\n     */\n    salt?: null | BytesLike;\n};\n\n/**\n *  A specific field of a structured [[link-eip-712]] type.\n */\nexport interface TypedDataField {\n    /**\n     *  The field name.\n     */\n    name: string;\n\n    /**\n     *  The type of the field.\n     */\n    type: string;\n};\n\nfunction hexPadRight(value: BytesLike): string {\n    const bytes = getBytes(value);\n    const padOffset = bytes.length % 32\n    if (padOffset) {\n        return concat([ bytes, padding.slice(padOffset) ]);\n    }\n    return hexlify(bytes);\n}\n\nconst hexTrue = toBeHex(BN_1, 32);\nconst hexFalse = toBeHex(BN_0, 32);\n\nconst domainFieldTypes: Record<string, string> = {\n    name: \"string\",\n    version: \"string\",\n    chainId: \"uint256\",\n    verifyingContract: \"address\",\n    salt: \"bytes32\"\n};\n\nconst domainFieldNames: Array<string> = [\n    \"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"\n];\n\nfunction checkString(key: string): (value: any) => string {\n    return function (value: any){\n        assertArgument(typeof(value) === \"string\", `invalid domain value for ${ JSON.stringify(key) }`, `domain.${ key }`, value);\n        return value;\n    }\n}\n\nconst domainChecks: Record<string, (value: any) => any> = {\n    name: checkString(\"name\"),\n    version: checkString(\"version\"),\n    chainId: function(_value: any) {\n        const value = getBigInt(_value, \"domain.chainId\");\n        assertArgument(value >= 0, \"invalid chain ID\", \"domain.chainId\", _value);\n        if (Number.isSafeInteger(value)) { return Number(value); }\n        return toQuantity(value);\n    },\n    verifyingContract: function(value: any) {\n        try {\n            return getAddress(value).toLowerCase();\n        } catch (error) { }\n        assertArgument(false, `invalid domain value \"verifyingContract\"`, \"domain.verifyingContract\", value);\n    },\n    salt: function(value: any) {\n        const bytes = getBytes(value, \"domain.salt\");\n        assertArgument(bytes.length === 32, `invalid domain value \"salt\"`, \"domain.salt\", value);\n        return hexlify(bytes);\n    }\n}\n\nfunction getBaseEncoder(type: string): null | ((value: any) => string) {\n    // intXX and uintXX\n    {\n        const match = type.match(/^(u?)int(\\d+)$/);\n        if (match) {\n            const signed = (match[1] === \"\");\n\n            const width = parseInt(match[2]);\n            assertArgument(width % 8 === 0 && width !== 0 && width <= 256 && match[2] === String(width), \"invalid numeric width\", \"type\", type);\n\n            const boundsUpper = mask(BN_MAX_UINT256, signed ? (width - 1): width);\n            const boundsLower = signed ? ((boundsUpper + BN_1) * BN__1): BN_0;\n\n            return function(_value: BigNumberish) {\n                const value = getBigInt(_value, \"value\");\n\n                assertArgument(value >= boundsLower && value <= boundsUpper, `value out-of-bounds for ${ type }`, \"value\", value);\n\n                return toBeHex(signed ? toTwos(value, 256): value, 32);\n            };\n        }\n    }\n\n    // bytesXX\n    {\n        const match = type.match(/^bytes(\\d+)$/);\n        if (match) {\n            const width = parseInt(match[1]);\n            assertArgument(width !== 0 && width <= 32 && match[1] === String(width), \"invalid bytes width\", \"type\", type);\n\n            return function(value: BytesLike) {\n                const bytes = getBytes(value);\n                assertArgument(bytes.length === width, `invalid length for ${ type }`, \"value\", value);\n                return hexPadRight(value);\n            };\n        }\n    }\n\n    switch (type) {\n        case \"address\": return function(value: string) {\n            return zeroPadValue(getAddress(value), 32);\n        };\n        case \"bool\": return function(value: boolean) {\n            return ((!value) ? hexFalse: hexTrue);\n        };\n        case \"bytes\": return function(value: BytesLike) {\n            return keccak256(value);\n        };\n        case \"string\": return function(value: string) {\n            return id(value);\n        };\n    }\n\n    return null;\n}\n\nfunction encodeType(name: string, fields: Array<TypedDataField>): string {\n    return `${ name }(${ fields.map(({ name, type }) => (type + \" \" + name)).join(\",\") })`;\n}\n\ntype ArrayResult = {\n    base: string;         // The base type\n    index?: string;       // the full Index (if any)\n    array?: {             // The Array... (if index)\n        base: string;     // ...base type (same as above)\n        prefix: string;   // ...sans the final Index\n        count: number;    // ...the final Index (-1 for dynamic)\n    }\n};\n\n// foo[][3] => { base: \"foo\", index: \"[][3]\", array: {\n//     base: \"foo\", prefix: \"foo[]\", count: 3 } }\nfunction splitArray(type: string): ArrayResult {\n    const match = type.match(/^([^\\x5b]*)((\\x5b\\d*\\x5d)*)(\\x5b(\\d*)\\x5d)$/);\n    if (match) {\n        return {\n            base: match[1],\n            index: (match[2] + match[4]),\n            array: {\n                base: match[1],\n                prefix: (match[1] + match[2]),\n                count: (match[5] ? parseInt(match[5]): -1),\n            }\n        };\n    }\n\n    return { base: type };\n}\n\n/**\n *  A **TypedDataEncode** prepares and encodes [[link-eip-712]] payloads\n *  for signed typed data.\n *\n *  This is useful for those that wish to compute various components of a\n *  typed data hash, primary types, or sub-components, but generally the\n *  higher level [[Signer-signTypedData]] is more useful.\n */\nexport class TypedDataEncoder {\n    /**\n     *  The primary type for the structured [[types]].\n     *\n     *  This is derived automatically from the [[types]], since no\n     *  recursion is possible, once the DAG for the types is consturcted\n     *  internally, the primary type must be the only remaining type with\n     *  no parent nodes.\n     */\n    readonly primaryType!: string;\n\n    readonly #types: string;\n\n    /**\n     *  The types.\n     */\n    get types(): Record<string, Array<TypedDataField>> {\n        return JSON.parse(this.#types);\n    }\n\n    readonly #fullTypes: Map<string, string>\n\n    readonly #encoderCache: Map<string, (value: any) => string>;\n\n    /**\n     *  Create a new **TypedDataEncoder** for %%types%%.\n     *\n     *  This performs all necessary checking that types are valid and\n     *  do not violate the [[link-eip-712]] structural constraints as\n     *  well as computes the [[primaryType]].\n     */\n    constructor(_types: Record<string, Array<TypedDataField>>) {\n        this.#fullTypes = new Map();\n        this.#encoderCache = new Map();\n\n        // Link struct types to their direct child structs\n        const links: Map<string, Set<string>> = new Map();\n\n        // Link structs to structs which contain them as a child\n        const parents: Map<string, Array<string>> = new Map();\n\n        // Link all subtypes within a given struct\n        const subtypes: Map<string, Set<string>> = new Map();\n\n        const types: Record<string, Array<TypedDataField>> = { };\n        Object.keys(_types).forEach((type) => {\n            types[type] = _types[type].map(({ name, type }) => {\n\n                // Normalize the base type (unless name conflict)\n                let { base, index } = splitArray(type);\n                if (base === \"int\" && !_types[\"int\"]) { base = \"int256\"; }\n                if (base === \"uint\" && !_types[\"uint\"]) { base = \"uint256\"; }\n\n                return { name, type: (base + (index || \"\")) };\n            });\n\n            links.set(type, new Set());\n            parents.set(type, [ ]);\n            subtypes.set(type, new Set());\n        });\n        this.#types = JSON.stringify(types);\n\n        for (const name in types) {\n            const uniqueNames: Set<string> = new Set();\n\n            for (const field of types[name]) {\n\n                // Check each field has a unique name\n                assertArgument(!uniqueNames.has(field.name), `duplicate variable name ${ JSON.stringify(field.name) } in ${ JSON.stringify(name) }`, \"types\", _types);\n                uniqueNames.add(field.name);\n\n                // Get the base type (drop any array specifiers)\n                const baseType = splitArray(field.type).base;\n                assertArgument(baseType !== name, `circular type reference to ${ JSON.stringify(baseType) }`, \"types\", _types);\n\n                // Is this a base encoding type?\n                const encoder = getBaseEncoder(baseType);\n                if (encoder) { continue; }\n\n                assertArgument(parents.has(baseType), `unknown type ${ JSON.stringify(baseType) }`, \"types\", _types);\n\n                // Add linkage\n                (parents.get(baseType) as Array<string>).push(name);\n                (links.get(name) as Set<string>).add(baseType);\n            }\n        }\n\n        // Deduce the primary type\n        const primaryTypes = Array.from(parents.keys()).filter((n) => ((parents.get(n) as Array<string>).length === 0));\n        assertArgument(primaryTypes.length !== 0, \"missing primary type\", \"types\", _types);\n        assertArgument(primaryTypes.length === 1, `ambiguous primary types or unused types: ${ primaryTypes.map((t) => (JSON.stringify(t))).join(\", \") }`, \"types\", _types);\n\n        defineProperties<TypedDataEncoder>(this, { primaryType: primaryTypes[0] });\n\n        // Check for circular type references\n        function checkCircular(type: string, found: Set<string>) {\n            assertArgument(!found.has(type), `circular type reference to ${ JSON.stringify(type) }`, \"types\", _types);\n\n            found.add(type);\n\n            for (const child of (links.get(type) as Set<string>)) {\n                if (!parents.has(child)) { continue; }\n\n                // Recursively check children\n                checkCircular(child, found);\n\n                // Mark all ancestors as having this decendant\n                for (const subtype of found) {\n                    (subtypes.get(subtype) as Set<string>).add(child);\n                }\n            }\n\n            found.delete(type);\n        }\n        checkCircular(this.primaryType, new Set());\n\n        // Compute each fully describe type\n        for (const [ name, set ] of subtypes) {\n            const st = Array.from(set);\n            st.sort();\n            this.#fullTypes.set(name, encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join(\"\"));\n        }\n    }\n\n    /**\n     *  Returnthe encoder for the specific %%type%%.\n     */\n    getEncoder(type: string): (value: any) => string {\n        let encoder = this.#encoderCache.get(type);\n        if (!encoder) {\n            encoder = this.#getEncoder(type);\n            this.#encoderCache.set(type, encoder);\n        }\n        return encoder;\n    }\n\n    #getEncoder(type: string): (value: any) => string {\n\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) { return encoder; }\n        }\n\n        // Array\n        const array = splitArray(type).array;\n        if (array) {\n            const subtype = array.prefix;\n            const subEncoder = this.getEncoder(subtype);\n            return (value: Array<any>) => {\n                assertArgument(array.count === -1 || array.count === value.length, `array length mismatch; expected length ${ array.count }`, \"value\", value);\n\n                let result = value.map(subEncoder);\n                if (this.#fullTypes.has(subtype)) {\n                    result = result.map(keccak256);\n                }\n\n                return keccak256(concat(result));\n            };\n        }\n\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            const encodedType = id(this.#fullTypes.get(type) as string);\n            return (value: Record<string, any>) => {\n                const values = fields.map(({ name, type }) => {\n                    const result = this.getEncoder(type)(value[name]);\n                    if (this.#fullTypes.has(type)) { return keccak256(result); }\n                    return result;\n                });\n                values.unshift(encodedType);\n                return concat(values);\n            }\n        }\n\n        assertArgument(false, `unknown type: ${ type }`, \"type\", type);\n    }\n\n    /**\n     *  Return the full type for %%name%%.\n     */\n    encodeType(name: string): string {\n        const result = this.#fullTypes.get(name);\n        assertArgument(result, `unknown type: ${ JSON.stringify(name) }`, \"name\", name);\n        return result;\n    }\n\n    /**\n     *  Return the encoded %%value%% for the %%type%%.\n     */\n    encodeData(type: string, value: any): string {\n        return this.getEncoder(type)(value);\n    }\n\n    /**\n     *  Returns the hash of %%value%% for the type of %%name%%.\n     */\n    hashStruct(name: string, value: Record<string, any>): string {\n        return keccak256(this.encodeData(name, value));\n    }\n\n    /**\n     *  Return the fulled encoded %%value%% for the [[types]].\n     */\n    encode(value: Record<string, any>): string {\n        return this.encodeData(this.primaryType, value);\n    }\n\n    /**\n     *  Return the hash of the fully encoded %%value%% for the [[types]].\n     */\n    hash(value: Record<string, any>): string {\n        return this.hashStruct(this.primaryType, value);\n    }\n\n    /**\n     *  @_ignore:\n     */\n    _visit(type: string, value: any, callback: (type: string, data: any) => any): any {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) { return callback(type, value); }\n        }\n\n        // Array\n        const array = splitArray(type).array;\n        if (array) {\n            assertArgument(array.count === -1 || array.count === value.length, `array length mismatch; expected length ${ array.count }`, \"value\", value);\n            return value.map((v: any) => this._visit(array.prefix, v, callback));\n        }\n\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            return fields.reduce((accum, { name, type }) => {\n                accum[name] = this._visit(type, value[name], callback);\n                return accum;\n            }, <Record<string, any>>{});\n        }\n\n        assertArgument(false, `unknown type: ${ type }`, \"type\", type);\n    }\n\n    /**\n     *  Call %%calback%% for each value in %%value%%, passing the type and\n     *  component within %%value%%.\n     *\n     *  This is useful for replacing addresses or other transformation that\n     *  may be desired on each component, based on its type.\n     */\n    visit(value: Record<string, any>, callback: (type: string, data: any) => any): any {\n        return this._visit(this.primaryType, value, callback);\n    }\n\n    /**\n     *  Create a new **TypedDataEncoder** for %%types%%.\n     */\n    static from(types: Record<string, Array<TypedDataField>>): TypedDataEncoder {\n        return new TypedDataEncoder(types);\n    }\n\n    /**\n     *  Return the primary type for %%types%%.\n     */\n    static getPrimaryType(types: Record<string, Array<TypedDataField>>): string {\n        return TypedDataEncoder.from(types).primaryType;\n    }\n\n    /**\n     *  Return the hashed struct for %%value%% using %%types%% and %%name%%.\n     */\n    static hashStruct(name: string, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return TypedDataEncoder.from(types).hashStruct(name, value);\n    }\n\n    /**\n     *  Return the domain hash for %%domain%%.\n     */\n    static hashDomain(domain: TypedDataDomain): string {\n        const domainFields: Array<TypedDataField> = [ ];\n        for (const name in domain) {\n            if ((<Record<string, any>>domain)[name] == null) { continue; }\n            const type = domainFieldTypes[name];\n            assertArgument(type, `invalid typed-data domain key: ${ JSON.stringify(name) }`, \"domain\", domain);\n            domainFields.push({ name, type });\n        }\n\n        domainFields.sort((a, b) => {\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n        });\n\n        return TypedDataEncoder.hashStruct(\"EIP712Domain\", { EIP712Domain: domainFields }, domain);\n    }\n\n    /**\n     *  Return the fully encoded [[link-eip-712]] %%value%% for %%types%% with %%domain%%.\n     */\n    static encode(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return concat([\n            \"0x1901\",\n            TypedDataEncoder.hashDomain(domain),\n            TypedDataEncoder.from(types).hash(value)\n        ]);\n    }\n\n    /**\n     *  Return the hash of the fully encoded [[link-eip-712]] %%value%% for %%types%% with %%domain%%.\n     */\n    static hash(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): string {\n        return keccak256(TypedDataEncoder.encode(domain, types, value));\n    }\n\n    // Replaces all address types with ENS names with their looked up address\n    /**\n     * Resolves to the value from resolving all addresses in %%value%% for\n     * %%types%% and the %%domain%%.\n     */\n    static async resolveNames(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>, resolveName: (name: string) => Promise<string>): Promise<{ domain: TypedDataDomain, value: any }> {\n        // Make a copy to isolate it from the object passed in\n        domain = Object.assign({ }, domain);\n\n        // Allow passing null to ignore value\n        for (const key in domain) {\n            if ((<Record<string, any>>domain)[key] == null) {\n                delete (<Record<string, any>>domain)[key];\n            }\n        }\n\n        // Look up all ENS names\n        const ensCache: Record<string, string> = { };\n\n        // Do we need to look up the domain's verifyingContract?\n        if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {\n            ensCache[domain.verifyingContract] = \"0x\";\n        }\n\n        // We are going to use the encoder to visit all the base values\n        const encoder = TypedDataEncoder.from(types);\n\n        // Get a list of all the addresses\n        encoder.visit(value, (type: string, value: any) => {\n            if (type === \"address\" && !isHexString(value, 20)) {\n                ensCache[value] = \"0x\";\n            }\n            return value;\n        });\n\n        // Lookup each name\n        for (const name in ensCache) {\n            ensCache[name] = await resolveName(name);\n        }\n\n        // Replace the domain verifyingContract if needed\n        if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\n            domain.verifyingContract = ensCache[domain.verifyingContract];\n        }\n\n        // Replace all ENS names with their address\n        value = encoder.visit(value, (type: string, value: any) => {\n            if (type === \"address\" && ensCache[value]) { return ensCache[value]; }\n            return value;\n        });\n\n        return { domain, value };\n    }\n\n    /**\n     *  Returns the JSON-encoded payload expected by nodes which implement\n     *  the JSON-RPC [[link-eip-712]] method.\n     */\n    static getPayload(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): any {\n        // Validate the domain fields\n        TypedDataEncoder.hashDomain(domain);\n\n        // Derive the EIP712Domain Struct reference type\n        const domainValues: Record<string, any> = { };\n        const domainTypes: Array<{ name: string, type:string }> = [ ];\n\n        domainFieldNames.forEach((name) => {\n            const value = (<any>domain)[name];\n            if (value == null) { return; }\n            domainValues[name] = domainChecks[name](value);\n            domainTypes.push({ name, type: domainFieldTypes[name] });\n        });\n\n        const encoder = TypedDataEncoder.from(types);\n\n        // Get the normalized types\n        types = encoder.types;\n\n        const typesWithDomain = Object.assign({ }, types);\n        assertArgument(typesWithDomain.EIP712Domain == null, \"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n\n        typesWithDomain.EIP712Domain = domainTypes;\n\n        // Validate the data structures and types\n        encoder.encode(value);\n\n        return {\n            types: typesWithDomain,\n            domain: domainValues,\n            primaryType: encoder.primaryType,\n            message: encoder.visit(value, (type: string, value: any) => {\n\n                // bytes\n                if (type.match(/^bytes(\\d*)/)) {\n                    return hexlify(getBytes(value));\n                }\n\n                // uint or int\n                if (type.match(/^u?int/)) {\n                    return getBigInt(value).toString();\n                }\n\n                switch (type) {\n                    case \"address\":\n                        return value.toLowerCase();\n                    case \"bool\":\n                        return !!value;\n                    case \"string\":\n                        assertArgument(typeof(value) === \"string\", \"invalid string\", \"value\", value);\n                        return value;\n                }\n\n                assertArgument(false, \"unsupported type\", \"type\", type);\n            })\n        };\n    }\n}\n\n/**\n *  Compute the address used to sign the typed data for the %%signature%%.\n */\nexport function verifyTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>, signature: SignatureLike): string {\n    return recoverAddress(TypedDataEncoder.hash(domain, types, value), signature);\n}\n", "/**\n *  About bytes32 strings...\n *\n *  @_docloc: api/utils:Bytes32 Strings\n */\n\nimport {\n    getBytes, toUtf8Bytes, toUtf8String, zeroPadBytes\n} from \"../utils/index.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\n/**\n *  Encodes %%text%% as a Bytes32 string.\n */\nexport function encodeBytes32String(text: string): string {\n\n    // Get the bytes\n    const bytes = toUtf8Bytes(text);\n\n    // Check we have room for null-termination\n    if (bytes.length > 31) { throw new Error(\"bytes32 string must be less than 32 bytes\"); }\n\n    // Zero-pad (implicitly null-terminates)\n    return zeroPadBytes(bytes, 32);\n}\n\n/**\n *  Encodes the Bytes32-encoded %%bytes%% into a string.\n */\nexport function decodeBytes32String(_bytes: BytesLike): string {\n    const data = getBytes(_bytes, \"bytes\");\n\n    // Must be 32 bytes with a null-termination\n    if (data.length !== 32) { throw new Error(\"invalid bytes32 - not 32 bytes long\"); }\n    if (data[31] !== 0) { throw new Error(\"invalid bytes32 string - no null terminator\"); }\n\n    // Find the null termination\n    let length = 31;\n    while (data[length - 1] === 0) { length--; }\n\n    // Determine the string value\n    return toUtf8String(data.slice(0, length));\n}\n\n", "/**\n *  The Interface class is a low-level class that accepts an\n *  ABI and provides all the necessary functionality to encode\n *  and decode paramaters to and results from methods, events\n *  and errors.\n *\n *  It also provides several convenience methods to automatically\n *  search and find matching transactions and events to parse them.\n *\n *  @_subsection api/abi:Interfaces  [interfaces]\n */\n\nimport { keccak256 } from \"../crypto/index.js\"\nimport { id } from \"../hash/index.js\"\nimport {\n    concat, dataSlice, getBigInt, getBytes, getBytesCopy,\n    hexlify, zeroPadBytes, zeroPadValue, isHexString, defineProperties,\n    assertArgument, toBeHex, assert\n} from \"../utils/index.js\";\n\nimport { AbiCoder } from \"./abi-coder.js\";\nimport { checkResultErrors, Result } from \"./coders/abstract-coder.js\";\nimport {\n    ConstructorFragment, ErrorFragment, EventFragment, FallbackFragment,\n    Fragment, FunctionFragment, ParamType\n} from \"./fragments.js\";\nimport { Typed } from \"./typed.js\";\n\nimport type { BigNumberish, BytesLike, CallExceptionError, CallExceptionTransaction } from \"../utils/index.js\";\n\nimport type { JsonFragment } from \"./fragments.js\";\n\n\nexport { checkResultErrors, Result };\n\n/**\n *  When using the [[Interface-parseLog]] to automatically match a Log to its event\n *  for parsing, a **LogDescription** is returned.\n */\nexport class LogDescription {\n    /**\n     *  The matching fragment for the ``topic0``.\n     */\n    readonly fragment!: EventFragment;\n\n    /**\n     *  The name of the Event.\n     */\n    readonly name!: string;\n\n    /**\n     *  The full Event signature.\n     */\n    readonly signature!: string;\n\n    /**\n     *  The topic hash for the Event.\n     */\n    readonly topic!: string;\n\n    /**\n     *  The arguments passed into the Event with ``emit``.\n     */\n    readonly args!: Result\n\n    /**\n     *  @_ignore:\n     */\n    constructor(fragment: EventFragment, topic: string, args: Result) {\n        const name = fragment.name, signature = fragment.format();\n        defineProperties<LogDescription>(this, {\n            fragment, name, signature, topic, args\n        });\n    }\n}\n\n/**\n *  When using the [[Interface-parseTransaction]] to automatically match\n *  a transaction data to its function for parsing,\n *  a **TransactionDescription** is returned.\n */\nexport class TransactionDescription {\n    /**\n     *  The matching fragment from the transaction ``data``.\n     */\n    readonly fragment!: FunctionFragment;\n\n    /**\n     *  The name of the Function from the transaction ``data``.\n     */\n    readonly name!: string;\n\n    /**\n     *  The arguments passed to the Function from the transaction ``data``.\n     */\n    readonly args!: Result;\n\n    /**\n     *  The full Function signature from the transaction ``data``.\n     */\n    readonly signature!: string;\n\n    /**\n     *  The selector for the Function from the transaction ``data``.\n     */\n    readonly selector!: string;\n\n    /**\n     *  The ``value`` (in wei) from the transaction.\n     */\n    readonly value!: bigint;\n\n    /**\n     *  @_ignore:\n     */\n    constructor(fragment: FunctionFragment, selector: string, args: Result, value: bigint) {\n        const name = fragment.name, signature = fragment.format();\n        defineProperties<TransactionDescription>(this, {\n            fragment, name, args, signature, selector, value\n        });\n    }\n}\n\n/**\n *  When using the [[Interface-parseError]] to automatically match an\n *  error for a call result for parsing, an **ErrorDescription** is returned.\n */\nexport class ErrorDescription {\n    /**\n     *  The matching fragment.\n     */\n    readonly fragment!: ErrorFragment;\n\n    /**\n     *  The name of the Error.\n     */\n    readonly name!: string;\n\n    /**\n     *  The arguments passed to the Error with ``revert``.\n     */\n    readonly args!: Result;\n\n    /**\n     *  The full Error signature.\n     */\n    readonly signature!: string;\n\n    /**\n     *  The selector for the Error.\n     */\n    readonly selector!: string;\n\n    /**\n     *  @_ignore:\n     */\n    constructor(fragment: ErrorFragment, selector: string, args: Result) {\n        const name = fragment.name, signature = fragment.format();\n        defineProperties<ErrorDescription>(this, {\n            fragment, name, args, signature, selector\n        });\n    }\n}\n\n/**\n *  An **Indexed** is used as a value when a value that does not\n *  fit within a topic (i.e. not a fixed-length, 32-byte type). It\n *  is the ``keccak256`` of the value, and used for types such as\n *  arrays, tuples, bytes and strings.\n */\nexport class Indexed {\n    /**\n     *  The ``keccak256`` of the value logged.\n     */\n    readonly hash!: null | string;\n\n    /**\n     *  @_ignore:\n     */\n    readonly _isIndexed!: boolean;\n\n    /**\n     *  Returns ``true`` if %%value%% is an **Indexed**.\n     *\n     *  This provides a Type Guard for property access.\n     */\n    static isIndexed(value: any): value is Indexed {\n        return !!(value && value._isIndexed);\n    }\n\n    /**\n     *  @_ignore:\n     */\n    constructor(hash: null | string) {\n        defineProperties<Indexed>(this, { hash, _isIndexed: true })\n    }\n}\n\ntype ErrorInfo = {\n    signature: string,\n    inputs: Array<string>,\n    name: string,\n    reason: (...args: Array<any>) => string;\n};\n\n// https://docs.soliditylang.org/en/v0.8.13/control-structures.html?highlight=panic#panic-via-assert-and-error-via-require\nconst PanicReasons: Record<string, string> = {\n    \"0\": \"generic panic\",\n    \"1\": \"assert(false)\",\n    \"17\": \"arithmetic overflow\",\n    \"18\": \"division or modulo by zero\",\n    \"33\": \"enum overflow\",\n    \"34\": \"invalid encoded storage byte array accessed\",\n    \"49\": \"out-of-bounds array access; popping on an empty array\",\n    \"50\": \"out-of-bounds access of an array or bytesN\",\n    \"65\": \"out of memory\",\n    \"81\": \"uninitialized function\",\n}\n\nconst BuiltinErrors: Record<string, ErrorInfo> = {\n    \"0x08c379a0\": {\n        signature: \"Error(string)\",\n        name: \"Error\",\n        inputs: [ \"string\" ],\n        reason: (message: string) => {\n            return `reverted with reason string ${ JSON.stringify(message) }`;\n        }\n    },\n    \"0x4e487b71\": {\n        signature: \"Panic(uint256)\",\n        name: \"Panic\",\n        inputs: [ \"uint256\" ],\n        reason: (code: bigint) => {\n            let reason = \"unknown panic code\";\n            if (code >= 0 && code <= 0xff && PanicReasons[code.toString()]) {\n                reason = PanicReasons[code.toString()];\n            }\n            return `reverted with panic code 0x${ code.toString(16) } (${ reason })`;\n        }\n    }\n}\n\n/*\nfunction wrapAccessError(property: string, error: Error): Error {\n    const wrap = new Error(`deferred error during ABI decoding triggered accessing ${ property }`);\n    (<any>wrap).error = error;\n    return wrap;\n}\n*/\n/*\nfunction checkNames(fragment: Fragment, type: \"input\" | \"output\", params: Array<ParamType>): void {\n    params.reduce((accum, param) => {\n        if (param.name) {\n            if (accum[param.name]) {\n                logger.throwArgumentError(`duplicate ${ type } parameter ${ JSON.stringify(param.name) } in ${ fragment.format(\"full\") }`, \"fragment\", fragment);\n            }\n            accum[param.name] = true;\n        }\n        return accum;\n    }, <{ [ name: string ]: boolean }>{ });\n}\n*/\n\n/**\n *  An **InterfaceAbi** may be any supported ABI format.\n *\n *  A string is expected to be a JSON string, which will be parsed\n *  using ``JSON.parse``. This means that the value **must** be a valid\n *  JSON string, with no stray commas, etc.\n *\n *  An array may contain any combination of:\n *  - Human-Readable fragments\n *  - Parsed JSON fragment\n *  - [[Fragment]] instances\n *\n *  A **Human-Readable Fragment** is a string which resembles a Solidity\n *  signature and is introduced in [this blog entry](link-ricmoo-humanreadableabi).\n *  For example, ``function balanceOf(address) view returns (uint)``.\n *\n *  A **Parsed JSON Fragment** is a JavaScript Object desribed in the\n *  [Solidity documentation](link-solc-jsonabi).\n */\nexport type InterfaceAbi = string | ReadonlyArray<Fragment | JsonFragment | string>;\n\n/**\n *  An Interface abstracts many of the low-level details for\n *  encoding and decoding the data on the blockchain.\n *\n *  An ABI provides information on how to encode data to send to\n *  a Contract, how to decode the results and events and how to\n *  interpret revert errors.\n *\n *  The ABI can be specified by [any supported format](InterfaceAbi).\n */\nexport class Interface {\n\n    /**\n     *  All the Contract ABI members (i.e. methods, events, errors, etc).\n     */\n    readonly fragments!: ReadonlyArray<Fragment>;\n\n    /**\n     *  The Contract constructor.\n     */\n    readonly deploy!: ConstructorFragment;\n\n    /**\n     *  The Fallback method, if any.\n     */\n    readonly fallback!: null | FallbackFragment;\n\n    /**\n     *  If receiving ether is supported.\n     */\n    readonly receive!: boolean;\n\n    #errors: Map<string, ErrorFragment>;\n    #events: Map<string, EventFragment>;\n    #functions: Map<string, FunctionFragment>;\n//    #structs: Map<string, StructFragment>;\n\n    #abiCoder: AbiCoder;\n\n    /**\n     *  Create a new Interface for the %%fragments%%.\n     */\n    constructor(fragments: InterfaceAbi) {\n        let abi: ReadonlyArray<Fragment | JsonFragment | string> = [ ];\n        if (typeof(fragments) === \"string\") {\n            abi = JSON.parse(fragments);\n        } else {\n            abi = fragments;\n        }\n\n        this.#functions = new Map();\n        this.#errors = new Map();\n        this.#events = new Map();\n//        this.#structs = new Map();\n\n\n        const frags: Array<Fragment> = [ ];\n        for (const a of abi) {\n            try {\n                frags.push(Fragment.from(a));\n            } catch (error: any) {\n                console.log(`[Warning] Invalid Fragment ${ JSON.stringify(a) }:`, error.message);\n            }\n        }\n\n        defineProperties<Interface>(this, {\n            fragments: Object.freeze(frags)\n        });\n\n        let fallback: null | FallbackFragment = null;\n        let receive = false;\n\n        this.#abiCoder = this.getAbiCoder();\n\n        // Add all fragments by their signature\n        this.fragments.forEach((fragment, index) => {\n            let bucket: Map<string, Fragment>;\n            switch (fragment.type) {\n                case \"constructor\":\n                    if (this.deploy) {\n                        console.log(\"duplicate definition - constructor\");\n                        return;\n                    }\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    defineProperties<Interface>(this, { deploy: <ConstructorFragment>fragment });\n                    return;\n\n                case \"fallback\":\n                    if (fragment.inputs.length === 0) {\n                        receive = true;\n                    } else {\n                        assertArgument(!fallback || (<FallbackFragment>fragment).payable !== fallback.payable,\n                            \"conflicting fallback fragments\", `fragments[${ index }]`, fragment);\n                        fallback = <FallbackFragment>fragment;\n                        receive = fallback.payable;\n                    }\n                    return;\n\n                case \"function\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    //checkNames(fragment, \"output\", (<FunctionFragment>fragment).outputs);\n                    bucket = this.#functions;\n                    break;\n\n                case \"event\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    bucket = this.#events;\n                    break;\n\n                case \"error\":\n                    bucket = this.#errors;\n                    break;\n\n                default:\n                    return;\n            }\n\n            // Two identical entries; ignore it\n            const signature = fragment.format();\n            if (bucket.has(signature)) { return; }\n\n            bucket.set(signature, fragment);\n        });\n\n        // If we do not have a constructor add a default\n        if (!this.deploy) {\n            defineProperties<Interface>(this, {\n                deploy: ConstructorFragment.from(\"constructor()\")\n            });\n        }\n\n        defineProperties<Interface>(this, { fallback, receive });\n    }\n\n    /**\n     *  Returns the entire Human-Readable ABI, as an array of\n     *  signatures, optionally as %%minimal%% strings, which\n     *  removes parameter names and unneceesary spaces.\n     */\n    format(minimal?: boolean): Array<string> {\n        const format = (minimal ? \"minimal\": \"full\");\n        const abi = this.fragments.map((f) => f.format(format));\n        return abi;\n    }\n\n    /**\n     *  Return the JSON-encoded ABI. This is the format Solidiy\n     *  returns.\n     */\n    formatJson(): string {\n        const abi = this.fragments.map((f) => f.format(\"json\"));\n\n        // We need to re-bundle the JSON fragments a bit\n        return JSON.stringify(abi.map((j) => JSON.parse(j)));\n    }\n\n    /**\n     *  The ABI coder that will be used to encode and decode binary\n     *  data.\n     */\n    getAbiCoder(): AbiCoder {\n        return AbiCoder.defaultAbiCoder();\n    }\n\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    #getFunction(key: string, values: null | Array<any | Typed>, forceUnique: boolean): null | FunctionFragment {\n\n        // Selector\n        if (isHexString(key)) {\n            const selector = key.toLowerCase();\n            for (const fragment of this.#functions.values()) {\n                if (selector === fragment.selector) { return fragment; }\n            }\n            return null;\n        }\n\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (key.indexOf(\"(\") === -1) {\n            const matching: Array<FunctionFragment> = [ ];\n            for (const [ name, fragment ] of this.#functions) {\n                if (name.split(\"(\"/* fix:) */)[0] === key) { matching.push(fragment); }\n            }\n\n            if (values) {\n                const lastValue = (values.length > 0) ? values[values.length - 1]: null;\n\n                let valueLength = values.length;\n                let allowOptions = true;\n                if (Typed.isTyped(lastValue) && lastValue.type === \"overrides\") {\n                    allowOptions = false;\n                    valueLength--;\n                }\n\n                // Remove all matches that don't have a compatible length. The args\n                // may contain an overrides, so the match may have n or n - 1 parameters\n                for (let i = matching.length - 1; i >= 0; i--) {\n                    const inputs = matching[i].inputs.length;\n                    if (inputs !== valueLength && (!allowOptions || inputs !== valueLength - 1)) {\n                        matching.splice(i, 1);\n                    }\n                }\n\n                // Remove all matches that don't match the Typed signature\n                for (let i = matching.length - 1; i >= 0; i--) {\n                    const inputs = matching[i].inputs;\n                    for (let j = 0; j < values.length; j++) {\n                        // Not a typed value\n                        if (!Typed.isTyped(values[j])) { continue; }\n\n                        // We are past the inputs\n                        if (j >= inputs.length) {\n                            if (values[j].type === \"overrides\") { continue; }\n                            matching.splice(i, 1);\n                            break;\n                        }\n\n                        // Make sure the value type matches the input type\n                        if (values[j].type !== inputs[j].baseType) {\n                            matching.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n            }\n\n            // We found a single matching signature with an overrides, but the\n            // last value is something that cannot possibly be an options\n            if (matching.length === 1 && values && values.length !== matching[0].inputs.length) {\n                const lastArg = values[values.length - 1];\n                if (lastArg == null || Array.isArray(lastArg) || typeof(lastArg) !== \"object\") {\n                    matching.splice(0, 1);\n                }\n            }\n\n            if (matching.length === 0) { return null; }\n\n            if (matching.length > 1 && forceUnique) {\n                const matchStr = matching.map((m) => JSON.stringify(m.format())).join(\", \");\n                assertArgument(false, `ambiguous function description (i.e. matches ${ matchStr })`, \"key\", key);\n            }\n\n            return matching[0];\n        }\n\n        // Normalize the signature and lookup the function\n        const result = this.#functions.get(FunctionFragment.from(key).format());\n        if (result) { return result; }\n\n        return null;\n    }\n\n    /**\n     *  Get the function name for %%key%%, which may be a function selector,\n     *  function name or function signature that belongs to the ABI.\n     */\n    getFunctionName(key: string): string {\n        const fragment = this.#getFunction(key, null, false);\n        assertArgument(fragment, \"no matching function\", \"key\", key);\n        return fragment.name;\n    }\n\n    /**\n     *  Returns true if %%key%% (a function selector, function name or\n     *  function signature) is present in the ABI.\n     *\n     *  In the case of a function name, the name may be ambiguous, so\n     *  accessing the [[FunctionFragment]] may require refinement.\n     */\n    hasFunction(key: string): boolean {\n        return !!this.#getFunction(key, null, false);\n    }\n\n    /**\n     *  Get the [[FunctionFragment]] for %%key%%, which may be a function\n     *  selector, function name or function signature that belongs to the ABI.\n     *\n     *  If %%values%% is provided, it will use the Typed API to handle\n     *  ambiguous cases where multiple functions match by name.\n     *\n     *  If the %%key%% and %%values%% do not refine to a single function in\n     *  the ABI, this will throw.\n     */\n    getFunction(key: string, values?: Array<any | Typed>): null | FunctionFragment {\n        return this.#getFunction(key, values || null, true);\n    }\n\n    /**\n     *  Iterate over all functions, calling %%callback%%, sorted by their name.\n     */\n    forEachFunction(callback: (func: FunctionFragment, index: number) => void): void {\n        const names = Array.from(this.#functions.keys());\n        names.sort((a, b) => a.localeCompare(b));\n        for (let i = 0; i < names.length; i++) {\n            const name = names[i];\n            callback(<FunctionFragment>(this.#functions.get(name)), i);\n        }\n    }\n\n\n    // Find an event definition by any means necessary (unless it is ambiguous)\n    #getEvent(key: string, values: null | Array<null | any | Typed>, forceUnique: boolean): null | EventFragment {\n\n        // EventTopic\n        if (isHexString(key)) {\n            const eventTopic = key.toLowerCase();\n            for (const fragment of this.#events.values()) {\n                if (eventTopic === fragment.topicHash) { return fragment; }\n            }\n            return null;\n        }\n\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (key.indexOf(\"(\") === -1) {\n            const matching: Array<EventFragment> = [ ];\n            for (const [ name, fragment ] of this.#events) {\n                if (name.split(\"(\"/* fix:) */)[0] === key) { matching.push(fragment); }\n            }\n\n            if (values) {\n                // Remove all matches that don't have a compatible length.\n                for (let i = matching.length - 1; i >= 0; i--) {\n                    if (matching[i].inputs.length < values.length) {\n                        matching.splice(i, 1);\n                    }\n                }\n\n                // Remove all matches that don't match the Typed signature\n                for (let i = matching.length - 1; i >= 0; i--) {\n                    const inputs = matching[i].inputs;\n                    for (let j = 0; j < values.length; j++) {\n                        // Not a typed value\n                        if (!Typed.isTyped(values[j])) { continue; }\n\n                        // Make sure the value type matches the input type\n                        if (values[j].type !== inputs[j].baseType) {\n                            matching.splice(i, 1);\n                            break;\n                        }\n                    }\n                }\n            }\n\n            if (matching.length === 0) { return null; }\n\n            if (matching.length > 1 && forceUnique) {\n                const matchStr = matching.map((m) => JSON.stringify(m.format())).join(\", \");\n                assertArgument(false, `ambiguous event description (i.e. matches ${ matchStr })`, \"key\", key);\n            }\n\n            return matching[0];\n        }\n\n        // Normalize the signature and lookup the function\n        const result = this.#events.get(EventFragment.from(key).format());\n        if (result) { return result; }\n\n        return null;\n    }\n\n    /**\n     *  Get the event name for %%key%%, which may be a topic hash,\n     *  event name or event signature that belongs to the ABI.\n     */\n    getEventName(key: string): string {\n        const fragment = this.#getEvent(key, null, false);\n        assertArgument(fragment, \"no matching event\", \"key\", key);\n\n        return fragment.name;\n    }\n\n    /**\n     *  Returns true if %%key%% (an event topic hash, event name or\n     *  event signature) is present in the ABI.\n     *\n     *  In the case of an event name, the name may be ambiguous, so\n     *  accessing the [[EventFragment]] may require refinement.\n     */\n    hasEvent(key: string): boolean {\n        return !!this.#getEvent(key, null, false);\n    }\n\n    /**\n     *  Get the [[EventFragment]] for %%key%%, which may be a topic hash,\n     *  event name or event signature that belongs to the ABI.\n     *\n     *  If %%values%% is provided, it will use the Typed API to handle\n     *  ambiguous cases where multiple events match by name.\n     *\n     *  If the %%key%% and %%values%% do not refine to a single event in\n     *  the ABI, this will throw.\n     */\n    getEvent(key: string, values?: Array<any | Typed>): null | EventFragment {\n        return this.#getEvent(key, values || null, true)\n    }\n\n    /**\n     *  Iterate over all events, calling %%callback%%, sorted by their name.\n     */\n    forEachEvent(callback: (func: EventFragment, index: number) => void): void {\n        const names = Array.from(this.#events.keys());\n        names.sort((a, b) => a.localeCompare(b));\n        for (let i = 0; i < names.length; i++) {\n            const name = names[i];\n            callback(<EventFragment>(this.#events.get(name)), i);\n        }\n    }\n\n    /**\n     *  Get the [[ErrorFragment]] for %%key%%, which may be an error\n     *  selector, error name or error signature that belongs to the ABI.\n     *\n     *  If %%values%% is provided, it will use the Typed API to handle\n     *  ambiguous cases where multiple errors match by name.\n     *\n     *  If the %%key%% and %%values%% do not refine to a single error in\n     *  the ABI, this will throw.\n     */\n    getError(key: string, values?: Array<any | Typed>): null | ErrorFragment {\n        if (isHexString(key)) {\n            const selector = key.toLowerCase();\n\n            if (BuiltinErrors[selector]) {\n                return ErrorFragment.from(BuiltinErrors[selector].signature);\n            }\n\n            for (const fragment of this.#errors.values()) {\n                if (selector === fragment.selector) { return fragment; }\n            }\n\n            return null;\n        }\n\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (key.indexOf(\"(\") === -1) {\n            const matching: Array<ErrorFragment> = [ ];\n            for (const [ name, fragment ] of this.#errors) {\n                if (name.split(\"(\"/* fix:) */)[0] === key) { matching.push(fragment); }\n            }\n\n            if (matching.length === 0) {\n                if (key === \"Error\") { return ErrorFragment.from(\"error Error(string)\"); }\n                if (key === \"Panic\") { return ErrorFragment.from(\"error Panic(uint256)\"); }\n                return null;\n            } else if (matching.length > 1) {\n                const matchStr = matching.map((m) => JSON.stringify(m.format())).join(\", \");\n                assertArgument(false, `ambiguous error description (i.e. ${ matchStr })`, \"name\", key);\n            }\n\n            return matching[0];\n        }\n\n        // Normalize the signature and lookup the function\n        key = ErrorFragment.from(key).format()\n        if (key === \"Error(string)\") { return ErrorFragment.from(\"error Error(string)\"); }\n        if (key === \"Panic(uint256)\") { return ErrorFragment.from(\"error Panic(uint256)\"); }\n\n        const result = this.#errors.get(key);\n        if (result) { return result; }\n\n        return null;\n    }\n\n    /**\n     *  Iterate over all errors, calling %%callback%%, sorted by their name.\n     */\n    forEachError(callback: (func: ErrorFragment, index: number) => void): void {\n        const names = Array.from(this.#errors.keys());\n        names.sort((a, b) => a.localeCompare(b));\n        for (let i = 0; i < names.length; i++) {\n            const name = names[i];\n            callback(<ErrorFragment>(this.#errors.get(name)), i);\n        }\n    }\n\n    // Get the 4-byte selector used by Solidity to identify a function\n        /*\n    getSelector(fragment: ErrorFragment | FunctionFragment): string {\n        if (typeof(fragment) === \"string\") {\n            const matches: Array<Fragment> = [ ];\n\n            try { matches.push(this.getFunction(fragment)); } catch (error) { }\n            try { matches.push(this.getError(<string>fragment)); } catch (_) { }\n\n            if (matches.length === 0) {\n                logger.throwArgumentError(\"unknown fragment\", \"key\", fragment);\n            } else if (matches.length > 1) {\n                logger.throwArgumentError(\"ambiguous fragment matches function and error\", \"key\", fragment);\n            }\n\n            fragment = matches[0];\n        }\n\n        return dataSlice(id(fragment.format()), 0, 4);\n    }\n        */\n\n    // Get the 32-byte topic hash used by Solidity to identify an event\n    /*\n    getEventTopic(fragment: EventFragment): string {\n        //if (typeof(fragment) === \"string\") { fragment = this.getEvent(eventFragment); }\n        return id(fragment.format());\n    }\n    */\n\n\n    _decodeParams(params: ReadonlyArray<ParamType>, data: BytesLike): Result {\n        return this.#abiCoder.decode(params, data)\n    }\n\n    _encodeParams(params: ReadonlyArray<ParamType>, values: ReadonlyArray<any>): string {\n        return this.#abiCoder.encode(params, values)\n    }\n\n    /**\n     *  Encodes a ``tx.data`` object for deploying the Contract with\n     *  the %%values%% as the constructor arguments.\n     */\n    encodeDeploy(values?: ReadonlyArray<any>): string {\n        return this._encodeParams(this.deploy.inputs, values || [ ]);\n    }\n\n    /**\n     *  Decodes the result %%data%% (e.g. from an ``eth_call``) for the\n     *  specified error (see [[getError]] for valid values for\n     *  %%key%%).\n     *\n     *  Most developers should prefer the [[parseCallResult]] method instead,\n     *  which will automatically detect a ``CALL_EXCEPTION`` and throw the\n     *  corresponding error.\n     */\n    decodeErrorResult(fragment: ErrorFragment | string, data: BytesLike): Result {\n        if (typeof(fragment) === \"string\") {\n            const f = this.getError(fragment);\n            assertArgument(f, \"unknown error\", \"fragment\", fragment);\n            fragment = f;\n        }\n\n        assertArgument(dataSlice(data, 0, 4) === fragment.selector,\n            `data signature does not match error ${ fragment.name }.`, \"data\", data);\n\n        return this._decodeParams(fragment.inputs, dataSlice(data, 4));\n    }\n\n    /**\n     *  Encodes the transaction revert data for a call result that\n     *  reverted from the the Contract with the sepcified %%error%%\n     *  (see [[getError]] for valid values for %%fragment%%) with the %%values%%.\n     *\n     *  This is generally not used by most developers, unless trying to mock\n     *  a result from a Contract.\n     */\n    encodeErrorResult(fragment: ErrorFragment | string, values?: ReadonlyArray<any>): string {\n        if (typeof(fragment) === \"string\") {\n            const f = this.getError(fragment);\n            assertArgument(f, \"unknown error\", \"fragment\", fragment);\n            fragment = f;\n        }\n\n        return concat([\n            fragment.selector,\n            this._encodeParams(fragment.inputs, values || [ ])\n        ]);\n    }\n\n    /**\n     *  Decodes the %%data%% from a transaction ``tx.data`` for\n     *  the function specified (see [[getFunction]] for valid values\n     *  for %%fragment%%).\n     *\n     *  Most developers should prefer the [[parseTransaction]] method\n     *  instead, which will automatically detect the fragment.\n     */\n    decodeFunctionData(fragment: FunctionFragment | string, data: BytesLike): Result {\n        if (typeof(fragment) === \"string\") {\n            const f = this.getFunction(fragment);\n            assertArgument(f, \"unknown function\", \"fragment\", fragment);\n            fragment = f;\n        }\n\n        assertArgument(dataSlice(data, 0, 4) === fragment.selector,\n            `data signature does not match function ${ fragment.name }.`, \"data\", data);\n\n        return this._decodeParams(fragment.inputs, dataSlice(data, 4));\n    }\n\n    /**\n     *  Encodes the ``tx.data`` for a transaction that calls the function\n     *  specified (see [[getFunction]] for valid values for %%fragment%%) with\n     *  the %%values%%.\n     */\n    encodeFunctionData(fragment: FunctionFragment | string, values?: ReadonlyArray<any>): string {\n        if (typeof(fragment) === \"string\") {\n            const f = this.getFunction(fragment);\n            assertArgument(f, \"unknown function\", \"fragment\", fragment);\n            fragment = f;\n        }\n\n        return concat([\n            fragment.selector,\n            this._encodeParams(fragment.inputs, values || [ ])\n        ]);\n    }\n\n    /**\n     *  Decodes the result %%data%% (e.g. from an ``eth_call``) for the\n     *  specified function (see [[getFunction]] for valid values for\n     *  %%key%%).\n     *\n     *  Most developers should prefer the [[parseCallResult]] method instead,\n     *  which will automatically detect a ``CALL_EXCEPTION`` and throw the\n     *  corresponding error.\n     */\n    decodeFunctionResult(fragment: FunctionFragment | string, data: BytesLike): Result {\n        if (typeof(fragment) === \"string\") {\n            const f = this.getFunction(fragment);\n            assertArgument(f, \"unknown function\", \"fragment\", fragment);\n            fragment = f;\n        }\n\n        let message = \"invalid length for result data\";\n\n        const bytes = getBytesCopy(data);\n        if ((bytes.length % 32) === 0) {\n            try {\n                return this.#abiCoder.decode(fragment.outputs, bytes);\n            } catch (error) {\n                message = \"could not decode result data\";\n            }\n        }\n\n        // Call returned data with no error, but the data is junk\n        assert(false, message, \"BAD_DATA\", {\n            value: hexlify(bytes),\n            info: { method: fragment.name, signature: fragment.format() }\n        });\n    }\n\n    makeError(_data: BytesLike, tx: CallExceptionTransaction): CallExceptionError {\n        const data = getBytes(_data, \"data\");\n\n        const error = AbiCoder.getBuiltinCallException(\"call\", tx, data);\n\n        // Not a built-in error; try finding a custom error\n        const customPrefix = \"execution reverted (unknown custom error)\";\n        if (error.message.startsWith(customPrefix)) {\n            const selector = hexlify(data.slice(0, 4));\n\n            const ef = this.getError(selector);\n            if (ef) {\n                try {\n                    const args = this.#abiCoder.decode(ef.inputs, data.slice(4));\n                    error.revert = {\n                        name: ef.name, signature: ef.format(), args\n                    };\n                    error.reason = error.revert.signature;\n                    error.message = `execution reverted: ${ error.reason }`\n                 } catch (e) {\n                    error.message = `execution reverted (coult not decode custom error)`\n                }\n            }\n        }\n\n        // Add the invocation, if available\n        const parsed = this.parseTransaction(tx);\n        if (parsed) {\n            error.invocation = {\n                method: parsed.name,\n                signature: parsed.signature,\n                args: parsed.args\n            };\n        }\n\n        return error;\n    }\n\n    /**\n     *  Encodes the result data (e.g. from an ``eth_call``) for the\n     *  specified function (see [[getFunction]] for valid values\n     *  for %%fragment%%) with %%values%%.\n     *\n     *  This is generally not used by most developers, unless trying to mock\n     *  a result from a Contract.\n     */\n    encodeFunctionResult(fragment: FunctionFragment | string, values?: ReadonlyArray<any>): string {\n        if (typeof(fragment) === \"string\") {\n            const f = this.getFunction(fragment);\n            assertArgument(f, \"unknown function\", \"fragment\", fragment);\n            fragment = f;\n        }\n        return hexlify(this.#abiCoder.encode(fragment.outputs, values || [ ]));\n    }\n/*\n    spelunk(inputs: Array<ParamType>, values: ReadonlyArray<any>, processfunc: (type: string, value: any) => Promise<any>): Promise<Array<any>> {\n        const promises: Array<Promise<>> = [ ];\n        const process = function(type: ParamType, value: any): any {\n            if (type.baseType === \"array\") {\n                return descend(type.child\n            }\n            if (type. === \"address\") {\n            }\n        };\n\n        const descend = function (inputs: Array<ParamType>, values: ReadonlyArray<any>) {\n            if (inputs.length !== values.length) { throw new Error(\"length mismatch\"); }\n            \n        };\n\n        const result: Array<any> = [ ];\n        values.forEach((value, index) => {\n            if (value == null) {\n                topics.push(null);\n            } else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n                logger.throwArgumentError(\"filtering with tuples or arrays not supported\", (\"contract.\" + param.name), value);\n            } else if (Array.isArray(value)) {\n                topics.push(value.map((value) => encodeTopic(param, value)));\n            } else {\n                topics.push(encodeTopic(param, value));\n            }\n        });\n    }\n*/\n    // Create the filter for the event with search criteria (e.g. for eth_filterLog)\n    encodeFilterTopics(fragment: EventFragment | string, values: ReadonlyArray<any>): Array<null | string | Array<string>> {\n        if (typeof(fragment) === \"string\") {\n            const f = this.getEvent(fragment);\n            assertArgument(f, \"unknown event\", \"eventFragment\", fragment);\n            fragment = f;\n        }\n\n        assert(values.length <= fragment.inputs.length, `too many arguments for ${ fragment.format() }`,\n            \"UNEXPECTED_ARGUMENT\", { count: values.length, expectedCount: fragment.inputs.length })\n\n        const topics: Array<null | string | Array<string>> = [];\n        if (!fragment.anonymous) { topics.push(fragment.topicHash); }\n\n        // @TODO: Use the coders for this; to properly support tuples, etc.\n        const encodeTopic = (param: ParamType, value: any): string => {\n            if (param.type === \"string\") {\n                 return id(value);\n            } else if (param.type === \"bytes\") {\n                 return keccak256(hexlify(value));\n            }\n\n            if (param.type === \"bool\" && typeof(value) === \"boolean\") {\n                value = (value ? \"0x01\": \"0x00\");\n            } else if (param.type.match(/^u?int/)) {\n                value = toBeHex(value);  // @TODO: Should this toTwos??\n            } else if (param.type.match(/^bytes/)) {\n                value = zeroPadBytes(value, 32);\n            } else if (param.type === \"address\") {\n                // Check addresses are valid\n                this.#abiCoder.encode( [ \"address\" ], [ value ]);\n            }\n\n            return zeroPadValue(hexlify(value), 32);\n        };\n\n        values.forEach((value, index) => {\n\n            const param = (<EventFragment>fragment).inputs[index];\n\n            if (!param.indexed) {\n                assertArgument(value == null,\n                    \"cannot filter non-indexed parameters; must be null\", (\"contract.\" + param.name), value);\n                return;\n            }\n\n            if (value == null) {\n                topics.push(null);\n            } else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n                assertArgument(false, \"filtering with tuples or arrays not supported\", (\"contract.\" + param.name), value);\n            } else if (Array.isArray(value)) {\n                topics.push(value.map((value) => encodeTopic(param, value)));\n            } else {\n                topics.push(encodeTopic(param, value));\n            }\n        });\n\n        // Trim off trailing nulls\n        while (topics.length && topics[topics.length - 1] === null) {\n            topics.pop();\n        }\n\n        return topics;\n    }\n\n    encodeEventLog(fragment: EventFragment | string, values: ReadonlyArray<any>): { data: string, topics: Array<string> } {\n        if (typeof(fragment) === \"string\") {\n            const f = this.getEvent(fragment);\n            assertArgument(f, \"unknown event\", \"eventFragment\", fragment);\n            fragment = f;\n        }\n\n        const topics: Array<string> = [ ];\n\n        const dataTypes: Array<ParamType> = [ ];\n        const dataValues: Array<string> = [ ];\n\n        if (!fragment.anonymous) {\n            topics.push(fragment.topicHash);\n        }\n\n        assertArgument(values.length === fragment.inputs.length,\n            \"event arguments/values mismatch\", \"values\", values);\n\n        fragment.inputs.forEach((param, index) => {\n            const value = values[index];\n            if (param.indexed) {\n                if (param.type === \"string\") {\n                    topics.push(id(value))\n                } else if (param.type === \"bytes\") {\n                    topics.push(keccak256(value))\n                } else if (param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    // @TODO\n                    throw new Error(\"not implemented\");\n                } else {\n                    topics.push(this.#abiCoder.encode([ param.type] , [ value ]));\n                }\n            } else {\n                dataTypes.push(param);\n                dataValues.push(value);\n            }\n        });\n\n        return {\n            data: this.#abiCoder.encode(dataTypes , dataValues),\n            topics: topics\n        };\n    }\n\n    // Decode a filter for the event and the search criteria\n    decodeEventLog(fragment: EventFragment | string, data: BytesLike, topics?: ReadonlyArray<string>): Result {\n        if (typeof(fragment) === \"string\") {\n            const f = this.getEvent(fragment);\n            assertArgument(f, \"unknown event\", \"eventFragment\", fragment);\n            fragment = f;\n        }\n\n        if (topics != null && !fragment.anonymous) {\n            const eventTopic = fragment.topicHash;\n            assertArgument(isHexString(topics[0], 32) && topics[0].toLowerCase() === eventTopic,\n                \"fragment/topic mismatch\", \"topics[0]\", topics[0]);\n            topics = topics.slice(1);\n        }\n\n        const indexed: Array<ParamType> = [];\n        const nonIndexed: Array<ParamType> = [];\n        const dynamic: Array<boolean> = [];\n\n        fragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (param.type === \"string\" || param.type === \"bytes\" || param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    indexed.push(ParamType.from({ type: \"bytes32\", name: param.name }));\n                    dynamic.push(true);\n                } else {\n                    indexed.push(param);\n                    dynamic.push(false);\n                }\n            } else {\n                nonIndexed.push(param);\n                dynamic.push(false);\n            }\n        });\n\n        const resultIndexed = (topics != null) ? this.#abiCoder.decode(indexed, concat(topics)): null;\n        const resultNonIndexed = this.#abiCoder.decode(nonIndexed, data, true);\n\n        //const result: (Array<any> & { [ key: string ]: any }) = [ ];\n        const values: Array<any> = [ ];\n        const keys: Array<null | string> = [ ];\n        let nonIndexedIndex = 0, indexedIndex = 0;\n        fragment.inputs.forEach((param, index) => {\n            let value: null | Indexed | Error = null;\n            if (param.indexed) {\n                if (resultIndexed == null) {\n                    value = new Indexed(null);\n\n                } else if (dynamic[index]) {\n                    value = new Indexed(resultIndexed[indexedIndex++]);\n\n                } else {\n                    try {\n                        value = resultIndexed[indexedIndex++];\n                    } catch (error: any) {\n                        value = error;\n                    }\n                }\n            } else {\n                try {\n                    value = resultNonIndexed[nonIndexedIndex++];\n                } catch (error: any) {\n                    value = error;\n                }\n            }\n\n            values.push(value);\n            keys.push(param.name || null);\n        });\n\n        return Result.fromItems(values, keys);\n    }\n\n    /**\n     *  Parses a transaction, finding the matching function and extracts\n     *  the parameter values along with other useful function details.\n     *\n     *  If the matching function cannot be found, return null.\n     */\n    parseTransaction(tx: { data: string, value?: BigNumberish }): null | TransactionDescription {\n        const data = getBytes(tx.data, \"tx.data\");\n        const value = getBigInt((tx.value != null) ? tx.value: 0, \"tx.value\");\n\n        const fragment = this.getFunction(hexlify(data.slice(0, 4)));\n\n        if (!fragment) { return null; }\n\n        const args = this.#abiCoder.decode(fragment.inputs, data.slice(4));\n        return new TransactionDescription(fragment, fragment.selector, args, value);\n    }\n\n    parseCallResult(data: BytesLike): Result {\n        throw new Error(\"@TODO\");\n    }\n\n    /**\n     *  Parses a receipt log, finding the matching event and extracts\n     *  the parameter values along with other useful event details.\n     *\n     *  If the matching event cannot be found, returns null.\n     */\n    parseLog(log: { topics: ReadonlyArray<string>, data: string}): null | LogDescription {\n        const fragment = this.getEvent(log.topics[0]);\n\n        if (!fragment || fragment.anonymous) { return null; }\n\n        // @TODO: If anonymous, and the only method, and the input count matches, should we parse?\n        //        Probably not, because just because it is the only event in the ABI does\n        //        not mean we have the full ABI; maybe just a fragment?\n\n\n       return new LogDescription(fragment, fragment.topicHash, this.decodeEventLog(fragment, log.data, log.topics));\n    }\n\n    /**\n     *  Parses a revert data, finding the matching error and extracts\n     *  the parameter values along with other useful error details.\n     *\n     *  If the matching error cannot be found, returns null.\n     */\n    parseError(data: BytesLike): null | ErrorDescription {\n        const hexData = hexlify(data);\n\n        const fragment = this.getError(dataSlice(hexData, 0, 4));\n\n        if (!fragment) { return null; }\n\n        const args = this.#abiCoder.decode(fragment.inputs, dataSlice(hexData, 4));\n        return new ErrorDescription(fragment, fragment.selector, args);\n    }\n\n    /**\n     *  Creates a new [[Interface]] from the ABI %%value%%.\n     *\n     *  The %%value%% may be provided as an existing [[Interface]] object,\n     *  a JSON-encoded ABI or any Human-Readable ABI format.\n     */\n    static from(value: InterfaceAbi | Interface): Interface {\n        // Already an Interface, which is immutable\n        if (value instanceof Interface) { return value; }\n\n        // JSON\n        if (typeof(value) === \"string\") { return new Interface(JSON.parse(value)); }\n\n        // An Interface; possibly from another v6 instance\n        if (typeof((<any>value).formatJson) === \"function\") {\n            return new Interface((<any>value).formatJson());\n        }\n\n        // A legacy Interface; from an older version\n        if (typeof((<any>value).format) === \"function\") {\n            return new Interface((<any>value).format(\"json\"));\n        }\n\n        // Array of fragments\n        return new Interface(value);\n    }\n}\n", "/**\n *  A **Contract** object is a meta-class (a class whose definition is\n *  defined at runtime), which communicates with a deployed smart contract\n *  on the blockchain and provides a simple JavaScript interface to call\n *  methods, send transaction, query historic logs and listen for its events.\n *\n *  @_section: api/contract:Contracts  [about-contracts]\n */\nexport {\n    BaseContract, Contract\n} from \"./contract.js\";\n\nexport {\n    ContractFactory\n} from \"./factory.js\";\n\nexport {\n    ContractEventPayload, ContractUnknownEventPayload,\n    ContractTransactionReceipt, ContractTransactionResponse,\n    EventLog, UndecodedEventLog\n} from \"./wrappers.js\";\n\nexport type {\n    BaseContractMethod, ConstantContractMethod,\n    PostfixOverrides,\n    ContractEvent, ContractEventArgs, ContractEventName,\n    ContractDeployTransaction,\n    ContractInterface, ContractMethod, ContractMethodArgs, ContractTransaction,\n    DeferredTopicFilter, Overrides,\n    WrappedFallback\n} from \"./types.js\";\n", "import { Interface, Typed } from \"../abi/index.js\";\nimport { isAddressable, resolveAddress } from \"../address/index.js\";\n// import from provider.ts instead of index.ts to prevent circular dep\n// from EtherscanProvider\nimport { copyRequest, Log, TransactionResponse } from \"../providers/provider.js\";\nimport {\n    defineProperties, getBigInt, isCallException, isHexString, resolveProperties,\n    isError, makeError, assert, assertArgument\n} from \"../utils/index.js\";\n\nimport {\n    ContractEventPayload, ContractUnknownEventPayload,\n    ContractTransactionResponse,\n    EventLog, UndecodedEventLog\n} from \"./wrappers.js\";\n\nimport type { EventFragment, FunctionFragment, InterfaceAbi, ParamType, Result } from \"../abi/index.js\";\nimport type { Addressable, NameResolver } from \"../address/index.js\";\nimport type { EventEmitterable, Listener } from \"../utils/index.js\";\nimport type {\n    BlockTag, ContractRunner, Provider, TransactionRequest, TopicFilter\n} from \"../providers/index.js\";\n\nimport type {\n    BaseContractMethod,\n    ContractEventName,\n    ContractInterface,\n    ContractMethodArgs,\n    ContractMethod,\n    ContractEventArgs,\n    ContractEvent,\n    ContractTransaction,\n    DeferredTopicFilter,\n    WrappedFallback\n} from \"./types.js\";\n\nconst BN_0 = BigInt(0);\n\ninterface ContractRunnerCaller extends ContractRunner {\n    call: (tx: TransactionRequest) => Promise<string>;\n}\n\ninterface ContractRunnerEstimater extends ContractRunner {\n    estimateGas: (tx: TransactionRequest) => Promise<bigint>;\n}\n\ninterface ContractRunnerSender extends ContractRunner {\n    sendTransaction: (tx: TransactionRequest) => Promise<TransactionResponse>;\n}\n\ninterface ContractRunnerResolver extends ContractRunner {\n    resolveName: (name: string | Addressable) => Promise<null | string>;\n}\n\nfunction canCall(value: any): value is ContractRunnerCaller {\n    return (value && typeof(value.call) === \"function\");\n}\n\nfunction canEstimate(value: any): value is ContractRunnerEstimater {\n    return (value && typeof(value.estimateGas) === \"function\");\n}\n\nfunction canResolve(value: any): value is ContractRunnerResolver {\n    return (value && typeof(value.resolveName) === \"function\");\n}\n\nfunction canSend(value: any): value is ContractRunnerSender {\n    return (value && typeof(value.sendTransaction) === \"function\");\n}\n\nfunction getResolver(value: any): undefined | NameResolver {\n    if (value != null) {\n        if (canResolve(value)) { return value; }\n        if (value.provider) { return value.provider; }\n    }\n    return undefined;\n}\n\nclass PreparedTopicFilter implements DeferredTopicFilter {\n    #filter: Promise<TopicFilter>;\n    readonly fragment!: EventFragment;\n\n    constructor(contract: BaseContract, fragment: EventFragment, args: Array<any>) {\n        defineProperties<PreparedTopicFilter>(this, { fragment });\n        if (fragment.inputs.length < args.length) {\n            throw new Error(\"too many arguments\");\n        }\n\n        // Recursively descend into args and resolve any addresses\n        const runner = getRunner(contract.runner, \"resolveName\");\n        const resolver = canResolve(runner) ? runner: null;\n        this.#filter = (async function() {\n            const resolvedArgs = await Promise.all(fragment.inputs.map((param, index) => {\n                const arg = args[index];\n                if (arg == null) { return null; }\n\n                return param.walkAsync(args[index], (type, value) => {\n                    if (type === \"address\") {\n                        if (Array.isArray(value)) {\n                            return Promise.all(value.map((v) => resolveAddress(v, resolver)));\n                        }\n                        return resolveAddress(value, resolver);\n                    }\n                    return value;\n                });\n            }));\n\n            return contract.interface.encodeFilterTopics(fragment, resolvedArgs);\n        })();\n    }\n\n    getTopicFilter(): Promise<TopicFilter> {\n        return this.#filter;\n    }\n}\n\n\n// A = Arguments passed in as a tuple\n// R = The result type of the call (i.e. if only one return type,\n//     the qualified type, otherwise Result)\n// D = The type the default call will return (i.e. R for view/pure,\n//     TransactionResponse otherwise)\n//export interface ContractMethod<A extends Array<any> = Array<any>, R = any, D extends R | ContractTransactionResponse = ContractTransactionResponse> {\n\nfunction getRunner<T extends ContractRunner>(value: any, feature: keyof ContractRunner): null | T {\n    if (value == null) { return null; }\n    if (typeof(value[feature]) === \"function\") { return value; }\n    if (value.provider && typeof(value.provider[feature]) === \"function\") {\n        return value.provider;\n    }\n    return null;\n}\n\nfunction getProvider(value: null | ContractRunner): null | Provider {\n    if (value == null) { return null; }\n    return value.provider || null;\n}\n\n/**\n *  @_ignore:\n */\nexport async function copyOverrides<O extends string = \"data\" | \"to\">(arg: any, allowed?: Array<string>): Promise<Omit<ContractTransaction, O>> {\n\n    // Make sure the overrides passed in are a valid overrides object\n    const _overrides = Typed.dereference(arg, \"overrides\");\n    assertArgument(typeof(_overrides) === \"object\", \"invalid overrides parameter\", \"overrides\", arg);\n\n    // Create a shallow copy (we'll deep-ify anything needed during normalizing)\n    const overrides = copyRequest(_overrides);\n\n    assertArgument(overrides.to == null || (allowed || [ ]).indexOf(\"to\") >= 0,\n      \"cannot override to\", \"overrides.to\", overrides.to);\n    assertArgument(overrides.data == null || (allowed || [ ]).indexOf(\"data\") >= 0,\n      \"cannot override data\", \"overrides.data\", overrides.data);\n\n    // Resolve any from\n    if (overrides.from) { overrides.from = overrides.from; }\n\n    return <Omit<ContractTransaction, O>>overrides;\n}\n\n/**\n *  @_ignore:\n */\nexport async function resolveArgs(_runner: null | ContractRunner, inputs: ReadonlyArray<ParamType>, args: Array<any>): Promise<Array<any>> {\n    // Recursively descend into args and resolve any addresses\n    const runner = getRunner(_runner, \"resolveName\");\n    const resolver = canResolve(runner) ? runner: null;\n    return await Promise.all(inputs.map((param, index) => {\n        return param.walkAsync(args[index], (type, value) => {\n            value = Typed.dereference(value, type);\n            if (type === \"address\") { return resolveAddress(value, resolver); }\n            return value;\n        });\n    }));\n}\n\nfunction buildWrappedFallback(contract: BaseContract): WrappedFallback {\n\n    const populateTransaction = async function(overrides?: Omit<TransactionRequest, \"to\">): Promise<ContractTransaction> {\n        // If an overrides was passed in, copy it and normalize the values\n\n        const tx: ContractTransaction = <any>(await copyOverrides<\"data\">(overrides, [ \"data\" ]));\n        tx.to = await contract.getAddress();\n\n        if (tx.from) {\n            tx.from = await resolveAddress(tx.from, getResolver(contract.runner));\n        }\n\n        const iface = contract.interface;\n\n        const noValue = (getBigInt((tx.value || BN_0), \"overrides.value\") === BN_0);\n        const noData = ((tx.data || \"0x\") === \"0x\");\n\n        if (iface.fallback && !iface.fallback.payable && iface.receive && !noData && !noValue) {\n            assertArgument(false, \"cannot send data to receive or send value to non-payable fallback\", \"overrides\", overrides);\n        }\n\n        assertArgument(iface.fallback || noData,\n          \"cannot send data to receive-only contract\", \"overrides.data\", tx.data);\n\n        // Only allow payable contracts to set non-zero value\n        const payable = iface.receive || (iface.fallback && iface.fallback.payable);\n        assertArgument(payable || noValue,\n          \"cannot send value to non-payable fallback\", \"overrides.value\", tx.value);\n\n        // Only allow fallback contracts to set non-empty data\n        assertArgument(iface.fallback || noData,\n          \"cannot send data to receive-only contract\", \"overrides.data\", tx.data);\n\n        return tx;\n    }\n\n    const staticCall = async function(overrides?: Omit<TransactionRequest, \"to\">): Promise<string> {\n        const runner = getRunner(contract.runner, \"call\");\n        assert(canCall(runner), \"contract runner does not support calling\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"call\" });\n\n        const tx = await populateTransaction(overrides);\n\n        try {\n            return await runner.call(tx);\n        } catch (error: any) {\n            if (isCallException(error) && error.data) {\n                throw contract.interface.makeError(error.data, tx);\n            }\n            throw error;\n        }\n    }\n\n    const send = async function(overrides?: Omit<TransactionRequest, \"to\">): Promise<ContractTransactionResponse> {\n        const runner = contract.runner;\n        assert(canSend(runner), \"contract runner does not support sending transactions\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"sendTransaction\" });\n\n        const tx = await runner.sendTransaction(await populateTransaction(overrides));\n        const provider = getProvider(contract.runner);\n        // @TODO: the provider can be null; make a custom dummy provider that will throw a\n        // meaningful error\n        return new ContractTransactionResponse(contract.interface, <Provider>provider, tx);\n    }\n\n    const estimateGas = async function(overrides?: Omit<TransactionRequest, \"to\">): Promise<bigint> {\n        const runner = getRunner(contract.runner, \"estimateGas\");\n        assert(canEstimate(runner), \"contract runner does not support gas estimation\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"estimateGas\" });\n\n        return await runner.estimateGas(await populateTransaction(overrides));\n    }\n\n    const method = async (overrides?: Omit<TransactionRequest, \"to\">) => {\n        return await send(overrides);\n    };\n\n    defineProperties<any>(method, {\n        _contract: contract,\n\n        estimateGas,\n        populateTransaction,\n        send, staticCall\n    });\n\n    return <WrappedFallback>method;\n}\n\nfunction buildWrappedMethod<A extends Array<any> = Array<any>, R = any, D extends R | ContractTransactionResponse = ContractTransactionResponse>(contract: BaseContract, key: string): BaseContractMethod<A, R, D> {\n\n    const getFragment = function(...args: ContractMethodArgs<A>): FunctionFragment {\n        const fragment = contract.interface.getFunction(key, args);\n        assert(fragment, \"no matching fragment\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"fragment\",\n            info: { key, args }\n        });\n        return fragment;\n    }\n\n    const populateTransaction = async function(...args: ContractMethodArgs<A>): Promise<ContractTransaction> {\n        const fragment = getFragment(...args);\n\n        // If an overrides was passed in, copy it and normalize the values\n        let overrides: Omit<ContractTransaction, \"data\" | \"to\"> = { };\n        if (fragment.inputs.length + 1 === args.length) {\n            overrides = await copyOverrides(args.pop());\n\n            if (overrides.from) {\n                overrides.from = await resolveAddress(overrides.from, getResolver(contract.runner));\n            }\n        }\n\n        if (fragment.inputs.length !== args.length) {\n            throw new Error(\"internal error: fragment inputs doesn't match arguments; should not happen\");\n        }\n\n        const resolvedArgs = await resolveArgs(contract.runner, fragment.inputs, args);\n\n        return Object.assign({ }, overrides, await resolveProperties({\n            to: contract.getAddress(),\n            data: contract.interface.encodeFunctionData(fragment, resolvedArgs)\n        }));\n    }\n\n    const staticCall = async function(...args: ContractMethodArgs<A>): Promise<R> {\n        const result = await staticCallResult(...args);\n        if (result.length === 1) { return result[0]; }\n        return <R><unknown>result;\n    }\n\n    const send = async function(...args: ContractMethodArgs<A>): Promise<ContractTransactionResponse> {\n        const runner = contract.runner;\n        assert(canSend(runner), \"contract runner does not support sending transactions\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"sendTransaction\" });\n\n        const tx = await runner.sendTransaction(await populateTransaction(...args));\n        const provider = getProvider(contract.runner);\n        // @TODO: the provider can be null; make a custom dummy provider that will throw a\n        // meaningful error\n        return new ContractTransactionResponse(contract.interface, <Provider>provider, tx);\n    }\n\n    const estimateGas = async function(...args: ContractMethodArgs<A>): Promise<bigint> {\n        const runner = getRunner(contract.runner, \"estimateGas\");\n        assert(canEstimate(runner), \"contract runner does not support gas estimation\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"estimateGas\" });\n\n        return await runner.estimateGas(await populateTransaction(...args));\n    }\n\n    const staticCallResult = async function(...args: ContractMethodArgs<A>): Promise<Result> {\n        const runner = getRunner(contract.runner, \"call\");\n        assert(canCall(runner), \"contract runner does not support calling\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"call\" });\n\n        const tx = await populateTransaction(...args);\n\n        let result = \"0x\";\n        try {\n            result = await runner.call(tx);\n        } catch (error: any) {\n            if (isCallException(error) && error.data) {\n                throw contract.interface.makeError(error.data, tx);\n            }\n            throw error;\n        }\n\n        const fragment = getFragment(...args);\n        return contract.interface.decodeFunctionResult(fragment, result);\n    };\n\n    const method = async (...args: ContractMethodArgs<A>) => {\n        const fragment = getFragment(...args);\n        if (fragment.constant) { return await staticCall(...args); }\n        return await send(...args);\n    };\n\n    defineProperties<any>(method, {\n        name: contract.interface.getFunctionName(key),\n        _contract: contract, _key: key,\n\n        getFragment,\n\n        estimateGas,\n        populateTransaction,\n        send, staticCall, staticCallResult,\n    });\n\n    // Only works on non-ambiguous keys (refined fragment is always non-ambiguous)\n    Object.defineProperty(method, \"fragment\", {\n        configurable: false,\n        enumerable: true,\n        get: () => {\n            const fragment = contract.interface.getFunction(key);\n            assert(fragment, \"no matching fragment\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"fragment\",\n                info: { key }\n            });\n            return fragment;\n        }\n    });\n\n    return <BaseContractMethod<A, R, D>>method;\n}\n\nfunction buildWrappedEvent<A extends Array<any> = Array<any>>(contract: BaseContract, key: string): ContractEvent<A> {\n\n    const getFragment = function(...args: ContractEventArgs<A>): EventFragment {\n        const fragment = contract.interface.getEvent(key, args);\n\n        assert(fragment, \"no matching fragment\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"fragment\",\n            info: { key, args }\n        });\n\n        return fragment;\n    }\n\n    const method = function(...args: ContractMethodArgs<A>): PreparedTopicFilter {\n        return new PreparedTopicFilter(contract, getFragment(...args), args);\n    };\n\n    defineProperties<any>(method, {\n        name: contract.interface.getEventName(key),\n        _contract: contract, _key: key,\n\n        getFragment\n    });\n\n    // Only works on non-ambiguous keys (refined fragment is always non-ambiguous)\n    Object.defineProperty(method, \"fragment\", {\n        configurable: false,\n        enumerable: true,\n        get: () => {\n            const fragment = contract.interface.getEvent(key);\n\n            assert(fragment, \"no matching fragment\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"fragment\",\n                info: { key }\n            });\n\n            return fragment;\n        }\n    });\n\n    return <ContractEvent<A>><unknown>method;\n}\n\ntype Sub = {\n    tag: string;\n    listeners: Array<{ listener: Listener, once: boolean }>,\n    start: () => void;\n    stop: () => void;\n};\n\n\n// The combination of TypeScrype, Private Fields and Proxies makes\n// the world go boom; so we hide variables with some trickery keeping\n// a symbol attached to each BaseContract which its sub-class (even\n// via a Proxy) can reach and use to look up its internal values.\n\nconst internal = Symbol.for(\"_ethersInternal_contract\");\ntype Internal = {\n    addrPromise: Promise<string>;\n    addr: null | string;\n\n    deployTx: null | ContractTransactionResponse;\n\n    subs: Map<string, Sub>;\n};\n\nconst internalValues: WeakMap<BaseContract, Internal> = new WeakMap();\n\nfunction setInternal(contract: BaseContract, values: Internal): void {\n    internalValues.set(contract[internal], values);\n}\n\nfunction getInternal(contract: BaseContract): Internal {\n    return internalValues.get(contract[internal]) as Internal;\n}\n\nfunction isDeferred(value: any): value is DeferredTopicFilter {\n    return (value && typeof(value) === \"object\" && (\"getTopicFilter\" in value) &&\n      (typeof(value.getTopicFilter) === \"function\") && value.fragment);\n}\n\nasync function getSubInfo(contract: BaseContract, event: ContractEventName): Promise<{ fragment: null | EventFragment, tag: string, topics: TopicFilter }> {\n    let topics: Array<null | string | Array<string>>;\n    let fragment: null | EventFragment = null;\n\n    // Convert named events to topicHash and get the fragment for\n    // events which need deconstructing.\n\n    if (Array.isArray(event)) {\n        const topicHashify = function(name: string): string {\n            if (isHexString(name, 32)) { return name; }\n            const fragment = contract.interface.getEvent(name);\n            assertArgument(fragment, \"unknown fragment\", \"name\", name);\n            return fragment.topicHash;\n        }\n\n        // Array of Topics and Names; e.g. `[ \"0x1234...89ab\", \"Transfer(address)\" ]`\n        topics = event.map((e) => {\n            if (e == null) { return null; }\n            if (Array.isArray(e)) { return e.map(topicHashify); }\n            return topicHashify(e);\n        });\n\n    } else if (event === \"*\") {\n        topics = [ null ];\n\n    } else if (typeof(event) === \"string\") {\n        if (isHexString(event, 32)) {\n            // Topic Hash\n            topics = [ event ];\n        } else {\n           // Name or Signature; e.g. `\"Transfer\", `\"Transfer(address)\"`\n            fragment = contract.interface.getEvent(event);\n            assertArgument(fragment, \"unknown fragment\", \"event\", event);\n            topics = [ fragment.topicHash ];\n        }\n\n    } else if (isDeferred(event)) {\n        // Deferred Topic Filter; e.g. `contract.filter.Transfer(from)`\n        topics = await event.getTopicFilter();\n\n    } else if (\"fragment\" in event) {\n        // ContractEvent; e.g. `contract.filter.Transfer`\n        fragment = event.fragment;\n        topics = [ fragment.topicHash ];\n\n    } else {\n        assertArgument(false, \"unknown event name\", \"event\", event);\n    }\n\n    // Normalize topics and sort TopicSets\n    topics = topics.map((t) => {\n        if (t == null) { return null; }\n        if (Array.isArray(t)) {\n            const items = Array.from(new Set(t.map((t) => t.toLowerCase())).values());\n            if (items.length === 1) { return items[0]; }\n            items.sort();\n            return items;\n        }\n        return t.toLowerCase();\n    });\n\n    const tag = topics.map((t) => {\n        if (t == null) { return \"null\"; }\n        if (Array.isArray(t)) { return t.join(\"|\"); }\n        return t;\n    }).join(\"&\");\n\n    return { fragment, tag, topics }\n}\n\nasync function hasSub(contract: BaseContract, event: ContractEventName): Promise<null | Sub> {\n    const { subs } = getInternal(contract);\n    return subs.get((await getSubInfo(contract, event)).tag) || null;\n}\n\nasync function getSub(contract: BaseContract, operation: string, event: ContractEventName): Promise<Sub> {\n    // Make sure our runner can actually subscribe to events\n    const provider = getProvider(contract.runner);\n    assert(provider, \"contract runner does not support subscribing\",\n        \"UNSUPPORTED_OPERATION\", { operation });\n\n    const { fragment, tag, topics } = await getSubInfo(contract, event);\n\n    const { addr, subs } = getInternal(contract);\n\n    let sub = subs.get(tag);\n    if (!sub) {\n        const address: string | Addressable = (addr ? addr: contract);\n        const filter = { address, topics };\n        const listener = (log: Log) => {\n            let foundFragment = fragment;\n            if (foundFragment == null) {\n                try {\n                    foundFragment = contract.interface.getEvent(log.topics[0]);\n                } catch (error) { }\n            }\n\n            // If fragment is null, we do not deconstruct the args to emit\n\n            if (foundFragment) {\n                const _foundFragment = foundFragment;\n                const args = fragment ? contract.interface.decodeEventLog(fragment, log.data, log.topics): [ ];\n                emit(contract, event, args, (listener: null | Listener) => {\n                    return new ContractEventPayload(contract, listener, event, _foundFragment, log);\n                });\n            } else {\n                emit(contract, event, [ ], (listener: null | Listener) => {\n                    return new ContractUnknownEventPayload(contract, listener, event, log);\n                });\n            }\n        };\n\n        let starting: Array<Promise<any>> = [ ];\n        const start = () => {\n            if (starting.length) { return; }\n            starting.push(provider.on(filter, listener));\n        };\n\n        const stop = async () => {\n            if (starting.length == 0) { return; }\n\n            let started = starting;\n            starting = [ ];\n            await Promise.all(started);\n            provider.off(filter, listener);\n        };\n\n        sub = { tag, listeners: [ ], start, stop };\n        subs.set(tag, sub);\n    }\n    return sub;\n}\n\n// We use this to ensure one emit resolves before firing the next to\n// ensure correct ordering (note this cannot throw and just adds the\n// notice to the event queu using setTimeout).\nlet lastEmit: Promise<any> = Promise.resolve();\n\ntype PayloadFunc = (listener: null | Listener) => ContractUnknownEventPayload;\n\nasync function _emit(contract: BaseContract, event: ContractEventName, args: Array<any>, payloadFunc: null | PayloadFunc): Promise<boolean> {\n    await lastEmit;\n\n    const sub = await hasSub(contract, event);\n    if (!sub) { return false; }\n\n    const count = sub.listeners.length;\n    sub.listeners = sub.listeners.filter(({ listener, once }) => {\n        const passArgs = Array.from(args);\n        if (payloadFunc) {\n            passArgs.push(payloadFunc(once ? null: listener));\n        }\n        try {\n            listener.call(contract, ...passArgs);\n        } catch (error) { }\n        return !once;\n    });\n\n    if (sub.listeners.length === 0) {\n        sub.stop();\n        getInternal(contract).subs.delete(sub.tag);\n    }\n\n    return (count > 0);\n}\n\nasync function emit(contract: BaseContract, event: ContractEventName, args: Array<any>, payloadFunc: null | PayloadFunc): Promise<boolean> {\n    try {\n        await lastEmit;\n    } catch (error) { }\n\n    const resultPromise = _emit(contract, event, args, payloadFunc);\n    lastEmit = resultPromise;\n    return await resultPromise;\n}\n\nconst passProperties = [ \"then\" ];\nexport class BaseContract implements Addressable, EventEmitterable<ContractEventName> {\n    /**\n     *  The target to connect to.\n     *\n     *  This can be an address, ENS name or any [[Addressable]], such as\n     *  another contract. To get the resovled address, use the ``getAddress``\n     *  method.\n     */\n    readonly target!: string | Addressable;\n\n    /**\n     *  The contract Interface.\n     */\n    readonly interface!: Interface;\n\n    /**\n     *  The connected runner. This is generally a [[Provider]] or a\n     *  [[Signer]], which dictates what operations are supported.\n     *\n     *  For example, a **Contract** connected to a [[Provider]] may\n     *  only execute read-only operations.\n     */\n    readonly runner!: null | ContractRunner;\n\n    /**\n     *  All the Events available on this contract.\n     */\n    readonly filters!: Record<string, ContractEvent>;\n\n    /**\n     *  @_ignore:\n     */\n    readonly [internal]: any;\n\n    /**\n     *  The fallback or receive function if any.\n     */\n    readonly fallback!: null | WrappedFallback;\n\n    /**\n     *  Creates a new contract connected to %%target%% with the %%abi%% and\n     *  optionally connected to a %%runner%% to perform operations on behalf\n     *  of.\n     */\n    constructor(target: string | Addressable, abi: Interface | InterfaceAbi, runner?: null | ContractRunner, _deployTx?: null | TransactionResponse) {\n        assertArgument(typeof(target) === \"string\" || isAddressable(target),\n            \"invalid value for Contract target\", \"target\", target);\n\n        if (runner == null) { runner = null; }\n        const iface = Interface.from(abi);\n        defineProperties<BaseContract>(this, { target, runner, interface: iface });\n\n        Object.defineProperty(this, internal, { value: { } });\n\n        let addrPromise;\n        let addr: null | string = null;\n\n        let deployTx: null | ContractTransactionResponse = null;\n        if (_deployTx) {\n            const provider = getProvider(runner);\n            // @TODO: the provider can be null; make a custom dummy provider that will throw a\n            // meaningful error\n            deployTx = new ContractTransactionResponse(this.interface, <Provider>provider, _deployTx);\n        }\n\n        let subs = new Map();\n\n        // Resolve the target as the address\n        if (typeof(target) === \"string\") {\n            if (isHexString(target)) {\n                addr = target;\n                addrPromise = Promise.resolve(target);\n\n            } else {\n                const resolver = getRunner(runner, \"resolveName\");\n                if (!canResolve(resolver)) {\n                    throw makeError(\"contract runner does not support name resolution\", \"UNSUPPORTED_OPERATION\", {\n                        operation: \"resolveName\"\n                    });\n                }\n\n                addrPromise = resolver.resolveName(target).then((addr) => {\n                    if (addr == null) {\n                        throw makeError(\"an ENS name used for a contract target must be correctly configured\", \"UNCONFIGURED_NAME\", {\n                            value: target\n                        });\n                    }\n                    getInternal(this).addr = addr;\n                    return addr;\n                });\n            }\n        } else {\n            addrPromise = target.getAddress().then((addr) => {\n                if (addr == null) { throw new Error(\"TODO\"); }\n                getInternal(this).addr = addr;\n                return addr;\n            });\n        }\n\n        // Set our private values\n        setInternal(this, { addrPromise, addr, deployTx, subs });\n\n        // Add the event filters\n        const filters = new Proxy({ }, {\n            get: (target, prop, receiver) => {\n                // Pass important checks (like `then` for Promise) through\n                if (typeof(prop) === \"symbol\" || passProperties.indexOf(prop) >= 0) {\n                    return Reflect.get(target, prop, receiver);\n                }\n\n                try {\n                    return this.getEvent(prop);\n                } catch (error) {\n                    if (!isError(error, \"INVALID_ARGUMENT\") || error.argument !== \"key\") {\n                        throw error;\n                    }\n                }\n\n                return undefined;\n            },\n            has: (target, prop) => {\n                // Pass important checks (like `then` for Promise) through\n                if (passProperties.indexOf(<string>prop) >= 0) {\n                    return Reflect.has(target, prop);\n                }\n\n                return Reflect.has(target, prop) || this.interface.hasEvent(String(prop));\n            }\n        });\n        defineProperties<BaseContract>(this, { filters });\n\n        defineProperties<BaseContract>(this, {\n            fallback: ((iface.receive || iface.fallback) ? (buildWrappedFallback(this)): null)\n        });\n\n        // Return a Proxy that will respond to functions\n        return new Proxy(this, {\n            get: (target, prop, receiver) => {\n                if (typeof(prop) === \"symbol\" || prop in target || passProperties.indexOf(prop) >= 0) {\n                    return Reflect.get(target, prop, receiver);\n                }\n\n                // Undefined properties should return undefined\n                try {\n                    return target.getFunction(prop);\n                } catch (error) {\n                    if (!isError(error, \"INVALID_ARGUMENT\") || error.argument !== \"key\") {\n                        throw error;\n                    }\n                }\n\n                return undefined;\n            },\n            has: (target, prop) => {\n                if (typeof(prop) === \"symbol\" || prop in target || passProperties.indexOf(prop) >= 0) {\n                    return Reflect.has(target, prop);\n                }\n\n                return target.interface.hasFunction(prop);\n            }\n        });\n\n    }\n\n    /**\n     *  Return a new Contract instance with the same target and ABI, but\n     *  a different %%runner%%.\n     */\n    connect(runner: null | ContractRunner): BaseContract {\n        return new BaseContract(this.target, this.interface, runner);\n    }\n\n    /**\n     *  Return a new Contract instance with the same ABI and runner, but\n     *  a different %%target%%.\n     */\n    attach(target: string | Addressable): BaseContract {\n        return new BaseContract(target, this.interface, this.runner);\n    }\n\n    /**\n     *  Return the resolved address of this Contract.\n     */\n    async getAddress(): Promise<string> { return await getInternal(this).addrPromise; }\n\n    /**\n     *  Return the deployed bytecode or null if no bytecode is found.\n     */\n    async getDeployedCode(): Promise<null | string> {\n        const provider = getProvider(this.runner);\n        assert(provider, \"runner does not support .provider\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"getDeployedCode\" });\n\n        const code = await provider.getCode(await this.getAddress());\n        if (code === \"0x\") { return null; }\n        return code;\n    }\n\n    /**\n     *  Resolve to this Contract once the bytecode has been deployed, or\n     *  resolve immediately if already deployed.\n     */\n    async waitForDeployment(): Promise<this> {\n        // We have the deployement transaction; just use that (throws if deployement fails)\n        const deployTx = this.deploymentTransaction();\n        if (deployTx) {\n            await deployTx.wait();\n            return this;\n        }\n\n        // Check for code\n        const code = await this.getDeployedCode();\n        if (code != null) { return this; }\n\n        // Make sure we can subscribe to a provider event\n        const provider = getProvider(this.runner);\n        assert(provider != null, \"contract runner does not support .provider\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"waitForDeployment\" });\n\n        return new Promise((resolve, reject) => {\n            const checkCode = async () => {\n                try {\n                    const code = await this.getDeployedCode();\n                    if (code != null) { return resolve(this); }\n                    provider.once(\"block\", checkCode);\n                } catch (error) {\n                    reject(error);\n                }\n            };\n            checkCode();\n        });\n    }\n\n    /**\n     *  Return the transaction used to deploy this contract.\n     *\n     *  This is only available if this instance was returned from a\n     *  [[ContractFactory]].\n     */\n    deploymentTransaction(): null | ContractTransactionResponse {\n        return getInternal(this).deployTx;\n    }\n\n    /**\n     *  Return the function for a given name. This is useful when a contract\n     *  method name conflicts with a JavaScript name such as ``prototype`` or\n     *  when using a Contract programatically.\n     */\n    getFunction<T extends ContractMethod = ContractMethod>(key: string | FunctionFragment): T {\n        if (typeof(key) !== \"string\") { key = key.format(); }\n        const func = buildWrappedMethod(this, key);\n        return <T>func;\n    }\n\n    /**\n     *  Return the event for a given name. This is useful when a contract\n     *  event name conflicts with a JavaScript name such as ``prototype`` or\n     *  when using a Contract programatically.\n     */\n    getEvent(key: string | EventFragment): ContractEvent {\n        if (typeof(key) !== \"string\") { key = key.format(); }\n        return buildWrappedEvent(this, key);\n    }\n\n    /**\n     *  @_ignore:\n     */\n    async queryTransaction(hash: string): Promise<Array<EventLog>> {\n        throw new Error(\"@TODO\");\n    }\n\n    /*\n    // @TODO: this is a non-backwards compatible change, but will be added\n    //        in v7 and in a potential SmartContract class in an upcoming\n    //        v6 release\n    async getTransactionReceipt(hash: string): Promise<null | ContractTransactionReceipt> {\n        const provider = getProvider(this.runner);\n        assert(provider, \"contract runner does not have a provider\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"queryTransaction\" });\n\n        const receipt = await provider.getTransactionReceipt(hash);\n        if (receipt == null) { return null; }\n\n        return new ContractTransactionReceipt(this.interface, provider, receipt);\n    }\n    */\n\n    /**\n     *  Provide historic access to event data for %%event%% in the range\n     *  %%fromBlock%% (default: ``0``) to %%toBlock%% (default: ``\"latest\"``)\n     *  inclusive.\n     */\n    async queryFilter(event: ContractEventName, fromBlock?: BlockTag, toBlock?: BlockTag): Promise<Array<EventLog | Log>> {\n        if (fromBlock == null) { fromBlock = 0; }\n        if (toBlock == null) { toBlock = \"latest\"; }\n        const { addr, addrPromise } = getInternal(this);\n        const address = (addr ? addr: (await addrPromise));\n        const { fragment, topics } = await getSubInfo(this, event);\n        const filter = { address, topics, fromBlock, toBlock };\n\n        const provider = getProvider(this.runner);\n        assert(provider, \"contract runner does not have a provider\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"queryFilter\" });\n\n        return (await provider.getLogs(filter)).map((log) => {\n            let foundFragment = fragment;\n            if (foundFragment == null) {\n                try {\n                    foundFragment = this.interface.getEvent(log.topics[0]);\n                } catch (error) { }\n            }\n\n            if (foundFragment) {\n                try {\n                    return new EventLog(log, this.interface, foundFragment);\n                } catch (error: any) {\n                    return new UndecodedEventLog(log, error);\n                }\n            }\n\n            return new Log(log, provider);\n        });\n    }\n\n    /**\n     *  Add an event %%listener%% for the %%event%%.\n     */\n    async on(event: ContractEventName, listener: Listener): Promise<this> {\n        const sub = await getSub(this, \"on\", event);\n        sub.listeners.push({ listener, once: false });\n        sub.start();\n        return this;\n    }\n\n    /**\n     *  Add an event %%listener%% for the %%event%%, but remove the listener\n     *  after it is fired once.\n     */\n    async once(event: ContractEventName, listener: Listener): Promise<this> {\n        const sub = await getSub(this, \"once\", event);\n        sub.listeners.push({ listener, once: true });\n        sub.start();\n        return this;\n    }\n\n    /**\n     *  Emit an %%event%% calling all listeners with %%args%%.\n     *\n     *  Resolves to ``true`` if any listeners were called.\n     */\n    async emit(event: ContractEventName, ...args: Array<any>): Promise<boolean> {\n        return await emit(this, event, args, null);\n    }\n\n    /**\n     *  Resolves to the number of listeners of %%event%% or the total number\n     *  of listeners if unspecified.\n     */\n    async listenerCount(event?: ContractEventName): Promise<number> {\n        if (event) {\n            const sub = await hasSub(this, event);\n            if (!sub) { return 0; }\n            return sub.listeners.length;\n        }\n\n        const { subs } = getInternal(this);\n\n        let total = 0;\n        for (const { listeners } of subs.values()) {\n            total += listeners.length;\n        }\n        return total;\n    }\n\n    /**\n     *  Resolves to the listeners subscribed to %%event%% or all listeners\n     *  if unspecified.\n     */\n    async listeners(event?: ContractEventName): Promise<Array<Listener>> {\n        if (event) {\n            const sub = await hasSub(this, event);\n            if (!sub) { return [ ]; }\n            return sub.listeners.map(({ listener }) => listener);\n        }\n\n        const { subs } = getInternal(this);\n\n        let result: Array<Listener> = [ ];\n        for (const { listeners } of subs.values()) {\n            result = result.concat(listeners.map(({ listener }) => listener));\n        }\n        return result;\n    }\n\n    /**\n     *  Remove the %%listener%% from the listeners for %%event%% or remove\n     *  all listeners if unspecified.\n     */\n    async off(event: ContractEventName, listener?: Listener): Promise<this> {\n        const sub = await hasSub(this, event);\n        if (!sub) { return this; }\n\n        if (listener) {\n            const index = sub.listeners.map(({ listener }) => listener).indexOf(listener);\n            if (index >= 0) { sub.listeners.splice(index, 1); }\n        }\n\n        if (listener == null || sub.listeners.length === 0) {\n            sub.stop();\n            getInternal(this).subs.delete(sub.tag);\n        }\n\n        return this;\n    }\n\n    /**\n     *  Remove all the listeners for %%event%% or remove all listeners if\n     *  unspecified.\n     */\n    async removeAllListeners(event?: ContractEventName): Promise<this> {\n        if (event) {\n            const sub = await hasSub(this, event);\n            if (!sub) { return this; }\n            sub.stop();\n            getInternal(this).subs.delete(sub.tag);\n        } else {\n            const { subs } = getInternal(this);\n            for (const { tag, stop } of subs.values()) {\n                stop();\n                subs.delete(tag);\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     *  Alias for [on].\n     */\n    async addListener(event: ContractEventName, listener: Listener): Promise<this> {\n        return await this.on(event, listener);\n    }\n\n    /**\n     *  Alias for [off].\n     */\n    async removeListener(event: ContractEventName, listener: Listener): Promise<this> {\n        return await this.off(event, listener);\n    }\n\n    /**\n     *  Create a new Class for the %%abi%%.\n     */\n    static buildClass<T = ContractInterface>(abi: Interface | InterfaceAbi): new (target: string, runner?: null | ContractRunner) => BaseContract & Omit<T, keyof BaseContract> {\n        class CustomContract extends BaseContract {\n            constructor(address: string, runner: null | ContractRunner = null) {\n                super(address, abi, runner);\n            }\n        }\n        return CustomContract as any;\n    };\n\n    /**\n     *  Create a new BaseContract with a specified Interface.\n     */\n    static from<T = ContractInterface>(target: string, abi: Interface | InterfaceAbi, runner?: null | ContractRunner): BaseContract & Omit<T, keyof BaseContract> {\n        if (runner == null) { runner = null; }\n        const contract = new this(target, abi, runner );\n        return contract as any;\n    }\n}\n\nfunction _ContractBase(): new (target: string | Addressable, abi: Interface | InterfaceAbi, runner?: null | ContractRunner) => BaseContract & Omit<ContractInterface, keyof BaseContract> {\n    return BaseContract as any;\n}\n\n/**\n *  A [[BaseContract]] with no type guards on its methods or events.\n */\nexport class Contract extends _ContractBase() { }\n", "//import { resolveAddress } from \"@ethersproject/address\";\nimport {\n    defineProperties, getBigInt, getNumber, hexlify, isBytesLike,\n    resolveProperties,\n    assert, assertArgument, isError, makeError\n} from \"../utils/index.js\";\nimport { accessListify } from \"../transaction/index.js\";\n\nimport type { AddressLike, NameResolver } from \"../address/index.js\";\nimport type { BigNumberish, EventEmitterable } from \"../utils/index.js\";\nimport type { Signature } from \"../crypto/index.js\";\nimport type {\n    AccessList, AccessListish, Authorization, AuthorizationLike, BlobLike,\n    KzgLibraryLike, TransactionLike\n} from \"../transaction/index.js\";\n\nimport type { ContractRunner } from \"./contracts.js\";\nimport type { Network } from \"./network.js\";\n\n\nconst BN_0 = BigInt(0);\n\n/**\n *  A **BlockTag** specifies a specific block.\n *\n *  **numeric value** - specifies the block height, where\n *  the genesis block is block 0; many operations accept a negative\n *  value which indicates the block number should be deducted from\n *  the most recent block. A numeric value may be a ``number``, ``bigint``,\n *  or a decimal of hex string.\n *\n *  **blockhash** - specifies a specific block by its blockhash; this allows\n *  potentially orphaned blocks to be specifed, without ambiguity, but many\n *  backends do not support this for some operations.\n */\nexport type BlockTag = BigNumberish | string;\n\nimport {\n    BlockParams, LogParams, TransactionReceiptParams,\n    TransactionResponseParams\n} from \"./formatting.js\";\n\n// -----------------------\n\nfunction getValue<T>(value: undefined | null | T): null | T {\n    if (value == null) { return null; }\n    return value;\n}\n\nfunction toJson(value: null | bigint): null | string {\n    if (value == null) { return null; }\n    return value.toString();\n}\n\n// @TODO? <T extends FeeData = { }> implements Required<T>\n\n/**\n *  A **FeeData** wraps all the fee-related values associated with\n *  the network.\n */\nexport class FeeData {\n    /**\n     *  The gas price for legacy networks.\n     */\n    readonly gasPrice!: null | bigint;\n\n    /**\n     *  The maximum fee to pay per gas.\n     *\n     *  The base fee per gas is defined by the network and based on\n     *  congestion, increasing the cost during times of heavy load\n     *  and lowering when less busy.\n     *\n     *  The actual fee per gas will be the base fee for the block\n     *  and the priority fee, up to the max fee per gas.\n     *\n     *  This will be ``null`` on legacy networks (i.e. [pre-EIP-1559](link-eip-1559))\n     */\n    readonly maxFeePerGas!: null | bigint;\n\n    /**\n     *  The additional amout to pay per gas to encourage a validator\n     *  to include the transaction.\n     *\n     *  The purpose of this is to compensate the validator for the\n     *  adjusted risk for including a given transaction.\n     *\n     *  This will be ``null`` on legacy networks (i.e. [pre-EIP-1559](link-eip-1559))\n     */\n    readonly maxPriorityFeePerGas!: null | bigint;\n\n    /**\n     *  Creates a new FeeData for %%gasPrice%%, %%maxFeePerGas%% and\n     *  %%maxPriorityFeePerGas%%.\n     */\n    constructor(gasPrice?: null | bigint, maxFeePerGas?: null | bigint, maxPriorityFeePerGas?: null | bigint) {\n        defineProperties<FeeData>(this, {\n            gasPrice: getValue(gasPrice),\n            maxFeePerGas: getValue(maxFeePerGas),\n            maxPriorityFeePerGas: getValue(maxPriorityFeePerGas)\n        });\n    }\n\n    /**\n     *  Returns a JSON-friendly value.\n     */\n    toJSON(): any {\n        const {\n            gasPrice, maxFeePerGas, maxPriorityFeePerGas\n        } = this;\n        return {\n            _type: \"FeeData\",\n            gasPrice: toJson(gasPrice),\n            maxFeePerGas: toJson(maxFeePerGas),\n            maxPriorityFeePerGas: toJson(maxPriorityFeePerGas),\n        };\n    }\n}\n\n\n/**\n *  A **TransactionRequest** is a transactions with potentially various\n *  properties not defined, or with less strict types for its values.\n *\n *  This is used to pass to various operations, which will internally\n *  coerce any types and populate any necessary values.\n */\nexport interface TransactionRequest {\n    /**\n     *  The transaction type.\n     */\n    type?: null | number;\n\n    /**\n     *  The target of the transaction.\n     */\n    to?: null | AddressLike;\n\n    /**\n     *  The sender of the transaction.\n     */\n    from?: null | AddressLike;\n\n    /**\n     *  The nonce of the transaction, used to prevent replay attacks.\n     */\n    nonce?: null | number;\n\n    /**\n     *  The maximum amount of gas to allow this transaction to consume.\n     */\n    gasLimit?: null | BigNumberish;\n\n    /**\n     *  The gas price to use for legacy transactions or transactions on\n     *  legacy networks.\n     *\n     *  Most of the time the ``max*FeePerGas`` is preferred.\n     */\n    gasPrice?: null | BigNumberish;\n\n    /**\n     *  The [[link-eip-1559]] maximum priority fee to pay per gas.\n     */\n    maxPriorityFeePerGas?: null | BigNumberish;\n\n    /**\n     *  The [[link-eip-1559]] maximum total fee to pay per gas. The actual\n     *  value used is protocol enforced to be the block's base fee.\n     */\n    maxFeePerGas?: null | BigNumberish;\n\n    /**\n     *  The transaction data.\n     */\n    data?: null | string;\n\n    /**\n     *  The transaction value (in wei).\n     */\n    value?: null | BigNumberish;\n\n    /**\n     *  The chain ID for the network this transaction is valid on.\n     */\n    chainId?: null | BigNumberish;\n\n    /**\n     *  The [[link-eip-2930]] access list. Storage slots included in the access\n     *  list are //warmed// by pre-loading them, so their initial cost to\n     *  fetch is guaranteed, but then each additional access is cheaper.\n     */\n    accessList?: null | AccessListish;\n\n    /**\n     *  A custom object, which can be passed along for network-specific\n     *  values.\n     */\n    customData?: any;\n\n    // Only meaningful when used for call\n\n    /**\n     *  When using ``call`` or ``estimateGas``, this allows a specific\n     *  block to be queried. Many backends do not support this and when\n     *  unsupported errors are silently squelched and ``\"latest\"`` is used. \n     */\n    blockTag?: BlockTag;\n\n    /**\n     *  When using ``call``, this enables CCIP-read, which permits the\n     *  provider to be redirected to web-based content during execution,\n     *  which is then further validated by the contract.\n     *\n     *  There are potential security implications allowing CCIP-read, as\n     *  it could be used to expose the IP address or user activity during\n     *  the fetch to unexpected parties.\n     */\n    enableCcipRead?: boolean;\n\n    /**\n     *  The blob versioned hashes (see [[link-eip-4844]]).\n     */\n    blobVersionedHashes?: null | Array<string>\n\n    /**\n     *  The maximum fee per blob gas (see [[link-eip-4844]]).\n     */\n    maxFeePerBlobGas?: null | BigNumberish;\n\n    /**\n     *  Any blobs to include in the transaction (see [[link-eip-4844]]).\n     */\n    blobs?: null | Array<BlobLike>;\n\n    /**\n     *  An external library for computing the KZG commitments and\n     *  proofs necessary for EIP-4844 transactions (see [[link-eip-4844]]).\n     *\n     *  This is generally ``null``, unless you are creating BLOb\n     *  transactions.\n     */\n    kzg?: null | KzgLibraryLike;\n\n    /**\n     *  The [[link-eip-7702]] authorizations (if any).\n     */\n    authorizationList?: null | Array<AuthorizationLike>;\n\n    // Todo?\n    //gasMultiplier?: number;\n};\n\n/**\n *  A **PreparedTransactionRequest** is identical to a [[TransactionRequest]]\n *  except all the property types are strictly enforced.\n */\nexport interface PreparedTransactionRequest {\n    /**\n     *  The transaction type.\n     */\n    type?: number;\n\n\n    /**\n     *  The target of the transaction.\n     */\n    to?: AddressLike;\n\n    /**\n     *  The sender of the transaction.\n     */\n    from?: AddressLike;\n\n    /**\n     *  The nonce of the transaction, used to prevent replay attacks.\n     */\n\n    nonce?: number;\n\n    /**\n     *  The maximum amount of gas to allow this transaction to consume.\n     */\n    gasLimit?: bigint;\n\n    /**\n     *  The gas price to use for legacy transactions or transactions on\n     *  legacy networks.\n     *\n     *  Most of the time the ``max*FeePerGas`` is preferred.\n     */\n    gasPrice?: bigint;\n\n    /**\n     *  The [[link-eip-1559]] maximum priority fee to pay per gas.\n     */\n    maxPriorityFeePerGas?: bigint;\n\n    /**\n     *  The [[link-eip-1559]] maximum total fee to pay per gas. The actual\n     *  value used is protocol enforced to be the block's base fee.\n     */\n    maxFeePerGas?: bigint;\n\n    /**\n     *  The transaction data.\n     */\n    data?: string;\n\n\n    /**\n     *  The transaction value (in wei).\n     */\n    value?: bigint;\n\n    /**\n     *  The chain ID for the network this transaction is valid on.\n     */\n    chainId?: bigint;\n\n    /**\n     *  The [[link-eip-2930]] access list. Storage slots included in the access\n     *  list are //warmed// by pre-loading them, so their initial cost to\n     *  fetch is guaranteed, but then each additional access is cheaper.\n     */\n    accessList?: AccessList;\n\n    /**\n     *  The [[link-eip-7702]] authorizations (if any).\n     */\n    authorizationList?: Array<Authorization>;\n\n    /**\n     *  A custom object, which can be passed along for network-specific\n     *  values.\n     */\n    customData?: any;\n\n\n\n    /**\n     *  When using ``call`` or ``estimateGas``, this allows a specific\n     *  block to be queried. Many backends do not support this and when\n     *  unsupported errors are silently squelched and ``\"latest\"`` is used. \n     */\n    blockTag?: BlockTag;\n\n    /**\n     *  When using ``call``, this enables CCIP-read, which permits the\n     *  provider to be redirected to web-based content during execution,\n     *  which is then further validated by the contract.\n     *\n     *  There are potential security implications allowing CCIP-read, as\n     *  it could be used to expose the IP address or user activity during\n     *  the fetch to unexpected parties.\n     */\n    enableCcipRead?: boolean;\n}\n\n/**\n *  Returns a copy of %%req%% with all properties coerced to their strict\n *  types.\n */\nexport function copyRequest(req: TransactionRequest): PreparedTransactionRequest {\n    const result: any = { };\n\n    // These could be addresses, ENS names or Addressables\n    if (req.to) { result.to = req.to; }\n    if (req.from) { result.from = req.from; }\n\n    if (req.data) { result.data = hexlify(req.data); }\n\n    const bigIntKeys = \"chainId,gasLimit,gasPrice,maxFeePerBlobGas,maxFeePerGas,maxPriorityFeePerGas,value\".split(/,/);\n    for (const key of bigIntKeys) {\n        if (!(key in req) || (<any>req)[key] == null) { continue; }\n        result[key] = getBigInt((<any>req)[key], `request.${ key }`);\n    }\n\n    const numberKeys = \"type,nonce\".split(/,/);\n    for (const key of numberKeys) {\n        if (!(key in req) || (<any>req)[key] == null) { continue; }\n        result[key] = getNumber((<any>req)[key], `request.${ key }`);\n    }\n\n    if (req.accessList) {\n        result.accessList = accessListify(req.accessList);\n    }\n\n    if (req.authorizationList) {\n        result.authorizationList = req.authorizationList.slice();\n    }\n\n    if (\"blockTag\" in req) { result.blockTag = req.blockTag; }\n\n    if (\"enableCcipRead\" in req) {\n        result.enableCcipRead = !!req.enableCcipRead\n    }\n\n    if (\"customData\" in req) {\n        result.customData = req.customData;\n    }\n\n    if (\"blobVersionedHashes\" in req && req.blobVersionedHashes) {\n        result.blobVersionedHashes = req.blobVersionedHashes.slice();\n    }\n\n    if (\"kzg\" in req) { result.kzg = req.kzg; }\n\n    if (\"blobs\" in req && req.blobs) {\n        result.blobs = req.blobs.map((b) => {\n            if (isBytesLike(b)) { return hexlify(b); }\n            return Object.assign({ }, b);\n        });\n    }\n\n    return result;\n}\n\n//////////////////////\n// Block\n\n/**\n *  An Interface to indicate a [[Block]] has been included in the\n *  blockchain. This asserts a Type Guard that necessary properties\n *  are non-null.\n *\n *  Before a block is included, it is a //pending// block.\n */\nexport interface MinedBlock extends Block {\n    /**\n     *  The block number also known as the block height.\n     */\n    readonly number: number;\n\n    /**\n     *  The block hash.\n     */\n    readonly hash: string;\n\n    /**\n     *  The block timestamp, in seconds from epoch.\n     */\n    readonly timestamp: number;\n\n    /**\n     *  The block date, created from the [[timestamp]].\n     */\n    readonly date: Date;\n\n    /**\n     *  The miner of the block, also known as the ``author`` or\n     *  block ``producer``.\n     */\n    readonly miner: string;\n}\n\n/**\n *  A **Block** represents the data associated with a full block on\n *  Ethereum.\n */\nexport class Block implements BlockParams, Iterable<string> {\n\n    /**\n     *  The provider connected to the block used to fetch additional details\n     *  if necessary.\n     */\n    readonly provider!: Provider;\n\n    /**\n     *  The block number, sometimes called the block height. This is a\n     *  sequential number that is one higher than the parent block.\n     */\n    readonly number!: number;\n\n    /**\n     *  The block hash.\n     *\n     *  This hash includes all properties, so can be safely used to identify\n     *  an exact set of block properties.\n     */\n    readonly hash!: null | string;\n\n    /**\n     *  The timestamp for this block, which is the number of seconds since\n     *  epoch that this block was included.\n     */\n    readonly timestamp!: number;\n\n    /**\n     *  The block hash of the parent block.\n     */\n    readonly parentHash!: string;\n\n    /**\n     *  The hash tree root of the parent beacon block for the given\n     *  execution block. See [[link-eip-4788]].\n     */\n    parentBeaconBlockRoot!: null | string;\n\n    /**\n     *  The nonce.\n     *\n     *  On legacy networks, this is the random number inserted which\n     *  permitted the difficulty target to be reached.\n     */\n    readonly nonce!: string;\n\n    /**\n     *  The difficulty target.\n     *\n     *  On legacy networks, this is the proof-of-work target required\n     *  for a block to meet the protocol rules to be included.\n     *\n     *  On modern networks, this is a random number arrived at using\n     *  randao.  @TODO: Find links?\n     */\n    readonly difficulty!: bigint;\n\n\n    /**\n     *  The total gas limit for this block.\n     */\n    readonly gasLimit!: bigint;\n\n    /**\n     *  The total gas used in this block.\n     */\n    readonly gasUsed!: bigint;\n\n\n    /**\n     *  The root hash for the global state after applying changes\n     *  in this block.\n     */\n    readonly stateRoot!: null | string;\n\n    /**\n     *  The hash of the transaction receipts trie.\n     */\n    readonly receiptsRoot!: null | string;\n\n    /**\n     *  The total amount of blob gas consumed by the transactions\n     *  within the block. See [[link-eip-4844]].\n     */\n    readonly blobGasUsed!: null | bigint;\n\n    /**\n     *  The running total of blob gas consumed in excess of the\n     *  target, prior to the block. See [[link-eip-4844]].\n     */\n    readonly excessBlobGas!: null | bigint;\n\n    /**\n     *  The miner coinbase address, wihch receives any subsidies for\n     *  including this block.\n     */\n    readonly miner!: string;\n\n    /**\n     *  The latest RANDAO mix of the post beacon state of\n     *  the previous block.\n     */\n    readonly prevRandao!: null | string;\n\n    /**\n     *  Any extra data the validator wished to include.\n     */\n    readonly extraData!: string;\n\n    /**\n     *  The base fee per gas that all transactions in this block were\n     *  charged.\n     *\n     *  This adjusts after each block, depending on how congested the network\n     *  is.\n     */\n    readonly baseFeePerGas!: null | bigint;\n\n    readonly #transactions: Array<string | TransactionResponse>;\n\n    /**\n     *  Create a new **Block** object.\n     *\n     *  This should generally not be necessary as the unless implementing a\n     *  low-level library.\n     */\n    constructor(block: BlockParams, provider: Provider) {\n\n        this.#transactions = block.transactions.map((tx) => {\n            if (typeof(tx) !== \"string\") {\n                return new TransactionResponse(tx, provider);\n            }\n            return tx;\n        });\n\n        defineProperties<Block>(this, {\n            provider,\n\n            hash: getValue(block.hash),\n\n            number: block.number,\n            timestamp: block.timestamp,\n\n            parentHash: block.parentHash,\n            parentBeaconBlockRoot: block.parentBeaconBlockRoot,\n\n            nonce: block.nonce,\n            difficulty: block.difficulty,\n\n            gasLimit: block.gasLimit,\n            gasUsed: block.gasUsed,\n            blobGasUsed: block.blobGasUsed,\n            excessBlobGas: block.excessBlobGas,\n            miner: block.miner,\n            prevRandao: getValue(block.prevRandao),\n            extraData: block.extraData,\n\n            baseFeePerGas: getValue(block.baseFeePerGas),\n\n            stateRoot: block.stateRoot,\n            receiptsRoot: block.receiptsRoot,\n        });\n    }\n\n    /**\n     *  Returns the list of transaction hashes, in the order\n     *  they were executed within the block.\n     */\n    get transactions(): ReadonlyArray<string> {\n        return this.#transactions.map((tx) => {\n            if (typeof(tx) === \"string\") { return tx; }\n            return tx.hash;\n        });\n    }\n\n    /**\n     *  Returns the complete transactions, in the order they\n     *  were executed within the block.\n     *\n     *  This is only available for blocks which prefetched\n     *  transactions, by passing ``true`` to %%prefetchTxs%%\n     *  into [[Provider-getBlock]].\n     */\n    get prefetchedTransactions(): Array<TransactionResponse> {\n        const txs = this.#transactions.slice();\n\n        // Doesn't matter...\n        if (txs.length === 0) { return [ ]; }\n\n        // Make sure we prefetched the transactions\n        assert(typeof(txs[0]) === \"object\", \"transactions were not prefetched with block request\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"transactionResponses()\"\n        });\n\n        return <Array<TransactionResponse>>txs;\n    }\n\n    /**\n     *  Returns a JSON-friendly value.\n     */\n    toJSON(): any {\n        const {\n            baseFeePerGas, difficulty, extraData, gasLimit, gasUsed, hash,\n            miner, prevRandao, nonce, number, parentHash, parentBeaconBlockRoot,\n            stateRoot, receiptsRoot, timestamp, transactions\n        } = this;\n\n        return {\n            _type: \"Block\",\n            baseFeePerGas: toJson(baseFeePerGas),\n            difficulty: toJson(difficulty),\n            extraData,\n            gasLimit: toJson(gasLimit),\n            gasUsed: toJson(gasUsed),\n            blobGasUsed: toJson(this.blobGasUsed),\n            excessBlobGas: toJson(this.excessBlobGas),\n            hash, miner, prevRandao, nonce, number, parentHash, timestamp,\n            parentBeaconBlockRoot, stateRoot, receiptsRoot,\n            transactions,\n        };\n    }\n\n    [Symbol.iterator](): Iterator<string> {\n        let index = 0;\n        const txs = this.transactions;\n        return {\n            next: () => {\n                if (index < this.length) {\n                    return {\n                        value: txs[index++], done: false\n                    }\n                }\n                return { value: undefined, done: true };\n            }\n        };\n    }\n\n    /**\n     *  The number of transactions in this block.\n     */\n    get length(): number { return this.#transactions.length; }\n\n    /**\n     *  The [[link-js-date]] this block was included at.\n     */\n    get date(): null | Date {\n        if (this.timestamp == null) { return null; }\n        return new Date(this.timestamp * 1000);\n    }\n\n    /**\n     *  Get the transaction at %%indexe%% within this block.\n     */\n    async getTransaction(indexOrHash: number | string): Promise<TransactionResponse> {\n        // Find the internal value by its index or hash\n        let tx: string | TransactionResponse | undefined = undefined;\n        if (typeof(indexOrHash) === \"number\") {\n            tx = this.#transactions[indexOrHash];\n\n        } else {\n            const hash = indexOrHash.toLowerCase();\n            for (const v of this.#transactions) {\n                if (typeof(v) === \"string\") {\n                    if (v !== hash) { continue; }\n                    tx = v;\n                    break;\n                } else {\n                    if (v.hash !== hash) { continue; }\n                    tx = v;\n                    break;\n                }\n            }\n        }\n        if (tx == null) { throw new Error(\"no such tx\"); }\n\n        if (typeof(tx) === \"string\") {\n            return <TransactionResponse>(await this.provider.getTransaction(tx));\n        } else {\n            return tx;\n        }\n    }\n\n    /**\n     *  If a **Block** was fetched with a request to include the transactions\n     *  this will allow synchronous access to those transactions.\n     *\n     *  If the transactions were not prefetched, this will throw.\n     */\n    getPrefetchedTransaction(indexOrHash: number | string): TransactionResponse {\n        const txs = this.prefetchedTransactions;\n        if (typeof(indexOrHash) === \"number\") {\n            return txs[indexOrHash];\n        }\n\n        indexOrHash = indexOrHash.toLowerCase();\n        for (const tx of txs) {\n            if (tx.hash === indexOrHash) { return tx; }\n        }\n\n        assertArgument(false, \"no matching transaction\", \"indexOrHash\", indexOrHash);\n    }\n\n    /**\n     *  Returns true if this block been mined. This provides a type guard\n     *  for all properties on a [[MinedBlock]].\n     */\n    isMined(): this is MinedBlock { return !!this.hash; }\n\n    /**\n     *  Returns true if this block is an [[link-eip-2930]] block.\n     */\n    isLondon(): this is (Block & { baseFeePerGas: bigint }) {\n        return !!this.baseFeePerGas;\n    }\n\n    /**\n     *  @_ignore:\n     */\n    orphanedEvent(): OrphanFilter {\n        if (!this.isMined()) { throw new Error(\"\"); }\n        return createOrphanedBlockFilter(this);\n    }\n}\n\n//////////////////////\n// Log\n\n/**\n *  A **Log** in Ethereum represents an event that has been included in a\n *  transaction using the ``LOG*`` opcodes, which are most commonly used by\n *  Solidity's emit for announcing events.\n */\nexport class Log implements LogParams {\n\n    /**\n     *  The provider connected to the log used to fetch additional details\n     *  if necessary.\n     */\n    readonly provider: Provider;\n\n    /**\n     *  The transaction hash of the transaction this log occurred in. Use the\n     *  [[Log-getTransaction]] to get the [[TransactionResponse]].\n     */\n    readonly transactionHash!: string;\n\n    /**\n     *  The block hash of the block this log occurred in. Use the\n     *  [[Log-getBlock]] to get the [[Block]].\n     */\n    readonly blockHash!: string;\n\n    /**\n     *  The block number of the block this log occurred in. It is preferred\n     *  to use the [[Block-hash]] when fetching the related [[Block]],\n     *  since in the case of an orphaned block, the block at that height may\n     *  have changed.\n     */\n    readonly blockNumber!: number;\n\n    /**\n     *  If the **Log** represents a block that was removed due to an orphaned\n     *  block, this will be true.\n     *\n     *  This can only happen within an orphan event listener.\n     */\n    readonly removed!: boolean;\n\n    /**\n     *  The address of the contract that emitted this log.\n     */\n    readonly address!: string;\n\n    /**\n     *  The data included in this log when it was emitted.\n     */\n    readonly data!: string;\n\n    /**\n     *  The indexed topics included in this log when it was emitted.\n     *\n     *  All topics are included in the bloom filters, so they can be\n     *  efficiently filtered using the [[Provider-getLogs]] method.\n     */\n    readonly topics!: ReadonlyArray<string>;\n\n    /**\n     *  The index within the block this log occurred at. This is generally\n     *  not useful to developers, but can be used with the various roots\n     *  to proof inclusion within a block.\n     */\n    readonly index!: number;\n\n    /**\n     *  The index within the transaction of this log.\n     */\n    readonly transactionIndex!: number;\n\n    /**\n     *  @_ignore:\n     */\n    constructor(log: LogParams, provider: Provider) {\n        this.provider = provider;\n\n        const topics = Object.freeze(log.topics.slice());\n        defineProperties<Log>(this, {\n            transactionHash: log.transactionHash,\n            blockHash: log.blockHash,\n            blockNumber: log.blockNumber,\n\n            removed: log.removed,\n\n            address: log.address,\n            data: log.data,\n\n            topics,\n\n            index: log.index,\n            transactionIndex: log.transactionIndex,\n        });\n    }\n\n    /**\n     *  Returns a JSON-compatible object.\n     */\n    toJSON(): any {\n        const {\n            address, blockHash, blockNumber, data, index,\n            removed, topics, transactionHash, transactionIndex\n        } = this;\n\n        return {\n            _type: \"log\",\n            address, blockHash, blockNumber, data, index,\n            removed, topics, transactionHash, transactionIndex\n        };\n    }\n\n    /**\n     *  Returns the block that this log occurred in.\n     */\n    async getBlock(): Promise<Block> {\n        const block = await this.provider.getBlock(this.blockHash);\n        assert(!!block, \"failed to find transaction\", \"UNKNOWN_ERROR\", { });\n        return block;\n    }\n\n    /**\n     *  Returns the transaction that this log occurred in.\n     */\n    async getTransaction(): Promise<TransactionResponse> {\n        const tx = await this.provider.getTransaction(this.transactionHash);\n        assert(!!tx, \"failed to find transaction\", \"UNKNOWN_ERROR\", { });\n        return tx;\n    }\n\n    /**\n     *  Returns the transaction receipt fot the transaction that this\n     *  log occurred in.\n     */\n    async getTransactionReceipt(): Promise<TransactionReceipt> {\n        const receipt = await this.provider.getTransactionReceipt(this.transactionHash);\n        assert(!!receipt, \"failed to find transaction receipt\", \"UNKNOWN_ERROR\", { });\n        return receipt;\n    }\n\n    /**\n     *  @_ignore:\n     */\n    removedEvent(): OrphanFilter {\n        return createRemovedLogFilter(this);\n    }\n}\n\n//////////////////////\n// Transaction Receipt\n\n/*\nexport interface LegacyTransactionReceipt {\n    byzantium: false;\n    status: null;\n    root: string;\n}\n\nexport interface ByzantiumTransactionReceipt {\n    byzantium: true;\n    status: number;\n    root: null;\n}\n*/\n\n/**\n *  A **TransactionReceipt** includes additional information about a\n *  transaction that is only available after it has been mined.\n */\nexport class TransactionReceipt implements TransactionReceiptParams, Iterable<Log> {\n    /**\n     *  The provider connected to the log used to fetch additional details\n     *  if necessary.\n     */\n    readonly provider!: Provider;\n\n    /**\n     *  The address the transaction was sent to.\n     */\n    readonly to!: null | string;\n\n    /**\n     *  The sender of the transaction.\n     */\n    readonly from!: string;\n\n    /**\n     *  The address of the contract if the transaction was directly\n     *  responsible for deploying one.\n     *\n     *  This is non-null **only** if the ``to`` is empty and the ``data``\n     *  was successfully executed as initcode.\n     */\n    readonly contractAddress!: null | string;\n\n    /**\n     *  The transaction hash.\n     */\n    readonly hash!: string;\n\n    /**\n     *  The index of this transaction within the block transactions.\n     */\n    readonly index!: number;\n\n    /**\n     *  The block hash of the [[Block]] this transaction was included in.\n     */\n    readonly blockHash!: string;\n\n    /**\n     *  The block number of the [[Block]] this transaction was included in.\n     */\n    readonly blockNumber!: number;\n\n    /**\n     *  The bloom filter bytes that represent all logs that occurred within\n     *  this transaction. This is generally not useful for most developers,\n     *  but can be used to validate the included logs.\n     */\n    readonly logsBloom!: string;\n\n    /**\n     *  The actual amount of gas used by this transaction.\n     *\n     *  When creating a transaction, the amount of gas that will be used can\n     *  only be approximated, but the sender must pay the gas fee for the\n     *  entire gas limit. After the transaction, the difference is refunded.\n     */\n    readonly gasUsed!: bigint;\n\n    /**\n     *  The gas used for BLObs. See [[link-eip-4844]].\n     */\n    readonly blobGasUsed!: null | bigint;\n\n    /**\n     *  The amount of gas used by all transactions within the block for this\n     *  and all transactions with a lower ``index``.\n     *\n     *  This is generally not useful for developers but can be used to\n     *  validate certain aspects of execution.\n     */\n    readonly cumulativeGasUsed!: bigint;\n\n    /**\n     *  The actual gas price used during execution.\n     *\n     *  Due to the complexity of [[link-eip-1559]] this value can only\n     *  be caluclated after the transaction has been mined, snce the base\n     *  fee is protocol-enforced.\n     */\n    readonly gasPrice!: bigint;\n\n    /**\n     *  The price paid per BLOB in gas. See [[link-eip-4844]].\n     */\n    readonly blobGasPrice!: null | bigint;\n\n    /**\n     *  The [[link-eip-2718]] transaction type.\n     */\n    readonly type!: number;\n    //readonly byzantium!: boolean;\n\n    /**\n     *  The status of this transaction, indicating success (i.e. ``1``) or\n     *  a revert (i.e. ``0``).\n     *\n     *  This is available in post-byzantium blocks, but some backends may\n     *  backfill this value.\n     */\n    readonly status!: null | number;\n\n    /**\n     *  The root hash of this transaction.\n     *\n     *  This is no present and was only included in pre-byzantium blocks, but\n     *  could be used to validate certain parts of the receipt.\n     */\n    readonly root!: null | string;\n\n    readonly #logs: ReadonlyArray<Log>;\n\n    /**\n     *  @_ignore:\n     */\n    constructor(tx: TransactionReceiptParams, provider: Provider) {\n        this.#logs = Object.freeze(tx.logs.map((log) => {\n            return new Log(log, provider);\n        }));\n\n        let gasPrice = BN_0;\n        if (tx.effectiveGasPrice != null) {\n            gasPrice = tx.effectiveGasPrice;\n        } else if (tx.gasPrice != null) {\n            gasPrice = tx.gasPrice;\n        }\n\n        defineProperties<TransactionReceipt>(this, {\n            provider,\n\n            to: tx.to,\n            from: tx.from,\n            contractAddress: tx.contractAddress,\n\n            hash: tx.hash,\n            index: tx.index,\n\n            blockHash: tx.blockHash,\n            blockNumber: tx.blockNumber,\n\n            logsBloom: tx.logsBloom,\n\n            gasUsed: tx.gasUsed,\n            cumulativeGasUsed: tx.cumulativeGasUsed,\n            blobGasUsed: tx.blobGasUsed,\n            gasPrice,\n            blobGasPrice: tx.blobGasPrice,\n\n            type: tx.type,\n            //byzantium: tx.byzantium,\n            status: tx.status,\n            root: tx.root\n        });\n    }\n\n    /**\n     *  The logs for this transaction.\n     */\n    get logs(): ReadonlyArray<Log> { return this.#logs; }\n\n    /**\n     *  Returns a JSON-compatible representation.\n     */\n    toJSON(): any {\n        const {\n            to, from, contractAddress, hash, index,\n            blockHash, blockNumber, logsBloom,\n            logs, //byzantium, \n            status, root\n        } = this;\n\n        return {\n            _type: \"TransactionReceipt\",\n            blockHash, blockNumber,\n            //byzantium, \n            contractAddress,\n            cumulativeGasUsed: toJson(this.cumulativeGasUsed),\n            from,\n            gasPrice: toJson(this.gasPrice),\n            blobGasUsed: toJson(this.blobGasUsed),\n            blobGasPrice: toJson(this.blobGasPrice),\n            gasUsed: toJson(this.gasUsed),\n            hash, index, logs, logsBloom, root, status, to\n        };\n    }\n\n    /**\n     *  @_ignore:\n     */\n    get length(): number { return this.logs.length; }\n\n    [Symbol.iterator](): Iterator<Log> {\n        let index = 0;\n        return {\n            next: () => {\n                if (index < this.length) {\n                    return { value: this.logs[index++], done: false }\n                }\n                return { value: undefined, done: true };\n            }\n        };\n    }\n\n    /**\n     *  The total fee for this transaction, in wei.\n     */\n    get fee(): bigint {\n        return this.gasUsed * this.gasPrice;\n    }\n\n    /**\n     *  Resolves to the block this transaction occurred in.\n     */\n    async getBlock(): Promise<Block> {\n        const block = await this.provider.getBlock(this.blockHash);\n        if (block == null) { throw new Error(\"TODO\"); }\n        return block;\n    }\n\n    /**\n     *  Resolves to the transaction this transaction occurred in.\n     */\n    async getTransaction(): Promise<TransactionResponse> {\n        const tx = await this.provider.getTransaction(this.hash);\n        if (tx == null) { throw new Error(\"TODO\"); }\n        return tx;\n    }\n\n    /**\n     *  Resolves to the return value of the execution of this transaction.\n     *\n     *  Support for this feature is limited, as it requires an archive node\n     *  with the ``debug_`` or ``trace_`` API enabled.\n     */\n    async getResult(): Promise<string> {\n        return <string>(await this.provider.getTransactionResult(this.hash));\n    }\n\n    /**\n     *  Resolves to the number of confirmations this transaction has.\n     */\n    async confirmations(): Promise<number> {\n        return (await this.provider.getBlockNumber()) - this.blockNumber + 1;\n    }\n\n    /**\n     *  @_ignore:\n     */\n    removedEvent(): OrphanFilter {\n        return createRemovedTransactionFilter(this);\n    }\n\n    /**\n     *  @_ignore:\n     */\n    reorderedEvent(other?: TransactionResponse): OrphanFilter {\n        assert(!other || other.isMined(), \"unmined 'other' transction cannot be orphaned\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"reorderedEvent(other)\" });\n        return createReorderedTransactionFilter(this, other);\n    }\n}\n\n\n//////////////////////\n// Transaction Response\n\n/**\n *  A **MinedTransactionResponse** is an interface representing a\n *  transaction which has been mined and allows for a type guard for its\n *  property values being defined.\n */\nexport interface MinedTransactionResponse extends TransactionResponse {\n    /**\n     *  The block number this transaction occurred in.\n     */\n    blockNumber: number;\n\n    /**\n     *  The block hash this transaction occurred in.\n     */\n    blockHash: string;\n\n    /**\n     *  The date this transaction occurred on.\n     */\n    date: Date;\n}\n\n\n/**\n *  A **TransactionResponse** includes all properties about a transaction\n *  that was sent to the network, which may or may not be included in a\n *  block.\n *\n *  The [[TransactionResponse-isMined]] can be used to check if the\n *  transaction has been mined as well as type guard that the otherwise\n *  possibly ``null`` properties are defined.\n */\nexport class TransactionResponse implements TransactionLike<string>, TransactionResponseParams {\n    /**\n     *  The provider this is connected to, which will influence how its\n     *  methods will resolve its async inspection methods.\n     */\n    readonly provider: Provider;\n\n    /**\n     *  The block number of the block that this transaction was included in.\n     *\n     *  This is ``null`` for pending transactions.\n     */\n    readonly blockNumber: null | number;\n\n    /**\n     *  The blockHash of the block that this transaction was included in.\n     *\n     *  This is ``null`` for pending transactions.\n     */\n    readonly blockHash: null | string;\n\n    /**\n     *  The index within the block that this transaction resides at.\n     */\n    readonly index!: number;\n\n    /**\n     *  The transaction hash.\n     */\n    readonly hash!: string;\n\n    /**\n     *  The [[link-eip-2718]] transaction envelope type. This is\n     *  ``0`` for legacy transactions types.\n     */\n    readonly type!: number;\n\n    /**\n     *  The receiver of this transaction.\n     *\n     *  If ``null``, then the transaction is an initcode transaction.\n     *  This means the result of executing the [[data]] will be deployed\n     *  as a new contract on chain (assuming it does not revert) and the\n     *  address may be computed using [[getCreateAddress]].\n     */\n    readonly to!: null | string;\n\n    /**\n     *  The sender of this transaction. It is implicitly computed\n     *  from the transaction pre-image hash (as the digest) and the\n     *  [[signature]] using ecrecover.\n     */\n    readonly from!: string;\n\n    /**\n     *  The nonce, which is used to prevent replay attacks and offer\n     *  a method to ensure transactions from a given sender are explicitly\n     *  ordered.\n     *\n     *  When sending a transaction, this must be equal to the number of\n     *  transactions ever sent by [[from]].\n     */\n    readonly nonce!: number;\n\n    /**\n     *  The maximum units of gas this transaction can consume. If execution\n     *  exceeds this, the entries transaction is reverted and the sender\n     *  is charged for the full amount, despite not state changes being made.\n     */\n    readonly gasLimit!: bigint;\n\n    /**\n     *  The gas price can have various values, depending on the network.\n     *\n     *  In modern networks, for transactions that are included this is\n     *  the //effective gas price// (the fee per gas that was actually\n     *  charged), while for transactions that have not been included yet\n     *  is the [[maxFeePerGas]].\n     *\n     *  For legacy transactions, or transactions on legacy networks, this\n     *  is the fee that will be charged per unit of gas the transaction\n     *  consumes.\n     */\n    readonly gasPrice!: bigint;\n\n    /**\n     *  The maximum priority fee (per unit of gas) to allow a\n     *  validator to charge the sender. This is inclusive of the\n     *  [[maxFeeFeePerGas]].\n     */\n    readonly maxPriorityFeePerGas!: null | bigint;\n\n    /**\n     *  The maximum fee (per unit of gas) to allow this transaction\n     *  to charge the sender.\n     */\n    readonly maxFeePerGas!: null | bigint;\n\n    /**\n     *  The [[link-eip-4844]] max fee per BLOb gas.\n     */\n    readonly maxFeePerBlobGas!: null | bigint;\n\n    /**\n     *  The data.\n     */\n    readonly data!: string;\n\n    /**\n     *  The value, in wei. Use [[formatEther]] to format this value\n     *  as ether.\n     */\n    readonly value!: bigint;\n\n    /**\n     *  The chain ID.\n     */\n    readonly chainId!: bigint;\n\n    /**\n     *  The signature.\n     */\n    readonly signature!: Signature;\n\n    /**\n     *  The [[link-eip-2930]] access list for transaction types that\n     *  support it, otherwise ``null``.\n     */\n    readonly accessList!: null | AccessList;\n\n    /**\n     *  The [[link-eip-4844]] BLOb versioned hashes.\n     */\n    readonly blobVersionedHashes!: null | Array<string>;\n\n    /**\n     *  The [[link-eip-7702]] authorizations (if any).\n     */\n    readonly authorizationList!: null | Array<Authorization>;\n\n    #startBlock: number;\n\n    /**\n     *  @_ignore:\n     */\n    constructor(tx: TransactionResponseParams, provider: Provider) {\n        this.provider = provider;\n\n        this.blockNumber = (tx.blockNumber != null) ? tx.blockNumber: null;\n        this.blockHash = (tx.blockHash != null) ? tx.blockHash: null;\n\n        this.hash = tx.hash;\n        this.index = tx.index;\n\n        this.type = tx.type;\n\n        this.from = tx.from;\n        this.to = tx.to || null;\n\n        this.gasLimit = tx.gasLimit;\n        this.nonce = tx.nonce;\n        this.data = tx.data;\n        this.value = tx.value;\n\n        this.gasPrice = tx.gasPrice;\n        this.maxPriorityFeePerGas = (tx.maxPriorityFeePerGas != null) ? tx.maxPriorityFeePerGas: null;\n        this.maxFeePerGas = (tx.maxFeePerGas != null) ? tx.maxFeePerGas: null;\n        this.maxFeePerBlobGas = (tx.maxFeePerBlobGas != null) ? tx.maxFeePerBlobGas: null;\n\n        this.chainId = tx.chainId;\n        this.signature = tx.signature;\n\n        this.accessList = (tx.accessList != null) ? tx.accessList: null;\n        this.blobVersionedHashes = (tx.blobVersionedHashes != null) ? tx.blobVersionedHashes: null;\n\n        this.authorizationList = (tx.authorizationList != null) ? tx.authorizationList: null;\n\n        this.#startBlock = -1;\n    }\n\n    /**\n     *  Returns a JSON-compatible representation of this transaction.\n     */\n    toJSON(): any {\n        const {\n            blockNumber, blockHash, index, hash, type, to, from, nonce,\n            data, signature, accessList, blobVersionedHashes\n        } = this;\n\n        return {\n            _type: \"TransactionResponse\",\n            accessList, blockNumber, blockHash,\n            blobVersionedHashes,\n            chainId: toJson(this.chainId),\n            data, from,\n            gasLimit: toJson(this.gasLimit),\n            gasPrice: toJson(this.gasPrice),\n            hash,\n            maxFeePerGas: toJson(this.maxFeePerGas),\n            maxPriorityFeePerGas: toJson(this.maxPriorityFeePerGas),\n            maxFeePerBlobGas: toJson(this.maxFeePerBlobGas),\n            nonce, signature, to, index, type,\n            value: toJson(this.value),\n        };\n    }\n\n    /**\n     *  Resolves to the Block that this transaction was included in.\n     *\n     *  This will return null if the transaction has not been included yet.\n     */\n    async getBlock(): Promise<null | Block> {\n        let blockNumber = this.blockNumber;\n        if (blockNumber == null) {\n            const tx = await this.getTransaction();\n            if (tx) { blockNumber = tx.blockNumber; }\n        }\n        if (blockNumber == null) { return null; }\n        const block = this.provider.getBlock(blockNumber);\n        if (block == null) { throw new Error(\"TODO\"); }\n        return block;\n    }\n\n    /**\n     *  Resolves to this transaction being re-requested from the\n     *  provider. This can be used if you have an unmined transaction\n     *  and wish to get an up-to-date populated instance.\n     */\n    async getTransaction(): Promise<null | TransactionResponse> {\n        return this.provider.getTransaction(this.hash);\n    }\n\n    /**\n     *  Resolve to the number of confirmations this transaction has.\n     */\n    async confirmations(): Promise<number> {\n        if (this.blockNumber == null) {\n            const { tx, blockNumber } = await resolveProperties({\n                tx: this.getTransaction(),\n                blockNumber: this.provider.getBlockNumber()\n            });\n\n            // Not mined yet...\n            if (tx == null || tx.blockNumber == null) { return 0; }\n\n            return blockNumber - tx.blockNumber + 1;\n        }\n\n        const blockNumber = await this.provider.getBlockNumber();\n        return blockNumber - this.blockNumber + 1;\n    }\n\n    /**\n     *  Resolves once this transaction has been mined and has\n     *  %%confirms%% blocks including it (default: ``1``) with an\n     *  optional %%timeout%%.\n     *\n     *  This can resolve to ``null`` only if %%confirms%% is ``0``\n     *  and the transaction has not been mined, otherwise this will\n     *  wait until enough confirmations have completed.\n     */\n    async wait(_confirms?: number, _timeout?: number): Promise<null | TransactionReceipt> {\n        const confirms = (_confirms == null) ? 1: _confirms;\n        const timeout = (_timeout == null) ? 0: _timeout;\n\n        let startBlock = this.#startBlock\n        let nextScan = -1;\n        let stopScanning = (startBlock === -1) ? true: false;\n        const checkReplacement = async () => {\n            // Get the current transaction count for this sender\n            if (stopScanning) { return null; }\n            const { blockNumber, nonce } = await resolveProperties({\n                blockNumber: this.provider.getBlockNumber(),\n                nonce: this.provider.getTransactionCount(this.from)\n            });\n\n            // No transaction or our nonce has not been mined yet; but we\n            // can start scanning later when we do start\n            if (nonce < this.nonce) {\n                startBlock = blockNumber;\n                return;\n            }\n\n            // We were mined; no replacement\n            if (stopScanning) { return null; }\n            const mined = await this.getTransaction();\n            if (mined && mined.blockNumber != null) { return; }\n\n            // We were replaced; start scanning for that transaction\n\n            // Starting to scan; look back a few extra blocks for safety\n            if (nextScan === -1) {\n                nextScan = startBlock - 3;\n                if (nextScan < this.#startBlock) { nextScan = this.#startBlock; }\n            }\n\n            while (nextScan <= blockNumber) {\n                // Get the next block to scan\n                if (stopScanning) { return null; }\n                const block = await this.provider.getBlock(nextScan, true);\n\n                // This should not happen; but we'll try again shortly\n                if (block == null) { return; }\n\n                // We were mined; no replacement\n                for (const hash of block) {\n                    if (hash === this.hash) { return; }\n                }\n\n                // Search for the transaction that replaced us\n                for (let i = 0; i < block.length; i++) {\n                    const tx: TransactionResponse = await block.getTransaction(i);\n\n                    if (tx.from === this.from && tx.nonce === this.nonce) {\n                        // Get the receipt\n                        if (stopScanning) { return null; }\n                        const receipt = await this.provider.getTransactionReceipt(tx.hash);\n\n                        // This should not happen; but we'll try again shortly\n                        if (receipt == null) { return; }\n\n                        // We will retry this on the next block (this case could be optimized)\n                        if ((blockNumber - receipt.blockNumber + 1) < confirms) { return; }\n\n                        // The reason we were replaced\n                        let reason: \"replaced\" | \"repriced\" | \"cancelled\" = \"replaced\";\n                        if (tx.data === this.data && tx.to === this.to && tx.value === this.value) {\n                            reason = \"repriced\";\n                        } else  if (tx.data === \"0x\" && tx.from === tx.to && tx.value === BN_0) {\n                            reason = \"cancelled\"\n                        }\n\n                        assert(false, \"transaction was replaced\", \"TRANSACTION_REPLACED\", {\n                            cancelled: (reason === \"replaced\" || reason === \"cancelled\"),\n                            reason,\n                            replacement: tx.replaceableTransaction(startBlock),\n                            hash: tx.hash,\n                            receipt\n                        });\n                    }\n                }\n\n                nextScan++;\n            }\n            return;\n        };\n\n        const checkReceipt = (receipt: null | TransactionReceipt) => {\n            if (receipt == null || receipt.status !== 0) { return receipt; }\n            assert(false, \"transaction execution reverted\", \"CALL_EXCEPTION\", {\n                action: \"sendTransaction\",\n                data: null, reason: null, invocation: null, revert: null,\n                transaction: {\n                    to: receipt.to,\n                    from: receipt.from,\n                    data: \"\" // @TODO: in v7, split out sendTransaction properties\n                }, receipt\n            });\n        };\n\n        const receipt = await this.provider.getTransactionReceipt(this.hash);\n\n        if (confirms === 0) { return checkReceipt(receipt); }\n\n        if (receipt) {\n            if (confirms === 1 || (await receipt.confirmations()) >= confirms) {\n                return checkReceipt(receipt);\n            }\n\n        } else {\n            // Check for a replacement; throws if a replacement was found\n            await checkReplacement();\n\n            // Allow null only when the confirms is 0\n            if (confirms === 0) { return null; }\n        }\n\n        const waiter = new Promise((resolve, reject) => {\n            // List of things to cancel when we have a result (one way or the other)\n            const cancellers: Array<() => void> = [ ];\n            const cancel = () => { cancellers.forEach((c) => c()); };\n\n            // On cancel, stop scanning for replacements\n            cancellers.push(() => { stopScanning = true; });\n\n            // Set up any timeout requested\n            if (timeout > 0) {\n                const timer = setTimeout(() => {\n                    cancel();\n                    reject(makeError(\"wait for transaction timeout\", \"TIMEOUT\"));\n                }, timeout);\n                cancellers.push(() => { clearTimeout(timer); });\n            }\n\n            const txListener = async (receipt: TransactionReceipt) => {\n                // Done; return it!\n                if ((await receipt.confirmations()) >= confirms) {\n                    cancel();\n                    try {\n                        resolve(checkReceipt(receipt));\n                    } catch (error) { reject(error); }\n                }\n            };\n            cancellers.push(() => { this.provider.off(this.hash, txListener); });\n            this.provider.on(this.hash, txListener);\n            // We support replacement detection; start checking\n            if (startBlock >= 0) {\n                const replaceListener = async () => {\n                    try {\n                        // Check for a replacement; this throws only if one is found\n                        await checkReplacement();\n\n                    } catch (error) {\n                        // We were replaced (with enough confirms); re-throw the error\n                        if (isError(error, \"TRANSACTION_REPLACED\")) {\n                            cancel();\n                            reject(error);\n                            return;\n                        }\n                    }\n\n                    // Rescheudle a check on the next block\n                    if (!stopScanning) {\n                        this.provider.once(\"block\", replaceListener);\n                    }\n                };\n                cancellers.push(() => { this.provider.off(\"block\", replaceListener); });\n                this.provider.once(\"block\", replaceListener);\n            }\n        });\n\n        return await <Promise<TransactionReceipt>>waiter;\n    }\n\n    /**\n     *  Returns ``true`` if this transaction has been included.\n     *\n     *  This is effective only as of the time the TransactionResponse\n     *  was instantiated. To get up-to-date information, use\n     *  [[getTransaction]].\n     *\n     *  This provides a Type Guard that this transaction will have\n     *  non-null property values for properties that are null for\n     *  unmined transactions.\n     */\n    isMined(): this is MinedTransactionResponse {\n        return (this.blockHash != null);\n    }\n\n    /**\n     *  Returns true if the transaction is a legacy (i.e. ``type == 0``)\n     *  transaction.\n     *\n     *  This provides a Type Guard that this transaction will have\n     *  the ``null``-ness for hardfork-specific properties set correctly.\n     */\n    isLegacy(): this is (TransactionResponse & { accessList: null, maxFeePerGas: null, maxPriorityFeePerGas: null }) {\n        return (this.type === 0)\n    }\n\n    /**\n     *  Returns true if the transaction is a Berlin (i.e. ``type == 1``)\n     *  transaction. See [[link-eip-2070]].\n     *\n     *  This provides a Type Guard that this transaction will have\n     *  the ``null``-ness for hardfork-specific properties set correctly.\n     */\n    isBerlin(): this is (TransactionResponse & { accessList: AccessList, maxFeePerGas: null, maxPriorityFeePerGas: null }) {\n        return (this.type === 1);\n    }\n\n    /**\n     *  Returns true if the transaction is a London (i.e. ``type == 2``)\n     *  transaction. See [[link-eip-1559]].\n     *\n     *  This provides a Type Guard that this transaction will have\n     *  the ``null``-ness for hardfork-specific properties set correctly.\n     */\n    isLondon(): this is (TransactionResponse & { accessList: AccessList, maxFeePerGas: bigint, maxPriorityFeePerGas: bigint }){\n        return (this.type === 2);\n    }\n\n    /**\n     *  Returns true if hte transaction is a Cancun (i.e. ``type == 3``)\n     *  transaction. See [[link-eip-4844]].\n     */\n    isCancun(): this is (TransactionResponse & { accessList: AccessList, maxFeePerGas: bigint, maxPriorityFeePerGas: bigint, maxFeePerBlobGas: bigint, blobVersionedHashes: Array<string> }){\n        return (this.type === 3);\n    }\n\n    /**\n     *  Returns a filter which can be used to listen for orphan events\n     *  that evict this transaction.\n     */\n    removedEvent(): OrphanFilter {\n        assert(this.isMined(), \"unmined transaction canot be orphaned\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"removeEvent()\" });\n        return createRemovedTransactionFilter(this);\n    }\n\n    /**\n     *  Returns a filter which can be used to listen for orphan events\n     *  that re-order this event against %%other%%.\n     */\n    reorderedEvent(other?: TransactionResponse): OrphanFilter {\n        assert(this.isMined(), \"unmined transaction canot be orphaned\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"removeEvent()\" });\n\n        assert(!other || other.isMined(), \"unmined 'other' transaction canot be orphaned\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"removeEvent()\" });\n\n        return createReorderedTransactionFilter(this, other);\n    }\n\n    /**\n     *  Returns a new TransactionResponse instance which has the ability to\n     *  detect (and throw an error) if the transaction is replaced, which\n     *  will begin scanning at %%startBlock%%.\n     *\n     *  This should generally not be used by developers and is intended\n     *  primarily for internal use. Setting an incorrect %%startBlock%% can\n     *  have devastating performance consequences if used incorrectly.\n     */\n    replaceableTransaction(startBlock: number): TransactionResponse {\n        assertArgument(Number.isInteger(startBlock) && startBlock >= 0, \"invalid startBlock\", \"startBlock\", startBlock);\n        const tx = new TransactionResponse(this, this.provider);\n        tx.#startBlock = startBlock;\n        return tx;\n    }\n}\n\n\n//////////////////////\n// OrphanFilter\n\n/**\n *  An Orphan Filter allows detecting when an orphan block has\n *  resulted in dropping a block or transaction or has resulted\n *  in transactions changing order.\n *\n *  Not currently fully supported.\n */\nexport type OrphanFilter = {\n    orphan: \"drop-block\",\n    hash: string,\n    number: number\n} | {\n    orphan: \"drop-transaction\",\n    tx: { hash: string, blockHash: string, blockNumber: number },\n    other?: { hash: string, blockHash: string, blockNumber: number }\n} | {\n    orphan: \"reorder-transaction\",\n    tx: { hash: string, blockHash: string, blockNumber: number },\n    other?: { hash: string, blockHash: string, blockNumber: number }\n} | {\n    orphan: \"drop-log\",\n    log: {\n        transactionHash: string,\n        blockHash: string,\n        blockNumber: number,\n        address: string,\n        data: string,\n        topics: ReadonlyArray<string>,\n        index: number\n    }\n};\n\nfunction createOrphanedBlockFilter(block: { hash: string, number: number }): OrphanFilter {\n    return { orphan: \"drop-block\", hash: block.hash, number: block.number };\n}\n\nfunction createReorderedTransactionFilter(tx: { hash: string, blockHash: string, blockNumber: number }, other?: { hash: string, blockHash: string, blockNumber: number }): OrphanFilter {\n    return { orphan: \"reorder-transaction\", tx, other };\n}\n\nfunction createRemovedTransactionFilter(tx: { hash: string, blockHash: string, blockNumber: number }): OrphanFilter {\n    return { orphan: \"drop-transaction\", tx };\n}\n\nfunction createRemovedLogFilter(log: { blockHash: string, transactionHash: string, blockNumber: number, address: string, data: string, topics: ReadonlyArray<string>, index: number }): OrphanFilter {\n    return { orphan: \"drop-log\", log: {\n        transactionHash: log.transactionHash,\n        blockHash: log.blockHash,\n        blockNumber: log.blockNumber,\n        address: log.address,\n        data: log.data,\n        topics: Object.freeze(log.topics.slice()),\n        index: log.index\n    } };\n}\n\n//////////////////////\n// EventFilter\n\n/**\n *  A **TopicFilter** provides a struture to define bloom-filter\n *  queries.\n *\n *  Each field that is ``null`` matches **any** value, a field that is\n *  a ``string`` must match exactly that value and ``array`` is\n *  effectively an ``OR``-ed set, where any one of those values must\n *  match.\n */\nexport type TopicFilter = Array<null | string | Array<string>>;\n\n// @TODO:\n//export type DeferableTopicFilter = Array<null | string | Promise<string> | Array<string | Promise<string>>>;\n\n/**\n *  An **EventFilter** allows efficiently filtering logs (also known as\n *  events) using bloom filters included within blocks.\n */\nexport interface EventFilter {\n    address?: AddressLike | Array<AddressLike>;\n    topics?: TopicFilter;\n}\n\n/**\n *  A **Filter** allows searching a specific range of blocks for mathcing\n *  logs.\n */\nexport interface Filter extends EventFilter {\n\n    /**\n     *  The start block for the filter (inclusive).\n     */\n    fromBlock?: BlockTag;\n\n    /**\n     *  The end block for the filter (inclusive).\n     */\n    toBlock?: BlockTag;\n}\n\n/**\n *  A **FilterByBlockHash** allows searching a specific block for mathcing\n *  logs.\n */\nexport interface FilterByBlockHash extends EventFilter {\n    /**\n     *  The blockhash of the specific block for the filter.\n     */\n    blockHash?: string;\n}\n\n\n//////////////////////\n// ProviderEvent\n\n/**\n *  A **ProviderEvent** provides the types of events that can be subscribed\n *  to on a [[Provider]].\n *\n *  Each provider may include additional possible events it supports, but\n *  the most commonly supported are:\n *\n *  **``\"block\"``** - calls the listener with the current block number on each\n *  new block.\n *\n *  **``\"error\"``** - calls the listener on each async error that occurs during\n *  the event loop, with the error.\n *\n *  **``\"debug\"``** - calls the listener on debug events, which can be used to\n *  troubleshoot network errors, provider problems, etc.\n *\n *  **``transaction hash``** - calls the listener on each block after the\n *  transaction has been mined; generally ``.once`` is more appropriate for\n *  this event.\n *\n *  **``Array``** - calls the listener on each log that matches the filter.\n *\n *  [[EventFilter]] - calls the listener with each matching log\n */\nexport type ProviderEvent = string | Array<string | Array<string>> | EventFilter | OrphanFilter;\n\n\n//////////////////////\n// Provider\n\n/**\n *  A **Provider** is the primary method to interact with the read-only\n *  content on Ethereum.\n *\n *  It allows access to details about accounts, blocks and transactions\n *  and the ability to query event logs and simulate contract execution.\n *\n *  Account data includes the [balance](getBalance),\n *  [transaction count](getTransactionCount), [code](getCode) and\n *  [state trie storage](getStorage).\n *\n *  Simulating execution can be used to [call](call),\n *  [estimate gas](estimateGas) and\n *  [get transaction results](getTransactionResult).\n *\n *  The [[broadcastTransaction]] is the only method which allows updating\n *  the blockchain, but it is usually accessed by a [[Signer]], since a\n *  private key must be used to sign the transaction before it can be\n *  broadcast.\n */\nexport interface Provider extends ContractRunner, EventEmitterable<ProviderEvent>, NameResolver {\n\n    /**\n     *  The provider iteself.\n     *\n     *  This is part of the necessary API for executing a contract, as\n     *  it provides a common property on any [[ContractRunner]] that\n     *  can be used to access the read-only portion of the runner.\n     */\n    provider: this;\n\n    /**\n     *  Shutdown any resources this provider is using. No additional\n     *  calls should be made to this provider after calling this.\n     */\n    destroy(): void;\n\n    ////////////////////\n    // State\n\n    /**\n     *  Get the current block number.\n     */\n    getBlockNumber(): Promise<number>;\n\n    /**\n     *  Get the connected [[Network]].\n     */\n    getNetwork(): Promise<Network>;\n\n    /**\n     *  Get the best guess at the recommended [[FeeData]].\n     */\n    getFeeData(): Promise<FeeData>;\n\n\n    ////////////////////\n    // Account\n\n    /**\n     *  Get the account balance (in wei) of %%address%%. If %%blockTag%%\n     *  is specified and the node supports archive access for that\n     *  %%blockTag%%, the balance is as of that [[BlockTag]].\n     *\n     *  @note On nodes without archive access enabled, the %%blockTag%% may be\n     *        **silently ignored** by the node, which may cause issues if relied on.\n     */\n    getBalance(address: AddressLike, blockTag?: BlockTag): Promise<bigint>;\n\n    /**\n     *  Get the number of transactions ever sent for %%address%%, which\n     *  is used as the ``nonce`` when sending a transaction. If\n     *  %%blockTag%% is specified and the node supports archive access\n     *  for that %%blockTag%%, the transaction count is as of that\n     *  [[BlockTag]].\n     *\n     *  @note On nodes without archive access enabled, the %%blockTag%% may be\n     *        **silently ignored** by the node, which may cause issues if relied on.\n     */\n    getTransactionCount(address: AddressLike, blockTag?: BlockTag): Promise<number>;\n\n    /**\n     *  Get the bytecode for %%address%%.\n     *\n     *  @note On nodes without archive access enabled, the %%blockTag%% may be\n     *        **silently ignored** by the node, which may cause issues if relied on.\n     */\n    getCode(address: AddressLike, blockTag?: BlockTag): Promise<string>\n\n    /**\n     *  Get the storage slot value for %%address%% at slot %%position%%.\n     *\n     *  @note On nodes without archive access enabled, the %%blockTag%% may be\n     *        **silently ignored** by the node, which may cause issues if relied on.\n     */\n    getStorage(address: AddressLike, position: BigNumberish, blockTag?: BlockTag): Promise<string>\n\n\n    ////////////////////\n    // Execution\n\n    /**\n     *  Estimates the amount of gas required to execute %%tx%%.\n     */\n    estimateGas(tx: TransactionRequest): Promise<bigint>;\n\n    /**\n     *  Simulate the execution of %%tx%%. If the call reverts, it will\n     *  throw a [[CallExceptionError]] which includes the revert data.\n     */\n    call(tx: TransactionRequest): Promise<string>\n\n    /**\n     *  Broadcasts the %%signedTx%% to the network, adding it to the\n     *  memory pool of any node for which the transaction meets the\n     *  rebroadcast requirements.\n     */\n    broadcastTransaction(signedTx: string): Promise<TransactionResponse>;\n\n\n    ////////////////////\n    // Queries\n\n    /**\n     *  Resolves to the block for %%blockHashOrBlockTag%%.\n     *\n     *  If %%prefetchTxs%%, and the backend supports including transactions\n     *  with block requests, all transactions will be included and the\n     *  [[Block]] object will not need to make remote calls for getting\n     *  transactions.\n     */\n    getBlock(blockHashOrBlockTag: BlockTag | string, prefetchTxs?: boolean): Promise<null | Block>;\n\n    /**\n     *  Resolves to the transaction for %%hash%%.\n     *\n     *  If the transaction is unknown or on pruning nodes which\n     *  discard old transactions this resolves to ``null``.\n     */\n    getTransaction(hash: string): Promise<null | TransactionResponse>;\n\n    /**\n     *  Resolves to the transaction receipt for %%hash%%, if mined.\n     *\n     *  If the transaction has not been mined, is unknown or on\n     *  pruning nodes which discard old transactions this resolves to\n     *  ``null``.\n     */\n    getTransactionReceipt(hash: string): Promise<null | TransactionReceipt>;\n\n    /**\n     *  Resolves to the result returned by the executions of %%hash%%.\n     *\n     *  This is only supported on nodes with archive access and with\n     *  the necessary debug APIs enabled.\n     */\n    getTransactionResult(hash: string): Promise<null | string>;\n\n\n    ////////////////////\n    // Bloom-filter Queries\n\n    /**\n     *  Resolves to the list of Logs that match %%filter%%\n     */\n    getLogs(filter: Filter | FilterByBlockHash): Promise<Array<Log>>;\n\n\n    ////////////////////\n    // ENS\n\n    /**\n     *  Resolves to the address configured for the %%ensName%% or\n     *  ``null`` if unconfigured.\n     */\n    resolveName(ensName: string): Promise<null | string>;\n\n    /**\n     *  Resolves to the ENS name associated for the %%address%% or\n     *  ``null`` if the //primary name// is not configured.\n     *\n     *  Users must perform additional steps to configure a //primary name//,\n     *  which is not currently common.\n     */\n    lookupAddress(address: string): Promise<null | string>;\n\n    /**\n     *  Waits until the transaction %%hash%% is mined and has %%confirms%%\n     *  confirmations.\n     */\n    waitForTransaction(hash: string, confirms?: number, timeout?: number): Promise<null | TransactionReceipt>;\n\n    /**\n     *  Resolves to the block at %%blockTag%% once it has been mined.\n     *\n     *  This can be useful for waiting some number of blocks by using\n     *  the ``currentBlockNumber + N``.\n     */\n    waitForBlock(blockTag?: BlockTag): Promise<Block>;\n}\n", "// import from provider.ts instead of index.ts to prevent circular dep\n// from EtherscanProvider\nimport {\n    Block, Log, TransactionReceipt, TransactionResponse\n} from \"../providers/provider.js\";\nimport { defineProperties, EventPayload } from \"../utils/index.js\";\n\nimport type { EventFragment, Interface, Result } from \"../abi/index.js\";\nimport type { Listener } from \"../utils/index.js\";\nimport type {\n    Provider\n} from \"../providers/index.js\";\n\nimport type { BaseContract } from \"./contract.js\";\nimport type { ContractEventName } from \"./types.js\";\n\n/**\n *  An **EventLog** contains additional properties parsed from the [[Log]].\n */\nexport class EventLog extends Log {\n    /**\n     *  The Contract Interface.\n     */\n    readonly interface!: Interface;\n\n    /**\n     *  The matching event.\n     */\n    readonly fragment!: EventFragment;\n\n    /**\n     *  The parsed arguments passed to the event by ``emit``.\n     */\n    readonly args!: Result;\n\n    /**\n     * @_ignore:\n     */\n    constructor(log: Log, iface: Interface, fragment: EventFragment) {\n        super(log, log.provider);\n        const args = iface.decodeEventLog(fragment, log.data, log.topics);\n        defineProperties<EventLog>(this, { args, fragment, interface: iface });\n    }\n\n    /**\n     *  The name of the event.\n     */\n    get eventName(): string { return this.fragment.name; }\n\n    /**\n     *  The signature of the event.\n     */\n    get eventSignature(): string { return this.fragment.format(); }\n}\n\n/**\n *  An **EventLog** contains additional properties parsed from the [[Log]].\n */\nexport class UndecodedEventLog extends Log {\n\n    /**\n     *  The error encounted when trying to decode the log.\n     */\n    readonly error!: Error;\n\n    /**\n     * @_ignore:\n     */\n    constructor(log: Log, error: Error) {\n        super(log, log.provider);\n        defineProperties<UndecodedEventLog>(this, { error });\n    }\n}\n\n/**\n *  A **ContractTransactionReceipt** includes the parsed logs from a\n *  [[TransactionReceipt]].\n */\nexport class ContractTransactionReceipt extends TransactionReceipt {\n    readonly #iface: Interface;\n\n    /**\n     *  @_ignore:\n     */\n    constructor(iface: Interface, provider: Provider, tx: TransactionReceipt) {\n        super(tx, provider);\n        this.#iface = iface;\n    }\n\n    /**\n     *  The parsed logs for any [[Log]] which has a matching event in the\n     *  Contract ABI.\n     */\n    get logs(): Array<EventLog | Log> {\n        return super.logs.map((log) => {\n            const fragment = log.topics.length ? this.#iface.getEvent(log.topics[0]): null;\n            if (fragment) {\n                try {\n                    return new EventLog(log, this.#iface, fragment)\n                } catch (error: any) {\n                    return new UndecodedEventLog(log, error);\n                }\n            }\n\n            return log;\n        });\n    }\n\n}\n\n/**\n *  A **ContractTransactionResponse** will return a\n *  [[ContractTransactionReceipt]] when waited on.\n */\nexport class ContractTransactionResponse extends TransactionResponse {\n    readonly #iface: Interface;\n\n    /**\n     *  @_ignore:\n     */\n    constructor(iface: Interface, provider: Provider, tx: TransactionResponse) {\n        super(tx, provider);\n        this.#iface = iface;\n    }\n\n    /**\n     *  Resolves once this transaction has been mined and has\n     *  %%confirms%% blocks including it (default: ``1``) with an\n     *  optional %%timeout%%.\n     *\n     *  This can resolve to ``null`` only if %%confirms%% is ``0``\n     *  and the transaction has not been mined, otherwise this will\n     *  wait until enough confirmations have completed.\n     */\n    async wait(confirms?: number, timeout?: number): Promise<null | ContractTransactionReceipt> {\n        const receipt = await super.wait(confirms, timeout);\n        if (receipt == null) { return null; }\n        return new ContractTransactionReceipt(this.#iface, this.provider, receipt);\n    }\n}\n\n/**\n *  A **ContractUnknownEventPayload** is included as the last parameter to\n *  Contract Events when the event does not match any events in the ABI.\n */\nexport  class ContractUnknownEventPayload extends EventPayload<ContractEventName> {\n    /**\n     *  The log with no matching events.\n     */\n    readonly log!: Log;\n\n    /**\n     *  @_event:\n     */\n    constructor(contract: BaseContract, listener: null | Listener, filter: ContractEventName, log: Log) {\n        super(contract, listener, filter);\n        defineProperties<ContractUnknownEventPayload>(this, { log });\n    }\n\n    /**\n     *  Resolves to the block the event occured in.\n     */\n    async getBlock(): Promise<Block> {\n        return await this.log.getBlock();\n    }\n\n    /**\n     *  Resolves to the transaction the event occured in.\n     */\n    async getTransaction(): Promise<TransactionResponse> {\n        return await this.log.getTransaction();\n    }\n\n    /**\n     *  Resolves to the transaction receipt the event occured in.\n     */\n    async getTransactionReceipt(): Promise<TransactionReceipt> {\n        return await this.log.getTransactionReceipt();\n    }\n}\n\n/**\n *  A **ContractEventPayload** is included as the last parameter to\n *  Contract Events when the event is known.\n */\nexport class ContractEventPayload extends ContractUnknownEventPayload {\n\n    /**\n     *  The matching event.\n     */\n    declare readonly fragment: EventFragment;\n\n    /**\n     *  The log, with parsed properties.\n     */\n    declare readonly log: EventLog;\n\n    /**\n     *  The parsed arguments passed to the event by ``emit``.\n     */\n    declare readonly args: Result;\n\n    /**\n     *  @_ignore:\n     */\n    constructor(contract: BaseContract, listener: null | Listener, filter: ContractEventName, fragment: EventFragment, _log: Log) {\n        super(contract, listener, filter, new EventLog(_log, contract.interface, fragment));\n        const args = contract.interface.decodeEventLog(fragment, this.log.data, this.log.topics);\n        defineProperties<ContractEventPayload>(this, { args, fragment });\n    }\n\n    /**\n     *  The event name.\n     */\n    get eventName(): string {\n        return this.fragment.name;\n    }\n\n    /**\n     *  The event signature.\n     */\n    get eventSignature(): string {\n        return this.fragment.format();\n    }\n}\n", "\nimport { Interface } from \"../abi/index.js\";\nimport { getCreateAddress } from \"../address/index.js\";\nimport {\n    concat, defineProperties, getBytes, hexlify,\n    assert, assertArgument\n} from \"../utils/index.js\";\n\nimport { BaseContract, copyOverrides, resolveArgs } from \"./contract.js\";\n\nimport type { InterfaceAbi } from \"../abi/index.js\";\nimport type { Addressable } from \"../address/index.js\";\nimport type { ContractRunner } from \"../providers/index.js\";\nimport type { BytesLike } from \"../utils/index.js\";\n\nimport type {\n    ContractInterface, ContractMethodArgs, ContractDeployTransaction,\n} from \"./types.js\";\nimport type { ContractTransactionResponse } from \"./wrappers.js\";\n\n\n// A = Arguments to the constructor\n// I = Interface of deployed contracts\n\n/**\n *  A **ContractFactory** is used to deploy a Contract to the blockchain.\n */\nexport class ContractFactory<A extends Array<any> = Array<any>, I = BaseContract> {\n\n    /**\n     *  The Contract Interface.\n     */\n    readonly interface!: Interface;\n\n    /**\n     *  The Contract deployment bytecode. Often called the initcode.\n     */\n    readonly bytecode!: string;\n\n    /**\n     *  The ContractRunner to deploy the Contract as.\n     */\n    readonly runner!: null | ContractRunner;\n\n    /**\n     *  Create a new **ContractFactory** with %%abi%% and %%bytecode%%,\n     *  optionally connected to %%runner%%.\n     *\n     *  The %%bytecode%% may be the ``bytecode`` property within the\n     *  standard Solidity JSON output.\n     */\n    constructor(abi: Interface | InterfaceAbi, bytecode: BytesLike | { object: string }, runner?: null | ContractRunner) {\n        const iface = Interface.from(abi);\n\n        // Dereference Solidity bytecode objects and allow a missing `0x`-prefix\n        if (bytecode instanceof Uint8Array) {\n            bytecode = hexlify(getBytes(bytecode));\n        } else {\n            if (typeof(bytecode) === \"object\") { bytecode = bytecode.object; }\n            if (!bytecode.startsWith(\"0x\")) { bytecode = \"0x\" + bytecode; }\n            bytecode = hexlify(getBytes(bytecode));\n        }\n\n        defineProperties<ContractFactory>(this, {\n            bytecode, interface: iface, runner: (runner || null)\n        });\n    }\n\n    attach(target: string | Addressable): BaseContract & Omit<I, keyof BaseContract> {\n        return new (<any>BaseContract)(target, this.interface, this.runner);\n    }\n\n    /**\n     *  Resolves to the transaction to deploy the contract, passing %%args%%\n     *  into the constructor.\n     */\n    async getDeployTransaction(...args: ContractMethodArgs<A>): Promise<ContractDeployTransaction> {\n        let overrides: Omit<ContractDeployTransaction, \"data\"> = { };\n\n        const fragment = this.interface.deploy;\n\n        if (fragment.inputs.length + 1 === args.length) {\n            overrides = await copyOverrides(args.pop());\n        }\n\n        if (fragment.inputs.length !== args.length) {\n            throw new Error(\"incorrect number of arguments to constructor\");\n        }\n\n        const resolvedArgs = await resolveArgs(this.runner, fragment.inputs, args);\n\n        const data = concat([ this.bytecode, this.interface.encodeDeploy(resolvedArgs) ]);\n        return Object.assign({ }, overrides, { data });\n    }\n\n    /**\n     *  Resolves to the Contract deployed by passing %%args%% into the\n     *  constructor.\n     *\n     *  This will resolve to the Contract before it has been deployed to the\n     *  network, so the [[BaseContract-waitForDeployment]] should be used before\n     *  sending any transactions to it.\n     */\n    async deploy(...args: ContractMethodArgs<A>): Promise<BaseContract & { deploymentTransaction(): ContractTransactionResponse } & Omit<I, keyof BaseContract>> {\n        const tx = await this.getDeployTransaction(...args);\n\n        assert(this.runner && typeof(this.runner.sendTransaction) === \"function\",\n            \"factory runner does not support sending transactions\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"sendTransaction\" });\n\n        const sentTx = await this.runner.sendTransaction(tx);\n        const address = getCreateAddress(sentTx);\n        return new (<any>BaseContract)(address, this.interface, this.runner, sentTx);\n    }\n\n    /**\n     *  Return a new **ContractFactory** with the same ABI and bytecode,\n     *  but connected to %%runner%%.\n     */\n    connect(runner: null | ContractRunner): ContractFactory<A, I> {\n        return new ContractFactory(this.interface, this.bytecode, runner);\n    }\n\n    /**\n     *  Create a new **ContractFactory** from the standard Solidity JSON output.\n     */\n    static fromSolidity<A extends Array<any> = Array<any>, I = ContractInterface>(output: any, runner?: ContractRunner): ContractFactory<A, I> {\n        assertArgument(output != null, \"bad compiler output\", \"output\", output);\n\n        if (typeof(output) === \"string\") { output = JSON.parse(output); }\n\n        const abi = output.abi;\n\n        let bytecode = \"\";\n        if (output.bytecode) {\n            bytecode = output.bytecode;\n        } else if (output.evm && output.evm.bytecode) {\n            bytecode = output.evm.bytecode;\n        }\n\n        return new this(abi, bytecode, runner);\n    }\n}\n", "/**\n *  A **Provider** provides a connection to the blockchain, whch can be\n *  used to query its current state, simulate execution and send transactions\n *  to update the state.\n *\n *  It is one of the most fundamental components of interacting with a\n *  blockchain application, and there are many ways to connect, such as over\n *  HTTP, WebSockets or injected providers such as [MetaMask](link-metamask).\n *\n *  @_section: api/providers:Providers  [about-providers]\n */\n\n\nexport {\n    AbstractProvider, UnmanagedSubscriber\n} from \"./abstract-provider.js\";\n\nexport {\n    AbstractSigner,\n    VoidSigner,\n} from \"./abstract-signer.js\";\n\nexport {\n    showThrottleMessage\n} from \"./community.js\";\n\nexport { getDefaultProvider } from \"./default-provider.js\";\n\nexport {\n    EnsResolver,\n    MulticoinProviderPlugin\n} from \"./ens-resolver.js\";\n\nexport { Network } from \"./network.js\";\n\nexport { NonceManager } from \"./signer-noncemanager.js\";\n\nexport {\n    NetworkPlugin,\n    GasCostPlugin,\n    EnsPlugin,\n    FeeDataNetworkPlugin,\n    FetchUrlFeeDataNetworkPlugin,\n} from \"./plugins-network.js\";\n\nexport {\n    Block,\n    FeeData,\n    Log,\n    TransactionReceipt,\n    TransactionResponse,\n\n    copyRequest,\n    //resolveTransactionRequest,\n} from \"./provider.js\";\n\nexport { FallbackProvider } from \"./provider-fallback.js\";\nexport { JsonRpcApiProvider, JsonRpcProvider, JsonRpcSigner } from \"./provider-jsonrpc.js\"\n\nexport { BrowserProvider } from \"./provider-browser.js\";\n\nexport { AlchemyProvider } from \"./provider-alchemy.js\";\nexport { BlockscoutProvider } from \"./provider-blockscout.js\";\nexport { AnkrProvider } from \"./provider-ankr.js\";\nexport { CloudflareProvider } from \"./provider-cloudflare.js\";\nexport { ChainstackProvider } from \"./provider-chainstack.js\";\nexport { EtherscanProvider, EtherscanPlugin } from \"./provider-etherscan.js\";\nexport { InfuraProvider, InfuraWebSocketProvider } from \"./provider-infura.js\";\nexport { PocketProvider } from \"./provider-pocket.js\";\nexport { QuickNodeProvider } from \"./provider-quicknode.js\";\n\nimport { IpcSocketProvider } from \"./provider-ipcsocket.js\"; /*-browser*/\nexport { IpcSocketProvider };\nexport { SocketProvider } from \"./provider-socket.js\";\nexport { WebSocketProvider } from \"./provider-websocket.js\";\n\nexport {\n    SocketSubscriber, SocketBlockSubscriber, SocketPendingSubscriber,\n    SocketEventSubscriber\n} from \"./provider-socket.js\";\n\nexport type {\n    AbstractProviderOptions, Subscription, Subscriber,\n    AbstractProviderPlugin,\n    PerformActionFilter, PerformActionTransaction, PerformActionRequest,\n} from \"./abstract-provider.js\"\n\nexport type { ContractRunner } from \"./contracts.js\";\n\nexport type {\n    BlockParams, LogParams, TransactionReceiptParams,\n    TransactionResponseParams,\n} from \"./formatting.js\";\n\nexport type {\n    CommunityResourcable\n} from \"./community.js\";\n\n/*\nexport type {\n    AvatarLinkageType, AvatarLinkage, AvatarResult\n} from \"./ens-resolver.js\";\n*/\nexport type { Networkish } from \"./network.js\";\n\nexport type { GasCostParameters } from \"./plugins-network.js\";\n\nexport type {\n    BlockTag,\n    TransactionRequest, PreparedTransactionRequest,\n    EventFilter, Filter, FilterByBlockHash, OrphanFilter, ProviderEvent,\n    TopicFilter,\n    Provider,\n    MinedBlock, MinedTransactionResponse\n} from \"./provider.js\";\n\nexport type {\n    BrowserDiscoverOptions, BrowserProviderOptions, DebugEventBrowserProvider,\n    Eip1193Provider, Eip6963ProviderInfo\n} from \"./provider-browser.js\";\n\nexport type { FallbackProviderOptions } from \"./provider-fallback.js\";\n\nexport type {\n    JsonRpcPayload, JsonRpcResult, JsonRpcError,\n    JsonRpcApiProviderOptions,\n    JsonRpcTransactionRequest,\n} from \"./provider-jsonrpc.js\";\n\nexport type {\n    WebSocketCreator, WebSocketLike\n} from \"./provider-websocket.js\";\n\nexport type { Signer } from \"./signer.js\";\n\n", "/**\n *  The available providers should suffice for most developers purposes,\n *  but the [[AbstractProvider]] class has many features which enable\n *  sub-classing it for specific purposes.\n *\n *  @_section: api/providers/abstract-provider: Subclassing Provider  [abstract-provider]\n */\n\n// @TODO\n// Event coalescence\n//   When we register an event with an async value (e.g. address is a Signer\n//   or ENS name), we need to add it immeidately for the Event API, but also\n//   need time to resolve the address. Upon resolving the address, we need to\n//   migrate the listener to the static event. We also need to maintain a map\n//   of Signer/ENS name to address so we can sync respond to listenerCount.\n\nimport { getAddress, resolveAddress } from \"../address/index.js\";\nimport { ZeroAddress } from \"../constants/index.js\";\nimport { Contract } from \"../contract/index.js\";\nimport { namehash } from \"../hash/index.js\";\nimport { Transaction } from \"../transaction/index.js\";\nimport {\n    concat, dataLength, dataSlice, hexlify, isHexString,\n    getBigInt, getBytes, getNumber,\n    isCallException, isError, makeError, assert, assertArgument,\n    FetchRequest,\n    toBeArray, toQuantity,\n    defineProperties, EventPayload, resolveProperties,\n    toUtf8String\n} from \"../utils/index.js\";\n\nimport { EnsResolver } from \"./ens-resolver.js\";\nimport {\n    formatBlock, formatLog, formatTransactionReceipt, formatTransactionResponse\n} from \"./format.js\";\nimport { Network } from \"./network.js\";\nimport { copyRequest, Block, FeeData, Log, TransactionReceipt, TransactionResponse } from \"./provider.js\";\nimport {\n    PollingBlockSubscriber, PollingBlockTagSubscriber, PollingEventSubscriber,\n    PollingOrphanSubscriber, PollingTransactionSubscriber\n} from \"./subscriber-polling.js\";\n\nimport type { Addressable, AddressLike } from \"../address/index.js\";\nimport type { BigNumberish, BytesLike } from \"../utils/index.js\";\nimport type { FetchResponse, Listener } from \"../utils/index.js\";\n\nimport type { Networkish } from \"./network.js\";\nimport type { FetchUrlFeeDataNetworkPlugin } from \"./plugins-network.js\";\n//import type { MaxPriorityFeePlugin } from \"./plugins-network.js\";\nimport type {\n    BlockParams, LogParams, TransactionReceiptParams,\n    TransactionResponseParams\n} from \"./formatting.js\";\n\nimport type {\n    BlockTag, EventFilter, Filter, FilterByBlockHash, OrphanFilter,\n    PreparedTransactionRequest, Provider, ProviderEvent,\n    TransactionRequest\n} from \"./provider.js\";\n\ntype Timer = ReturnType<typeof setTimeout>;\n\n\n// Constants\nconst BN_2 = BigInt(2);\n\nconst MAX_CCIP_REDIRECTS = 10;\n\nfunction isPromise<T = any>(value: any): value is Promise<T> {\n    return (value && typeof(value.then) === \"function\");\n}\n\nfunction getTag(prefix: string, value: any): string {\n    return prefix + \":\" + JSON.stringify(value, (k, v) => {\n        if (v == null) { return \"null\"; }\n        if (typeof(v) === \"bigint\") { return `bigint:${ v.toString() }`}\n        if (typeof(v) === \"string\") { return v.toLowerCase(); }\n\n        // Sort object keys\n        if (typeof(v) === \"object\" && !Array.isArray(v)) {\n            const keys = Object.keys(v);\n            keys.sort();\n            return keys.reduce((accum, key) => {\n                accum[key] = v[key];\n                return accum;\n            }, <any>{ });\n        }\n\n        return v;\n    });\n}\n\n/**\n *  The types of additional event values that can be emitted for the\n *  ``\"debug\"`` event.\n */\nexport type DebugEventAbstractProvider = {\n    action: \"sendCcipReadFetchRequest\",\n    request: FetchRequest\n    index: number\n    urls: Array<string>\n} | {\n    action: \"receiveCcipReadFetchResult\",\n    request: FetchRequest,\n    result: any\n} | {\n    action: \"receiveCcipReadFetchError\",\n    request: FetchRequest,\n    result: any\n} | {\n    action: \"sendCcipReadCall\",\n    transaction: { to: string, data: string }\n} | {\n    action: \"receiveCcipReadCallResult\",\n    transaction: { to: string, data: string }\n    result: string\n} | {\n    action: \"receiveCcipReadCallError\",\n    transaction: { to: string, data: string }\n    error: Error\n};\n\n\n/**\n *  The value passed to the [[AbstractProvider-_getSubscriber]] method.\n *\n *  Only developers sub-classing [[AbstractProvider[[ will care about this,\n *  if they are modifying a low-level feature of how subscriptions operate.\n */\nexport type Subscription = {\n    type: \"block\" | \"close\" | \"debug\" | \"error\" | \"finalized\" | \"network\" | \"pending\" | \"safe\",\n    tag: string\n} | {\n    type: \"transaction\",\n    tag: string,\n    hash: string\n} | {\n    type: \"event\",\n    tag: string,\n    filter: EventFilter\n} | {\n    type: \"orphan\",\n    tag: string,\n    filter: OrphanFilter\n};\n\n/**\n *  A **Subscriber** manages a subscription.\n *\n *  Only developers sub-classing [[AbstractProvider[[ will care about this,\n *  if they are modifying a low-level feature of how subscriptions operate.\n */\nexport interface Subscriber {\n    /**\n     *  Called initially when a subscriber is added the first time.\n     */\n    start(): void;\n\n    /**\n     *  Called when there are no more subscribers to the event.\n     */\n    stop(): void;\n\n    /**\n     *  Called when the subscription should pause.\n     *\n     *  If %%dropWhilePaused%%, events that occur while paused should not\n     *  be emitted [[resume]].\n     */\n    pause(dropWhilePaused?: boolean): void;\n\n    /**\n     *  Resume a paused subscriber.\n     */\n    resume(): void;\n\n    /**\n     *  The frequency (in ms) to poll for events, if polling is used by\n     *  the subscriber.\n     *\n     *  For non-polling subscribers, this must return ``undefined``.\n     */\n    pollingInterval?: number;\n}\n\n/**\n *  An **UnmanagedSubscriber** is useful for events which do not require\n *  any additional management, such as ``\"debug\"`` which only requires\n *  emit in synchronous event loop triggered calls.\n */\nexport class UnmanagedSubscriber implements Subscriber {\n    /**\n     *  The name fof the event.\n     */\n    name!: string;\n\n    /**\n     *  Create a new UnmanagedSubscriber with %%name%%.\n     */\n    constructor(name: string) { defineProperties<UnmanagedSubscriber>(this, { name }); }\n\n    start(): void { }\n    stop(): void { }\n\n    pause(dropWhilePaused?: boolean): void { }\n    resume(): void { }\n}\n\ntype Sub = {\n    tag: string;\n    nameMap: Map<string, string>\n    addressableMap: WeakMap<Addressable, string>;\n    listeners: Array<{ listener: Listener, once: boolean }>;\n    // @TODO: get rid of this, as it is (and has to be)\n    // tracked in subscriber\n    started: boolean;\n    subscriber: Subscriber;\n};\n\nfunction copy<T = any>(value: T): T {\n    return JSON.parse(JSON.stringify(value));\n}\n\nfunction concisify(items: Array<string>): Array<string> {\n    items = Array.from((new Set(items)).values())\n    items.sort();\n    return items;\n}\n\n\nasync function getSubscription(_event: ProviderEvent, provider: AbstractProvider): Promise<Subscription> {\n    if (_event == null) { throw new Error(\"invalid event\"); }\n\n    // Normalize topic array info an EventFilter\n    if (Array.isArray(_event)) { _event = { topics: _event }; }\n\n    if (typeof(_event) === \"string\") {\n        switch (_event) {\n            case \"block\":\n            case \"debug\":\n            case \"error\":\n            case \"finalized\":\n            case \"network\":\n            case \"pending\":\n            case \"safe\": {\n                return { type: _event, tag: _event };\n            }\n        }\n    }\n\n    if (isHexString(_event, 32)) {\n        const hash = _event.toLowerCase();\n        return { type: \"transaction\", tag: getTag(\"tx\", { hash }), hash };\n    }\n\n    if ((<any>_event).orphan) {\n        const event = <OrphanFilter>_event;\n        // @TODO: Should lowercase and whatnot things here instead of copy...\n        return { type: \"orphan\", tag: getTag(\"orphan\", event), filter: copy(event) };\n    }\n\n    if (((<any>_event).address || (<any>_event).topics)) {\n        const event = <EventFilter>_event;\n\n        const filter: any = {\n            topics: ((event.topics || []).map((t) => {\n                if (t == null) { return null; }\n                if (Array.isArray(t)) {\n                    return concisify(t.map((t) => t.toLowerCase()));\n                }\n                return t.toLowerCase();\n            }))\n        };\n\n        if (event.address) {\n            const addresses: Array<string> = [ ];\n            const promises: Array<Promise<void>> = [ ];\n\n            const addAddress = (addr: AddressLike) => {\n                if (isHexString(addr)) {\n                    addresses.push(addr);\n                } else {\n                    promises.push((async () => {\n                        addresses.push(await resolveAddress(addr, provider));\n                    })());\n                }\n            }\n\n            if (Array.isArray(event.address)) {\n                event.address.forEach(addAddress);\n            } else {\n                addAddress(event.address);\n            }\n            if (promises.length) { await Promise.all(promises); }\n            filter.address = concisify(addresses.map((a) => a.toLowerCase()));\n        }\n\n        return { filter, tag: getTag(\"event\", filter), type: \"event\" };\n    }\n\n    assertArgument(false, \"unknown ProviderEvent\", \"event\", _event);\n}\n\nfunction getTime(): number { return (new Date()).getTime(); }\n\n/**\n *  An **AbstractPlugin** is used to provide additional internal services\n *  to an [[AbstractProvider]] without adding backwards-incompatible changes\n *  to method signatures or other internal and complex logic.\n */\nexport interface AbstractProviderPlugin {\n    /**\n     *  The reverse domain notation of the plugin.\n     */\n    readonly name: string;\n\n    /**\n     *  Creates a new instance of the plugin, connected to %%provider%%.\n     */\n    connect(provider: AbstractProvider): AbstractProviderPlugin;\n}\n\n/**\n *  A normalized filter used for [[PerformActionRequest]] objects.\n */\nexport type PerformActionFilter = {\n    address?: string | Array<string>;\n    topics?: Array<null | string | Array<string>>;\n    fromBlock?: BlockTag;\n    toBlock?: BlockTag;\n} | {\n    address?: string | Array<string>;\n    topics?: Array<null | string | Array<string>>;\n    blockHash?: string;\n};\n\n/**\n *  A normalized transactions used for [[PerformActionRequest]] objects.\n */\nexport interface PerformActionTransaction extends PreparedTransactionRequest {\n    /**\n     *  The ``to`` address of the transaction.\n     */\n    to?: string;\n\n    /**\n     *  The sender of the transaction.\n     */\n    from?: string;\n}\n\n/**\n *  The [[AbstractProvider]] methods will normalize all values and pass this\n *  type to [[AbstractProvider-_perform]].\n */\nexport type PerformActionRequest = {\n    method: \"broadcastTransaction\",\n    signedTransaction: string\n} | {\n    method: \"call\",\n    transaction: PerformActionTransaction, blockTag: BlockTag\n} | {\n    method: \"chainId\"\n} | {\n    method: \"estimateGas\",\n    transaction: PerformActionTransaction\n} | {\n    method: \"getBalance\",\n    address: string, blockTag: BlockTag\n} | {\n    method: \"getBlock\",\n    blockTag: BlockTag, includeTransactions: boolean\n} | {\n    method: \"getBlock\",\n    blockHash: string, includeTransactions: boolean\n} | {\n    method: \"getBlockNumber\"\n} | {\n    method: \"getCode\",\n    address: string, blockTag: BlockTag\n} | {\n    method: \"getGasPrice\"\n} | {\n    method: \"getLogs\",\n    filter: PerformActionFilter\n} | {\n    method: \"getPriorityFee\"\n} | {\n    method: \"getStorage\",\n    address: string, position: bigint, blockTag: BlockTag\n} | {\n    method: \"getTransaction\",\n    hash: string\n} | {\n    method: \"getTransactionCount\",\n    address: string, blockTag: BlockTag\n} | {\n    method: \"getTransactionReceipt\",\n    hash: string\n} | {\n    method: \"getTransactionResult\",\n    hash: string\n};\n\ntype _PerformAccountRequest = {\n    method: \"getBalance\" | \"getTransactionCount\" | \"getCode\"\n} | {\n    method: \"getStorage\", position: bigint\n}\n\n/**\n *  Options for configuring some internal aspects of an [[AbstractProvider]].\n *\n *  **``cacheTimeout``** - how long to cache a low-level ``_perform``\n *  for, based on input parameters. This reduces the number of calls\n *  to getChainId and getBlockNumber, but may break test chains which\n *  can perform operations (internally) synchronously. Use ``-1`` to\n *  disable, ``0`` will only buffer within the same event loop and\n *  any other value is in ms. (default: ``250``)\n */\nexport type AbstractProviderOptions = {\n    cacheTimeout?: number;\n    pollingInterval?: number;\n};\n\nconst defaultOptions = {\n    cacheTimeout: 250,\n    pollingInterval: 4000\n};\n\ntype CcipArgs = {\n    sender: string;\n    urls: Array<string>;\n    calldata: string;\n    selector: string;\n    extraData: string;\n    errorArgs: Array<any>\n};\n\n/**\n *  An **AbstractProvider** provides a base class for other sub-classes to\n *  implement the [[Provider]] API by normalizing input arguments and\n *  formatting output results as well as tracking events for consistent\n *  behaviour on an eventually-consistent network.\n */\nexport class AbstractProvider implements Provider {\n\n    #subs: Map<string, Sub>;\n    #plugins: Map<string, AbstractProviderPlugin>;\n\n    // null=unpaused, true=paused+dropWhilePaused, false=paused\n    #pausedState: null | boolean;\n\n    #destroyed: boolean;\n\n    #networkPromise: null | Promise<Network>;\n    readonly #anyNetwork: boolean;\n\n    #performCache: Map<string, Promise<any>>;\n\n    // The most recent block number if running an event or -1 if no \"block\" event\n    #lastBlockNumber: number;\n\n    #nextTimer: number;\n    #timers: Map<number, { timer: null | Timer, func: () => void, time: number }>;\n\n    #disableCcipRead: boolean;\n\n    #options: Required<AbstractProviderOptions>;\n\n    /**\n     *  Create a new **AbstractProvider** connected to %%network%%, or\n     *  use the various network detection capabilities to discover the\n     *  [[Network]] if necessary.\n     */\n    constructor(_network?: \"any\" | Networkish, options?: AbstractProviderOptions) {\n        this.#options = Object.assign({ }, defaultOptions, options || { });\n\n        if (_network === \"any\") {\n            this.#anyNetwork = true;\n            this.#networkPromise = null;\n        } else if (_network) {\n            const network = Network.from(_network);\n            this.#anyNetwork = false;\n            this.#networkPromise = Promise.resolve(network);\n            setTimeout(() => { this.emit(\"network\", network, null); }, 0);\n        } else {\n            this.#anyNetwork = false;\n            this.#networkPromise = null;\n        }\n\n        this.#lastBlockNumber = -1;\n\n        this.#performCache = new Map();\n\n        this.#subs = new Map();\n        this.#plugins = new Map();\n        this.#pausedState = null;\n\n        this.#destroyed = false;\n\n        this.#nextTimer = 1;\n        this.#timers = new Map();\n\n        this.#disableCcipRead = false;\n    }\n\n    get pollingInterval(): number { return this.#options.pollingInterval; }\n\n    /**\n     *  Returns ``this``, to allow an **AbstractProvider** to implement\n     *  the [[ContractRunner]] interface.\n     */\n    get provider(): this { return this; }\n\n    /**\n     *  Returns all the registered plug-ins.\n     */\n    get plugins(): Array<AbstractProviderPlugin> {\n        return Array.from(this.#plugins.values());\n    }\n\n    /**\n     *  Attach a new plug-in.\n     */\n    attachPlugin(plugin: AbstractProviderPlugin): this {\n        if (this.#plugins.get(plugin.name)) {\n            throw new Error(`cannot replace existing plugin: ${ plugin.name } `);\n        }\n        this.#plugins.set(plugin.name,  plugin.connect(this));\n        return this;\n    }\n\n    /**\n     *  Get a plugin by name.\n     */\n    getPlugin<T extends AbstractProviderPlugin = AbstractProviderPlugin>(name: string): null | T {\n        return <T>(this.#plugins.get(name)) || null;\n    }\n\n    /**\n     *  Prevent any CCIP-read operation, regardless of whether requested\n     *  in a [[call]] using ``enableCcipRead``.\n     */\n    get disableCcipRead(): boolean { return this.#disableCcipRead; }\n    set disableCcipRead(value: boolean) { this.#disableCcipRead = !!value; }\n\n    // Shares multiple identical requests made during the same 250ms\n    async #perform<T = any>(req: PerformActionRequest): Promise<T> {\n        const timeout = this.#options.cacheTimeout;\n\n        // Caching disabled\n        if (timeout < 0) { return await this._perform(req); }\n\n        // Create a tag\n        const tag = getTag(req.method, req);\n\n        let perform = this.#performCache.get(tag);\n        if (!perform) {\n            perform = this._perform(req);\n\n            this.#performCache.set(tag, perform);\n\n            setTimeout(() => {\n                if (this.#performCache.get(tag) === perform) {\n                    this.#performCache.delete(tag);\n                }\n            }, timeout);\n        }\n\n        return await perform;\n    }\n\n    /**\n     *  Resolves to the data for executing the CCIP-read operations.\n     */\n    async ccipReadFetch(tx: PerformActionTransaction, calldata: string, urls: Array<string>): Promise<null | string> {\n        if (this.disableCcipRead || urls.length === 0 || tx.to == null) { return null; }\n\n        const sender = tx.to.toLowerCase();\n        const data = calldata.toLowerCase();\n\n        const errorMessages: Array<string> = [ ];\n\n        for (let i = 0; i < urls.length; i++) {\n            const url = urls[i];\n\n            // URL expansion\n            const href = url.replace(\"{sender}\", sender).replace(\"{data}\", data);\n\n            // If no {data} is present, use POST; otherwise GET\n            //const json: string | null = (url.indexOf(\"{data}\") >= 0) ? null: JSON.stringify({ data, sender });\n\n            //const result = await fetchJson({ url: href, errorPassThrough: true }, json, (value, response) => {\n            //    value.status = response.statusCode;\n            //    return value;\n            //});\n            const request = new FetchRequest(href);\n            if (url.indexOf(\"{data}\") === -1) {\n                request.body = { data, sender };\n            }\n\n            this.emit(\"debug\", { action: \"sendCcipReadFetchRequest\", request, index: i, urls });\n\n            let errorMessage = \"unknown error\";\n\n            // Fetch the resource...\n            let resp: FetchResponse;\n            try {\n                resp = await request.send();\n            } catch (error: any) {\n                // ...low-level fetch error (missing host, bad SSL, etc.),\n                // so try next URL\n                errorMessages.push(error.message);\n                this.emit(\"debug\", { action: \"receiveCcipReadFetchError\", request, result: { error } });\n                continue;\n            }\n\n            try {\n                const result = resp.bodyJson;\n                if (result.data) {\n                    this.emit(\"debug\", { action: \"receiveCcipReadFetchResult\", request, result });\n                    return result.data;\n                }\n                if (result.message) { errorMessage = result.message; }\n                this.emit(\"debug\", { action: \"receiveCcipReadFetchError\", request, result });\n            } catch (error) { }\n\n            // 4xx indicates the result is not present; stop\n            assert(resp.statusCode < 400 || resp.statusCode >= 500, `response not found during CCIP fetch: ${ errorMessage }`,\n                \"OFFCHAIN_FAULT\", { reason: \"404_MISSING_RESOURCE\", transaction: tx, info: { url, errorMessage } });\n\n            // 5xx indicates server issue; try the next url\n            errorMessages.push(errorMessage);\n        }\n\n        assert(false, `error encountered during CCIP fetch: ${ errorMessages.map((m) => JSON.stringify(m)).join(\", \") }`, \"OFFCHAIN_FAULT\", {\n            reason: \"500_SERVER_ERROR\",\n            transaction: tx, info: { urls, errorMessages }\n        });\n    }\n\n    /**\n     *  Provides the opportunity for a sub-class to wrap a block before\n     *  returning it, to add additional properties or an alternate\n     *  sub-class of [[Block]].\n     */\n    _wrapBlock(value: BlockParams, network: Network): Block {\n        return new Block(formatBlock(value), this);\n    }\n\n    /**\n     *  Provides the opportunity for a sub-class to wrap a log before\n     *  returning it, to add additional properties or an alternate\n     *  sub-class of [[Log]].\n     */\n    _wrapLog(value: LogParams, network: Network): Log {\n        return new Log(formatLog(value), this);\n    }\n\n    /**\n     *  Provides the opportunity for a sub-class to wrap a transaction\n     *  receipt before returning it, to add additional properties or an\n     *  alternate sub-class of [[TransactionReceipt]].\n     */\n    _wrapTransactionReceipt(value: TransactionReceiptParams, network: Network): TransactionReceipt {\n        return new TransactionReceipt(formatTransactionReceipt(value), this);\n    }\n\n    /**\n     *  Provides the opportunity for a sub-class to wrap a transaction\n     *  response before returning it, to add additional properties or an\n     *  alternate sub-class of [[TransactionResponse]].\n     */\n    _wrapTransactionResponse(tx: TransactionResponseParams, network: Network): TransactionResponse {\n        return new TransactionResponse(formatTransactionResponse(tx), this);\n    }\n\n    /**\n     *  Resolves to the Network, forcing a network detection using whatever\n     *  technique the sub-class requires.\n     *\n     *  Sub-classes **must** override this.\n     */\n    _detectNetwork(): Promise<Network> {\n        assert(false, \"sub-classes must implement this\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"_detectNetwork\"\n        });\n    }\n\n    /**\n     *  Sub-classes should use this to perform all built-in operations. All\n     *  methods sanitizes and normalizes the values passed into this.\n     *\n     *  Sub-classes **must** override this.\n     */\n    async _perform<T = any>(req: PerformActionRequest): Promise<T> {\n        assert(false, `unsupported method: ${ req.method }`, \"UNSUPPORTED_OPERATION\", {\n            operation: req.method,\n            info: req\n        });\n    }\n\n    // State\n\n    async getBlockNumber(): Promise<number> {\n        const blockNumber = getNumber(await this.#perform({ method: \"getBlockNumber\" }), \"%response\");\n        if (this.#lastBlockNumber >= 0) { this.#lastBlockNumber = blockNumber; }\n        return blockNumber;\n    }\n\n    /**\n     *  Returns or resolves to the address for %%address%%, resolving ENS\n     *  names and [[Addressable]] objects and returning if already an\n     *  address.\n     */\n    _getAddress(address: AddressLike): string | Promise<string> {\n        return resolveAddress(address, this);\n    }\n\n    /**\n     *  Returns or resolves to a valid block tag for %%blockTag%%, resolving\n     *  negative values and returning if already a valid block tag.\n     */\n    _getBlockTag(blockTag?: BlockTag): string | Promise<string> {\n        if (blockTag == null) { return \"latest\"; }\n\n        switch (blockTag) {\n            case \"earliest\":\n                return \"0x0\";\n            case \"finalized\":\n            case \"latest\":\n            case \"pending\":\n            case \"safe\":\n                return blockTag;\n        }\n\n\n        if (isHexString(blockTag)) {\n            if (isHexString(blockTag, 32)) { return blockTag; }\n            return toQuantity(blockTag);\n        }\n\n        if (typeof(blockTag) === \"bigint\") {\n            blockTag = getNumber(blockTag, \"blockTag\");\n        }\n\n        if (typeof(blockTag) === \"number\") {\n            if (blockTag >= 0) { return toQuantity(blockTag); }\n            if (this.#lastBlockNumber >= 0) { return toQuantity(this.#lastBlockNumber + blockTag); }\n            return this.getBlockNumber().then((b) => toQuantity(b + <number>blockTag));\n        }\n\n        assertArgument(false, \"invalid blockTag\", \"blockTag\", blockTag);\n    }\n\n    /**\n     *  Returns or resolves to a filter for %%filter%%, resolving any ENS\n     *  names or [[Addressable]] object and returning if already a valid\n     *  filter.\n     */\n    _getFilter(filter: Filter | FilterByBlockHash): PerformActionFilter | Promise<PerformActionFilter> {\n\n        // Create a canonical representation of the topics\n        const topics = (filter.topics || [ ]).map((t) => {\n            if (t == null) { return null; }\n            if (Array.isArray(t)) {\n                return concisify(t.map((t) => t.toLowerCase()));\n            }\n            return t.toLowerCase();\n        });\n\n        const blockHash = (\"blockHash\" in filter) ? filter.blockHash: undefined;\n\n        const resolve = (_address: Array<string>, fromBlock?: string, toBlock?: string) => {\n            let address: undefined | string | Array<string> = undefined;\n            switch (_address.length) {\n                case 0: break;\n                case 1:\n                    address = _address[0];\n                    break;\n                default:\n                    _address.sort();\n                    address = _address;\n            }\n\n            if (blockHash) {\n                if (fromBlock != null || toBlock != null) {\n                    throw new Error(\"invalid filter\");\n                }\n            }\n\n            const filter = <any>{ };\n            if (address) { filter.address = address; }\n            if (topics.length) { filter.topics = topics; }\n            if (fromBlock) { filter.fromBlock = fromBlock; }\n            if (toBlock) { filter.toBlock = toBlock; }\n            if (blockHash) { filter.blockHash = blockHash; }\n\n            return filter;\n        };\n\n        // Addresses could be async (ENS names or Addressables)\n        let address: Array<string | Promise<string>> = [ ];\n        if (filter.address) {\n            if (Array.isArray(filter.address)) {\n                for (const addr of filter.address) { address.push(this._getAddress(addr)); }\n            } else {\n                address.push(this._getAddress(filter.address));\n            }\n        }\n\n        let fromBlock: undefined | string | Promise<string> = undefined;\n        if (\"fromBlock\" in filter) { fromBlock = this._getBlockTag(filter.fromBlock); }\n\n        let toBlock: undefined | string | Promise<string> = undefined;\n        if (\"toBlock\" in filter) { toBlock = this._getBlockTag(filter.toBlock); }\n\n        if (address.filter((a) => (typeof(a) !== \"string\")).length ||\n            (fromBlock != null && typeof(fromBlock) !== \"string\") ||\n            (toBlock != null && typeof(toBlock) !== \"string\")) {\n\n            return Promise.all([ Promise.all(address), fromBlock, toBlock ]).then((result) => {\n                return resolve(result[0], result[1], result[2]);\n            });\n        }\n\n        return resolve(<Array<string>>address, fromBlock, toBlock);\n    }\n\n    /**\n     *  Returns or resolves to a transaction for %%request%%, resolving\n     *  any ENS names or [[Addressable]] and returning if already a valid\n     *  transaction.\n     */\n    _getTransactionRequest(_request: TransactionRequest): PerformActionTransaction | Promise<PerformActionTransaction> {\n        const request = <PerformActionTransaction>copyRequest(_request);\n\n        const promises: Array<Promise<void>> = [ ];\n        [ \"to\", \"from\" ].forEach((key) => {\n            if ((<any>request)[key] == null) { return; }\n\n            const addr = resolveAddress((<any>request)[key], this);\n            if (isPromise(addr)) {\n                promises.push((async function() { (<any>request)[key] = await addr; })());\n            } else {\n                (<any>request)[key] = addr;\n            }\n        });\n\n        if (request.blockTag != null) {\n            const blockTag = this._getBlockTag(request.blockTag);\n            if (isPromise(blockTag)) {\n                promises.push((async function() { request.blockTag = await blockTag; })());\n            } else {\n                request.blockTag = blockTag;\n            }\n        }\n\n        if (promises.length) {\n            return (async function() {\n                await Promise.all(promises);\n                return request;\n            })();\n        }\n\n        return request;\n    }\n\n    async getNetwork(): Promise<Network> {\n\n        // No explicit network was set and this is our first time\n        if (this.#networkPromise == null) {\n\n            // Detect the current network (shared with all calls)\n            const detectNetwork = (async () => {\n                try {\n                    const network = await this._detectNetwork();\n                    this.emit(\"network\", network, null);\n                    return network;\n                } catch (error) {\n                    if (this.#networkPromise === detectNetwork!) {\n                        this.#networkPromise = null;\n                    }\n                    throw error;\n                }\n            })();\n\n            this.#networkPromise = detectNetwork;\n            return (await detectNetwork).clone();\n        }\n\n        const networkPromise = this.#networkPromise;\n\n        const [ expected, actual ] = await Promise.all([\n            networkPromise,          // Possibly an explicit Network\n            this._detectNetwork()    // The actual connected network\n        ]);\n\n        if (expected.chainId !== actual.chainId) {\n            if (this.#anyNetwork) {\n                // The \"any\" network can change, so notify listeners\n                this.emit(\"network\", actual, expected);\n\n                // Update the network if something else hasn't already changed it\n                if (this.#networkPromise === networkPromise) {\n                    this.#networkPromise = Promise.resolve(actual);\n                }\n            } else {\n                // Otherwise, we do not allow changes to the underlying network\n                assert(false, `network changed: ${ expected.chainId } => ${ actual.chainId } `, \"NETWORK_ERROR\", {\n                    event: \"changed\"\n                });\n            }\n        }\n\n        return expected.clone();\n    }\n\n    async getFeeData(): Promise<FeeData> {\n        const network = await this.getNetwork();\n\n        const getFeeDataFunc = async () => {\n            const { _block, gasPrice, priorityFee } = await resolveProperties({\n                _block: this.#getBlock(\"latest\", false),\n                gasPrice: ((async () => {\n                    try {\n                        const value = await this.#perform({ method: \"getGasPrice\" });\n                        return getBigInt(value, \"%response\");\n                    } catch (error) { }\n                    return null\n                })()),\n                priorityFee: ((async () => {\n                    try {\n                        const value = await this.#perform({ method: \"getPriorityFee\" });\n                        return getBigInt(value, \"%response\");\n                    } catch (error) { }\n                    return null;\n                })())\n            });\n\n            let maxFeePerGas: null | bigint = null;\n            let maxPriorityFeePerGas: null | bigint = null;\n\n            // These are the recommended EIP-1559 heuristics for fee data\n            const block = this._wrapBlock(_block, network);\n            if (block && block.baseFeePerGas) {\n                maxPriorityFeePerGas = (priorityFee != null) ? priorityFee: BigInt(\"1000000000\");\n                maxFeePerGas = (block.baseFeePerGas * BN_2) + maxPriorityFeePerGas;\n            }\n\n            return new FeeData(gasPrice, maxFeePerGas, maxPriorityFeePerGas);\n        };\n\n        // Check for a FeeDataNetWorkPlugin\n        const plugin = <FetchUrlFeeDataNetworkPlugin>network.getPlugin(\"org.ethers.plugins.network.FetchUrlFeeDataPlugin\");\n        if (plugin) {\n            const req = new FetchRequest(plugin.url);\n            const feeData = await plugin.processFunc(getFeeDataFunc, this, req);\n            return new FeeData(feeData.gasPrice, feeData.maxFeePerGas, feeData.maxPriorityFeePerGas);\n        }\n\n        return await getFeeDataFunc();\n    }\n\n\n    async estimateGas(_tx: TransactionRequest): Promise<bigint> {\n        let tx = this._getTransactionRequest(_tx);\n        if (isPromise(tx)) { tx = await tx; }\n        return getBigInt(await this.#perform({\n            method: \"estimateGas\", transaction: tx\n        }), \"%response\");\n    }\n\n    async #call(tx: PerformActionTransaction, blockTag: string, attempt: number): Promise<string> {\n        assert (attempt < MAX_CCIP_REDIRECTS, \"CCIP read exceeded maximum redirections\", \"OFFCHAIN_FAULT\", {\n             reason: \"TOO_MANY_REDIRECTS\",\n             transaction: Object.assign({ }, tx, { blockTag, enableCcipRead: true })\n         });\n\n         // This came in as a PerformActionTransaction, so to/from are safe; we can cast\n         const transaction = <PerformActionTransaction>copyRequest(tx);\n\n         try {\n             return hexlify(await this._perform({ method: \"call\", transaction, blockTag }));\n\n         } catch (error: any) {\n             // CCIP Read OffchainLookup\n             if (!this.disableCcipRead && isCallException(error) && error.data && attempt >= 0 && blockTag === \"latest\" && transaction.to != null && dataSlice(error.data, 0, 4) === \"0x556f1830\") {\n                 const data = error.data;\n\n                 const txSender = await resolveAddress(transaction.to, this);\n\n                 // Parse the CCIP Read Arguments\n                 let ccipArgs: CcipArgs;\n                 try {\n                     ccipArgs = parseOffchainLookup(dataSlice(error.data, 4));\n                 } catch (error: any) {\n                     assert(false, error.message, \"OFFCHAIN_FAULT\", {\n                         reason: \"BAD_DATA\", transaction, info: { data } });\n                 }\n\n                 // Check the sender of the OffchainLookup matches the transaction\n                 assert(ccipArgs.sender.toLowerCase() === txSender.toLowerCase(),\n                     \"CCIP Read sender mismatch\", \"CALL_EXCEPTION\", {\n                         action: \"call\",\n                         data,\n                         reason: \"OffchainLookup\",\n                         transaction: <any>transaction, // @TODO: populate data?\n                         invocation: null,\n                         revert: {\n                             signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                             name: \"OffchainLookup\",\n                             args: ccipArgs.errorArgs\n                         }\n                     });\n\n                 const ccipResult = await this.ccipReadFetch(transaction, ccipArgs.calldata, ccipArgs.urls);\n                 assert(ccipResult != null, \"CCIP Read failed to fetch data\", \"OFFCHAIN_FAULT\", {\n                     reason: \"FETCH_FAILED\", transaction, info: { data: error.data, errorArgs: ccipArgs.errorArgs } });\n\n                 const tx = {\n                     to: txSender,\n                     data: concat([ ccipArgs.selector, encodeBytes([ ccipResult, ccipArgs.extraData ]) ])\n                 };\n\n                 this.emit(\"debug\", { action: \"sendCcipReadCall\", transaction: tx });\n                 try {\n                     const result = await this.#call(tx, blockTag, attempt + 1);\n                     this.emit(\"debug\", { action: \"receiveCcipReadCallResult\", transaction: Object.assign({ }, tx), result });\n                     return result;\n                 } catch (error) {\n                     this.emit(\"debug\", { action: \"receiveCcipReadCallError\", transaction: Object.assign({ }, tx), error });\n                     throw error;\n                 }\n             }\n\n             throw error;\n         }\n    }\n\n    async #checkNetwork<T>(promise: Promise<T>): Promise<T> {\n        const { value } = await resolveProperties({\n            network: this.getNetwork(),\n            value: promise\n        });\n        return value;\n    }\n\n    async call(_tx: TransactionRequest): Promise<string> {\n        const { tx, blockTag } = await resolveProperties({\n            tx: this._getTransactionRequest(_tx),\n            blockTag: this._getBlockTag(_tx.blockTag)\n        });\n\n        return await this.#checkNetwork(this.#call(tx, blockTag, _tx.enableCcipRead ? 0: -1));\n    }\n\n    // Account\n    async #getAccountValue(request: _PerformAccountRequest, _address: AddressLike, _blockTag?: BlockTag): Promise<any> {\n        let address: string | Promise<string> = this._getAddress(_address);\n        let blockTag: string | Promise<string> = this._getBlockTag(_blockTag);\n\n        if (typeof(address) !== \"string\" || typeof(blockTag) !== \"string\") {\n            [ address, blockTag ] = await Promise.all([ address, blockTag ]);\n        }\n\n        return await this.#checkNetwork(this.#perform(Object.assign(request, { address, blockTag })));\n    }\n\n    async getBalance(address: AddressLike, blockTag?: BlockTag): Promise<bigint> {\n        return getBigInt(await this.#getAccountValue({ method: \"getBalance\" }, address, blockTag), \"%response\");\n    }\n\n    async getTransactionCount(address: AddressLike, blockTag?: BlockTag): Promise<number> {\n        return getNumber(await this.#getAccountValue({ method: \"getTransactionCount\" }, address, blockTag), \"%response\");\n    }\n\n    async getCode(address: AddressLike, blockTag?: BlockTag): Promise<string> {\n        return hexlify(await this.#getAccountValue({ method: \"getCode\" }, address, blockTag));\n    }\n\n    async getStorage(address: AddressLike, _position: BigNumberish, blockTag?: BlockTag): Promise<string> {\n        const position = getBigInt(_position, \"position\");\n        return hexlify(await this.#getAccountValue({ method: \"getStorage\", position }, address, blockTag));\n    }\n\n    // Write\n    async broadcastTransaction(signedTx: string): Promise<TransactionResponse> {\n        const { blockNumber, hash, network } = await resolveProperties({\n             blockNumber: this.getBlockNumber(),\n             hash: this._perform({\n                 method: \"broadcastTransaction\",\n                 signedTransaction: signedTx\n             }),\n             network: this.getNetwork()\n        });\n\n        const tx = Transaction.from(signedTx);\n        if (tx.hash !== hash) {\n            throw new Error(\"@TODO: the returned hash did not match\");\n        }\n\n        return this._wrapTransactionResponse(<any>tx, network).replaceableTransaction(blockNumber);\n    }\n\n    async #getBlock(block: BlockTag | string, includeTransactions: boolean): Promise<any> {\n        // @TODO: Add CustomBlockPlugin check\n\n        if (isHexString(block, 32)) {\n            return await this.#perform({\n                method: \"getBlock\", blockHash: block, includeTransactions\n            });\n        }\n\n        let blockTag = this._getBlockTag(block);\n        if (typeof(blockTag) !== \"string\") { blockTag = await blockTag; }\n\n        return await this.#perform({\n            method: \"getBlock\", blockTag, includeTransactions\n        });\n    }\n\n    // Queries\n    async getBlock(block: BlockTag | string, prefetchTxs?: boolean): Promise<null | Block> {\n        const { network, params } = await resolveProperties({\n            network: this.getNetwork(),\n            params: this.#getBlock(block, !!prefetchTxs)\n        });\n        if (params == null) { return null; }\n\n        return this._wrapBlock(params, network);\n    }\n\n    async getTransaction(hash: string): Promise<null | TransactionResponse> {\n        const { network, params } = await resolveProperties({\n            network: this.getNetwork(),\n            params: this.#perform({ method: \"getTransaction\", hash })\n        });\n        if (params == null) { return null; }\n\n        return this._wrapTransactionResponse(params, network);\n    }\n\n    async getTransactionReceipt(hash: string): Promise<null | TransactionReceipt> {\n        const { network, params } = await resolveProperties({\n            network: this.getNetwork(),\n            params: this.#perform({ method: \"getTransactionReceipt\", hash })\n        });\n        if (params == null) { return null; }\n\n        // Some backends did not backfill the effectiveGasPrice into old transactions\n        // in the receipt, so we look it up manually and inject it.\n        if (params.gasPrice == null && params.effectiveGasPrice == null) {\n            const tx = await this.#perform({ method: \"getTransaction\", hash });\n            if (tx == null) { throw new Error(\"report this; could not find tx or effectiveGasPrice\"); }\n            params.effectiveGasPrice = tx.gasPrice;\n        }\n\n        return this._wrapTransactionReceipt(params, network);\n    }\n\n    async getTransactionResult(hash: string): Promise<null | string> {\n        const { result } = await resolveProperties({\n            network: this.getNetwork(),\n            result: this.#perform({ method: \"getTransactionResult\", hash })\n        });\n        if (result == null) { return null; }\n        return hexlify(result);\n    }\n\n    // Bloom-filter Queries\n    async getLogs(_filter: Filter | FilterByBlockHash): Promise<Array<Log>> {\n        let filter = this._getFilter(_filter);\n        if (isPromise(filter)) { filter = await filter; }\n\n        const { network, params } = await resolveProperties({\n            network: this.getNetwork(),\n            params: this.#perform<Array<LogParams>>({ method: \"getLogs\", filter })\n        });\n\n        return params.map((p) => this._wrapLog(p, network));\n    }\n\n    // ENS\n    _getProvider(chainId: number): AbstractProvider {\n        assert(false, \"provider cannot connect to target network\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"_getProvider()\"\n        });\n    }\n\n    async getResolver(name: string): Promise<null | EnsResolver> {\n        return await EnsResolver.fromName(this, name);\n    }\n\n    async getAvatar(name: string): Promise<null | string> {\n        const resolver = await this.getResolver(name);\n        if (resolver) { return await resolver.getAvatar(); }\n        return null;\n    }\n\n    async resolveName(name: string): Promise<null | string>{\n        const resolver = await this.getResolver(name);\n        if (resolver) { return await resolver.getAddress(); }\n        return null;\n    }\n\n    async lookupAddress(address: string): Promise<null | string> {\n        address = getAddress(address);\n        const node = namehash(address.substring(2).toLowerCase() + \".addr.reverse\");\n\n        try {\n\n            const ensAddr = await EnsResolver.getEnsAddress(this);\n            const ensContract = new Contract(ensAddr, [\n                \"function resolver(bytes32) view returns (address)\"\n            ], this);\n\n            const resolver = await ensContract.resolver(node);\n            if (resolver == null || resolver === ZeroAddress) { return null; }\n\n            const resolverContract = new Contract(resolver, [\n                \"function name(bytes32) view returns (string)\"\n            ], this);\n            const name = await resolverContract.name(node);\n\n            // Failed forward resolution\n            const check = await this.resolveName(name);\n            if (check !== address) { return null; }\n\n            return name;\n\n        } catch (error) {\n            // No data was returned from the resolver\n            if (isError(error, \"BAD_DATA\") && error.value === \"0x\") {\n                return null;\n            }\n\n            // Something reerted\n            if (isError(error, \"CALL_EXCEPTION\")) { return null; }\n\n            throw error;\n        }\n\n        return null;\n    }\n\n    async waitForTransaction(hash: string, _confirms?: null | number, timeout?: null | number): Promise<null | TransactionReceipt> {\n        const confirms = (_confirms != null) ? _confirms: 1;\n        if (confirms === 0) { return this.getTransactionReceipt(hash); }\n\n        return new Promise(async (resolve, reject) => {\n            let timer: null | Timer = null;\n\n            const listener = (async (blockNumber: number) => {\n                try {\n                    const receipt = await this.getTransactionReceipt(hash);\n                    if (receipt != null) {\n                        if (blockNumber - receipt.blockNumber + 1 >= confirms) {\n                            resolve(receipt);\n                            //this.off(\"block\", listener);\n                            if (timer) {\n                                clearTimeout(timer);\n                                timer = null;\n                            }\n                            return;\n                        }\n                    }\n                } catch (error) {\n                    console.log(\"EEE\", error);\n                }\n                this.once(\"block\", listener);\n            });\n\n            if (timeout != null) {\n                timer = setTimeout(() => {\n                    if (timer == null) { return; }\n                    timer = null;\n                    this.off(\"block\", listener);\n                    reject(makeError(\"timeout\", \"TIMEOUT\", { reason: \"timeout\" }));\n                }, timeout);\n            }\n\n            listener(await this.getBlockNumber());\n        });\n    }\n\n    async waitForBlock(blockTag?: BlockTag): Promise<Block> {\n        assert(false, \"not implemented yet\", \"NOT_IMPLEMENTED\", {\n            operation: \"waitForBlock\"\n        });\n    }\n\n    /**\n     *  Clear a timer created using the [[_setTimeout]] method.\n     */\n    _clearTimeout(timerId: number): void {\n        const timer = this.#timers.get(timerId);\n        if (!timer) { return; }\n        if (timer.timer) { clearTimeout(timer.timer); }\n        this.#timers.delete(timerId);\n    }\n\n    /**\n     *  Create a timer that will execute %%func%% after at least %%timeout%%\n     *  (in ms). If %%timeout%% is unspecified, then %%func%% will execute\n     *  in the next event loop.\n     *\n     *  [Pausing](AbstractProvider-paused) the provider will pause any\n     *  associated timers.\n     */\n    _setTimeout(_func: () => void, timeout?: number): number {\n        if (timeout == null) { timeout = 0; }\n        const timerId = this.#nextTimer++;\n        const func = () => {\n            this.#timers.delete(timerId);\n            _func();\n        };\n\n        if (this.paused) {\n            this.#timers.set(timerId, { timer: null, func, time: timeout });\n        } else {\n            const timer = setTimeout(func, timeout);\n            this.#timers.set(timerId, { timer, func, time: getTime() });\n        }\n\n        return timerId;\n    }\n\n    /**\n     *  Perform %%func%% on each subscriber.\n     */\n    _forEachSubscriber(func: (s: Subscriber) => void): void {\n        for (const sub of this.#subs.values()) {\n            func(sub.subscriber);\n        }\n    }\n\n    /**\n     *  Sub-classes may override this to customize subscription\n     *  implementations.\n     */\n    _getSubscriber(sub: Subscription): Subscriber {\n        switch (sub.type) {\n            case \"debug\":\n            case \"error\":\n            case \"network\":\n                return new UnmanagedSubscriber(sub.type);\n            case \"block\": {\n                const subscriber = new PollingBlockSubscriber(this);\n                subscriber.pollingInterval = this.pollingInterval;\n                return subscriber;\n            }\n            case \"safe\": case \"finalized\":\n                return new PollingBlockTagSubscriber(this, sub.type);\n            case \"event\":\n                return new PollingEventSubscriber(this, sub.filter);\n            case \"transaction\":\n                return new PollingTransactionSubscriber(this, sub.hash);\n            case \"orphan\":\n                return new PollingOrphanSubscriber(this, sub.filter);\n        }\n\n        throw new Error(`unsupported event: ${ sub.type }`);\n    }\n\n    /**\n     *  If a [[Subscriber]] fails and needs to replace itself, this\n     *  method may be used.\n     *\n     *  For example, this is used for providers when using the\n     *  ``eth_getFilterChanges`` method, which can return null if state\n     *  filters are not supported by the backend, allowing the Subscriber\n     *  to swap in a [[PollingEventSubscriber]].\n     */\n    _recoverSubscriber(oldSub: Subscriber, newSub: Subscriber): void {\n        for (const sub of this.#subs.values()) {\n            if (sub.subscriber === oldSub) {\n                if (sub.started) { sub.subscriber.stop(); }\n                sub.subscriber = newSub;\n                if (sub.started) { newSub.start(); }\n                if (this.#pausedState != null) { newSub.pause(this.#pausedState); }\n                break;\n            }\n        }\n    }\n\n    async #hasSub(event: ProviderEvent, emitArgs?: Array<any>): Promise<null | Sub> {\n        let sub = await getSubscription(event, this);\n        // This is a log that is removing an existing log; we actually want\n        // to emit an orphan event for the removed log\n        if (sub.type === \"event\" && emitArgs && emitArgs.length > 0 && emitArgs[0].removed === true) {\n            sub = await getSubscription({ orphan: \"drop-log\", log: emitArgs[0] }, this);\n        }\n        return this.#subs.get(sub.tag) || null;\n    }\n\n    async #getSub(event: ProviderEvent): Promise<Sub> {\n        const subscription = await getSubscription(event, this);\n\n        // Prevent tampering with our tag in any subclass' _getSubscriber\n        const tag = subscription.tag;\n\n        let sub = this.#subs.get(tag);\n        if (!sub) {\n            const subscriber = this._getSubscriber(subscription);\n\n            const addressableMap = new WeakMap();\n            const nameMap = new Map();\n            sub = { subscriber, tag, addressableMap, nameMap, started: false, listeners: [ ] };\n            this.#subs.set(tag, sub);\n        }\n\n        return sub;\n    }\n\n    async on(event: ProviderEvent, listener: Listener): Promise<this> {\n        const sub = await this.#getSub(event);\n        sub.listeners.push({ listener, once: false });\n        if (!sub.started) {\n            sub.subscriber.start();\n            sub.started = true;\n            if (this.#pausedState != null) { sub.subscriber.pause(this.#pausedState); }\n        }\n        return this;\n    }\n\n    async once(event: ProviderEvent, listener: Listener): Promise<this> {\n        const sub = await this.#getSub(event);\n        sub.listeners.push({ listener, once: true });\n        if (!sub.started) {\n            sub.subscriber.start();\n            sub.started = true;\n            if (this.#pausedState != null) { sub.subscriber.pause(this.#pausedState); }\n        }\n        return this;\n    }\n\n    async emit(event: ProviderEvent, ...args: Array<any>): Promise<boolean> {\n        const sub = await this.#hasSub(event, args);\n        // If there is not subscription or if a recent emit removed\n        // the last of them (which also deleted the sub) do nothing\n        if (!sub || sub.listeners.length === 0) { return false; };\n\n        const count = sub.listeners.length;\n        sub.listeners = sub.listeners.filter(({ listener, once }) => {\n            const payload = new EventPayload(this, (once ? null: listener), event);\n            try {\n                listener.call(this, ...args, payload);\n            } catch(error) { }\n            return !once;\n        });\n\n        if (sub.listeners.length === 0) {\n            if (sub.started) { sub.subscriber.stop(); }\n            this.#subs.delete(sub.tag);\n        }\n\n        return (count > 0);\n    }\n\n    async listenerCount(event?: ProviderEvent): Promise<number> {\n        if (event) {\n            const sub = await this.#hasSub(event);\n            if (!sub) { return 0; }\n            return sub.listeners.length;\n        }\n\n        let total = 0;\n        for (const { listeners } of this.#subs.values()) {\n            total += listeners.length;\n        }\n        return total;\n    }\n\n    async listeners(event?: ProviderEvent): Promise<Array<Listener>> {\n        if (event) {\n            const sub = await this.#hasSub(event);\n            if (!sub) { return  [ ]; }\n            return sub.listeners.map(({ listener }) => listener);\n        }\n        let result: Array<Listener> = [ ];\n        for (const { listeners } of this.#subs.values()) {\n            result = result.concat(listeners.map(({ listener }) => listener));\n        }\n        return result;\n    }\n\n    async off(event: ProviderEvent, listener?: Listener): Promise<this> {\n        const sub = await this.#hasSub(event);\n        if (!sub) { return this; }\n\n        if (listener) {\n            const index = sub.listeners.map(({ listener }) => listener).indexOf(listener);\n            if (index >= 0) { sub.listeners.splice(index, 1); }\n        }\n\n        if (!listener || sub.listeners.length === 0) {\n            if (sub.started) { sub.subscriber.stop(); }\n            this.#subs.delete(sub.tag);\n        }\n\n        return this;\n    }\n\n    async removeAllListeners(event?: ProviderEvent): Promise<this> {\n        if (event) {\n            const { tag, started, subscriber } = await this.#getSub(event);\n            if (started) { subscriber.stop(); }\n            this.#subs.delete(tag);\n        } else {\n            for (const [ tag, { started, subscriber } ] of this.#subs) {\n                if (started) { subscriber.stop(); }\n                this.#subs.delete(tag);\n            }\n        }\n        return this;\n    }\n\n    // Alias for \"on\"\n    async addListener(event: ProviderEvent, listener: Listener): Promise<this> {\n       return await this.on(event, listener);\n    }\n\n    // Alias for \"off\"\n    async removeListener(event: ProviderEvent, listener: Listener): Promise<this> {\n       return this.off(event, listener);\n    }\n\n    /**\n     *  If this provider has been destroyed using the [[destroy]] method.\n     *\n     *  Once destroyed, all resources are reclaimed, internal event loops\n     *  and timers are cleaned up and no further requests may be sent to\n     *  the provider.\n     */\n    get destroyed(): boolean {\n        return this.#destroyed;\n    }\n\n    /**\n     *  Sub-classes may use this to shutdown any sockets or release their\n     *  resources and reject any pending requests.\n     *\n     *  Sub-classes **must** call ``super.destroy()``.\n     */\n    destroy(): void {\n        // Stop all listeners\n        this.removeAllListeners();\n\n        // Shut down all tiemrs\n        for (const timerId of this.#timers.keys()) {\n            this._clearTimeout(timerId);\n        }\n\n        this.#destroyed = true;\n    }\n\n    /**\n     *  Whether the provider is currently paused.\n     *\n     *  A paused provider will not emit any events, and generally should\n     *  not make any requests to the network, but that is up to sub-classes\n     *  to manage.\n     *\n     *  Setting ``paused = true`` is identical to calling ``.pause(false)``,\n     *  which will buffer any events that occur while paused until the\n     *  provider is unpaused.\n     */\n    get paused(): boolean { return (this.#pausedState != null); }\n    set paused(pause: boolean) {\n        if (!!pause === this.paused) { return; }\n\n        if (this.paused) {\n            this.resume();\n        } else {\n            this.pause(false);\n        }\n    }\n\n    /**\n     *  Pause the provider. If %%dropWhilePaused%%, any events that occur\n     *  while paused are dropped, otherwise all events will be emitted once\n     *  the provider is unpaused.\n     */\n    pause(dropWhilePaused?: boolean): void {\n        this.#lastBlockNumber = -1;\n\n        if (this.#pausedState != null) {\n            if (this.#pausedState == !!dropWhilePaused) { return; }\n            assert(false, \"cannot change pause type; resume first\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"pause\"\n            });\n        }\n\n        this._forEachSubscriber((s) => s.pause(dropWhilePaused));\n        this.#pausedState = !!dropWhilePaused;\n\n        for (const timer of this.#timers.values()) {\n            // Clear the timer\n            if (timer.timer) { clearTimeout(timer.timer); }\n\n            // Remaining time needed for when we become unpaused\n            timer.time = getTime() - timer.time;\n        }\n    }\n\n    /**\n     *  Resume the provider.\n     */\n    resume(): void {\n        if (this.#pausedState == null) { return; }\n\n        this._forEachSubscriber((s) => s.resume());\n        this.#pausedState = null;\n        for (const timer of this.#timers.values()) {\n            // Remaining time when we were paused\n            let timeout = timer.time;\n            if (timeout < 0) { timeout = 0; }\n\n            // Start time (in cause paused, so we con compute remaininf time)\n            timer.time = getTime();\n\n            // Start the timer\n            setTimeout(timer.func, timeout);\n        }\n    }\n}\n\n\nfunction _parseString(result: string, start: number): null | string {\n    try {\n        const bytes = _parseBytes(result, start);\n        if (bytes) { return toUtf8String(bytes); }\n    } catch(error) { }\n    return null;\n}\n\nfunction _parseBytes(result: string, start: number): null | string {\n    if (result === \"0x\") { return null; }\n    try {\n        const offset = getNumber(dataSlice(result, start, start + 32));\n        const length = getNumber(dataSlice(result, offset, offset + 32));\n\n        return dataSlice(result, offset + 32, offset + 32 + length);\n    } catch (error) { }\n    return null;\n}\n\nfunction numPad(value: number): Uint8Array {\n    const result = toBeArray(value);\n    if (result.length > 32) { throw new Error(\"internal; should not happen\"); }\n\n    const padded = new Uint8Array(32);\n    padded.set(result, 32 - result.length);\n    return padded;\n}\n\nfunction bytesPad(value: Uint8Array): Uint8Array {\n    if ((value.length % 32) === 0) { return value; }\n\n    const result = new Uint8Array(Math.ceil(value.length / 32) * 32);\n    result.set(value);\n    return result;\n}\n\nconst empty: Uint8Array = new Uint8Array([ ]);\n\n// ABI Encodes a series of (bytes, bytes, ...)\nfunction encodeBytes(datas: Array<BytesLike>): string {\n    const result: Array<Uint8Array> = [ ];\n\n    let byteCount = 0;\n\n    // Add place-holders for pointers as we add items\n    for (let i = 0; i < datas.length; i++) {\n        result.push(empty);\n        byteCount += 32;\n    }\n\n    for (let i = 0; i < datas.length; i++) {\n        const data = getBytes(datas[i]);\n\n        // Update the bytes offset\n        result[i] = numPad(byteCount);\n\n        // The length and padded value of data\n        result.push(numPad(data.length));\n        result.push(bytesPad(data));\n        byteCount += 32 + Math.ceil(data.length / 32) * 32;\n    }\n\n    return concat(result);\n}\n\nconst zeros = \"0x0000000000000000000000000000000000000000000000000000000000000000\"\nfunction parseOffchainLookup(data: string): CcipArgs {\n    const result: CcipArgs = {\n        sender: \"\", urls: [ ], calldata: \"\", selector: \"\", extraData: \"\", errorArgs: [ ]\n    };\n\n    assert(dataLength(data) >= 5 * 32, \"insufficient OffchainLookup data\", \"OFFCHAIN_FAULT\", {\n        reason: \"insufficient OffchainLookup data\"\n    });\n\n    const sender = dataSlice(data, 0, 32);\n    assert(dataSlice(sender, 0, 12) === dataSlice(zeros, 0, 12), \"corrupt OffchainLookup sender\", \"OFFCHAIN_FAULT\", {\n        reason: \"corrupt OffchainLookup sender\"\n    });\n    result.sender = dataSlice(sender, 12);\n\n    // Read the URLs from the response\n    try {\n        const urls: Array<string> = [];\n        const urlsOffset = getNumber(dataSlice(data, 32, 64));\n        const urlsLength = getNumber(dataSlice(data, urlsOffset, urlsOffset + 32));\n        const urlsData = dataSlice(data, urlsOffset + 32);\n        for (let u = 0; u < urlsLength; u++) {\n            const url = _parseString(urlsData, u * 32);\n            if (url == null) { throw new Error(\"abort\"); }\n            urls.push(url);\n        }\n        result.urls = urls;\n    } catch (error) {\n        assert(false, \"corrupt OffchainLookup urls\", \"OFFCHAIN_FAULT\", {\n            reason: \"corrupt OffchainLookup urls\"\n        });\n    }\n\n    // Get the CCIP calldata to forward\n    try {\n        const calldata = _parseBytes(data, 64);\n        if (calldata == null) { throw new Error(\"abort\"); }\n        result.calldata = calldata;\n    } catch (error) {\n        assert(false, \"corrupt OffchainLookup calldata\", \"OFFCHAIN_FAULT\", {\n            reason: \"corrupt OffchainLookup calldata\"\n        });\n    }\n\n    // Get the callbackSelector (bytes4)\n    assert(dataSlice(data, 100, 128) === dataSlice(zeros, 0, 28), \"corrupt OffchainLookup callbaackSelector\", \"OFFCHAIN_FAULT\", {\n        reason: \"corrupt OffchainLookup callbaackSelector\"\n    });\n    result.selector = dataSlice(data, 96, 100);\n\n    // Get the extra data to send back to the contract as context\n    try {\n        const extraData = _parseBytes(data, 128);\n        if (extraData == null) { throw new Error(\"abort\"); }\n        result.extraData = extraData;\n    } catch (error) {\n        assert(false, \"corrupt OffchainLookup extraData\", \"OFFCHAIN_FAULT\", {\n            reason: \"corrupt OffchainLookup extraData\"\n        });\n    }\n\n    result.errorArgs = \"sender,urls,calldata,selector,extraData\".split(/,/).map((k) => (<any>result)[k])\n\n    return result;\n}\n", "/**\n *  ENS is a service which allows easy-to-remember names to map to\n *  network addresses.\n *\n *  @_section: api/providers/ens-resolver:ENS Resolver  [about-ens-rsolver]\n */\n\nimport { getAddress } from \"../address/index.js\";\nimport { ZeroAddress } from \"../constants/index.js\";\nimport { Contract } from \"../contract/index.js\";\nimport { dnsEncode, namehash } from \"../hash/index.js\";\nimport {\n    hexlify, isHexString, toBeHex,\n    defineProperties, encodeBase58,\n    assert, assertArgument, isError,\n    FetchRequest\n} from \"../utils/index.js\";\n\nimport type { FunctionFragment } from \"../abi/index.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\n\nimport type { AbstractProvider, AbstractProviderPlugin } from \"./abstract-provider.js\";\nimport type { EnsPlugin } from \"./plugins-network.js\";\nimport type { Provider } from \"./provider.js\";\n\n// @TODO: This should use the fetch-data:ipfs gateway\n// Trim off the ipfs:// prefix and return the default gateway URL\nfunction getIpfsLink(link: string): string {\n    if (link.match(/^ipfs:\\/\\/ipfs\\//i)) {\n        link = link.substring(12);\n    } else if (link.match(/^ipfs:\\/\\//i)) {\n        link = link.substring(7);\n    } else {\n        assertArgument(false, \"unsupported IPFS format\", \"link\", link);\n    }\n\n    return `https:/\\/gateway.ipfs.io/ipfs/${ link }`;\n}\n\n/**\n *  The type of data found during a steip during avatar resolution.\n */\nexport type AvatarLinkageType = \"name\" | \"avatar\" | \"!avatar\" | \"url\" | \"data\" | \"ipfs\" |\n    \"erc721\" | \"erc1155\" | \"!erc721-caip\" | \"!erc1155-caip\" |\n    \"!owner\" | \"owner\" | \"!balance\" | \"balance\" |\n    \"metadata-url-base\" | \"metadata-url-expanded\" | \"metadata-url\" | \"!metadata-url\" |\n    \"!metadata\" | \"metadata\" |\n    \"!imageUrl\" | \"imageUrl-ipfs\" | \"imageUrl\" | \"!imageUrl-ipfs\";\n\n/**\n *  An individual record for each step during avatar resolution.\n */\nexport interface AvatarLinkage {\n    /**\n     *  The type of linkage.\n     */\n    type: AvatarLinkageType;\n\n    /**\n     *  The linkage value.\n     */\n    value: string;\n};\n\n/**\n *  When resolving an avatar for an ENS name, there are many\n *  steps involved, fetching metadata, validating results, et cetera.\n *\n *  Some applications may wish to analyse this data, or use this data\n *  to diagnose promblems, so an **AvatarResult** provides details of\n *  each completed step during avatar resolution.\n */\nexport interface AvatarResult {\n    /**\n     *  How the [[url]] was arrived at, resolving the many steps required\n     *  for an avatar URL.\n     */\n    linkage: Array<AvatarLinkage>;\n\n    /**\n     *  The avatar URL or null if the avatar was not set, or there was\n     *  an issue during validation (such as the address not owning the\n     *  avatar or a metadata error).\n     */\n    url: null | string;\n};\n\n/**\n *  A provider plugin super-class for processing multicoin address types.\n */\nexport abstract class MulticoinProviderPlugin implements AbstractProviderPlugin {\n    /**\n     *  The name.\n     */\n    readonly name!: string;\n\n    /**\n     *  Creates a new **MulticoinProviderPluing** for %%name%%.\n     */\n    constructor(name: string) {\n        defineProperties<MulticoinProviderPlugin>(this, { name });\n    }\n\n    connect(proivder: Provider): MulticoinProviderPlugin {\n        return this;\n    }\n\n    /**\n     *  Returns ``true`` if %%coinType%% is supported by this plugin.\n     */\n    supportsCoinType(coinType: number): boolean {\n        return false;\n    }\n\n    /**\n     *  Resolves to the encoded %%address%% for %%coinType%%.\n     */\n    async encodeAddress(coinType: number, address: string): Promise<string> {\n        throw new Error(\"unsupported coin\");\n    }\n\n    /**\n     *  Resolves to the decoded %%data%% for %%coinType%%.\n     */\n    async decodeAddress(coinType: number, data: BytesLike): Promise<string> {\n        throw new Error(\"unsupported coin\");\n    }\n}\n\nconst BasicMulticoinPluginId = \"org.ethers.plugins.provider.BasicMulticoin\";\n\n/**\n *  A **BasicMulticoinProviderPlugin** provides service for common\n *  coin types, which do not require additional libraries to encode or\n *  decode.\n */\nexport class BasicMulticoinProviderPlugin extends MulticoinProviderPlugin {\n    /**\n     *  Creates a new **BasicMulticoinProviderPlugin**.\n     */\n    constructor() {\n        super(BasicMulticoinPluginId);\n    }\n}\n\nconst matcherIpfs = new RegExp(\"^(ipfs):/\\/(.*)$\", \"i\");\nconst matchers = [\n    new RegExp(\"^(https):/\\/(.*)$\", \"i\"),\n    new RegExp(\"^(data):(.*)$\", \"i\"),\n    matcherIpfs,\n    new RegExp(\"^eip155:[0-9]+/(erc[0-9]+):(.*)$\", \"i\"),\n];\n\n/**\n *  A connected object to a resolved ENS name resolver, which can be\n *  used to query additional details.\n */\nexport class EnsResolver {\n    /**\n     *  The connected provider.\n     */\n    provider!: AbstractProvider;\n\n    /**\n     *  The address of the resolver.\n     */\n    address!: string;\n\n    /**\n     *  The name this resolver was resolved against.\n     */\n    name!: string;\n\n    // For EIP-2544 names, the ancestor that provided the resolver\n    #supports2544: null | Promise<boolean>;\n\n    #resolver: Contract;\n\n    constructor(provider: AbstractProvider, address: string, name: string) {\n        defineProperties<EnsResolver>(this, { provider, address, name });\n        this.#supports2544 = null;\n\n        this.#resolver = new Contract(address, [\n            \"function supportsInterface(bytes4) view returns (bool)\",\n            \"function resolve(bytes, bytes) view returns (bytes)\",\n            \"function addr(bytes32) view returns (address)\",\n            \"function addr(bytes32, uint) view returns (bytes)\",\n            \"function text(bytes32, string) view returns (string)\",\n            \"function contenthash(bytes32) view returns (bytes)\",\n        ], provider);\n\n    }\n\n    /**\n     *  Resolves to true if the resolver supports wildcard resolution.\n     */\n    async supportsWildcard(): Promise<boolean> {\n        if (this.#supports2544 == null) {\n            this.#supports2544 = (async () => {\n                try {\n                    return await this.#resolver.supportsInterface(\"0x9061b923\");\n                } catch (error) {\n                    // Wildcard resolvers must understand supportsInterface\n                    // and return true.\n                    if (isError(error, \"CALL_EXCEPTION\")) { return false; }\n\n                    // Let future attempts try again...\n                    this.#supports2544 = null;\n\n                    throw error;\n                }\n            })();\n        }\n\n        return await this.#supports2544;\n    }\n\n    async #fetch(funcName: string, params?: Array<any>): Promise<null | any> {\n        params = (params || []).slice();\n        const iface = this.#resolver.interface;\n\n        // The first parameters is always the nodehash\n        params.unshift(namehash(this.name))\n\n        let fragment: null | FunctionFragment = null;\n        if (await this.supportsWildcard()) {\n            fragment = iface.getFunction(funcName);\n            assert(fragment, \"missing fragment\", \"UNKNOWN_ERROR\", {\n                info: { funcName }\n            });\n\n            params = [\n                dnsEncode(this.name, 255),\n                iface.encodeFunctionData(fragment, params)\n            ];\n\n            funcName = \"resolve(bytes,bytes)\";\n        }\n\n        params.push({\n            enableCcipRead: true\n        });\n\n        try {\n            const result = await this.#resolver[funcName](...params);\n\n            if (fragment) {\n                return iface.decodeFunctionResult(fragment, result)[0];\n            }\n\n            return result;\n        } catch (error: any) {\n            if (!isError(error, \"CALL_EXCEPTION\")) { throw error; }\n        }\n\n        return null;\n    }\n\n    /**\n     *  Resolves to the address for %%coinType%% or null if the\n     *  provided %%coinType%% has not been configured.\n     */\n    async getAddress(coinType?: number): Promise<null | string> {\n        if (coinType == null) { coinType = 60; }\n        if (coinType === 60) {\n            try {\n                const result = await this.#fetch(\"addr(bytes32)\");\n\n                // No address\n                if (result == null || result === ZeroAddress) { return null; }\n\n                return result;\n            } catch (error: any) {\n                if (isError(error, \"CALL_EXCEPTION\")) { return null; }\n                throw error;\n            }\n        }\n\n        // Try decoding its EVM canonical chain as an EVM chain address first\n        if (coinType >= 0 && coinType < 0x80000000) {\n            let ethCoinType = coinType + 0x80000000;\n\n            const data = await this.#fetch(\"addr(bytes32,uint)\", [ ethCoinType ]);\n            if (isHexString(data, 20)) { return getAddress(data); }\n        }\n\n        let coinPlugin: null | MulticoinProviderPlugin = null;\n        for (const plugin of this.provider.plugins) {\n            if (!(plugin instanceof MulticoinProviderPlugin)) { continue; }\n            if (plugin.supportsCoinType(coinType)) {\n                coinPlugin = plugin;\n                break;\n            }\n        }\n\n        if (coinPlugin == null) { return null; }\n\n        // keccak256(\"addr(bytes32,uint256\")\n        const data = await this.#fetch(\"addr(bytes32,uint)\", [ coinType ]);\n\n        // No address\n        if (data == null || data === \"0x\") { return null; }\n\n        // Compute the address\n        const address = await coinPlugin.decodeAddress(coinType, data);\n\n        if (address != null) { return address; }\n\n        assert(false, `invalid coin data`, \"UNSUPPORTED_OPERATION\", {\n            operation: `getAddress(${ coinType })`,\n            info: { coinType, data }\n        });\n    }\n\n    /**\n     *  Resolves to the EIP-634 text record for %%key%%, or ``null``\n     *  if unconfigured.\n     */\n    async getText(key: string): Promise<null | string> {\n        const data = await this.#fetch(\"text(bytes32,string)\", [ key ]);\n        if (data == null || data === \"0x\") { return null; }\n        return data;\n    }\n\n    /**\n     *  Rsolves to the content-hash or ``null`` if unconfigured.\n     */\n    async getContentHash(): Promise<null | string> {\n        // keccak256(\"contenthash()\")\n        const data = await this.#fetch(\"contenthash(bytes32)\");\n\n        // No contenthash\n        if (data == null || data === \"0x\") { return null; }\n\n        // IPFS (CID: 1, Type: 70=DAG-PB, 72=libp2p-key)\n        const ipfs = data.match(/^0x(e3010170|e5010172)(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n        if (ipfs) {\n            const scheme = (ipfs[1] === \"e3010170\") ? \"ipfs\": \"ipns\";\n            const length = parseInt(ipfs[4], 16);\n            if (ipfs[5].length === length * 2) {\n                return `${ scheme }:/\\/${ encodeBase58(\"0x\" + ipfs[2])}`;\n            }\n        }\n\n        // Swarm (CID: 1, Type: swarm-manifest; hash/length hard-coded to keccak256/32)\n        const swarm = data.match(/^0xe40101fa011b20([0-9a-f]*)$/)\n        if (swarm && swarm[1].length === 64) {\n            return `bzz:/\\/${ swarm[1] }`;\n        }\n\n        assert(false, `invalid or unsupported content hash data`, \"UNSUPPORTED_OPERATION\", {\n            operation: \"getContentHash()\",\n            info: { data }\n        });\n    }\n\n    /**\n     *  Resolves to the avatar url or ``null`` if the avatar is either\n     *  unconfigured or incorrectly configured (e.g. references an NFT\n     *  not owned by the address).\n     *\n     *  If diagnosing issues with configurations, the [[_getAvatar]]\n     *  method may be useful.\n     */\n    async getAvatar(): Promise<null | string> {\n        const avatar = await this._getAvatar();\n        return avatar.url;\n    }\n\n    /**\n     *  When resolving an avatar, there are many steps involved, such\n     *  fetching metadata and possibly validating ownership of an\n     *  NFT.\n     *\n     *  This method can be used to examine each step and the value it\n     *  was working from.\n     */\n    async _getAvatar(): Promise<AvatarResult> {\n        const linkage: Array<AvatarLinkage> = [ { type: \"name\", value: this.name } ];\n        try {\n            // test data for ricmoo.eth\n            //const avatar = \"eip155:1/erc721:0x265385c7f4132228A0d54EB1A9e7460b91c0cC68/29233\";\n            const avatar = await this.getText(\"avatar\");\n            if (avatar == null) {\n                linkage.push({ type: \"!avatar\", value: \"\" });\n                return { url: null, linkage };\n            }\n            linkage.push({ type: \"avatar\", value: avatar });\n\n            for (let i = 0; i < matchers.length; i++) {\n                const match = avatar.match(matchers[i]);\n                if (match == null) { continue; }\n\n                const scheme = match[1].toLowerCase();\n\n                switch (scheme) {\n                    case \"https\":\n                    case \"data\":\n                        linkage.push({ type: \"url\", value: avatar });\n                        return { linkage, url: avatar };\n                    case \"ipfs\": {\n                        const url = getIpfsLink(avatar);\n                        linkage.push({ type: \"ipfs\", value: avatar });\n                        linkage.push({ type: \"url\", value: url });\n                        return { linkage, url };\n                    }\n\n                    case \"erc721\":\n                    case \"erc1155\": {\n                        // Depending on the ERC type, use tokenURI(uint256) or url(uint256)\n                        const selector = (scheme === \"erc721\") ? \"tokenURI(uint256)\": \"uri(uint256)\";\n                        linkage.push({ type: scheme, value: avatar });\n\n                        // The owner of this name\n                        const owner = await this.getAddress();\n                        if (owner == null) {\n                            linkage.push({ type: \"!owner\", value: \"\" });\n                            return { url: null, linkage };\n                        }\n\n                        const comps = (match[2] || \"\").split(\"/\");\n                        if (comps.length !== 2) {\n                            linkage.push({ type: <any>`!${ scheme }caip`, value: (match[2] || \"\") });\n                            return { url: null, linkage };\n                        }\n\n                        const tokenId = comps[1];\n\n                        const contract = new Contract(comps[0], [\n                            // ERC-721\n                            \"function tokenURI(uint) view returns (string)\",\n                            \"function ownerOf(uint) view returns (address)\",\n\n                            // ERC-1155\n                            \"function uri(uint) view returns (string)\",\n                            \"function balanceOf(address, uint256) view returns (uint)\"\n                        ], this.provider);\n\n                        // Check that this account owns the token\n                        if (scheme === \"erc721\") {\n                            const tokenOwner = await contract.ownerOf(tokenId);\n\n                            if (owner !== tokenOwner) {\n                                linkage.push({ type: \"!owner\", value: tokenOwner });\n                                return { url: null, linkage };\n                            }\n                            linkage.push({ type: \"owner\", value: tokenOwner });\n\n                        } else if (scheme === \"erc1155\") {\n                            const balance = await contract.balanceOf(owner, tokenId);\n                            if (!balance) {\n                                linkage.push({ type: \"!balance\", value: \"0\" });\n                                return { url: null, linkage };\n                            }\n                            linkage.push({ type: \"balance\", value: balance.toString() });\n                        }\n\n                        // Call the token contract for the metadata URL\n                        let metadataUrl = await contract[selector](tokenId);\n                        if (metadataUrl == null || metadataUrl === \"0x\") {\n                            linkage.push({ type: \"!metadata-url\", value: \"\" });\n                            return { url: null, linkage };\n                        }\n\n                        linkage.push({ type: \"metadata-url-base\", value: metadataUrl });\n\n                        // ERC-1155 allows a generic {id} in the URL\n                        if (scheme === \"erc1155\") {\n                            metadataUrl = metadataUrl.replace(\"{id}\", toBeHex(tokenId, 32).substring(2));\n                            linkage.push({ type: \"metadata-url-expanded\", value: metadataUrl });\n                        }\n\n                        // Transform IPFS metadata links\n                        if (metadataUrl.match(/^ipfs:/i)) {\n                            metadataUrl = getIpfsLink(metadataUrl);\n                        }\n                        linkage.push({ type: \"metadata-url\", value: metadataUrl });\n\n                        // Get the token metadata\n                        let metadata: any = { };\n                        const response = await (new FetchRequest(metadataUrl)).send();\n                        response.assertOk();\n\n                        try {\n                            metadata = response.bodyJson;\n                        } catch (error) {\n                            try {\n                                linkage.push({ type: \"!metadata\", value: response.bodyText });\n                            } catch (error) {\n                                const bytes = response.body;\n                                if (bytes) {\n                                    linkage.push({ type: \"!metadata\", value: hexlify(bytes) });\n                                }\n                                return { url: null, linkage };\n                            }\n                            return { url: null, linkage };\n                        }\n\n                        if (!metadata) {\n                            linkage.push({ type: \"!metadata\", value: \"\" });\n                            return { url: null, linkage };\n                        }\n\n                        linkage.push({ type: \"metadata\", value: JSON.stringify(metadata) });\n\n                        // Pull the image URL out\n                        let imageUrl = metadata.image;\n                        if (typeof(imageUrl) !== \"string\") {\n                            linkage.push({ type: \"!imageUrl\", value: \"\" });\n                            return { url: null, linkage };\n                        }\n\n                        if (imageUrl.match(/^(https:\\/\\/|data:)/i)) {\n                            // Allow\n                        } else {\n                            // Transform IPFS link to gateway\n                            const ipfs = imageUrl.match(matcherIpfs);\n                            if (ipfs == null) {\n                                linkage.push({ type: \"!imageUrl-ipfs\", value: imageUrl });\n                                return { url: null, linkage };\n                            }\n\n                            linkage.push({ type: \"imageUrl-ipfs\", value: imageUrl });\n                            imageUrl = getIpfsLink(imageUrl);\n                        }\n\n                        linkage.push({ type: \"url\", value: imageUrl });\n\n                        return { linkage, url: imageUrl };\n                    }\n                }\n            }\n        } catch (error) { }\n\n        return { linkage, url: null };\n    }\n\n    static async getEnsAddress(provider: Provider): Promise<string> {\n        const network = await provider.getNetwork();\n\n        const ensPlugin = network.getPlugin<EnsPlugin>(\"org.ethers.plugins.network.Ens\");\n\n        // No ENS...\n        assert(ensPlugin, \"network does not support ENS\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"getEnsAddress\", info: { network } });\n\n        return ensPlugin.address;\n    }\n\n    static async #getResolver(provider: Provider, name: string): Promise<null | string> {\n        const ensAddr = await EnsResolver.getEnsAddress(provider);\n\n        try {\n            const contract = new Contract(ensAddr, [\n                \"function resolver(bytes32) view returns (address)\"\n            ], provider);\n\n            const addr = await contract.resolver(namehash(name), {\n                enableCcipRead: true\n            });\n\n            if (addr === ZeroAddress) { return null; }\n            return addr;\n\n        } catch (error) {\n            // ENS registry cannot throw errors on resolver(bytes32),\n            // so probably a link error\n            throw error;\n        }\n\n        return null;\n    }\n\n    /**\n     *  Resolve to the ENS resolver for %%name%% using %%provider%% or\n     *  ``null`` if unconfigured.\n     */\n    static async fromName(provider: AbstractProvider, name: string): Promise<null | EnsResolver> {\n\n        let currentName = name;\n        while (true) {\n            if (currentName === \"\" || currentName === \".\") { return null; }\n\n            // Optimization since the eth node cannot change and does\n            // not have a wildcard resolver\n            if (name !== \"eth\" && currentName === \"eth\") { return null; }\n\n            // Check the current node for a resolver\n            const addr = await EnsResolver.#getResolver(provider, currentName);\n\n            // Found a resolver!\n            if (addr != null) {\n                const resolver = new EnsResolver(provider, addr, name);\n\n                // Legacy resolver found, using EIP-2544 so it isn't safe to use\n                if (currentName !== name && !(await resolver.supportsWildcard())) { return null; }\n\n                return resolver;\n            }\n\n            // Get the parent node\n            currentName = currentName.split(\".\").slice(1).join(\".\");\n        }\n    }\n}\n", "/**\n *  @_ignore\n */\nimport { getAddress, getCreateAddress } from \"../address/index.js\";\nimport { Signature } from \"../crypto/index.js\"\nimport { accessListify } from \"../transaction/index.js\";\nimport {\n    getBigInt, getNumber, hexlify, isHexString, zeroPadValue,\n    assert, assertArgument\n} from \"../utils/index.js\";\n\nimport type { SignatureLike } from \"../crypto/index.js\"\nimport type {\n    BlockParams, LogParams,\n    TransactionReceiptParams, TransactionResponseParams,\n} from \"./formatting.js\";\n\n\nconst BN_0 = BigInt(0);\n\nexport type FormatFunc = (value: any) => any;\n\nexport function allowNull(format: FormatFunc, nullValue?: any): FormatFunc {\n    return (function(value: any) {\n        if (value == null) { return nullValue; }\n        return format(value);\n    });\n}\n\nexport function arrayOf(format: FormatFunc, allowNull?: boolean): FormatFunc {\n    return ((array: any) => {\n        if (allowNull && array == null) { return null; }\n        if (!Array.isArray(array)) { throw new Error(\"not an array\"); }\n        return array.map((i) => format(i));\n    });\n}\n\n// Requires an object which matches a fleet of other formatters\n// Any FormatFunc may return `undefined` to have the value omitted\n// from the result object. Calls preserve `this`.\nexport function object(format: Record<string, FormatFunc>, altNames?: Record<string, Array<string>>): FormatFunc {\n    return ((value: any) => {\n        const result: any = { };\n        for (const key in format) {\n            let srcKey = key;\n            if (altNames && key in altNames && !(srcKey in value)) {\n                for (const altKey of altNames[key]) {\n                    if (altKey in value) {\n                        srcKey = altKey;\n                        break;\n                    }\n                }\n            }\n\n            try {\n                const nv = format[key](value[srcKey]);\n                if (nv !== undefined) { result[key] = nv; }\n            } catch (error) {\n                const message = (error instanceof Error) ? error.message: \"not-an-error\";\n                assert(false, `invalid value for value.${ key } (${ message })`, \"BAD_DATA\", { value })\n            }\n        }\n        return result;\n    });\n}\n\nexport function formatBoolean(value: any): boolean {\n    switch (value) {\n        case true: case \"true\":\n            return true;\n        case false: case \"false\":\n            return false;\n    }\n    assertArgument(false, `invalid boolean; ${ JSON.stringify(value) }`, \"value\", value);\n}\n\nexport function formatData(value: string): string {\n    assertArgument(isHexString(value, true), \"invalid data\", \"value\", value);\n    return value;\n}\n\nexport function formatHash(value: any): string {\n    assertArgument(isHexString(value, 32), \"invalid hash\", \"value\", value);\n    return value;\n}\n\nexport function formatUint256(value: any): string {\n    if (!isHexString(value)) {\n        throw new Error(\"invalid uint256\");\n    }\n    return zeroPadValue(value, 32);\n}\n\nconst _formatLog = object({\n    address: getAddress,\n    blockHash: formatHash,\n    blockNumber: getNumber,\n    data: formatData,\n    index: getNumber,\n    removed: allowNull(formatBoolean, false),\n    topics: arrayOf(formatHash),\n    transactionHash: formatHash,\n    transactionIndex: getNumber,\n}, {\n    index: [ \"logIndex\" ]\n});\n\nexport function formatLog(value: any): LogParams {\n    return _formatLog(value);\n}\n\nconst _formatBlock = object({\n    hash: allowNull(formatHash),\n    parentHash: formatHash,\n    parentBeaconBlockRoot: allowNull(formatHash, null),\n\n    number: getNumber,\n\n    timestamp: getNumber,\n    nonce: allowNull(formatData),\n    difficulty: getBigInt,\n\n    gasLimit: getBigInt,\n    gasUsed: getBigInt,\n\n    stateRoot: allowNull(formatHash, null),\n    receiptsRoot: allowNull(formatHash, null),\n\n    blobGasUsed: allowNull(getBigInt, null),\n    excessBlobGas: allowNull(getBigInt, null),\n\n    miner: allowNull(getAddress),\n    prevRandao: allowNull(formatHash, null),\n    extraData: formatData,\n\n    baseFeePerGas: allowNull(getBigInt)\n}, {\n    prevRandao: [ \"mixHash\" ]\n});\n\nexport function formatBlock(value: any): BlockParams {\n    const result = _formatBlock(value);\n    result.transactions = value.transactions.map((tx: string | TransactionResponseParams) => {\n        if (typeof(tx) === \"string\") { return tx; }\n        return formatTransactionResponse(tx);\n    });\n    return result;\n}\n\nconst _formatReceiptLog = object({\n    transactionIndex: getNumber,\n    blockNumber: getNumber,\n    transactionHash: formatHash,\n    address: getAddress,\n    topics: arrayOf(formatHash),\n    data: formatData,\n    index: getNumber,\n    blockHash: formatHash,\n}, {\n    index: [ \"logIndex\" ]\n});\n\nexport function formatReceiptLog(value: any): LogParams {\n    return _formatReceiptLog(value);\n}\n\nconst _formatTransactionReceipt = object({\n    to: allowNull(getAddress, null),\n    from: allowNull(getAddress, null),\n    contractAddress: allowNull(getAddress, null),\n    // should be allowNull(hash), but broken-EIP-658 support is handled in receipt\n    index: getNumber,\n    root: allowNull(hexlify),\n    gasUsed: getBigInt,\n    blobGasUsed: allowNull(getBigInt, null),\n    logsBloom: allowNull(formatData),\n    blockHash: formatHash,\n    hash: formatHash,\n    logs: arrayOf(formatReceiptLog),\n    blockNumber: getNumber,\n    //confirmations: allowNull(getNumber, null),\n    cumulativeGasUsed: getBigInt,\n    effectiveGasPrice: allowNull(getBigInt),\n    blobGasPrice: allowNull(getBigInt, null),\n    status: allowNull(getNumber),\n    type: allowNull(getNumber, 0)\n}, {\n    effectiveGasPrice: [ \"gasPrice\" ],\n    hash: [ \"transactionHash\" ],\n    index: [ \"transactionIndex\" ],\n});\n\nexport function formatTransactionReceipt(value: any): TransactionReceiptParams {\n    return _formatTransactionReceipt(value);\n}\n\nexport function formatTransactionResponse(value: any): TransactionResponseParams {\n\n    // Some clients (TestRPC) do strange things like return 0x0 for the\n    // 0 address; correct this to be a real address\n    if (value.to && getBigInt(value.to) === BN_0) {\n        value.to = \"0x0000000000000000000000000000000000000000\";\n    }\n\n    const result = object({\n        hash: formatHash,\n\n        // Some nodes do not return this, usually test nodes (like Ganache)\n        index: allowNull(getNumber, undefined),\n\n        type: (value: any) => {\n            if (value === \"0x\" || value == null) { return 0; }\n            return getNumber(value);\n        },\n        accessList: allowNull(accessListify, null),\n        blobVersionedHashes: allowNull(arrayOf(formatHash, true), null),\n\n        authorizationList: allowNull(arrayOf((v: any) => {\n            let sig: SignatureLike;\n            if (v.signature) {\n                sig = v.signature;\n\n            } else {\n                let yParity = v.yParity;\n                if (yParity === \"0x1b\") {\n                    yParity = 0;\n                } else if (yParity === \"0x1c\") {\n                    yParity = 1;\n                }\n                sig = Object.assign({ }, v, { yParity });\n            }\n\n            return {\n                address: getAddress(v.address),\n                chainId: getBigInt(v.chainId),\n                nonce: getBigInt(v.nonce),\n                signature: Signature.from(sig)\n            };\n        }, false), null),\n\n        blockHash: allowNull(formatHash, null),\n        blockNumber: allowNull(getNumber, null),\n        transactionIndex: allowNull(getNumber, null),\n\n        from: getAddress,\n\n        // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas) must be set\n        gasPrice: allowNull(getBigInt),\n        maxPriorityFeePerGas: allowNull(getBigInt),\n        maxFeePerGas: allowNull(getBigInt),\n        maxFeePerBlobGas: allowNull(getBigInt, null),\n\n        gasLimit: getBigInt,\n        to: allowNull(getAddress, null),\n        value: getBigInt,\n        nonce: getNumber,\n        data: formatData,\n\n        creates: allowNull(getAddress, null),\n\n        chainId: allowNull(getBigInt, null)\n    }, {\n        data: [ \"input\" ],\n        gasLimit: [ \"gas\" ],\n        index: [ \"transactionIndex\" ]\n    })(value);\n\n    // If to and creates are empty, populate the creates from the value\n    if (result.to == null && result.creates == null) {\n        result.creates = getCreateAddress(result);\n    }\n\n    // @TODO: Check fee data\n\n    // Add an access list to supported transaction types\n    if ((value.type === 1 || value.type === 2) && value.accessList == null) {\n        result.accessList = [ ];\n    }\n\n    // Compute the signature\n    if (value.signature) {\n        result.signature = Signature.from(value.signature);\n    } else {\n        result.signature = Signature.from(value);\n    }\n\n    // Some backends omit ChainId on legacy transactions, but we can compute it\n    if (result.chainId == null) {\n        const chainId = result.signature.legacyChainId;\n        if (chainId != null) { result.chainId = chainId; }\n    }\n\n\n    // @TODO: check chainID\n    /*\n    if (value.chainId != null) {\n        let chainId = value.chainId;\n\n        if (isHexString(chainId)) {\n            chainId = BigNumber.from(chainId).toNumber();\n        }\n\n        result.chainId = chainId;\n\n    } else {\n        let chainId = value.networkId;\n\n        // geth-etc returns chainId\n        if (chainId == null && result.v == null) {\n            chainId = value.chainId;\n        }\n\n        if (isHexString(chainId)) {\n            chainId = BigNumber.from(chainId).toNumber();\n        }\n\n        if (typeof(chainId) !== \"number\" && result.v != null) {\n            chainId = (result.v - 35) / 2;\n            if (chainId < 0) { chainId = 0; }\n            chainId = parseInt(chainId);\n        }\n\n        if (typeof(chainId) !== \"number\") { chainId = 0; }\n\n        result.chainId = chainId;\n    }\n    */\n\n    // 0x0000... should actually be null\n    if (result.blockHash && getBigInt(result.blockHash) === BN_0) {\n        result.blockHash = null;\n    }\n\n    return result;\n}\n", "/**\n *  A **Network** encapsulates the various properties required to\n *  interact with a specific chain.\n *\n *  @_subsection: api/providers:Networks  [networks]\n */\n\nimport { accessListify } from \"../transaction/index.js\";\nimport { getBigInt, assert, assertArgument } from \"../utils/index.js\";\n\nimport {\n    EnsPlugin, FetchUrlFeeDataNetworkPlugin, GasCostPlugin\n} from \"./plugins-network.js\";\n\nimport type { BigNumberish } from \"../utils/index.js\";\nimport type { TransactionLike } from \"../transaction/index.js\";\n\nimport type { NetworkPlugin } from \"./plugins-network.js\";\n\n\n/**\n *  A Networkish can be used to allude to a Network, by specifing:\n *  - a [[Network]] object\n *  - a well-known (or registered) network name\n *  - a well-known (or registered) chain ID\n *  - an object with sufficient details to describe a network\n */\nexport type Networkish = Network | number | bigint | string | {\n    name?: string,\n    chainId?: number,\n    //layerOneConnection?: Provider,\n    ensAddress?: string,\n    ensNetwork?: number\n};\n\n\n\n\n/* * * *\n// Networks which operation against an L2 can use this plugin to\n// specify how to access L1, for the purpose of resolving ENS,\n// for example.\nexport class LayerOneConnectionPlugin extends NetworkPlugin {\n    readonly provider!: Provider;\n// @TODO: Rename to ChainAccess and allow for connecting to any chain\n    constructor(provider: Provider) {\n        super(\"org.ethers.plugins.layer-one-connection\");\n        defineProperties<LayerOneConnectionPlugin>(this, { provider });\n    }\n\n    clone(): LayerOneConnectionPlugin {\n        return new LayerOneConnectionPlugin(this.provider);\n    }\n}\n*/\n\n\nconst Networks: Map<string | bigint, () => Network> = new Map();\n\n\n/**\n *  A **Network** provides access to a chain's properties and allows\n *  for plug-ins to extend functionality.\n */\nexport class Network {\n    #name: string;\n    #chainId: bigint;\n\n    #plugins: Map<string, NetworkPlugin>;\n\n    /**\n     *  Creates a new **Network** for %%name%% and %%chainId%%.\n     */\n    constructor(name: string, chainId: BigNumberish) {\n        this.#name = name;\n        this.#chainId = getBigInt(chainId);\n        this.#plugins = new Map();\n    }\n\n    /**\n     *  Returns a JSON-compatible representation of a Network.\n     */\n    toJSON(): any {\n        return { name: this.name, chainId: String(this.chainId) };\n    }\n\n    /**\n     *  The network common name.\n     *\n     *  This is the canonical name, as networks migh have multiple\n     *  names.\n     */\n    get name(): string { return this.#name; }\n    set name(value: string) { this.#name =  value; }\n\n    /**\n     *  The network chain ID.\n     */\n    get chainId(): bigint { return this.#chainId; }\n    set chainId(value: BigNumberish) { this.#chainId = getBigInt(value, \"chainId\"); }\n\n    /**\n     *  Returns true if %%other%% matches this network. Any chain ID\n     *  must match, and if no chain ID is present, the name must match.\n     *\n     *  This method does not currently check for additional properties,\n     *  such as ENS address or plug-in compatibility.\n     */\n    matches(other: Networkish): boolean {\n        if (other == null) { return false; }\n\n        if (typeof(other) === \"string\") {\n            try {\n                return (this.chainId === getBigInt(other));\n            } catch (error) { }\n            return (this.name === other);\n        }\n\n        if (typeof(other) === \"number\" || typeof(other) === \"bigint\") {\n            try {\n                return (this.chainId === getBigInt(other));\n            } catch (error) { }\n            return false;\n        }\n\n        if (typeof(other) === \"object\") {\n            if (other.chainId != null) {\n                try {\n                    return (this.chainId === getBigInt(other.chainId));\n                } catch (error) { }\n                return false;\n            }\n            if (other.name != null) {\n                return (this.name === other.name);\n            }\n            return false;\n        }\n\n        return false;\n    }\n\n    /**\n     *  Returns the list of plugins currently attached to this Network.\n     */\n    get plugins(): Array<NetworkPlugin> {\n        return Array.from(this.#plugins.values());\n    }\n\n    /**\n     *  Attach a new %%plugin%% to this Network. The network name\n     *  must be unique, excluding any fragment.\n     */\n    attachPlugin(plugin: NetworkPlugin): this {\n        if (this.#plugins.get(plugin.name)) {\n            throw new Error(`cannot replace existing plugin: ${ plugin.name } `);\n        }\n        this.#plugins.set(plugin.name, plugin.clone());\n        return this;\n    }\n\n    /**\n     *  Return the plugin, if any, matching %%name%% exactly. Plugins\n     *  with fragments will not be returned unless %%name%% includes\n     *  a fragment.\n     */\n    getPlugin<T extends NetworkPlugin = NetworkPlugin>(name: string): null | T {\n        return <T>(this.#plugins.get(name)) || null;\n    }\n\n    /**\n     *  Gets a list of all plugins that match %%name%%, with otr without\n     *  a fragment.\n     */\n    getPlugins<T extends NetworkPlugin = NetworkPlugin>(basename: string): Array<T> {\n        return <Array<T>>(this.plugins.filter((p) => (p.name.split(\"#\")[0] === basename)));\n    }\n\n    /**\n     *  Create a copy of this Network.\n     */\n    clone(): Network {\n        const clone = new Network(this.name, this.chainId);\n        this.plugins.forEach((plugin) => {\n            clone.attachPlugin(plugin.clone());\n        });\n        return clone;\n    }\n\n    /**\n     *  Compute the intrinsic gas required for a transaction.\n     *\n     *  A GasCostPlugin can be attached to override the default\n     *  values.\n     */\n    computeIntrinsicGas(tx: TransactionLike): number {\n        const costs = this.getPlugin<GasCostPlugin>(\"org.ethers.plugins.network.GasCost\") || (new GasCostPlugin());\n\n        let gas = costs.txBase;\n        if (tx.to == null) { gas += costs.txCreate; }\n        if (tx.data) {\n            for (let i = 2; i < tx.data.length; i += 2) {\n                if (tx.data.substring(i, i + 2) === \"00\") {\n                    gas += costs.txDataZero;\n                } else {\n                    gas += costs.txDataNonzero;\n                }\n            }\n        }\n\n        if (tx.accessList) {\n            const accessList = accessListify(tx.accessList);\n            for (const addr in accessList) {\n                gas += costs.txAccessListAddress + costs.txAccessListStorageKey * accessList[addr].storageKeys.length;\n            }\n        }\n\n        return gas;\n    }\n\n    /**\n     *  Returns a new Network for the %%network%% name or chainId.\n     */\n    static from(network?: Networkish): Network {\n        injectCommonNetworks();\n\n        // Default network\n        if (network == null) { return Network.from(\"mainnet\"); }\n\n        // Canonical name or chain ID\n        if (typeof(network) === \"number\") { network = BigInt(network); }\n        if (typeof(network) === \"string\" || typeof(network) === \"bigint\") {\n            const networkFunc = Networks.get(network);\n            if (networkFunc) { return networkFunc(); }\n            if (typeof(network) === \"bigint\") {\n                return new Network(\"unknown\", network);\n            }\n\n            assertArgument(false, \"unknown network\", \"network\", network);\n        }\n\n        // Clonable with network-like abilities\n        if (typeof((<Network>network).clone) === \"function\") {\n            const clone = (<Network>network).clone();\n            //if (typeof(network.name) !== \"string\" || typeof(network.chainId) !== \"number\") {\n            //}\n            return clone;\n        }\n\n        // Networkish\n        if (typeof(network) === \"object\") {\n            assertArgument(typeof(network.name) === \"string\" && typeof(network.chainId) === \"number\",\n                \"invalid network object name or chainId\", \"network\", network);\n\n            const custom = new Network(<string>(network.name), <number>(network.chainId));\n\n            if ((<any>network).ensAddress || (<any>network).ensNetwork != null) {\n                custom.attachPlugin(new EnsPlugin((<any>network).ensAddress, (<any>network).ensNetwork));\n            }\n\n            //if ((<any>network).layerOneConnection) {\n            //    custom.attachPlugin(new LayerOneConnectionPlugin((<any>network).layerOneConnection));\n            //}\n\n            return custom;\n        }\n\n        assertArgument(false, \"invalid network\", \"network\", network);\n    }\n\n    /**\n     *  Register %%nameOrChainId%% with a function which returns\n     *  an instance of a Network representing that chain.\n     */\n    static register(nameOrChainId: string | number | bigint, networkFunc: () => Network): void {\n        if (typeof(nameOrChainId) === \"number\") { nameOrChainId = BigInt(nameOrChainId); }\n        const existing = Networks.get(nameOrChainId);\n        if (existing) {\n            assertArgument(false, `conflicting network for ${ JSON.stringify(existing.name) }`, \"nameOrChainId\", nameOrChainId);\n        }\n        Networks.set(nameOrChainId, networkFunc);\n    }\n}\n\n\ntype Options = {\n    ensNetwork?: number;\n    altNames?: Array<string>;\n    plugins?: Array<NetworkPlugin>;\n};\n\n// We don't want to bring in formatUnits because it is backed by\n// FixedNumber and we want to keep Networks tiny. The values\n// included by the Gas Stations are also IEEE 754 with lots of\n// rounding issues and exceed the strict checks formatUnits has.\nfunction parseUnits(_value: number | string, decimals: number): bigint {\n    const value = String(_value);\n    if (!value.match(/^[0-9.]+$/)) {\n        throw new Error(`invalid gwei value: ${ _value }`);\n    }\n\n    // Break into [ whole, fraction ]\n    const comps = value.split(\".\");\n    if (comps.length === 1) { comps.push(\"\"); }\n\n    // More than 1 decimal point or too many fractional positions\n    if (comps.length !== 2) {\n        throw new Error(`invalid gwei value: ${ _value }`);\n    }\n\n    // Pad the fraction to 9 decimalplaces\n    while (comps[1].length < decimals) { comps[1] += \"0\"; }\n\n    // Too many decimals and some non-zero ending, take the ceiling\n    if (comps[1].length > 9) {\n        let frac = BigInt(comps[1].substring(0, 9));\n        if (!comps[1].substring(9).match(/^0+$/)) { frac++; }\n        comps[1] = frac.toString();\n    }\n\n    return BigInt(comps[0] + comps[1]);\n}\n\n// Used by Polygon to use a gas station for fee data\nfunction getGasStationPlugin(url: string) {\n    return new FetchUrlFeeDataNetworkPlugin(url, async (fetchFeeData, provider, request) => {\n\n        // Prevent Cloudflare from blocking our request in node.js\n        request.setHeader(\"User-Agent\", \"ethers\");\n\n        let response;\n        try {\n            const [ _response, _feeData ] = await Promise.all([\n                request.send(), fetchFeeData()\n            ]);\n            response = _response;\n            const payload = response.bodyJson.standard;\n            const feeData = {\n                gasPrice: _feeData.gasPrice,\n                maxFeePerGas: parseUnits(payload.maxFee, 9),\n                maxPriorityFeePerGas: parseUnits(payload.maxPriorityFee, 9),\n            };\n            return feeData;\n        } catch (error: any) {\n            assert(false, `error encountered with polygon gas station (${ JSON.stringify(request.url) })`, \"SERVER_ERROR\", { request, response, error });\n        }\n    });\n}\n\n// See: https://chainlist.org\nlet injected = false;\nfunction injectCommonNetworks(): void {\n    if (injected) { return; }\n    injected = true;\n\n    /// Register popular Ethereum networks\n    function registerEth(name: string, chainId: number, options: Options): void {\n        const func = function() {\n            const network = new Network(name, chainId);\n\n            // We use 0 to disable ENS\n            if (options.ensNetwork != null) {\n                network.attachPlugin(new EnsPlugin(null, options.ensNetwork));\n            }\n\n            network.attachPlugin(new GasCostPlugin());\n\n            (options.plugins || []).forEach((plugin) => {\n                network.attachPlugin(plugin);\n            });\n\n            return network;\n        };\n\n        // Register the network by name and chain ID\n        Network.register(name, func);\n        Network.register(chainId, func);\n\n        if (options.altNames) {\n            options.altNames.forEach((name) => {\n                Network.register(name, func);\n            });\n        }\n    }\n\n    registerEth(\"mainnet\", 1, { ensNetwork: 1, altNames: [ \"homestead\" ] });\n    registerEth(\"ropsten\", 3, { ensNetwork: 3 });\n    registerEth(\"rinkeby\", 4, { ensNetwork: 4 });\n    registerEth(\"goerli\", 5, { ensNetwork: 5 });\n    registerEth(\"kovan\", 42, { ensNetwork: 42 });\n    registerEth(\"sepolia\", 11155111, { ensNetwork: 11155111 });\n    registerEth(\"holesky\", 17000, { ensNetwork: 17000 });\n\n    registerEth(\"classic\", 61, { });\n    registerEth(\"classicKotti\", 6, { });\n\n    registerEth(\"arbitrum\", 42161, {\n        ensNetwork: 1,\n    });\n    registerEth(\"arbitrum-goerli\", 421613, { });\n    registerEth(\"arbitrum-sepolia\", 421614, { });\n\n    registerEth(\"base\", 8453, { ensNetwork: 1 });\n    registerEth(\"base-goerli\", 84531, { });\n    registerEth(\"base-sepolia\", 84532, { });\n\n    registerEth(\"bnb\", 56, { ensNetwork: 1 });\n    registerEth(\"bnbt\", 97, { });\n\n    registerEth(\"linea\", 59144, { ensNetwork: 1 });\n    registerEth(\"linea-goerli\", 59140, { });\n    registerEth(\"linea-sepolia\", 59141, { });\n\n    registerEth(\"matic\", 137, {\n        ensNetwork: 1,\n        plugins: [\n            getGasStationPlugin(\"https:/\\/gasstation.polygon.technology/v2\")\n        ]\n    });\n    registerEth(\"matic-amoy\", 80002, { });\n    registerEth(\"matic-mumbai\", 80001, {\n        altNames: [ \"maticMumbai\", \"maticmum\" ],  // @TODO: Future remove these alts\n        plugins: [\n            getGasStationPlugin(\"https:/\\/gasstation-testnet.polygon.technology/v2\")\n        ]\n    });\n\n    registerEth(\"optimism\", 10, {\n        ensNetwork: 1,\n        plugins: [ ]\n    });\n    registerEth(\"optimism-goerli\", 420, { });\n    registerEth(\"optimism-sepolia\", 11155420, { });\n\n    registerEth(\"xdai\", 100, { ensNetwork: 1 });\n}\n", "import { defineProperties } from \"../utils/properties.js\";\n\nimport { assertArgument } from \"../utils/index.js\";\n\nimport type { FeeData, Provider } from \"./provider.js\";\nimport type { FetchRequest } from \"../utils/fetch.js\";\n\n\nconst EnsAddress = \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\";\n\n/**\n *  A **NetworkPlugin** provides additional functionality on a [[Network]].\n */\nexport class NetworkPlugin {\n    /**\n     *  The name of the plugin.\n     *\n     *  It is recommended to use reverse-domain-notation, which permits\n     *  unique names with a known authority as well as hierarchal entries.\n     */\n    readonly name!: string;\n\n    /**\n     *  Creates a new **NetworkPlugin**.\n     */\n    constructor(name: string) {\n        defineProperties<NetworkPlugin>(this, { name });\n    }\n\n    /**\n     *  Creates a copy of this plugin.\n     */\n    clone(): NetworkPlugin {\n        return new NetworkPlugin(this.name);\n    }\n\n//    validate(network: Network): NetworkPlugin {\n//        return this;\n//    }\n}\n\n\n/**\n *  The gas cost parameters for a [[GasCostPlugin]].\n */\nexport type GasCostParameters = {\n    /**\n     *  The transactions base fee.\n     */\n    txBase?: number;\n\n    /**\n     *  The fee for creating a new account.\n     */\n    txCreate?: number;\n\n    /**\n     *  The fee per zero-byte in the data.\n     */\n    txDataZero?: number;\n\n    /**\n     *  The fee per non-zero-byte in the data.\n     */\n    txDataNonzero?: number;\n\n    /**\n     *  The fee per storage key in the [[link-eip-2930]] access list.\n     */\n    txAccessListStorageKey?: number;\n\n    /**\n     *  The fee per address in the [[link-eip-2930]] access list.\n     */\n    txAccessListAddress?: number;\n};\n\n/**\n *  A **GasCostPlugin** allows a network to provide alternative values when\n *  computing the intrinsic gas required for a transaction.\n */\nexport class GasCostPlugin extends NetworkPlugin implements GasCostParameters {\n    /**\n     *  The block number to treat these values as valid from.\n     *\n     *  This allows a hardfork to have updated values included as well as\n     *  mulutiple hardforks to be supported.\n     */\n    readonly effectiveBlock!: number;\n\n    /**\n     *  The transactions base fee.\n     */\n    readonly txBase!: number;\n\n    /**\n     *  The fee for creating a new account.\n     */\n    readonly txCreate!: number;\n\n    /**\n     *  The fee per zero-byte in the data.\n     */\n    readonly txDataZero!: number;\n\n    /**\n     *  The fee per non-zero-byte in the data.\n     */\n    readonly txDataNonzero!: number;\n\n    /**\n     *  The fee per storage key in the [[link-eip-2930]] access list.\n     */\n    readonly txAccessListStorageKey!: number;\n\n    /**\n     *  The fee per address in the [[link-eip-2930]] access list.\n     */\n    readonly txAccessListAddress!: number;\n\n\n    /**\n     *  Creates a new GasCostPlugin from %%effectiveBlock%% until the\n     *  latest block or another GasCostPlugin supercedes that block number,\n     *  with the associated %%costs%%.\n     */\n    constructor(effectiveBlock?: number, costs?: GasCostParameters) {\n        if (effectiveBlock == null) { effectiveBlock = 0; }\n        super(`org.ethers.network.plugins.GasCost#${ (effectiveBlock || 0) }`);\n\n        const props: Record<string, number> = { effectiveBlock };\n        function set(name: keyof GasCostParameters, nullish: number): void {\n            let value = (costs || { })[name];\n            if (value == null) { value = nullish; }\n            assertArgument(typeof(value) === \"number\", `invalud value for ${ name }`, \"costs\", costs);\n            props[name] = value;\n        }\n\n        set(\"txBase\", 21000);\n        set(\"txCreate\", 32000);\n        set(\"txDataZero\", 4);\n        set(\"txDataNonzero\", 16);\n        set(\"txAccessListStorageKey\", 1900);\n        set(\"txAccessListAddress\", 2400);\n\n        defineProperties<GasCostPlugin>(this, props);\n    }\n\n    clone(): GasCostPlugin {\n        return new GasCostPlugin(this.effectiveBlock, this);\n    }\n}\n\n/**\n *  An **EnsPlugin** allows a [[Network]] to specify the ENS Registry\n *  Contract address and the target network to use when using that\n *  contract.\n *\n *  Various testnets have their own instance of the contract to use, but\n *  in general, the mainnet instance supports multi-chain addresses and\n *  should be used.\n */\nexport class EnsPlugin extends NetworkPlugin {\n\n    /**\n     *  The ENS Registrty Contract address.\n     */\n    readonly address!: string;\n\n    /**\n     *  The chain ID that the ENS contract lives on.\n     */\n    readonly targetNetwork!: number;\n\n    /**\n     *  Creates a new **EnsPlugin** connected to %%address%% on the\n     *  %%targetNetwork%%. The default ENS address and mainnet is used\n     *  if unspecified.\n     */\n    constructor(address?: null | string, targetNetwork?: null | number) {\n        super(\"org.ethers.plugins.network.Ens\");\n        defineProperties<EnsPlugin>(this, {\n            address: (address || EnsAddress),\n            targetNetwork: ((targetNetwork == null) ? 1: targetNetwork)\n        });\n    }\n\n    clone(): EnsPlugin {\n        return new EnsPlugin(this.address, this.targetNetwork);\n    }\n}\n\n/**\n *  A **FeeDataNetworkPlugin** allows a network to provide and alternate\n *  means to specify its fee data.\n *\n *  For example, a network which does not support [[link-eip-1559]] may\n *  choose to use a Gas Station site to approximate the gas price.\n */\nexport class FeeDataNetworkPlugin extends NetworkPlugin {\n    readonly #feeDataFunc: (provider: Provider) => Promise<FeeData>;\n\n    /**\n     *  The fee data function provided to the constructor.\n     */\n    get feeDataFunc(): (provider: Provider) => Promise<FeeData> {\n        return this.#feeDataFunc;\n    }\n\n    /**\n     *  Creates a new **FeeDataNetworkPlugin**.\n     */\n    constructor(feeDataFunc: (provider: Provider) => Promise<FeeData>) {\n        super(\"org.ethers.plugins.network.FeeData\");\n        this.#feeDataFunc = feeDataFunc;\n    }\n\n    /**\n     *  Resolves to the fee data.\n     */\n    async getFeeData(provider: Provider): Promise<FeeData> {\n        return await this.#feeDataFunc(provider);\n    }\n\n    clone(): FeeDataNetworkPlugin {\n        return new FeeDataNetworkPlugin(this.#feeDataFunc);\n    }\n}\n\nexport class FetchUrlFeeDataNetworkPlugin extends NetworkPlugin {\n    readonly #url: string;\n    readonly #processFunc: (f: () => Promise<FeeData>, p: Provider, r: FetchRequest) => Promise<{ gasPrice?: null | bigint, maxFeePerGas?: null | bigint, maxPriorityFeePerGas?: null | bigint }>;\n\n    /**\n     *  The URL to initialize the FetchRequest with in %%processFunc%%.\n     */\n    get url(): string { return this.#url; }\n\n    /**\n     *  The callback to use when computing the FeeData.\n     */\n    get processFunc(): (f: () => Promise<FeeData>, p: Provider, r: FetchRequest) => Promise<{ gasPrice?: null | bigint, maxFeePerGas?: null | bigint, maxPriorityFeePerGas?: null | bigint }> { return this.#processFunc; }\n\n    /**\n     *  Creates a new **FetchUrlFeeDataNetworkPlugin** which will\n     *  be used when computing the fee data for the network.\n     */\n    constructor(url: string, processFunc: (f: () => Promise<FeeData>, p: Provider, r: FetchRequest) => Promise<{ gasPrice?: null | bigint, maxFeePerGas?: null | bigint, maxPriorityFeePerGas?: null | bigint }>) {\n        super(\"org.ethers.plugins.network.FetchUrlFeeDataPlugin\");\n        this.#url = url;\n        this.#processFunc = processFunc;\n    }\n\n    // We are immutable, so we can serve as our own clone\n    clone(): FetchUrlFeeDataNetworkPlugin { return this; }\n}\n\n/*\nexport class CustomBlockNetworkPlugin extends NetworkPlugin {\n    readonly #blockFunc: (provider: Provider, block: BlockParams<string>) => Block<string>;\n    readonly #blockWithTxsFunc: (provider: Provider, block: BlockParams<TransactionResponseParams>) => Block<TransactionResponse>;\n\n    constructor(blockFunc: (provider: Provider, block: BlockParams<string>) => Block<string>, blockWithTxsFunc: (provider: Provider, block: BlockParams<TransactionResponseParams>) => Block<TransactionResponse>) {\n        super(\"org.ethers.network-plugins.custom-block\");\n        this.#blockFunc = blockFunc;\n        this.#blockWithTxsFunc = blockWithTxsFunc;\n    }\n\n    async getBlock(provider: Provider, block: BlockParams<string>): Promise<Block<string>> {\n        return await this.#blockFunc(provider, block);\n    }\n\n    async getBlockions(provider: Provider, block: BlockParams<TransactionResponseParams>): Promise<Block<TransactionResponse>> {\n        return await this.#blockWithTxsFunc(provider, block);\n    }\n\n    clone(): CustomBlockNetworkPlugin {\n        return new CustomBlockNetworkPlugin(this.#blockFunc, this.#blockWithTxsFunc);\n    }\n}\n*/\n", "import { assert, isHexString } from \"../utils/index.js\";\n\nimport type { AbstractProvider, Subscriber } from \"./abstract-provider.js\";\nimport type { EventFilter, OrphanFilter, ProviderEvent } from \"./provider.js\";\n\nfunction copy(obj: any): any {\n    return JSON.parse(JSON.stringify(obj));\n}\n\n/**\n *  Return the polling subscriber for common events.\n *\n *  @_docloc: api/providers/abstract-provider\n */\nexport function getPollingSubscriber(provider: AbstractProvider, event: ProviderEvent): Subscriber {\n    if (event === \"block\") { return new PollingBlockSubscriber(provider); }\n    if (isHexString(event, 32)) { return new PollingTransactionSubscriber(provider, event); }\n\n    assert(false, \"unsupported polling event\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"getPollingSubscriber\", info: { event }\n    });\n}\n\n// @TODO: refactor this\n\n/**\n *  A **PollingBlockSubscriber** polls at a regular interval for a change\n *  in the block number.\n *\n *  @_docloc: api/providers/abstract-provider\n */\nexport class PollingBlockSubscriber implements Subscriber {\n    #provider: AbstractProvider;\n    #poller: null | number;\n\n    #interval: number;\n\n    // The most recent block we have scanned for events. The value -2\n    // indicates we still need to fetch an initial block number\n    #blockNumber: number;\n\n    /**\n     *  Create a new **PollingBlockSubscriber** attached to %%provider%%.\n     */\n    constructor(provider: AbstractProvider) {\n        this.#provider = provider;\n        this.#poller = null;\n        this.#interval = 4000;\n\n        this.#blockNumber = -2;\n    }\n\n    /**\n     *  The polling interval.\n     */\n    get pollingInterval(): number { return this.#interval; }\n    set pollingInterval(value: number) { this.#interval = value; }\n\n    async #poll(): Promise<void> {\n        try {\n            const blockNumber = await this.#provider.getBlockNumber();\n\n            // Bootstrap poll to setup our initial block number\n            if (this.#blockNumber === -2) {\n                this.#blockNumber = blockNumber;\n                return;\n            }\n\n            // @TODO: Put a cap on the maximum number of events per loop?\n\n            if (blockNumber !== this.#blockNumber) {\n                for (let b = this.#blockNumber + 1; b <= blockNumber; b++) {\n                    // We have been stopped\n                    if (this.#poller == null) { return; }\n\n                    await this.#provider.emit(\"block\", b);\n                }\n\n                this.#blockNumber = blockNumber;\n            }\n\n        } catch (error) {\n            // @TODO: Minor bump, add an \"error\" event to let subscribers\n            //        know things went awry.\n            //console.log(error);\n        }\n\n        // We have been stopped\n        if (this.#poller == null) { return; }\n\n        this.#poller = this.#provider._setTimeout(this.#poll.bind(this), this.#interval);\n    }\n\n    start(): void {\n        if (this.#poller) { return; }\n        this.#poller = this.#provider._setTimeout(this.#poll.bind(this), this.#interval);\n        this.#poll();\n    }\n\n    stop(): void {\n        if (!this.#poller) { return; }\n        this.#provider._clearTimeout(this.#poller);\n        this.#poller = null;\n    }\n\n    pause(dropWhilePaused?: boolean): void {\n        this.stop();\n        if (dropWhilePaused) { this.#blockNumber = -2; }\n    }\n\n    resume(): void {\n        this.start();\n    }\n}\n\n\n/**\n *  An **OnBlockSubscriber** can be sub-classed, with a [[_poll]]\n *  implmentation which will be called on every new block.\n *\n *  @_docloc: api/providers/abstract-provider\n */\nexport class OnBlockSubscriber implements Subscriber {\n    #provider: AbstractProvider;\n    #poll: (b: number) => void;\n    #running: boolean;\n\n    /**\n     *  Create a new **OnBlockSubscriber** attached to %%provider%%.\n     */\n    constructor(provider: AbstractProvider) {\n        this.#provider = provider;\n        this.#running = false;\n        this.#poll = (blockNumber: number) => {\n            this._poll(blockNumber, this.#provider);\n        }\n    }\n\n    /**\n     *  Called on every new block.\n     */\n    async _poll(blockNumber: number, provider: AbstractProvider): Promise<void> {\n        throw new Error(\"sub-classes must override this\");\n    }\n\n    start(): void {\n        if (this.#running) { return; }\n        this.#running = true;\n\n        this.#poll(-2);\n        this.#provider.on(\"block\", this.#poll);\n    }\n\n    stop(): void {\n        if (!this.#running) { return; }\n        this.#running = false;\n\n        this.#provider.off(\"block\", this.#poll);\n    }\n\n    pause(dropWhilePaused?: boolean): void { this.stop(); }\n    resume(): void { this.start(); }\n}\n\nexport class PollingBlockTagSubscriber extends OnBlockSubscriber {\n    readonly #tag: string;\n    #lastBlock: number;\n\n    constructor(provider: AbstractProvider, tag: string) {\n        super(provider);\n        this.#tag = tag;\n        this.#lastBlock = -2;\n    }\n\n    pause(dropWhilePaused?: boolean): void {\n        if (dropWhilePaused) { this.#lastBlock = -2; }\n        super.pause(dropWhilePaused);\n    }\n\n    async _poll(blockNumber: number, provider: AbstractProvider): Promise<void> {\n        const block = await provider.getBlock(this.#tag);\n        if (block == null) { return; }\n\n        if (this.#lastBlock === -2) {\n            this.#lastBlock = block.number;\n        } else if (block.number > this.#lastBlock) {\n            provider.emit(this.#tag, block.number);\n            this.#lastBlock = block.number;\n        }\n    }\n}\n\n\n/**\n *  @_ignore:\n *\n *  @_docloc: api/providers/abstract-provider\n */\nexport class PollingOrphanSubscriber extends OnBlockSubscriber {\n    #filter: OrphanFilter;\n\n    constructor(provider: AbstractProvider, filter: OrphanFilter) {\n        super(provider);\n        this.#filter = copy(filter);\n    }\n\n    async _poll(blockNumber: number, provider: AbstractProvider): Promise<void> {\n        throw new Error(\"@TODO\");\n        console.log(this.#filter);\n    }\n}\n\n/**\n *  A **PollingTransactionSubscriber** will poll for a given transaction\n *  hash for its receipt.\n *\n *  @_docloc: api/providers/abstract-provider\n */\nexport class PollingTransactionSubscriber extends OnBlockSubscriber {\n    #hash: string;\n\n    /**\n     *  Create a new **PollingTransactionSubscriber** attached to\n     *  %%provider%%, listening for %%hash%%.\n     */\n    constructor(provider: AbstractProvider, hash: string) {\n        super(provider);\n        this.#hash = hash;\n    }\n\n    async _poll(blockNumber: number, provider: AbstractProvider): Promise<void> {\n        const tx = await provider.getTransactionReceipt(this.#hash);\n        if (tx) { provider.emit(this.#hash, tx); }\n    }\n}\n\n/**\n *  A **PollingEventSubscriber** will poll for a given filter for its logs.\n *\n *  @_docloc: api/providers/abstract-provider\n */\nexport class PollingEventSubscriber implements Subscriber {\n    #provider: AbstractProvider;\n    #filter: EventFilter;\n    #poller: (b: number) => void;\n\n    #running: boolean;\n\n    // The most recent block we have scanned for events. The value -2\n    // indicates we still need to fetch an initial block number\n    #blockNumber: number;\n\n    /**\n     *  Create a new **PollingTransactionSubscriber** attached to\n     *  %%provider%%, listening for %%filter%%.\n     */\n    constructor(provider: AbstractProvider, filter: EventFilter) {\n        this.#provider = provider;\n        this.#filter = copy(filter);\n        this.#poller = this.#poll.bind(this);\n        this.#running = false;\n        this.#blockNumber = -2;\n    }\n\n    async #poll(blockNumber: number): Promise<void> {\n        // The initial block hasn't been determined yet\n        if (this.#blockNumber === -2) { return; }\n\n        const filter = copy(this.#filter);\n        filter.fromBlock = this.#blockNumber + 1;\n        filter.toBlock = blockNumber;\n\n        const logs = await this.#provider.getLogs(filter);\n\n        // No logs could just mean the node has not indexed them yet,\n        // so we keep a sliding window of 60 blocks to keep scanning\n        if (logs.length === 0) {\n            if (this.#blockNumber < blockNumber - 60) {\n                this.#blockNumber = blockNumber - 60;\n            }\n            return;\n        }\n\n        for (const log of logs) {\n            this.#provider.emit(this.#filter, log);\n\n            // Only advance the block number when logs were found to\n            // account for networks (like BNB and Polygon) which may\n            // sacrifice event consistency for block event speed\n            this.#blockNumber = log.blockNumber;\n        }\n    }\n\n    start(): void {\n        if (this.#running) { return; }\n        this.#running = true;\n\n        if (this.#blockNumber === -2) {\n            this.#provider.getBlockNumber().then((blockNumber) => {\n                this.#blockNumber = blockNumber;\n            });\n        }\n        this.#provider.on(\"block\", this.#poller);\n    }\n\n    stop(): void {\n        if (!this.#running) { return; }\n        this.#running = false;\n\n        this.#provider.off(\"block\", this.#poller);\n    }\n\n    pause(dropWhilePaused?: boolean): void {\n        this.stop();\n        if (dropWhilePaused) { this.#blockNumber = -2; }\n    }\n\n    resume(): void {\n        this.start();\n    }\n}\n", "/**\n *  Generally the [[Wallet]] and [[JsonRpcSigner]] and their sub-classes\n *  are sufficent for most developers, but this is provided to\n *  fascilitate more complex Signers.\n *\n *  @_section: api/providers/abstract-signer: Subclassing Signer [abstract-signer]\n */\nimport { resolveAddress } from \"../address/index.js\";\nimport { Transaction } from \"../transaction/index.js\";\nimport {\n    defineProperties, getBigInt, resolveProperties,\n    assert, assertArgument\n} from \"../utils/index.js\";\n\nimport { copyRequest } from \"./provider.js\";\n\nimport type {\n    AuthorizationRequest, TypedDataDomain, TypedDataField\n} from \"../hash/index.js\";\nimport type { Authorization, TransactionLike } from \"../transaction/index.js\";\n\nimport type {\n    BlockTag, Provider, TransactionRequest, TransactionResponse\n} from \"./provider.js\";\nimport type { Signer } from \"./signer.js\";\n\nfunction checkProvider(signer: AbstractSigner, operation: string): Provider {\n    if (signer.provider) { return signer.provider; }\n    assert(false, \"missing provider\", \"UNSUPPORTED_OPERATION\", { operation });\n}\n\nasync function populate(signer: AbstractSigner, tx: TransactionRequest): Promise<TransactionLike<string>> {\n    let pop: any = copyRequest(tx);\n\n    if (pop.to != null) { pop.to = resolveAddress(pop.to, signer); }\n\n    if (pop.from != null) {\n        const from = pop.from;\n        pop.from = Promise.all([\n            signer.getAddress(),\n            resolveAddress(from, signer)\n        ]).then(([ address, from ]) => {\n            assertArgument(address.toLowerCase() === from.toLowerCase(),\n                \"transaction from mismatch\", \"tx.from\", from);\n            return address;\n        });\n    } else {\n        pop.from = signer.getAddress();\n    }\n\n    return await resolveProperties(pop);\n}\n\n\n/**\n *  An **AbstractSigner** includes most of teh functionality required\n *  to get a [[Signer]] working as expected, but requires a few\n *  Signer-specific methods be overridden.\n *\n */\nexport abstract class AbstractSigner<P extends null | Provider = null | Provider> implements Signer {\n    /**\n     *  The provider this signer is connected to.\n     */\n    readonly provider!: P;\n\n    /**\n     *  Creates a new Signer connected to %%provider%%.\n     */\n    constructor(provider?: P) {\n        defineProperties<AbstractSigner>(this, { provider: (provider || null) });\n    }\n\n    /**\n     *  Resolves to the Signer address.\n     */\n    abstract getAddress(): Promise<string>;\n\n    /**\n     *  Returns the signer connected to %%provider%%.\n     *\n     *  This may throw, for example, a Signer connected over a Socket or\n     *  to a specific instance of a node may not be transferrable.\n     */\n    abstract connect(provider: null | Provider): Signer;\n\n    async getNonce(blockTag?: BlockTag): Promise<number> {\n        return checkProvider(this, \"getTransactionCount\").getTransactionCount(await this.getAddress(), blockTag);\n    }\n\n    async populateCall(tx: TransactionRequest): Promise<TransactionLike<string>> {\n        const pop = await populate(this, tx);\n        return pop;\n    }\n\n    async populateTransaction(tx: TransactionRequest): Promise<TransactionLike<string>> {\n        const provider = checkProvider(this, \"populateTransaction\");\n\n        const pop = await populate(this, tx);\n\n        if (pop.nonce == null) {\n            pop.nonce = await this.getNonce(\"pending\");\n        }\n\n        if (pop.gasLimit == null) {\n            pop.gasLimit = await this.estimateGas(pop);\n        }\n\n        // Populate the chain ID\n        const network = await (<Provider>(this.provider)).getNetwork();\n        if (pop.chainId != null) {\n            const chainId = getBigInt(pop.chainId);\n            assertArgument(chainId === network.chainId, \"transaction chainId mismatch\", \"tx.chainId\", tx.chainId);\n        } else {\n            pop.chainId = network.chainId;\n        }\n\n        // Do not allow mixing pre-eip-1559 and eip-1559 properties\n        const hasEip1559 = (pop.maxFeePerGas != null || pop.maxPriorityFeePerGas != null);\n        if (pop.gasPrice != null && (pop.type === 2 || hasEip1559)) {\n            assertArgument(false, \"eip-1559 transaction do not support gasPrice\", \"tx\", tx);\n        } else if ((pop.type === 0 || pop.type === 1) && hasEip1559) {\n            assertArgument(false, \"pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas\", \"tx\", tx);\n        }\n\n        if ((pop.type === 2 || pop.type == null) && (pop.maxFeePerGas != null && pop.maxPriorityFeePerGas != null)) {\n            // Fully-formed EIP-1559 transaction (skip getFeeData)\n            pop.type = 2;\n\n        } else if (pop.type === 0 || pop.type === 1) {\n            // Explicit Legacy or EIP-2930 transaction\n\n            // We need to get fee data to determine things\n            const feeData = await provider.getFeeData();\n\n            assert(feeData.gasPrice != null, \"network does not support gasPrice\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"getGasPrice\" });\n\n            // Populate missing gasPrice\n            if (pop.gasPrice == null) { pop.gasPrice = feeData.gasPrice; }\n\n        } else {\n\n            // We need to get fee data to determine things\n            const feeData = await provider.getFeeData();\n\n            if (pop.type == null) {\n                // We need to auto-detect the intended type of this transaction...\n\n                if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {\n                    // The network supports EIP-1559!\n\n                    // Upgrade transaction from null to eip-1559\n                    if (pop.authorizationList && pop.authorizationList.length) {\n                        pop.type = 4;\n                    } else {\n                        pop.type = 2;\n                    }\n\n                    if (pop.gasPrice != null) {\n                        // Using legacy gasPrice property on an eip-1559 network,\n                        // so use gasPrice as both fee properties\n                        const gasPrice = pop.gasPrice;\n                        delete pop.gasPrice;\n                        pop.maxFeePerGas = gasPrice;\n                        pop.maxPriorityFeePerGas = gasPrice;\n\n                    } else {\n                        // Populate missing fee data\n\n                        if (pop.maxFeePerGas == null) {\n                            pop.maxFeePerGas = feeData.maxFeePerGas;\n                        }\n\n                        if (pop.maxPriorityFeePerGas == null) {\n                            pop.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;\n                        }\n                    }\n\n                } else if (feeData.gasPrice != null) {\n                    // Network doesn't support EIP-1559...\n\n                    // ...but they are trying to use EIP-1559 properties\n                    assert(!hasEip1559, \"network does not support EIP-1559\", \"UNSUPPORTED_OPERATION\", {\n                            operation: \"populateTransaction\" });\n\n                    // Populate missing fee data\n                    if (pop.gasPrice == null) {\n                        pop.gasPrice = feeData.gasPrice;\n                    }\n\n                    // Explicitly set untyped transaction to legacy\n                    // @TODO: Maybe this shold allow type 1?\n                    pop.type = 0;\n\n               } else {\n                    // getFeeData has failed us.\n                    assert(false, \"failed to get consistent fee data\", \"UNSUPPORTED_OPERATION\", {\n                        operation: \"signer.getFeeData\" });\n                }\n\n            } else if (pop.type === 2 || pop.type === 3 || pop.type === 4) {\n                // Explicitly using EIP-1559 or EIP-4844\n\n                // Populate missing fee data\n                if (pop.maxFeePerGas == null) {\n                    pop.maxFeePerGas = feeData.maxFeePerGas;\n                }\n\n                if (pop.maxPriorityFeePerGas == null) {\n                    pop.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;\n                }\n            }\n        }\n\n//@TOOD: Don't await all over the place; save them up for\n// the end for better batching\n        return await resolveProperties(pop);\n    }\n\n    async populateAuthorization(_auth: AuthorizationRequest): Promise<AuthorizationRequest> {\n        const auth = Object.assign({ }, _auth);\n\n        // Add a chain ID if not explicitly set to 0\n        if (auth.chainId == null) {\n            auth.chainId = (await checkProvider(this, \"getNetwork\").getNetwork()).chainId;\n        }\n\n        // @TODO: Take chain ID into account when populating noce?\n\n        if (auth.nonce == null) { auth.nonce = await this.getNonce(); }\n\n        return auth;\n    }\n\n    async estimateGas(tx: TransactionRequest): Promise<bigint> {\n        return checkProvider(this, \"estimateGas\").estimateGas(await this.populateCall(tx));\n    }\n\n    async call(tx: TransactionRequest): Promise<string> {\n        return checkProvider(this, \"call\").call(await this.populateCall(tx));\n    }\n\n    async resolveName(name: string): Promise<null | string> {\n        const provider = checkProvider(this, \"resolveName\");\n        return await provider.resolveName(name);\n    }\n\n    async sendTransaction(tx: TransactionRequest): Promise<TransactionResponse> {\n        const provider = checkProvider(this, \"sendTransaction\");\n\n        const pop = await this.populateTransaction(tx);\n        delete pop.from;\n        const txObj = Transaction.from(pop);\n        return await provider.broadcastTransaction(await this.signTransaction(txObj));\n    }\n\n    // @TODO: in v7 move this to be abstract\n    authorize(authorization: AuthorizationRequest): Promise<Authorization> {\n        assert(false, \"authorization not implemented for this signer\",\n          \"UNSUPPORTED_OPERATION\", { operation: \"authorize\" });\n    }\n\n    abstract signTransaction(tx: TransactionRequest): Promise<string>;\n    abstract signMessage(message: string | Uint8Array): Promise<string>;\n    abstract signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string>;\n}\n\n/**\n *  A **VoidSigner** is a class deisgned to allow an address to be used\n *  in any API which accepts a Signer, but for which there are no\n *  credentials available to perform any actual signing.\n *\n *  This for example allow impersonating an account for the purpose of\n *  static calls or estimating gas, but does not allow sending transactions.\n */\nexport class VoidSigner extends AbstractSigner {\n    /**\n     *  The signer address.\n     */\n    readonly address!: string;\n\n    /**\n     *  Creates a new **VoidSigner** with %%address%% attached to\n     *  %%provider%%.\n     */\n    constructor(address: string, provider?: null | Provider) {\n        super(provider);\n        defineProperties<VoidSigner>(this, { address });\n    }\n\n    async getAddress(): Promise<string> { return this.address; }\n\n    connect(provider: null | Provider): VoidSigner {\n        return new VoidSigner(this.address, provider);\n    }\n\n    #throwUnsupported(suffix: string, operation: string): never {\n        assert(false, `VoidSigner cannot sign ${ suffix }`, \"UNSUPPORTED_OPERATION\", { operation });\n    }\n\n    async signTransaction(tx: TransactionRequest): Promise<string> {\n        this.#throwUnsupported(\"transactions\", \"signTransaction\");\n    }\n\n    async signMessage(message: string | Uint8Array): Promise<string> {\n        this.#throwUnsupported(\"messages\", \"signMessage\");\n    }\n\n    async signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        this.#throwUnsupported(\"typed-data\", \"signTypedData\");\n    }\n}\n\n", "/**\n *  There are many awesome community services that provide Ethereum\n *  nodes both for developers just starting out and for large-scale\n *  communities.\n *\n *  @_section: api/providers/thirdparty: Community Providers  [thirdparty]\n */\n\n/**\n *  Providers which offer community credentials should extend this\n *  to notify any interested consumers whether community credentials\n *  are in-use.\n */\nexport interface CommunityResourcable {\n    /**\n     *  Returns true if the instance is connected using the community\n     *  credentials.\n     */\n    isCommunityResource(): boolean;\n}\n\n// Show the throttle message only once per service\nconst shown: Set<string> = new Set();\n\n/**\n *  Displays a warning in the console when the community resource is\n *  being used too heavily by the app, recommending the developer\n *  acquire their own credentials instead of using the community\n *  credentials.\n *\n *  The notification will only occur once per service.\n */\nexport function showThrottleMessage(service: string): void {\n    if (shown.has(service)) { return; }\n    shown.add(service);\n\n    console.log(\"========= NOTICE =========\")\n    console.log(`Request-Rate Exceeded for ${ service } (this message will not be repeated)`);\n    console.log(\"\");\n    console.log(\"The default API keys for each service are provided as a highly-throttled,\");\n    console.log(\"community resource for low-traffic projects and early prototyping.\");\n    console.log(\"\");\n    console.log(\"While your application will continue to function, we highly recommended\");\n    console.log(\"signing up for your own API keys to improve performance, increase your\");\n    console.log(\"request rate/limit and enable other perks, such as metrics and advanced APIs.\");\n    console.log(\"\");\n    console.log(\"For more details: https:/\\/docs.ethers.org/api-keys/\");\n    console.log(\"==========================\");\n}\n", "\nimport { assert } from \"../utils/index.js\";\n\nimport { AnkrProvider } from \"./provider-ankr.js\";\nimport { AlchemyProvider } from \"./provider-alchemy.js\";\n//import { BlockscoutProvider } from \"./provider-blockscout.js\";\nimport { ChainstackProvider } from \"./provider-chainstack.js\";\nimport { CloudflareProvider } from \"./provider-cloudflare.js\";\nimport { EtherscanProvider } from \"./provider-etherscan.js\";\nimport { InfuraProvider } from \"./provider-infura.js\";\n//import { PocketProvider } from \"./provider-pocket.js\";\nimport { QuickNodeProvider } from \"./provider-quicknode.js\";\n\nimport { FallbackProvider } from \"./provider-fallback.js\";\nimport { JsonRpcProvider } from \"./provider-jsonrpc.js\";\nimport { Network } from \"./network.js\";\nimport { WebSocketProvider } from \"./provider-websocket.js\";\n\nimport type { AbstractProvider } from \"./abstract-provider.js\";\nimport type { Networkish } from \"./network.js\";\nimport { WebSocketLike } from \"./provider-websocket.js\";\n\nfunction isWebSocketLike(value: any): value is WebSocketLike {\n    return (value && typeof(value.send) === \"function\" &&\n        typeof(value.close) === \"function\");\n}\n\nconst Testnets = \"goerli kovan sepolia classicKotti optimism-goerli arbitrum-goerli matic-mumbai bnbt\".split(\" \");\n\n/**\n *  Returns a default provider for %%network%%.\n *\n *  If %%network%% is a [[WebSocketLike]] or string that begins with\n *  ``\"ws:\"`` or ``\"wss:\"``, a [[WebSocketProvider]] is returned backed\n *  by that WebSocket or URL.\n *\n *  If %%network%% is a string that begins with ``\"HTTP:\"`` or ``\"HTTPS:\"``,\n *  a [[JsonRpcProvider]] is returned connected to that URL.\n *\n *  Otherwise, a default provider is created backed by well-known public\n *  Web3 backends (such as [[link-infura]]) using community-provided API\n *  keys.\n *\n *  The %%options%% allows specifying custom API keys per backend (setting\n *  an API key to ``\"-\"`` will omit that provider) and ``options.exclusive``\n *  can be set to either a backend name or and array of backend names, which\n *  will whitelist **only** those backends.\n *\n *  Current backend strings supported are:\n *  - ``\"alchemy\"``\n *  - ``\"ankr\"``\n *  - ``\"cloudflare\"``\n *  - ``\"chainstack\"``\n *  - ``\"etherscan\"``\n *  - ``\"infura\"``\n *  - ``\"publicPolygon\"``\n *  - ``\"quicknode\"``\n *\n *  @example:\n *    // Connect to a local Geth node\n *    provider = getDefaultProvider(\"http://localhost:8545/\");\n *\n *    // Connect to Ethereum mainnet with any current and future\n *    // third-party services available\n *    provider = getDefaultProvider(\"mainnet\");\n *\n *    // Connect to Polygon, but only allow Etherscan and\n *    // INFURA and use \"MY_API_KEY\" in calls to Etherscan.\n *    provider = getDefaultProvider(\"matic\", {\n *      etherscan: \"MY_API_KEY\",\n *      exclusive: [ \"etherscan\", \"infura\" ]\n *    });\n */\nexport function getDefaultProvider(network?: string | Networkish | WebSocketLike, options?: any): AbstractProvider {\n    if (options == null) { options = { }; }\n\n    const allowService = (name: string) => {\n        if (options[name] === \"-\") { return false; }\n        if (typeof(options.exclusive) === \"string\") {\n            return (name === options.exclusive);\n        }\n        if (Array.isArray(options.exclusive)) {\n            return (options.exclusive.indexOf(name) !== -1);\n        }\n        return true;\n    };\n\n    if (typeof(network) === \"string\" && network.match(/^https?:/)) {\n        return new JsonRpcProvider(network);\n    }\n\n    if (typeof(network) === \"string\" && network.match(/^wss?:/) || isWebSocketLike(network)) {\n        return new WebSocketProvider(network);\n    }\n\n    // Get the network and name, if possible\n    let staticNetwork: null | Network = null;\n    try {\n        staticNetwork = Network.from(network);\n    } catch (error) { }\n\n\n    const providers: Array<AbstractProvider> = [ ];\n\n    if (allowService(\"publicPolygon\") && staticNetwork) {\n        if (staticNetwork.name === \"matic\") {\n            providers.push(new JsonRpcProvider(\"https:/\\/polygon-rpc.com/\", staticNetwork, { staticNetwork }));\n        } else if (staticNetwork.name === \"matic-amoy\") {\n            providers.push(new JsonRpcProvider(\"https:/\\/rpc-amoy.polygon.technology/\", staticNetwork, { staticNetwork }));\n        }\n    }\n\n    if (allowService(\"alchemy\")) {\n        try {\n            providers.push(new AlchemyProvider(network, options.alchemy));\n        } catch (error) { }\n    }\n\n    if (allowService(\"ankr\") && options.ankr != null) {\n        try {\n            providers.push(new AnkrProvider(network, options.ankr));\n        } catch (error) { }\n    }\n/* Temporarily remove until custom error issue is fixed\n    if (allowService(\"blockscout\")) {\n        try {\n            providers.push(new BlockscoutProvider(network, options.blockscout));\n        } catch (error) { }\n    }\n*/\n    if (allowService(\"chainstack\")) {\n        try {\n            providers.push(new ChainstackProvider(network, options.chainstack));\n        } catch (error) { }\n    }\n\n    if (allowService(\"cloudflare\")) {\n        try {\n            providers.push(new CloudflareProvider(network));\n        } catch (error) { }\n    }\n\n    if (allowService(\"etherscan\")) {\n        try {\n            providers.push(new EtherscanProvider(network, options.etherscan));\n        } catch (error) { }\n    }\n\n    if (allowService(\"infura\")) {\n        try {\n            let projectId = options.infura;\n            let projectSecret: undefined | string = undefined;\n            if (typeof(projectId) === \"object\") {\n                projectSecret = projectId.projectSecret;\n                projectId = projectId.projectId;\n            }\n            providers.push(new InfuraProvider(network, projectId, projectSecret));\n        } catch (error) { }\n    }\n/*\n    if (options.pocket !== \"-\") {\n        try {\n            let appId = options.pocket;\n            let secretKey: undefined | string = undefined;\n            let loadBalancer: undefined | boolean = undefined;\n            if (typeof(appId) === \"object\") {\n                loadBalancer = !!appId.loadBalancer;\n                secretKey = appId.secretKey;\n                appId = appId.appId;\n            }\n            providers.push(new PocketProvider(network, appId, secretKey, loadBalancer));\n        } catch (error) { console.log(error); }\n    }\n*/\n    if (allowService(\"quicknode\")) {\n        try {\n            let token = options.quicknode;\n            providers.push(new QuickNodeProvider(network, token));\n        } catch (error) { }\n    }\n\n    assert(providers.length, \"unsupported default network\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"getDefaultProvider\"\n    });\n\n    // No need for a FallbackProvider\n    if (providers.length === 1) { return providers[0]; }\n\n    // We use the floor because public third-party providers can be unreliable,\n    // so a low number of providers with a large quorum will fail too often\n    let quorum = Math.floor(providers.length / 2);\n    if (quorum > 2) { quorum = 2; }\n\n    // Testnets don't need as strong a security gaurantee and speed is\n    // more useful during testing\n    if (staticNetwork && Testnets.indexOf(staticNetwork.name) !== -1) { quorum = 1; }\n\n    // Provided override qorum takes priority\n    if (options && options.quorum) { quorum = options.quorum; }\n\n    return new FallbackProvider(providers, undefined, { quorum });\n}\n", "/**\n *  [[link-ankr]] provides a third-party service for connecting to\n *  various blockchains over JSON-RPC.\n *\n *  **Supported Networks**\n *\n *  - Ethereum Mainnet (``mainnet``)\n *  - Goerli Testnet (``goerli``)\n *  - Sepolia Testnet (``sepolia``)\n *  - Arbitrum (``arbitrum``)\n *  - Base (``base``)\n *  - Base Goerlia Testnet (``base-goerli``)\n *  - Base Sepolia Testnet (``base-sepolia``)\n *  - BNB (``bnb``)\n *  - BNB Testnet (``bnbt``)\n *  - Optimism (``optimism``)\n *  - Optimism Goerli Testnet (``optimism-goerli``)\n *  - Optimism Sepolia Testnet (``optimism-sepolia``)\n *  - Polygon (``matic``)\n *  - Polygon Mumbai Testnet (``matic-mumbai``)\n *\n *  @_subsection: api/providers/thirdparty:Ankr  [providers-ankr]\n */\nimport {\n    defineProperties, FetchRequest, assertArgument\n} from \"../utils/index.js\";\n\nimport { AbstractProvider } from \"./abstract-provider.js\";\nimport { showThrottleMessage } from \"./community.js\";\nimport { Network } from \"./network.js\";\nimport { JsonRpcProvider } from \"./provider-jsonrpc.js\";\n\nimport type { CommunityResourcable } from \"./community.js\";\nimport type { Networkish } from \"./network.js\";\nimport type { JsonRpcError, JsonRpcPayload } from \"./provider-jsonrpc.js\";\n\n\nconst defaultApiKey = \"9f7d929b018cdffb338517efa06f58359e86ff1ffd350bc889738523659e7972\";\n\nfunction getHost(name: string): string {\n    switch (name) {\n        case \"mainnet\":\n            return \"rpc.ankr.com/eth\";\n        case \"goerli\":\n            return \"rpc.ankr.com/eth_goerli\";\n        case \"sepolia\":\n            return \"rpc.ankr.com/eth_sepolia\";\n\n        case \"arbitrum\":\n            return \"rpc.ankr.com/arbitrum\";\n        case \"base\":\n            return \"rpc.ankr.com/base\";\n        case \"base-goerli\":\n            return \"rpc.ankr.com/base_goerli\";\n        case \"base-sepolia\":\n            return \"rpc.ankr.com/base_sepolia\";\n        case \"bnb\":\n            return \"rpc.ankr.com/bsc\";\n        case \"bnbt\":\n            return \"rpc.ankr.com/bsc_testnet_chapel\";\n        case \"matic\":\n            return \"rpc.ankr.com/polygon\";\n        case \"matic-mumbai\":\n            return \"rpc.ankr.com/polygon_mumbai\";\n        case \"optimism\":\n            return \"rpc.ankr.com/optimism\";\n        case \"optimism-goerli\":\n            return \"rpc.ankr.com/optimism_testnet\";\n        case \"optimism-sepolia\":\n            return \"rpc.ankr.com/optimism_sepolia\";\n    }\n\n    assertArgument(false, \"unsupported network\", \"network\", name);\n}\n\n\n/**\n *  The **AnkrProvider** connects to the [[link-ankr]]\n *  JSON-RPC end-points.\n *\n *  By default, a highly-throttled API key is used, which is\n *  appropriate for quick prototypes and simple scripts. To\n *  gain access to an increased rate-limit, it is highly\n *  recommended to [sign up here](link-ankr-signup).\n */\nexport class AnkrProvider extends JsonRpcProvider implements CommunityResourcable {\n\n    /**\n     *  The API key for the Ankr connection.\n     */\n    readonly apiKey!: string;\n\n    /**\n     *  Create a new **AnkrProvider**.\n     *\n     *  By default connecting to ``mainnet`` with a highly throttled\n     *  API key.\n     */\n    constructor(_network?: Networkish, apiKey?: null | string) {\n        if (_network == null) { _network = \"mainnet\"; }\n        const network = Network.from(_network);\n        if (apiKey == null) { apiKey = defaultApiKey; }\n\n        // Ankr does not support filterId, so we force polling\n        const options = { polling: true, staticNetwork: network };\n\n        const request = AnkrProvider.getRequest(network, apiKey);\n        super(request, network, options);\n\n        defineProperties<AnkrProvider>(this, { apiKey });\n    }\n\n    _getProvider(chainId: number): AbstractProvider {\n        try {\n            return new AnkrProvider(chainId, this.apiKey);\n        } catch (error) { }\n        return super._getProvider(chainId);\n    }\n\n    /**\n     *  Returns a prepared request for connecting to %%network%% with\n     *  %%apiKey%%.\n     */\n    static getRequest(network: Network, apiKey?: null | string): FetchRequest {\n        if (apiKey == null) { apiKey = defaultApiKey; }\n\n        const request = new FetchRequest(`https:/\\/${ getHost(network.name) }/${ apiKey }`);\n        request.allowGzip = true;\n\n        if (apiKey === defaultApiKey) {\n            request.retryFunc = async (request, response, attempt) => {\n                showThrottleMessage(\"AnkrProvider\");\n                return true;\n            };\n        }\n\n        return request;\n    }\n\n    getRpcError(payload: JsonRpcPayload, error: JsonRpcError): Error {\n        if (payload.method === \"eth_sendRawTransaction\") {\n            if (error && error.error && error.error.message === \"INTERNAL_ERROR: could not replace existing tx\") {\n                error.error.message = \"replacement transaction underpriced\";\n            }\n        }\n\n        return super.getRpcError(payload, error);\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n", "/**\n *  One of the most common ways to interact with the blockchain is\n *  by a node running a JSON-RPC interface which can be connected to,\n *  based on the transport, using:\n *\n *  - HTTP or HTTPS - [[JsonRpcProvider]]\n *  - WebSocket - [[WebSocketProvider]]\n *  - IPC - [[IpcSocketProvider]]\n *\n * @_section: api/providers/jsonrpc:JSON-RPC Provider  [about-jsonrpcProvider]\n */\n\n// @TODO:\n// - Add the batching API\n\n// https://playground.open-rpc.org/?schemaUrl=https://raw.githubusercontent.com/ethereum/eth1.0-apis/assembled-spec/openrpc.json&uiSchema%5BappBar%5D%5Bui:splitView%5D=true&uiSchema%5BappBar%5D%5Bui:input%5D=false&uiSchema%5BappBar%5D%5Bui:examplesDropdown%5D=false\n\nimport { AbiCoder } from \"../abi/index.js\";\nimport { getAddress, resolveAddress } from \"../address/index.js\";\nimport { TypedDataEncoder } from \"../hash/index.js\";\nimport { accessListify, authorizationify } from \"../transaction/index.js\";\nimport {\n    defineProperties, getBigInt, hexlify, isHexString, toQuantity, toUtf8Bytes,\n    isError, makeError, assert, assertArgument,\n    FetchRequest, resolveProperties\n} from \"../utils/index.js\";\n\nimport { AbstractProvider, UnmanagedSubscriber } from \"./abstract-provider.js\";\nimport { AbstractSigner } from \"./abstract-signer.js\";\nimport { Network } from \"./network.js\";\nimport { FilterIdEventSubscriber, FilterIdPendingSubscriber } from \"./subscriber-filterid.js\";\nimport { PollingEventSubscriber } from \"./subscriber-polling.js\";\n\nimport type { TypedDataDomain, TypedDataField } from \"../hash/index.js\";\nimport type { TransactionLike } from \"../transaction/index.js\";\n\nimport type { PerformActionRequest, Subscriber, Subscription } from \"./abstract-provider.js\";\nimport type { Networkish } from \"./network.js\";\nimport type { Provider, TransactionRequest, TransactionResponse } from \"./provider.js\";\nimport type { Signer } from \"./signer.js\";\n\ntype Timer = ReturnType<typeof setTimeout>;\n\nconst Primitive = \"bigint,boolean,function,number,string,symbol\".split(/,/g);\n//const Methods = \"getAddress,then\".split(/,/g);\nfunction deepCopy<T = any>(value: T): T {\n    if (value == null || Primitive.indexOf(typeof(value)) >= 0) {\n        return value;\n    }\n\n    // Keep any Addressable\n    if (typeof((<any>value).getAddress) === \"function\") {\n        return value;\n    }\n\n    if (Array.isArray(value)) { return <any>(value.map(deepCopy)); }\n\n    if (typeof(value) === \"object\") {\n        return Object.keys(value).reduce((accum, key) => {\n            accum[key] = (<any>value)[key];\n            return accum;\n        }, <any>{ });\n    }\n\n    throw new Error(`should not happen: ${ value } (${ typeof(value) })`);\n}\n\nfunction stall(duration: number): Promise<void> {\n    return new Promise((resolve) => { setTimeout(resolve, duration); });\n}\n\nfunction getLowerCase(value: string): string {\n    if (value) { return value.toLowerCase(); }\n    return value;\n}\n\ninterface Pollable {\n    pollingInterval: number;\n}\n\nfunction isPollable(value: any): value is Pollable {\n    return (value && typeof(value.pollingInterval) === \"number\");\n}\n\n/**\n *  A JSON-RPC payload, which are sent to a JSON-RPC server.\n */\nexport type JsonRpcPayload = {\n    /**\n     *  The JSON-RPC request ID.\n     */\n    id: number;\n\n    /**\n     *  The JSON-RPC request method.\n     */\n    method: string;\n\n    /**\n     *  The JSON-RPC request parameters.\n     */\n    params: Array<any> | Record<string, any>;\n\n    /**\n     *  A required constant in the JSON-RPC specification.\n     */\n    jsonrpc: \"2.0\";\n};\n\n/**\n *  A JSON-RPC result, which are returned on success from a JSON-RPC server.\n */\nexport type JsonRpcResult = {\n    /**\n     *  The response ID to match it to the relevant request.\n     */\n    id: number;\n\n    /**\n     *  The response result.\n     */\n    result: any;\n};\n\n/**\n *  A JSON-RPC error, which are returned on failure from a JSON-RPC server.\n */\nexport type JsonRpcError = {\n    /**\n     *  The response ID to match it to the relevant request.\n     */\n    id: number;\n\n    /**\n     *  The response error.\n     */\n    error: {\n        code: number;\n        message?: string;\n        data?: any;\n    }\n};\n\n/**\n *  When subscribing to the ``\"debug\"`` event, the [[Listener]] will\n *  receive this object as the first parameter.\n */\nexport type DebugEventJsonRpcApiProvider = {\n    action: \"sendRpcPayload\",\n    payload: JsonRpcPayload | Array<JsonRpcPayload>\n} | {\n    action: \"receiveRpcResult\",\n    result: Array<JsonRpcResult | JsonRpcError>\n} | {\n    action: \"receiveRpcError\",\n    error: Error\n};\n\n/**\n *  Options for configuring a [[JsonRpcApiProvider]]. Much of this\n *  is targetted towards sub-classes, which often will not expose\n *  any of these options to their consumers.\n *\n *  **``polling``** - use the polling strategy is used immediately\n *  for events; otherwise, attempt to use filters and fall back onto\n *  polling (default: ``false``)\n *\n *  **``staticNetwork``** - do not request chain ID on requests to\n *  validate the underlying chain has not changed (default: ``null``)\n *\n *  This should **ONLY** be used if it is **certain** that the network\n *  cannot change, such as when using INFURA (since the URL dictates the\n *  network). If the network is assumed static and it does change, this\n *  can have tragic consequences. For example, this **CANNOT** be used\n *  with MetaMask, since the user can select a new network from the\n *  drop-down at any time.\n *\n *  **``batchStallTime``** - how long (ms) to aggregate requests into a\n *  single batch. ``0`` indicates batching will only encompass the current\n *  event loop. If ``batchMaxCount = 1``, this is ignored. (default: ``10``)\n *\n *  **``batchMaxSize``** - target maximum size (bytes) to allow per batch\n *  request (default: 1Mb)\n *\n *  **``batchMaxCount``** - maximum number of requests to allow in a batch.\n *  If ``batchMaxCount = 1``, then batching is disabled. (default: ``100``)\n *\n *  **``cacheTimeout``** - passed as [[AbstractProviderOptions]].\n */\nexport type JsonRpcApiProviderOptions = {\n    polling?: boolean;\n    staticNetwork?: null | boolean | Network;\n    batchStallTime?: number;\n    batchMaxSize?: number;\n    batchMaxCount?: number;\n\n    cacheTimeout?: number;\n    pollingInterval?: number;\n};\n\nconst defaultOptions = {\n    polling: false,\n    staticNetwork: null,\n\n    batchStallTime: 10,      // 10ms\n    batchMaxSize: (1 << 20), // 1Mb\n    batchMaxCount: 100,      // 100 requests\n\n    cacheTimeout: 250,\n    pollingInterval: 4000\n}\n\n/**\n *  A **JsonRpcTransactionRequest** is formatted as needed by the JSON-RPC\n *  Ethereum API specification.\n */\nexport interface JsonRpcTransactionRequest {\n     /**\n      *  The sender address to use when signing.\n      */\n     from?: string;\n\n     /**\n      *  The target address.\n      */\n     to?: string;\n\n     /**\n      *  The transaction data.\n      */\n     data?: string;\n\n     /**\n      *  The chain ID the transaction is valid on.\n      */\n     chainId?: string;\n\n     /**\n      *  The [[link-eip-2718]] transaction type.\n      */\n     type?: string;\n\n     /**\n      *  The maximum amount of gas to allow a transaction to consume.\n      *\n      *  In most other places in ethers, this is called ``gasLimit`` which\n      *  differs from the JSON-RPC Ethereum API specification.\n      */\n     gas?: string;\n\n     /**\n      *  The gas price per wei for transactions prior to [[link-eip-1559]].\n      */\n     gasPrice?: string;\n\n     /**\n      *  The maximum fee per gas for [[link-eip-1559]] transactions.\n      */\n     maxFeePerGas?: string;\n\n     /**\n      *  The maximum priority fee per gas for [[link-eip-1559]] transactions.\n      */\n     maxPriorityFeePerGas?: string;\n\n     /**\n      *  The nonce for the transaction.\n      */\n     nonce?: string;\n\n     /**\n      *  The transaction value (in wei).\n      */\n     value?: string;\n\n     /**\n      *  The transaction access list.\n      */\n     accessList?: Array<{ address: string, storageKeys: Array<string> }>;\n\n     /**\n      *  The transaction authorization list.\n      */\n     authorizationList?: Array<{\n         address: string, nonce: string, chainId: string,\n         yParity: string, r: string, s: string\n     }>;\n}\n\n// @TODO: Unchecked Signers\n\nexport class JsonRpcSigner extends AbstractSigner<JsonRpcApiProvider> {\n    address!: string;\n\n    constructor(provider: JsonRpcApiProvider, address: string) {\n        super(provider);\n        address = getAddress(address);\n        defineProperties<JsonRpcSigner>(this, { address });\n    }\n\n    connect(provider: null | Provider): Signer {\n        assert(false, \"cannot reconnect JsonRpcSigner\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"signer.connect\"\n        });\n    }\n\n    async getAddress(): Promise<string> {\n        return this.address;\n    }\n\n    // JSON-RPC will automatially fill in nonce, etc. so we just check from\n    async populateTransaction(tx: TransactionRequest): Promise<TransactionLike<string>> {\n        return await this.populateCall(tx);\n    }\n\n    // Returns just the hash of the transaction after sent, which is what\n    // the bare JSON-RPC API does;\n    async sendUncheckedTransaction(_tx: TransactionRequest): Promise<string> {\n        const tx = deepCopy(_tx);\n\n        const promises: Array<Promise<void>> = [];\n\n        // Make sure the from matches the sender\n        if (tx.from) {\n            const _from = tx.from;\n            promises.push((async () => {\n                const from = await resolveAddress(_from, this.provider);\n                assertArgument(from != null && from.toLowerCase() === this.address.toLowerCase(),\n                    \"from address mismatch\", \"transaction\", _tx);\n                tx.from = from;\n            })());\n        } else {\n            tx.from = this.address;\n        }\n\n        // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n        // wishes to use this, it is easy to specify explicitly, otherwise\n        // we look it up for them.\n        if (tx.gasLimit == null) {\n            promises.push((async () => {\n                tx.gasLimit = await this.provider.estimateGas({ ...tx, from: this.address});\n            })());\n        }\n\n        // The address may be an ENS name or Addressable\n        if (tx.to != null) {\n            const _to = tx.to;\n            promises.push((async () => {\n                tx.to = await resolveAddress(_to, this.provider);\n            })());\n        }\n\n        // Wait until all of our properties are filled in\n        if (promises.length) { await Promise.all(promises); }\n\n        const hexTx = this.provider.getRpcTransaction(tx);\n\n        return this.provider.send(\"eth_sendTransaction\", [ hexTx ]);\n    }\n\n    async sendTransaction(tx: TransactionRequest): Promise<TransactionResponse> {\n        // This cannot be mined any earlier than any recent block\n        const blockNumber = await this.provider.getBlockNumber();\n\n        // Send the transaction\n        const hash = await this.sendUncheckedTransaction(tx);\n\n        // Unfortunately, JSON-RPC only provides and opaque transaction hash\n        // for a response, and we need the actual transaction, so we poll\n        // for it; it should show up very quickly\n        return await (new Promise((resolve, reject) => {\n            const timeouts = [ 1000, 100 ];\n            let invalids = 0;\n\n            const checkTx = async () => {\n\n                try {\n                    // Try getting the transaction\n                    const tx = await this.provider.getTransaction(hash);\n\n                    if (tx != null) {\n                        resolve(tx.replaceableTransaction(blockNumber));\n                        return;\n                    }\n\n                } catch (error) {\n\n                    // If we were cancelled: stop polling.\n                    // If the data is bad: the node returns bad transactions\n                    // If the network changed: calling again will also fail\n                    // If unsupported: likely destroyed\n                    if (isError(error, \"CANCELLED\") || isError(error, \"BAD_DATA\") ||\n                        isError(error, \"NETWORK_ERROR\") || isError(error, \"UNSUPPORTED_OPERATION\")) {\n\n                        if (error.info == null) { error.info = { }; }\n                        error.info.sendTransactionHash = hash;\n\n                        reject(error);\n                        return;\n                    }\n\n                    // Stop-gap for misbehaving backends; see #4513\n                    if (isError(error, \"INVALID_ARGUMENT\")) {\n                        invalids++;\n                        if (error.info == null) { error.info = { }; }\n                        error.info.sendTransactionHash = hash;\n                        if (invalids > 10) {\n                            reject(error);\n                            return;\n                        }\n                    }\n\n                    // Notify anyone that cares; but we will try again, since\n                    // it is likely an intermittent service error\n                    this.provider.emit(\"error\", makeError(\"failed to fetch transation after sending (will try again)\", \"UNKNOWN_ERROR\", { error }));\n                }\n\n                // Wait another 4 seconds\n                this.provider._setTimeout(() => { checkTx(); }, timeouts.pop() || 4000);\n            };\n            checkTx();\n        }));\n    }\n\n    async signTransaction(_tx: TransactionRequest): Promise<string> {\n        const tx = deepCopy(_tx);\n\n        // Make sure the from matches the sender\n        if (tx.from) {\n            const from = await resolveAddress(tx.from, this.provider);\n            assertArgument(from != null && from.toLowerCase() === this.address.toLowerCase(),\n                \"from address mismatch\", \"transaction\", _tx);\n            tx.from = from;\n        } else {\n            tx.from = this.address;\n        }\n\n        const hexTx = this.provider.getRpcTransaction(tx);\n        return await this.provider.send(\"eth_signTransaction\", [ hexTx ]);\n    }\n\n\n    async signMessage(_message: string | Uint8Array): Promise<string> {\n        const message = ((typeof(_message) === \"string\") ? toUtf8Bytes(_message): _message);\n        return await this.provider.send(\"personal_sign\", [\n            hexlify(message), this.address.toLowerCase() ]);\n    }\n\n    async signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, _value: Record<string, any>): Promise<string> {\n        const value = deepCopy(_value);\n\n        // Populate any ENS names (in-place)\n        const populated = await TypedDataEncoder.resolveNames(domain, types, value, async (value: string) => {\n            const address = await resolveAddress(value);\n            assertArgument(address != null, \"TypedData does not support null address\", \"value\", value);\n            return address;\n        });\n\n        return await this.provider.send(\"eth_signTypedData_v4\", [\n            this.address.toLowerCase(),\n            JSON.stringify(TypedDataEncoder.getPayload(populated.domain, types, populated.value))\n        ]);\n    }\n\n    async unlock(password: string): Promise<boolean> {\n        return this.provider.send(\"personal_unlockAccount\", [\n            this.address.toLowerCase(), password, null ]);\n    }\n\n    // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n    async _legacySignMessage(_message: string | Uint8Array): Promise<string> {\n        const message = ((typeof(_message) === \"string\") ? toUtf8Bytes(_message): _message);\n        return await this.provider.send(\"eth_sign\", [\n            this.address.toLowerCase(), hexlify(message) ]);\n    }\n}\n\ntype ResolveFunc = (result: JsonRpcResult) => void;\ntype RejectFunc = (error: Error) => void;\n\ntype Payload = { payload: JsonRpcPayload, resolve: ResolveFunc, reject: RejectFunc };\n\n/**\n *  The JsonRpcApiProvider is an abstract class and **MUST** be\n *  sub-classed.\n *\n *  It provides the base for all JSON-RPC-based Provider interaction.\n *\n *  Sub-classing Notes:\n *  - a sub-class MUST override _send\n *  - a sub-class MUST call the `_start()` method once connected\n */\nexport abstract class JsonRpcApiProvider extends AbstractProvider {\n\n    #options: Required<JsonRpcApiProviderOptions>;\n\n    // The next ID to use for the JSON-RPC ID field\n    #nextId: number;\n\n    // Payloads are queued and triggered in batches using the drainTimer\n    #payloads: Array<Payload>;\n    #drainTimer: null | Timer;\n\n    #notReady: null | {\n        promise: Promise<void>,\n        resolve: null | ((v: void) => void)\n    };\n\n    #network: null | Network;\n    #pendingDetectNetwork: null | Promise<Network>;\n\n    #scheduleDrain(): void {\n        if (this.#drainTimer) { return; }\n\n        // If we aren't using batching, no harm in sending it immediately\n        const stallTime = (this._getOption(\"batchMaxCount\") === 1) ? 0: this._getOption(\"batchStallTime\");\n\n        this.#drainTimer = setTimeout(() => {\n            this.#drainTimer = null;\n\n            const payloads = this.#payloads;\n            this.#payloads = [ ];\n\n            while (payloads.length) {\n\n                // Create payload batches that satisfy our batch constraints\n                const batch = [ <Payload>(payloads.shift()) ];\n                while (payloads.length) {\n                    if (batch.length === this.#options.batchMaxCount) { break; }\n                    batch.push(<Payload>(payloads.shift()));\n                    const bytes = JSON.stringify(batch.map((p) => p.payload));\n                    if (bytes.length > this.#options.batchMaxSize) {\n                        payloads.unshift(<Payload>(batch.pop()));\n                        break;\n                    }\n                }\n\n                // Process the result to each payload\n                (async () => {\n                    const payload = ((batch.length === 1) ? batch[0].payload: batch.map((p) => p.payload));\n\n                    this.emit(\"debug\", { action: \"sendRpcPayload\", payload });\n\n                    try {\n                        const result = await this._send(payload);\n                        this.emit(\"debug\", { action: \"receiveRpcResult\", result });\n\n                        // Process results in batch order\n                        for (const { resolve, reject, payload } of batch) {\n\n                            if (this.destroyed) {\n                                reject(makeError(\"provider destroyed; cancelled request\", \"UNSUPPORTED_OPERATION\", { operation: payload.method }));\n                                continue;\n                            }\n\n                            // Find the matching result\n                            const resp = result.filter((r) => (r.id === payload.id))[0];\n\n                            // No result; the node failed us in unexpected ways\n                            if (resp == null) {\n                                const error = makeError(\"missing response for request\", \"BAD_DATA\", {\n                                    value: result, info: { payload }\n                                });\n                                this.emit(\"error\", error);\n                                reject(error);\n                                continue;\n                            }\n\n                            // The response is an error\n                            if (\"error\" in resp) {\n                                reject(this.getRpcError(payload, resp));\n                                continue;\n                            }\n\n                            // All good; send the result\n                            resolve(resp.result);\n                        }\n\n                    } catch (error: any) {\n                        this.emit(\"debug\", { action: \"receiveRpcError\", error });\n\n                        for (const { reject } of batch) {\n                            // @TODO: augment the error with the payload\n                            reject(error);\n                        }\n                    }\n                })();\n            }\n        }, stallTime);\n    }\n\n    constructor(network?: Networkish, options?: JsonRpcApiProviderOptions) {\n        super(network, options);\n\n        this.#nextId = 1;\n        this.#options = Object.assign({ }, defaultOptions, options || { });\n\n        this.#payloads = [ ];\n        this.#drainTimer = null;\n\n        this.#network = null;\n        this.#pendingDetectNetwork = null;\n\n        {\n            let resolve: null | ((value: void) => void) = null;\n            const promise = new Promise((_resolve: (value: void) => void) => {\n                resolve = _resolve;\n            });\n            this.#notReady = { promise, resolve };\n        }\n\n        const staticNetwork = this._getOption(\"staticNetwork\");\n        if (typeof(staticNetwork) === \"boolean\") {\n            assertArgument(!staticNetwork || network !== \"any\", \"staticNetwork cannot be used on special network 'any'\", \"options\", options);\n            if (staticNetwork && network != null) {\n                this.#network = Network.from(network);\n            }\n\n        } else if (staticNetwork) {\n            // Make sure any static network is compatbile with the provided netwrok\n            assertArgument(network == null || staticNetwork.matches(network),\n                \"staticNetwork MUST match network object\", \"options\", options);\n            this.#network = staticNetwork;\n        }\n    }\n\n    /**\n     *  Returns the value associated with the option %%key%%.\n     *\n     *  Sub-classes can use this to inquire about configuration options.\n     */\n    _getOption<K extends keyof JsonRpcApiProviderOptions>(key: K): JsonRpcApiProviderOptions[K] {\n        return this.#options[key];\n    }\n\n    /**\n     *  Gets the [[Network]] this provider has committed to. On each call, the network\n     *  is detected, and if it has changed, the call will reject.\n     */\n    get _network(): Network {\n        assert (this.#network, \"network is not available yet\", \"NETWORK_ERROR\");\n        return this.#network;\n    }\n\n    /**\n     *  Sends a JSON-RPC %%payload%% (or a batch) to the underlying channel.\n     *\n     *  Sub-classes **MUST** override this.\n     */\n    abstract _send(payload: JsonRpcPayload | Array<JsonRpcPayload>): Promise<Array<JsonRpcResult | JsonRpcError>>;\n\n\n    /**\n     *  Resolves to the non-normalized value by performing %%req%%.\n     *\n     *  Sub-classes may override this to modify behavior of actions,\n     *  and should generally call ``super._perform`` as a fallback.\n     */\n    async _perform(req: PerformActionRequest): Promise<any> {\n\n        // Legacy networks do not like the type field being passed along (which\n        // is fair), so we delete type if it is 0 and a non-EIP-1559 network\n        if (req.method === \"call\" || req.method === \"estimateGas\") {\n            let tx = req.transaction;\n            if (tx && tx.type != null && getBigInt(tx.type)) {\n                // If there are no EIP-1559 or newer properties, it might be pre-EIP-1559\n                if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {\n                    const feeData = await this.getFeeData();\n                    if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {\n                        // Network doesn't know about EIP-1559 (and hence type)\n                        req = Object.assign({ }, req, {\n                            transaction: Object.assign({ }, tx, { type: undefined })\n                        });\n                    }\n                }\n            }\n        }\n\n        const request = this.getRpcRequest(req);\n\n        if (request != null) {\n            return await this.send(request.method, request.args);\n        }\n\n        return super._perform(req);\n    }\n\n    /**\n     *  Sub-classes may override this; it detects the *actual* network that\n     *  we are **currently** connected to.\n     *\n     *  Keep in mind that [[send]] may only be used once [[ready]], otherwise the\n     *  _send primitive must be used instead.\n     */\n    async _detectNetwork(): Promise<Network> {\n        const network = this._getOption(\"staticNetwork\");\n        if (network) {\n            if (network === true) {\n                if (this.#network) { return this.#network; }\n            } else {\n                return network;\n            }\n        }\n\n        if (this.#pendingDetectNetwork) {\n            return await this.#pendingDetectNetwork;\n        }\n\n        // If we are ready, use ``send``, which enabled requests to be batched\n        if (this.ready) {\n            this.#pendingDetectNetwork = (async () => {\n                try {\n                    const result = Network.from(getBigInt(await this.send(\"eth_chainId\", [ ])));\n                    this.#pendingDetectNetwork = null;\n                    return result;\n                } catch (error) {\n                    this.#pendingDetectNetwork = null;\n                    throw error;\n                }\n            })();\n            return await this.#pendingDetectNetwork;\n        }\n\n        // We are not ready yet; use the primitive _send\n        this.#pendingDetectNetwork = (async () => {\n            const payload: JsonRpcPayload = {\n                id: this.#nextId++, method: \"eth_chainId\", params: [ ], jsonrpc: \"2.0\"\n            };\n\n            this.emit(\"debug\", { action: \"sendRpcPayload\", payload });\n\n            let result: JsonRpcResult | JsonRpcError;\n            try {\n                result = (await this._send(payload))[0];\n                this.#pendingDetectNetwork = null;\n            } catch (error) {\n                this.#pendingDetectNetwork = null;\n                this.emit(\"debug\", { action: \"receiveRpcError\", error });\n                throw error;\n            }\n\n            this.emit(\"debug\", { action: \"receiveRpcResult\", result });\n\n            if (\"result\" in result) {\n                return Network.from(getBigInt(result.result));\n            }\n\n            throw this.getRpcError(payload, result);\n        })();\n\n        return await this.#pendingDetectNetwork;\n    }\n\n    /**\n     *  Sub-classes **MUST** call this. Until [[_start]] has been called, no calls\n     *  will be passed to [[_send]] from [[send]]. If it is overridden, then\n     *  ``super._start()`` **MUST** be called.\n     *\n     *  Calling it multiple times is safe and has no effect.\n     */\n    _start(): void {\n        if (this.#notReady == null || this.#notReady.resolve == null) { return; }\n\n        this.#notReady.resolve();\n        this.#notReady = null;\n\n        (async () => {\n\n            // Bootstrap the network\n            while (this.#network == null && !this.destroyed) {\n                try {\n                    this.#network = await this._detectNetwork();\n                } catch (error) {\n                    if (this.destroyed) { break; }\n                    console.log(\"JsonRpcProvider failed to detect network and cannot start up; retry in 1s (perhaps the URL is wrong or the node is not started)\");\n                    this.emit(\"error\", makeError(\"failed to bootstrap network detection\", \"NETWORK_ERROR\", { event: \"initial-network-discovery\", info: { error } }));\n                    await stall(1000);\n                }\n            }\n\n            // Start dispatching requests\n            this.#scheduleDrain();\n        })();\n    }\n\n    /**\n     *  Resolves once the [[_start]] has been called. This can be used in\n     *  sub-classes to defer sending data until the connection has been\n     *  established.\n     */\n    async _waitUntilReady(): Promise<void> {\n        if (this.#notReady == null) { return; }\n        return await this.#notReady.promise;\n    }\n\n\n    /**\n     *  Return a Subscriber that will manage the %%sub%%.\n     *\n     *  Sub-classes may override this to modify the behavior of\n     *  subscription management.\n     */\n    _getSubscriber(sub: Subscription): Subscriber {\n\n        // Pending Filters aren't availble via polling\n        if (sub.type === \"pending\") { return new FilterIdPendingSubscriber(this); }\n\n        if (sub.type === \"event\") {\n            if (this._getOption(\"polling\")) {\n                return new PollingEventSubscriber(this, sub.filter);\n            }\n            return new FilterIdEventSubscriber(this, sub.filter);\n        }\n\n        // Orphaned Logs are handled automatically, by the filter, since\n        // logs with removed are emitted by it\n        if (sub.type === \"orphan\" && sub.filter.orphan === \"drop-log\") {\n            return new UnmanagedSubscriber(\"orphan\");\n        }\n\n        return super._getSubscriber(sub);\n    }\n\n    /**\n     *  Returns true only if the [[_start]] has been called.\n     */\n    get ready(): boolean { return this.#notReady == null; }\n\n    /**\n     *  Returns %%tx%% as a normalized JSON-RPC transaction request,\n     *  which has all values hexlified and any numeric values converted\n     *  to Quantity values.\n     */\n    getRpcTransaction(tx: TransactionRequest): JsonRpcTransactionRequest {\n        const result: JsonRpcTransactionRequest = {};\n\n        // JSON-RPC now requires numeric values to be \"quantity\" values\n        [\"chainId\", \"gasLimit\", \"gasPrice\", \"type\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"value\"].forEach((key) => {\n            if ((<any>tx)[key] == null) { return; }\n            let dstKey = key;\n            if (key === \"gasLimit\") { dstKey = \"gas\"; }\n            (<any>result)[dstKey] = toQuantity(getBigInt((<any>tx)[key], `tx.${ key }`));\n        });\n\n        // Make sure addresses and data are lowercase\n        [\"from\", \"to\", \"data\"].forEach((key) => {\n            if ((<any>tx)[key] == null) { return; }\n            (<any>result)[key] = hexlify((<any>tx)[key]);\n        });\n\n        // Normalize the access list object\n        if (tx.accessList) {\n            result[\"accessList\"] = accessListify(tx.accessList);\n        }\n\n        if (tx.blobVersionedHashes) {\n            // @TODO: Remove this <any> case once EIP-4844 added to prepared tx\n            (<any>result)[\"blobVersionedHashes\"] = tx.blobVersionedHashes.map(h => h.toLowerCase());\n        }\n\n        if (tx.authorizationList) {\n            result[\"authorizationList\"] = tx.authorizationList.map((_a) => {\n                const a = authorizationify(_a);\n                return {\n                    address: a.address,\n                    nonce: toQuantity(a.nonce),\n                    chainId: toQuantity(a.chainId),\n                    yParity: toQuantity(a.signature.yParity),\n                    r: toQuantity(a.signature.r),\n                    s: toQuantity(a.signature.s),\n                }\n            });\n        }\n\n        // @TODO: blobs should probably also be copied over, optionally\n        // accounting for the kzg property to backfill blobVersionedHashes\n        // using the commitment. Or should that be left as an exercise to\n        // the caller?\n\n        return result;\n    }\n\n    /**\n     *  Returns the request method and arguments required to perform\n     *  %%req%%.\n     */\n    getRpcRequest(req: PerformActionRequest): null | { method: string, args: Array<any> } {\n        switch (req.method) {\n            case \"chainId\":\n                return { method: \"eth_chainId\", args: [ ] };\n\n            case \"getBlockNumber\":\n                return { method: \"eth_blockNumber\", args: [ ] };\n\n            case \"getGasPrice\":\n                return { method: \"eth_gasPrice\", args: [] };\n\n            case \"getPriorityFee\":\n                return { method: \"eth_maxPriorityFeePerGas\", args: [ ] };\n\n            case \"getBalance\":\n                return {\n                    method: \"eth_getBalance\",\n                    args: [ getLowerCase(req.address), req.blockTag ]\n                };\n\n            case \"getTransactionCount\":\n                return {\n                    method: \"eth_getTransactionCount\",\n                    args: [ getLowerCase(req.address), req.blockTag ]\n                };\n\n            case \"getCode\":\n                return {\n                    method: \"eth_getCode\",\n                    args: [ getLowerCase(req.address), req.blockTag ]\n                };\n\n            case \"getStorage\":\n                return {\n                    method: \"eth_getStorageAt\",\n                    args: [\n                        getLowerCase(req.address),\n                        (\"0x\" + req.position.toString(16)),\n                        req.blockTag\n                    ]\n                };\n\n            case \"broadcastTransaction\":\n                return {\n                    method: \"eth_sendRawTransaction\",\n                    args: [ req.signedTransaction ]\n                };\n\n            case \"getBlock\":\n                if (\"blockTag\" in req) {\n                    return {\n                        method: \"eth_getBlockByNumber\",\n                        args: [ req.blockTag, !!req.includeTransactions ]\n                    };\n                } else if (\"blockHash\" in req) {\n                    return {\n                        method: \"eth_getBlockByHash\",\n                        args: [ req.blockHash, !!req.includeTransactions ]\n                    };\n                }\n                break;\n\n            case \"getTransaction\":\n                return {\n                    method: \"eth_getTransactionByHash\",\n                    args: [ req.hash ]\n                };\n\n            case \"getTransactionReceipt\":\n                return {\n                    method: \"eth_getTransactionReceipt\",\n                    args: [ req.hash ]\n                };\n\n            case \"call\":\n                return {\n                    method: \"eth_call\",\n                    args: [ this.getRpcTransaction(req.transaction), req.blockTag ]\n                };\n\n            case \"estimateGas\": {\n                return {\n                    method: \"eth_estimateGas\",\n                    args: [ this.getRpcTransaction(req.transaction) ]\n                };\n            }\n\n            case \"getLogs\":\n                if (req.filter && req.filter.address != null) {\n                    if (Array.isArray(req.filter.address)) {\n                        req.filter.address = req.filter.address.map(getLowerCase);\n                    } else {\n                        req.filter.address = getLowerCase(req.filter.address);\n                    }\n                }\n                return { method: \"eth_getLogs\", args: [ req.filter ] };\n        }\n\n        return null;\n    }\n\n    /**\n     *  Returns an ethers-style Error for the given JSON-RPC error\n     *  %%payload%%, coalescing the various strings and error shapes\n     *  that different nodes return, coercing them into a machine-readable\n     *  standardized error.\n     */\n    getRpcError(payload: JsonRpcPayload, _error: JsonRpcError): Error {\n        const { method } = payload;\n        const { error } = _error;\n\n        if (method === \"eth_estimateGas\" && error.message) {\n            const msg = error.message;\n            if (!msg.match(/revert/i) && msg.match(/insufficient funds/i)) {\n                return makeError(\"insufficient funds\", \"INSUFFICIENT_FUNDS\", {\n                    transaction: ((<any>payload).params[0]),\n                    info: { payload, error }\n                });\n            } else if (msg.match(/nonce/i) && msg.match(/too low/i)) {\n                return makeError(\"nonce has already been used\", \"NONCE_EXPIRED\", {\n                    transaction: ((<any>payload).params[0]),\n                    info: { payload, error }\n                });\n            }\n        }\n\n        if (method === \"eth_call\" || method === \"eth_estimateGas\") {\n            const result = spelunkData(error);\n\n            const e = AbiCoder.getBuiltinCallException(\n                (method === \"eth_call\") ? \"call\": \"estimateGas\",\n                ((<any>payload).params[0]),\n                (result ? result.data: null)\n            );\n            e.info = { error, payload };\n            return e;\n        }\n\n        // Only estimateGas and call can return arbitrary contract-defined text, so now we\n        // we can process text safely.\n\n        const message = JSON.stringify(spelunkMessage(error));\n\n        if (typeof(error.message) === \"string\" && error.message.match(/user denied|ethers-user-denied/i)) {\n            const actionMap: Record<string, \"requestAccess\" | \"sendTransaction\" | \"signMessage\" | \"signTransaction\" | \"signTypedData\"> = {\n                eth_sign: \"signMessage\",\n                personal_sign: \"signMessage\",\n                eth_signTypedData_v4: \"signTypedData\",\n                eth_signTransaction: \"signTransaction\",\n                eth_sendTransaction: \"sendTransaction\",\n                eth_requestAccounts: \"requestAccess\",\n                wallet_requestAccounts: \"requestAccess\",\n            };\n\n            return makeError(`user rejected action`, \"ACTION_REJECTED\", {\n                action: (actionMap[method] || \"unknown\") ,\n                reason: \"rejected\",\n                info: { payload, error }\n            });\n        }\n\n        if (method === \"eth_sendRawTransaction\" || method === \"eth_sendTransaction\") {\n            const transaction = <TransactionLike<string>>((<any>payload).params[0]);\n\n            if (message.match(/insufficient funds|base fee exceeds gas limit/i)) {\n                return makeError(\"insufficient funds for intrinsic transaction cost\", \"INSUFFICIENT_FUNDS\", {\n                    transaction, info: { error }\n                });\n            }\n\n            if (message.match(/nonce/i) && message.match(/too low/i)) {\n                return makeError(\"nonce has already been used\", \"NONCE_EXPIRED\", { transaction, info: { error } });\n            }\n\n            // \"replacement transaction underpriced\"\n            if (message.match(/replacement transaction/i) && message.match(/underpriced/i)) {\n                return makeError(\"replacement fee too low\", \"REPLACEMENT_UNDERPRICED\", { transaction, info: { error } });\n            }\n\n            if (message.match(/only replay-protected/i)) {\n                return makeError(\"legacy pre-eip-155 transactions not supported\", \"UNSUPPORTED_OPERATION\", {\n                    operation: method, info: { transaction, info: { error } }\n                });\n            }\n        }\n\n        let unsupported = !!message.match(/the method .* does not exist/i);\n        if (!unsupported) {\n            if (error && (<any>error).details && (<any>error).details.startsWith(\"Unauthorized method:\")) {\n                unsupported = true;\n            }\n        }\n\n        if (unsupported) {\n            return makeError(\"unsupported operation\", \"UNSUPPORTED_OPERATION\", {\n                operation: payload.method, info: { error, payload }\n            });\n        }\n\n        return makeError(\"could not coalesce error\", \"UNKNOWN_ERROR\", { error, payload });\n    }\n\n\n    /**\n     *  Requests the %%method%% with %%params%% via the JSON-RPC protocol\n     *  over the underlying channel. This can be used to call methods\n     *  on the backend that do not have a high-level API within the Provider\n     *  API.\n     *\n     *  This method queues requests according to the batch constraints\n     *  in the options, assigns the request a unique ID.\n     *\n     *  **Do NOT override** this method in sub-classes; instead\n     *  override [[_send]] or force the options values in the\n     *  call to the constructor to modify this method's behavior.\n     */\n    send(method: string, params: Array<any> | Record<string, any>): Promise<any> {\n        // @TODO: cache chainId?? purge on switch_networks\n\n        // We have been destroyed; no operations are supported anymore\n        if (this.destroyed) {\n            return Promise.reject(makeError(\"provider destroyed; cancelled request\", \"UNSUPPORTED_OPERATION\", { operation: method }));\n        }\n\n        const id = this.#nextId++;\n        const promise = new Promise((resolve, reject) => {\n            this.#payloads.push({\n                resolve, reject,\n                payload: { method, params, id, jsonrpc: \"2.0\" }\n            });\n        });\n\n        // If there is not a pending drainTimer, set one\n        this.#scheduleDrain();\n\n        return <Promise<JsonRpcResult>>promise;\n    }\n\n    /**\n     *  Resolves to the [[Signer]] account for  %%address%% managed by\n     *  the client.\n     *\n     *  If the %%address%% is a number, it is used as an index in the\n     *  the accounts from [[listAccounts]].\n     *\n     *  This can only be used on clients which manage accounts (such as\n     *  Geth with imported account or MetaMask).\n     *\n     *  Throws if the account doesn't exist.\n     */\n    async getSigner(address?: number | string): Promise<JsonRpcSigner> {\n        if (address == null) { address = 0; }\n\n        const accountsPromise = this.send(\"eth_accounts\", [ ]);\n\n        // Account index\n        if (typeof(address) === \"number\") {\n            const accounts = <Array<string>>(await accountsPromise);\n            if (address >= accounts.length) { throw new Error(\"no such account\"); }\n            return new JsonRpcSigner(this, accounts[address]);\n        }\n\n        const { accounts } = await resolveProperties({\n            network: this.getNetwork(),\n            accounts: accountsPromise\n        });\n\n        // Account address\n        address = getAddress(address);\n        for (const account of accounts) {\n            if (getAddress(account) === address) {\n                return new JsonRpcSigner(this, address);\n            }\n        }\n\n        throw new Error(\"invalid account\");\n    }\n\n    async listAccounts(): Promise<Array<JsonRpcSigner>> {\n        const accounts: Array<string> = await this.send(\"eth_accounts\", [ ]);\n        return accounts.map((a) => new JsonRpcSigner(this, a));\n    }\n\n    destroy(): void {\n\n        // Stop processing requests\n        if (this.#drainTimer) {\n            clearTimeout(this.#drainTimer);\n            this.#drainTimer = null;\n        }\n\n        // Cancel all pending requests\n        for (const { payload, reject } of this.#payloads) {\n            reject(makeError(\"provider destroyed; cancelled request\", \"UNSUPPORTED_OPERATION\", { operation: payload.method }));\n        }\n\n        this.#payloads = [ ];\n\n        // Parent clean-up\n        super.destroy();\n\n    }\n}\n\n// @TODO: remove this in v7, it is not exported because this functionality\n// is exposed in the JsonRpcApiProvider by setting polling to true. It should\n// be safe to remove regardless, because it isn't reachable, but just in case.\n/**\n *  @_ignore:\n */\nexport abstract class JsonRpcApiPollingProvider extends JsonRpcApiProvider {\n    #pollingInterval: number;\n    constructor(network?: Networkish, options?: JsonRpcApiProviderOptions) {\n        super(network, options);\n\n        let pollingInterval = this._getOption(\"pollingInterval\");\n        if (pollingInterval == null) { pollingInterval = defaultOptions.pollingInterval; }\n\n        this.#pollingInterval = pollingInterval;\n    }\n\n    _getSubscriber(sub: Subscription): Subscriber {\n        const subscriber = super._getSubscriber(sub);\n        if (isPollable(subscriber)) {\n            subscriber.pollingInterval = this.#pollingInterval;\n        }\n        return subscriber;\n    }\n\n    /**\n     *  The polling interval (default: 4000 ms)\n     */\n    get pollingInterval(): number { return this.#pollingInterval; }\n    set pollingInterval(value: number) {\n        if (!Number.isInteger(value) || value < 0) { throw new Error(\"invalid interval\"); }\n        this.#pollingInterval = value;\n        this._forEachSubscriber((sub) => {\n            if (isPollable(sub)) {\n                sub.pollingInterval = this.#pollingInterval;\n            }\n        });\n    }\n}\n\n/**\n *  The JsonRpcProvider is one of the most common Providers,\n *  which performs all operations over HTTP (or HTTPS) requests.\n *\n *  Events are processed by polling the backend for the current block\n *  number; when it advances, all block-base events are then checked\n *  for updates.\n */\nexport class JsonRpcProvider extends JsonRpcApiPollingProvider {\n    #connect: FetchRequest;\n\n    constructor(url?: string | FetchRequest, network?: Networkish, options?: JsonRpcApiProviderOptions) {\n        if (url == null) { url = \"http:/\\/localhost:8545\"; }\n        super(network, options);\n\n        if (typeof(url) === \"string\") {\n            this.#connect = new FetchRequest(url);\n        } else {\n            this.#connect = url.clone();\n        }\n    }\n\n    _getConnection(): FetchRequest {\n        return this.#connect.clone();\n    }\n\n    async send(method: string, params: Array<any> | Record<string, any>): Promise<any> {\n        // All requests are over HTTP, so we can just start handling requests\n        // We do this here rather than the constructor so that we don't send any\n        // requests to the network (i.e. eth_chainId) until we absolutely have to.\n        await this._start();\n\n        return await super.send(method, params);\n    }\n\n    async _send(payload: JsonRpcPayload | Array<JsonRpcPayload>): Promise<Array<JsonRpcResult>> {\n        // Configure a POST connection for the requested method\n        const request = this._getConnection();\n        request.body = JSON.stringify(payload);\n        request.setHeader(\"content-type\", \"application/json\");\n        const response = await request.send();\n        response.assertOk();\n\n        let resp = response.bodyJson;\n        if (!Array.isArray(resp)) { resp = [ resp ]; }\n\n        return resp;\n    }\n}\n\nfunction spelunkData(value: any): null | { message: string, data: string } {\n    if (value == null) { return null; }\n\n    // These *are* the droids we're looking for.\n    if (typeof(value.message) === \"string\" && value.message.match(/revert/i) && isHexString(value.data)) {\n        return { message: value.message, data: value.data };\n    }\n\n    // Spelunk further...\n    if (typeof(value) === \"object\") {\n        for (const key in value) {\n            const result = spelunkData(value[key]);\n            if (result) { return result; }\n        }\n        return null;\n    }\n\n    // Might be a JSON string we can further descend...\n    if (typeof(value) === \"string\") {\n        try {\n            return spelunkData(JSON.parse(value));\n        } catch (error) { }\n    }\n\n    return null;\n}\n\nfunction _spelunkMessage(value: any, result: Array<string>): void {\n    if (value == null) { return; }\n\n    // These *are* the droids we're looking for.\n    if (typeof(value.message) === \"string\") {\n        result.push(value.message);\n    }\n\n    // Spelunk further...\n    if (typeof(value) === \"object\") {\n        for (const key in value) {\n            _spelunkMessage(value[key], result);\n        }\n    }\n\n    // Might be a JSON string we can further descend...\n    if (typeof(value) === \"string\") {\n        try {\n            return _spelunkMessage(JSON.parse(value), result);\n        } catch (error) { }\n    }\n}\n\nfunction spelunkMessage(value: any): Array<string> {\n    const result: Array<string> = [ ];\n    _spelunkMessage(value, result);\n    return result;\n}\n", "import { isError } from \"../utils/index.js\";\n\nimport { PollingEventSubscriber } from \"./subscriber-polling.js\";\n\nimport type { AbstractProvider, Subscriber } from \"./abstract-provider.js\";\nimport type { Network } from \"./network.js\";\nimport type { EventFilter } from \"./provider.js\";\nimport type { JsonRpcApiProvider } from \"./provider-jsonrpc.js\";\n\nfunction copy(obj: any): any {\n    return JSON.parse(JSON.stringify(obj));\n}\n\n/**\n *  Some backends support subscribing to events using a Filter ID.\n *\n *  When subscribing with this technique, the node issues a unique\n *  //Filter ID//. At this point the node dedicates resources to\n *  the filter, so that periodic calls to follow up on the //Filter ID//\n *  will receive any events since the last call.\n *\n *  @_docloc: api/providers/abstract-provider\n */\nexport class FilterIdSubscriber implements Subscriber {\n    #provider: JsonRpcApiProvider;\n\n    #filterIdPromise: null | Promise<string>;\n    #poller: (b: number) => Promise<void>;\n\n    #running: boolean;\n\n    #network: null | Network;\n\n    #hault: boolean;\n\n    /**\n     *  Creates a new **FilterIdSubscriber** which will used [[_subscribe]]\n     *  and [[_emitResults]] to setup the subscription and provide the event\n     *  to the %%provider%%.\n     */\n    constructor(provider: JsonRpcApiProvider) {\n        this.#provider = provider;\n\n        this.#filterIdPromise = null;\n        this.#poller = this.#poll.bind(this);\n\n        this.#running = false;\n\n        this.#network = null;\n\n        this.#hault = false;\n    }\n\n    /**\n     *  Sub-classes **must** override this to begin the subscription.\n     */\n    _subscribe(provider: JsonRpcApiProvider): Promise<string> {\n        throw new Error(\"subclasses must override this\");\n    }\n\n    /**\n     *  Sub-classes **must** override this handle the events.\n     */\n    _emitResults(provider: AbstractProvider, result: Array<any>): Promise<void> {\n        throw new Error(\"subclasses must override this\");\n    }\n\n    /**\n     *  Sub-classes **must** override this handle recovery on errors.\n     */\n    _recover(provider: AbstractProvider): Subscriber {\n        throw new Error(\"subclasses must override this\");\n    }\n\n    async #poll(blockNumber: number): Promise<void> {\n        try {\n            // Subscribe if necessary\n            if (this.#filterIdPromise == null) {\n                this.#filterIdPromise = this._subscribe(this.#provider);\n            }\n\n            // Get the Filter ID\n            let filterId: null | string = null;\n            try {\n                filterId = await this.#filterIdPromise;\n            } catch (error) {\n                if (!isError(error, \"UNSUPPORTED_OPERATION\") || error.operation !== \"eth_newFilter\") {\n                    throw error;\n                }\n            }\n\n            // The backend does not support Filter ID; downgrade to\n            // polling\n            if (filterId == null) {\n                this.#filterIdPromise = null;\n                this.#provider._recoverSubscriber(this, this._recover(this.#provider));\n                return;\n            }\n\n            const network = await this.#provider.getNetwork();\n            if (!this.#network) { this.#network = network; }\n\n            if ((this.#network as Network).chainId !== network.chainId) {\n                throw new Error(\"chaid changed\");\n            }\n\n            if (this.#hault) { return; }\n\n            const result = await this.#provider.send(\"eth_getFilterChanges\", [ filterId ]);\n            await this._emitResults(this.#provider, result);\n        } catch (error) { console.log(\"@TODO\", error); }\n\n        this.#provider.once(\"block\", this.#poller);\n    }\n\n    #teardown(): void {\n        const filterIdPromise = this.#filterIdPromise;\n        if (filterIdPromise) {\n            this.#filterIdPromise = null;\n            filterIdPromise.then((filterId) => {\n                if (this.#provider.destroyed) { return; }\n                this.#provider.send(\"eth_uninstallFilter\", [ filterId ]);\n            });\n        }\n    }\n\n    start(): void {\n        if (this.#running) { return; }\n        this.#running = true;\n\n        this.#poll(-2);\n    }\n\n    stop(): void {\n        if (!this.#running) { return; }\n        this.#running = false;\n\n        this.#hault = true;\n        this.#teardown();\n        this.#provider.off(\"block\", this.#poller);\n    }\n\n    pause(dropWhilePaused?: boolean): void {\n        if (dropWhilePaused){ this.#teardown(); }\n        this.#provider.off(\"block\", this.#poller);\n    }\n\n    resume(): void { this.start(); }\n}\n\n/**\n *  A **FilterIdSubscriber** for receiving contract events.\n *\n *  @_docloc: api/providers/abstract-provider\n */\nexport class FilterIdEventSubscriber extends FilterIdSubscriber {\n    #event: EventFilter;\n\n    /**\n     *  Creates a new **FilterIdEventSubscriber** attached to %%provider%%\n     *  listening for %%filter%%.\n     */\n    constructor(provider: JsonRpcApiProvider, filter: EventFilter) {\n        super(provider);\n        this.#event = copy(filter);\n    }\n\n    _recover(provider: AbstractProvider): Subscriber {\n        return new PollingEventSubscriber(provider, this.#event);\n    }\n\n    async _subscribe(provider: JsonRpcApiProvider): Promise<string> {\n        const filterId = await provider.send(\"eth_newFilter\", [ this.#event ]);\n        return filterId;\n    }\n\n    async _emitResults(provider: JsonRpcApiProvider, results: Array<any>): Promise<void> {\n        for (const result of results) {\n            provider.emit(this.#event, provider._wrapLog(result, provider._network));\n        }\n    }\n}\n\n/**\n *  A **FilterIdSubscriber** for receiving pending transactions events.\n *\n *  @_docloc: api/providers/abstract-provider\n */\nexport class FilterIdPendingSubscriber extends FilterIdSubscriber {\n    async _subscribe(provider: JsonRpcApiProvider): Promise<string> {\n        return await provider.send(\"eth_newPendingTransactionFilter\", [ ]);\n    }\n\n    async _emitResults(provider: JsonRpcApiProvider, results: Array<any>): Promise<void> {\n        for (const result of results) {\n            provider.emit(\"pending\", result);\n        }\n    }\n}\n", "/**\n *  [[link-alchemy]] provides a third-party service for connecting to\n *  various blockchains over JSON-RPC.\n *\n *  **Supported Networks**\n *\n *  - Ethereum Mainnet (``mainnet``)\n *  - Goerli Testnet (``goerli``)\n *  - Sepolia Testnet (``sepolia``)\n *  - Arbitrum (``arbitrum``)\n *  - Arbitrum Goerli Testnet (``arbitrum-goerli``)\n *  - Arbitrum Sepolia Testnet (``arbitrum-sepolia``)\n *  - Base (``base``)\n *  - Base Goerlia Testnet (``base-goerli``)\n *  - Base Sepolia Testnet (``base-sepolia``)\n *  - Optimism (``optimism``)\n *  - Optimism Goerli Testnet (``optimism-goerli``)\n *  - Optimism Sepolia Testnet (``optimism-sepolia``)\n *  - Polygon (``matic``)\n *  - Polygon Amoy Testnet (``matic-amoy``)\n *  - Polygon Mumbai Testnet (``matic-mumbai``)\n *\n *  @_subsection: api/providers/thirdparty:Alchemy  [providers-alchemy]\n */\n\nimport {\n    defineProperties, resolveProperties, assert, assertArgument,\n    FetchRequest\n} from \"../utils/index.js\";\n\nimport { showThrottleMessage } from \"./community.js\";\nimport { Network } from \"./network.js\";\nimport { JsonRpcProvider } from \"./provider-jsonrpc.js\";\n\nimport type { AbstractProvider, PerformActionRequest } from \"./abstract-provider.js\";\nimport type { CommunityResourcable } from \"./community.js\";\nimport type { Networkish } from \"./network.js\";\n\n\nconst defaultApiKey = \"_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\"\n\nfunction getHost(name: string): string {\n    switch(name) {\n        case \"mainnet\":\n            return \"eth-mainnet.alchemyapi.io\";\n        case \"goerli\":\n            return \"eth-goerli.g.alchemy.com\";\n        case \"sepolia\":\n            return \"eth-sepolia.g.alchemy.com\";\n\n        case \"arbitrum\":\n            return \"arb-mainnet.g.alchemy.com\";\n        case \"arbitrum-goerli\":\n            return \"arb-goerli.g.alchemy.com\";\n        case \"arbitrum-sepolia\":\n            return \"arb-sepolia.g.alchemy.com\";\n        case \"base\":\n            return \"base-mainnet.g.alchemy.com\";\n        case \"base-goerli\":\n            return \"base-goerli.g.alchemy.com\";\n        case \"base-sepolia\":\n            return \"base-sepolia.g.alchemy.com\";\n        case \"matic\":\n            return \"polygon-mainnet.g.alchemy.com\";\n        case \"matic-amoy\":\n            return \"polygon-amoy.g.alchemy.com\";\n        case \"matic-mumbai\":\n            return \"polygon-mumbai.g.alchemy.com\";\n        case \"optimism\":\n            return \"opt-mainnet.g.alchemy.com\";\n        case \"optimism-goerli\":\n            return \"opt-goerli.g.alchemy.com\";\n        case \"optimism-sepolia\":\n            return \"opt-sepolia.g.alchemy.com\";\n    }\n\n    assertArgument(false, \"unsupported network\", \"network\", name);\n}\n\n/**\n *  The **AlchemyProvider** connects to the [[link-alchemy]]\n *  JSON-RPC end-points.\n *\n *  By default, a highly-throttled API key is used, which is\n *  appropriate for quick prototypes and simple scripts. To\n *  gain access to an increased rate-limit, it is highly\n *  recommended to [sign up here](link-alchemy-signup).\n *\n *  @_docloc: api/providers/thirdparty\n */\nexport class AlchemyProvider extends JsonRpcProvider implements CommunityResourcable {\n    readonly apiKey!: string;\n\n    constructor(_network?: Networkish, apiKey?: null | string) {\n        if (_network == null) { _network = \"mainnet\"; }\n        const network = Network.from(_network);\n        if (apiKey == null) { apiKey = defaultApiKey; }\n\n        const request = AlchemyProvider.getRequest(network, apiKey);\n        super(request, network, { staticNetwork: network });\n\n        defineProperties<AlchemyProvider>(this, { apiKey });\n    }\n\n    _getProvider(chainId: number): AbstractProvider {\n        try {\n            return new AlchemyProvider(chainId, this.apiKey);\n        } catch (error) { }\n        return super._getProvider(chainId);\n    }\n\n    async _perform(req: PerformActionRequest): Promise<any> {\n\n        // https://docs.alchemy.com/reference/trace-transaction\n        if (req.method === \"getTransactionResult\") {\n            const { trace, tx } = await resolveProperties({\n                trace: this.send(\"trace_transaction\", [ req.hash ]),\n                tx: this.getTransaction(req.hash)\n            });\n            if (trace == null || tx == null) { return null; }\n\n            let data: undefined | string;\n            let error = false;\n            try {\n                data = trace[0].result.output;\n                error = (trace[0].error === \"Reverted\");\n            } catch (error) { }\n\n            if (data) {\n                assert(!error, \"an error occurred during transaction executions\", \"CALL_EXCEPTION\", {\n                    action: \"getTransactionResult\",\n                    data,\n                    reason: null,\n                    transaction: tx,\n                    invocation: null,\n                    revert: null // @TODO\n                });\n                return data;\n            }\n\n            assert(false, \"could not parse trace result\", \"BAD_DATA\", { value: trace });\n        }\n\n        return await super._perform(req);\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === defaultApiKey);\n    }\n\n    static getRequest(network: Network, apiKey?: string): FetchRequest {\n        if (apiKey == null) { apiKey = defaultApiKey; }\n\n        const request = new FetchRequest(`https:/\\/${ getHost(network.name) }/v2/${ apiKey }`);\n        request.allowGzip = true;\n\n        if (apiKey === defaultApiKey) {\n            request.retryFunc = async (request, response, attempt) => {\n                showThrottleMessage(\"alchemy\");\n                return true;\n            }\n        }\n\n        return request;\n    }\n}\n", "/**\n *  [[link-chainstack]] provides a third-party service for connecting to\n *  various blockchains over JSON-RPC.\n *\n *  **Supported Networks**\n *\n *  - Ethereum Mainnet (``mainnet``)\n *  - Arbitrum (``arbitrum``)\n *  - BNB Smart Chain Mainnet (``bnb``)\n *  - Polygon (``matic``)\n *\n *  @_subsection: api/providers/thirdparty:Chainstack  [providers-chainstack]\n */\nimport {\n    defineProperties, FetchRequest, assertArgument\n} from \"../utils/index.js\";\n\nimport { showThrottleMessage } from \"./community.js\";\nimport { Network } from \"./network.js\";\nimport { JsonRpcProvider } from \"./provider-jsonrpc.js\";\n\nimport type { AbstractProvider } from \"./abstract-provider.js\";\nimport type { CommunityResourcable } from \"./community.js\";\nimport type { Networkish } from \"./network.js\";\n\n\nfunction getApiKey(name: string): string {\n    switch (name) {\n        case \"mainnet\": return \"39f1d67cedf8b7831010a665328c9197\";\n        case \"arbitrum\": return \"0550c209db33c3abf4cc927e1e18cea1\"\n        case \"bnb\": return \"98b5a77e531614387366f6fc5da097f8\";\n        case \"matic\": return \"cd9d4d70377471aa7c142ec4a4205249\";\n    }\n\n    assertArgument(false, \"unsupported network\", \"network\", name);\n}\n\nfunction getHost(name: string): string {\n    switch(name) {\n        case \"mainnet\":\n            return \"ethereum-mainnet.core.chainstack.com\";\n        case \"arbitrum\":\n            return \"arbitrum-mainnet.core.chainstack.com\";\n        case \"bnb\":\n            return \"bsc-mainnet.core.chainstack.com\";\n        case \"matic\":\n            return \"polygon-mainnet.core.chainstack.com\";\n    }\n\n    assertArgument(false, \"unsupported network\", \"network\", name);\n}\n\n/**\n *  The **ChainstackProvider** connects to the [[link-chainstack]]\n *  JSON-RPC end-points.\n *\n *  By default, a highly-throttled API key is used, which is\n *  appropriate for quick prototypes and simple scripts. To\n *  gain access to an increased rate-limit, it is highly\n *  recommended to [sign up here](link-chainstack).\n */\nexport class ChainstackProvider extends JsonRpcProvider implements CommunityResourcable {\n    /**\n     *  The API key for the Chainstack connection.\n     */\n    readonly apiKey!: string;\n\n    /**\n     *  Creates a new **ChainstackProvider**.\n     */\n    constructor(_network?: Networkish, apiKey?: null | string) {\n        if (_network == null) { _network = \"mainnet\"; }\n        const network = Network.from(_network);\n\n        if (apiKey == null) { apiKey = getApiKey(network.name); }\n\n        const request = ChainstackProvider.getRequest(network, apiKey);\n        super(request, network, { staticNetwork: network });\n\n        defineProperties<ChainstackProvider>(this, { apiKey });\n    }\n\n    _getProvider(chainId: number): AbstractProvider {\n        try {\n            return new ChainstackProvider(chainId, this.apiKey);\n        } catch (error) { }\n        return super._getProvider(chainId);\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === getApiKey(this._network.name));\n    }\n\n    /**\n     *  Returns a prepared request for connecting to %%network%%\n     *  with %%apiKey%% and %%projectSecret%%.\n     */\n    static getRequest(network: Network, apiKey?: null | string): FetchRequest {\n        if (apiKey == null) { apiKey = getApiKey(network.name); }\n\n        const request = new FetchRequest(`https:/\\/${ getHost(network.name) }/${ apiKey }`);\n        request.allowGzip = true;\n\n        if (apiKey === getApiKey(network.name)) {\n            request.retryFunc = async (request, response, attempt) => {\n                showThrottleMessage(\"ChainstackProvider\");\n                return true;\n            };\n        }\n\n        return request;\n    }\n}\n", "/**\n *  About Cloudflare\n *\n *  @_subsection: api/providers/thirdparty:Cloudflare  [providers-cloudflare]\n */\n\nimport { assertArgument } from \"../utils/index.js\";\n\nimport { Network } from \"./network.js\";\nimport { JsonRpcProvider } from \"./provider-jsonrpc.js\";\n\nimport type { Networkish } from \"./network.js\";\n\n/**\n *  About Cloudflare...\n */\nexport class CloudflareProvider extends JsonRpcProvider {\n    constructor(_network?: Networkish) {\n        if (_network == null) { _network = \"mainnet\"; }\n        const network = Network.from(_network);\n        assertArgument(network.name === \"mainnet\", \"unsupported network\", \"network\", _network);\n        super(\"https:/\\/cloudflare-eth.com/\", network, { staticNetwork: network });\n    }\n}\n", "/**\n *  [[link-etherscan]] provides a third-party service for connecting to\n *  various blockchains over a combination of JSON-RPC and custom API\n *  endpoints.\n *\n *  **Supported Networks**\n *\n *  - Ethereum Mainnet (``mainnet``)\n *  - Goerli Testnet (``goerli``)\n *  - Sepolia Testnet (``sepolia``)\n *  - Holesky Testnet (``holesky``)\n *  - Arbitrum (``arbitrum``)\n *  - Arbitrum Goerli Testnet (``arbitrum-goerli``)\n *  - Base (``base``)\n *  - Base Sepolia Testnet (``base-sepolia``)\n *  - BNB Smart Chain Mainnet (``bnb``)\n *  - BNB Smart Chain Testnet (``bnbt``)\n *  - Optimism (``optimism``)\n *  - Optimism Goerli Testnet (``optimism-goerli``)\n *  - Polygon (``matic``)\n *  - Polygon Mumbai Testnet (``matic-mumbai``)\n *  - Polygon Amoy Testnet (``matic-amoy``)\n *\n *  @_subsection api/providers/thirdparty:Etherscan  [providers-etherscan]\n */\n\nimport { AbiCoder } from \"../abi/index.js\";\nimport { Contract } from \"../contract/index.js\";\nimport { accessListify, Transaction } from \"../transaction/index.js\";\nimport {\n    defineProperties,\n    hexlify, toQuantity,\n    FetchRequest,\n    assert, assertArgument, isError,\n//    parseUnits,\n    toUtf8String\n } from \"../utils/index.js\";\n\nimport { AbstractProvider } from \"./abstract-provider.js\";\nimport { Network } from \"./network.js\";\nimport { NetworkPlugin } from \"./plugins-network.js\";\nimport { showThrottleMessage } from \"./community.js\";\n\nimport { PerformActionRequest } from \"./abstract-provider.js\";\nimport type { Networkish } from \"./network.js\";\n//import type { } from \"./pagination\";\nimport type { TransactionRequest } from \"./provider.js\";\n\nconst THROTTLE = 2000;\n\nfunction isPromise<T = any>(value: any): value is Promise<T> {\n    return (value && typeof(value.then) === \"function\");\n}\n\n\n/**\n *  When subscribing to the ``\"debug\"`` event on an Etherscan-based\n *  provider, the events receive a **DebugEventEtherscanProvider**\n *  payload.\n *\n *  @_docloc: api/providers/thirdparty:Etherscan\n */\nexport type DebugEventEtherscanProvider = {\n    action: \"sendRequest\",\n    id: number,\n    url: string,\n    payload: Record<string, any>\n} | {\n    action: \"receiveRequest\",\n    id: number,\n    result: any\n} | {\n    action: \"receiveError\",\n    id: number,\n    error: any\n};\n\nconst EtherscanPluginId = \"org.ethers.plugins.provider.Etherscan\";\n\n/**\n *  A Network can include an **EtherscanPlugin** to provide\n *  a custom base URL.\n *\n *  @_docloc: api/providers/thirdparty:Etherscan\n */\nexport class EtherscanPlugin extends NetworkPlugin {\n    /**\n     *  The Etherscan API base URL.\n     */\n    readonly baseUrl!: string;\n\n    /**\n     *  Creates a new **EtherscanProvider** which will use\n     *  %%baseUrl%%.\n     */\n    constructor(baseUrl: string) {\n        super(EtherscanPluginId);\n        defineProperties<EtherscanPlugin>(this, { baseUrl });\n    }\n\n    clone(): EtherscanPlugin {\n        return new EtherscanPlugin(this.baseUrl);\n    }\n}\n\nconst skipKeys = [ \"enableCcipRead\" ];\n\nlet nextId = 1;\n\n/**\n *  The **EtherscanBaseProvider** is the super-class of\n *  [[EtherscanProvider]], which should generally be used instead.\n *\n *  Since the **EtherscanProvider** includes additional code for\n *  [[Contract]] access, in //rare cases// that contracts are not\n *  used, this class can reduce code size.\n *\n *  @_docloc: api/providers/thirdparty:Etherscan\n */\nexport class EtherscanProvider extends AbstractProvider {\n\n    /**\n     *  The connected network.\n     */\n    readonly network!: Network;\n\n    /**\n     *  The API key or null if using the community provided bandwidth.\n     */\n    readonly apiKey!: null | string;\n\n    readonly #plugin: null | EtherscanPlugin;\n\n    /**\n     *  Creates a new **EtherscanBaseProvider**.\n     */\n    constructor(_network?: Networkish, _apiKey?: string) {\n        const apiKey = (_apiKey != null) ? _apiKey: null;\n\n        super();\n\n        const network = Network.from(_network);\n\n        this.#plugin = network.getPlugin<EtherscanPlugin>(EtherscanPluginId);\n\n        defineProperties<EtherscanProvider>(this, { apiKey, network });\n    }\n\n    /**\n     *  Returns the base URL.\n     *\n     *  If an [[EtherscanPlugin]] is configured on the\n     *  [[EtherscanBaseProvider_network]], returns the plugin's\n     *  baseUrl.\n     *\n     *  Deprecated; for Etherscan v2 the base is no longer a simply\n     *  host, but instead a URL including a chainId parameter. Changing\n     *  this to return a URL prefix could break some libraries, so it\n     *  is left intact but will be removed in the future as it is unused.\n     */\n    getBaseUrl(): string {\n        if (this.#plugin) { return this.#plugin.baseUrl; }\n\n        switch(this.network.name) {\n            case \"mainnet\":\n                return \"https:/\\/api.etherscan.io\";\n            case \"goerli\":\n                return \"https:/\\/api-goerli.etherscan.io\";\n            case \"sepolia\":\n                return \"https:/\\/api-sepolia.etherscan.io\";\n            case \"holesky\":\n                return \"https:/\\/api-holesky.etherscan.io\";\n\n            case \"arbitrum\":\n                return \"https:/\\/api.arbiscan.io\";\n            case \"arbitrum-goerli\":\n                return \"https:/\\/api-goerli.arbiscan.io\";\n           case \"base\":\n                return \"https:/\\/api.basescan.org\";\n            case \"base-sepolia\":\n                return \"https:/\\/api-sepolia.basescan.org\";\n            case \"bnb\":\n                return \"https:/\\/api.bscscan.com\";\n            case \"bnbt\":\n                return \"https:/\\/api-testnet.bscscan.com\";\n            case \"matic\":\n                return \"https:/\\/api.polygonscan.com\";\n            case \"matic-amoy\":\n                return \"https:/\\/api-amoy.polygonscan.com\";\n            case \"matic-mumbai\":\n                return \"https:/\\/api-testnet.polygonscan.com\";\n            case \"optimism\":\n                return \"https:/\\/api-optimistic.etherscan.io\";\n            case \"optimism-goerli\":\n                return \"https:/\\/api-goerli-optimistic.etherscan.io\";\n\n            default:\n        }\n\n        assertArgument(false, \"unsupported network\", \"network\", this.network);\n    }\n\n    /**\n     *  Returns the URL for the %%module%% and %%params%%.\n     */\n    getUrl(module: string, params: Record<string, string>): string {\n        let query = Object.keys(params).reduce((accum, key) => {\n            const value = params[key];\n            if (value != null) {\n                accum += `&${ key }=${ value }`\n            }\n            return accum\n        }, \"\");\n        if (this.apiKey) { query += `&apikey=${ this.apiKey }`; }\n        return `https:/\\/api.etherscan.io/v2/api?chainid=${ this.network.chainId }&module=${ module }${ query }`;\n    }\n\n    /**\n     *  Returns the URL for using POST requests.\n     */\n    getPostUrl(): string {\n        return `https:/\\/api.etherscan.io/v2/api?chainid=${ this.network.chainId }`;\n    }\n\n    /**\n     *  Returns the parameters for using POST requests.\n     */\n    getPostData(module: string, params: Record<string, any>): Record<string, any> {\n        params.module = module;\n        params.apikey = this.apiKey;\n        params.chainid = this.network.chainId;\n        return params;\n    }\n\n    async detectNetwork(): Promise<Network> {\n        return this.network;\n    }\n\n    /**\n     *  Resolves to the result of calling %%module%% with %%params%%.\n     *\n     *  If %%post%%, the request is made as a POST request.\n     */\n    async fetch(module: string, params: Record<string, any>, post?: boolean): Promise<any> {\n        const id = nextId++;\n\n        const url = (post ? this.getPostUrl(): this.getUrl(module, params));\n        const payload = (post ? this.getPostData(module, params): null);\n\n        this.emit(\"debug\", { action: \"sendRequest\", id, url, payload: payload });\n\n        const request = new FetchRequest(url);\n        request.setThrottleParams({ slotInterval: 1000 });\n        request.retryFunc = (req, resp, attempt: number) => {\n            if (this.isCommunityResource()) {\n                showThrottleMessage(\"Etherscan\");\n            }\n            return Promise.resolve(true);\n        };\n        request.processFunc = async (request, response) => {\n            const result = response.hasBody() ? JSON.parse(toUtf8String(response.body)): { };\n            const throttle = ((typeof(result.result) === \"string\") ? result.result: \"\").toLowerCase().indexOf(\"rate limit\") >= 0;\n            if (module === \"proxy\") {\n                // This JSON response indicates we are being throttled\n                if (result && result.status == 0 && result.message == \"NOTOK\" && throttle) {\n                    this.emit(\"debug\", { action: \"receiveError\", id, reason: \"proxy-NOTOK\", error: result });\n                    response.throwThrottleError(result.result, THROTTLE);\n                }\n            } else {\n                if (throttle) {\n                    this.emit(\"debug\", { action: \"receiveError\", id, reason: \"null result\", error: result.result });\n                    response.throwThrottleError(result.result, THROTTLE);\n                }\n            }\n            return response;\n        };\n\n        if (payload) {\n            request.setHeader(\"content-type\", \"application/x-www-form-urlencoded; charset=UTF-8\");\n            request.body = Object.keys(payload).map((k) => `${ k }=${ payload[k] }`).join(\"&\");\n        }\n\n        const response = await request.send();\n        try {\n            response.assertOk();\n        } catch (error) {\n            this.emit(\"debug\", { action: \"receiveError\", id, error, reason: \"assertOk\" });\n            assert(false, \"response error\", \"SERVER_ERROR\", { request, response });\n        }\n\n        if (!response.hasBody()) {\n            this.emit(\"debug\", { action: \"receiveError\", id, error: \"missing body\", reason: \"null body\" });\n            assert(false, \"missing response\", \"SERVER_ERROR\", { request, response });\n        }\n\n        const result = JSON.parse(toUtf8String(response.body));\n        if (module === \"proxy\") {\n            if (result.jsonrpc != \"2.0\") {\n                this.emit(\"debug\", { action: \"receiveError\", id, result, reason: \"invalid JSON-RPC\" });\n                assert(false, \"invalid JSON-RPC response (missing jsonrpc='2.0')\", \"SERVER_ERROR\", { request, response, info: { result } });\n            }\n\n            if (result.error) {\n                this.emit(\"debug\", { action: \"receiveError\", id, result, reason: \"JSON-RPC error\" });\n                assert(false, \"error response\", \"SERVER_ERROR\", { request, response, info: { result } });\n            }\n\n            this.emit(\"debug\", { action: \"receiveRequest\", id, result });\n\n            return result.result;\n\n        } else {\n            // getLogs, getHistory have weird success responses\n            if (result.status == 0 && (result.message === \"No records found\" || result.message === \"No transactions found\")) {\n                this.emit(\"debug\", { action: \"receiveRequest\", id, result });\n                return result.result;\n            }\n\n            if (result.status != 1 || (typeof(result.message) === \"string\" && !result.message.match(/^OK/))) {\n                this.emit(\"debug\", { action: \"receiveError\", id, result });\n                assert(false, \"error response\", \"SERVER_ERROR\", { request, response, info: { result } });\n            }\n\n            this.emit(\"debug\", { action: \"receiveRequest\", id, result });\n\n            return result.result;\n        }\n    }\n\n    /**\n     *  Returns %%transaction%% normalized for the Etherscan API.\n     */\n    _getTransactionPostData(transaction: TransactionRequest): Record<string, string> {\n        const result: Record<string, string> = { };\n        for (let key in transaction) {\n            if (skipKeys.indexOf(key) >= 0) { continue; }\n\n            if ((<any>transaction)[key] == null) { continue; }\n            let value = (<any>transaction)[key];\n            if (key === \"type\" && value === 0) { continue; }\n            if (key === \"blockTag\" && value === \"latest\") { continue; }\n\n            // Quantity-types require no leading zero, unless 0\n            if ((<any>{ type: true, gasLimit: true, gasPrice: true, maxFeePerGs: true, maxPriorityFeePerGas: true, nonce: true, value: true })[key]) {\n                value = toQuantity(value);\n\n            } else if (key === \"accessList\") {\n                value = \"[\" + accessListify(value).map((set) => {\n                    return `{address:\"${ set.address }\",storageKeys:[\"${ set.storageKeys.join('\",\"') }\"]}`;\n                }).join(\",\") + \"]\";\n\n            } else if (key === \"blobVersionedHashes\") {\n                if (value.length === 0) { continue; }\n\n                // @TODO: update this once the API supports blobs\n                assert(false, \"Etherscan API does not support blobVersionedHashes\", \"UNSUPPORTED_OPERATION\", {\n                    operation: \"_getTransactionPostData\",\n                    info: { transaction }\n                });\n\n            } else {\n                value = hexlify(value);\n            }\n            result[key] = value;\n        }\n        return result;\n    }\n\n    /**\n     *  Throws the normalized Etherscan error.\n     */\n    _checkError(req: PerformActionRequest, error: Error, transaction: any): never {\n        // Pull any message out if, possible\n        let message = \"\";\n        if (isError(error, \"SERVER_ERROR\")) {\n            // Check for an error emitted by a proxy call\n            try {\n                message = (<any>error).info.result.error.message;\n            } catch (e) { }\n\n            if (!message) {\n                try {\n                    message = (<any>error).info.message;\n                } catch (e) { }\n            }\n        }\n\n        if (req.method === \"estimateGas\") {\n            if (!message.match(/revert/i) && message.match(/insufficient funds/i)) {\n                assert(false, \"insufficient funds\", \"INSUFFICIENT_FUNDS\", {\n                    transaction: req.transaction\n                });\n            }\n        }\n\n        if (req.method === \"call\" || req.method === \"estimateGas\") {\n            if (message.match(/execution reverted/i)) {\n                let data = \"\";\n                try {\n                    data = (<any>error).info.result.error.data;\n                } catch (error) { }\n\n                const e = AbiCoder.getBuiltinCallException(req.method, <any>req.transaction, data);\n                e.info = { request: req, error }\n                throw e;\n            }\n        }\n\n        if (message) {\n            if (req.method === \"broadcastTransaction\") {\n                const transaction = Transaction.from(req.signedTransaction);\n                if (message.match(/replacement/i) && message.match(/underpriced/i)) {\n                    assert(false, \"replacement fee too low\", \"REPLACEMENT_UNDERPRICED\", {\n                        transaction\n                    });\n                }\n\n                if (message.match(/insufficient funds/)) {\n                    assert(false, \"insufficient funds for intrinsic transaction cost\", \"INSUFFICIENT_FUNDS\", {\n                       transaction\n                    });\n                }\n\n                if (message.match(/same hash was already imported|transaction nonce is too low|nonce too low/)) {\n                    assert(false, \"nonce has already been used\", \"NONCE_EXPIRED\", {\n                       transaction\n                    });\n                }\n            }\n        }\n\n        // Something we could not process\n        throw error;\n    }\n\n    async _detectNetwork(): Promise<Network> {\n        return this.network;\n    }\n\n    async _perform(req: PerformActionRequest): Promise<any> {\n        switch (req.method) {\n            case \"chainId\":\n                return this.network.chainId;\n\n            case \"getBlockNumber\":\n                return this.fetch(\"proxy\", { action: \"eth_blockNumber\" });\n\n            case \"getGasPrice\":\n                return this.fetch(\"proxy\", { action: \"eth_gasPrice\" });\n\n            case \"getPriorityFee\":\n                // This is temporary until Etherscan completes support\n                if (this.network.name === \"mainnet\") {\n                    return \"1000000000\";\n                } else if (this.network.name === \"optimism\") {\n                    return \"1000000\";\n                } else {\n                    throw new Error(\"fallback onto the AbstractProvider default\");\n                }\n                /* Working with Etherscan to get this added:\n                try {\n                    const test = await this.fetch(\"proxy\", {\n                        action: \"eth_maxPriorityFeePerGas\"\n                    });\n                    console.log(test);\n                    return test;\n                } catch (e) {\n                    console.log(\"DEBUG\", e);\n                    throw e;\n                }\n                */\n                /* This might be safe; but due to rounding neither myself\n                   or Etherscan are necessarily comfortable with this. :)\n                try {\n                    const result = await this.fetch(\"gastracker\", { action: \"gasoracle\" });\n                    console.log(result);\n                    const gasPrice = parseUnits(result.SafeGasPrice, \"gwei\");\n                    const baseFee = parseUnits(result.suggestBaseFee, \"gwei\");\n                    const priorityFee = gasPrice - baseFee;\n                    if (priorityFee < 0) { throw new Error(\"negative priority fee; defer to abstract provider default\"); }\n                    return priorityFee;\n                } catch (error) {\n                    console.log(\"DEBUG\", error);\n                    throw error;\n                }\n                */\n\n            case \"getBalance\":\n                // Returns base-10 result\n                return this.fetch(\"account\", {\n                    action: \"balance\",\n                    address: req.address,\n                    tag: req.blockTag\n                });\n\n           case \"getTransactionCount\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionCount\",\n                    address: req.address,\n                    tag: req.blockTag\n                });\n\n            case \"getCode\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getCode\",\n                    address: req.address,\n                    tag: req.blockTag\n                });\n\n            case \"getStorage\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getStorageAt\",\n                    address: req.address,\n                    position: req.position,\n                    tag: req.blockTag\n                });\n\n            case \"broadcastTransaction\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_sendRawTransaction\",\n                    hex: req.signedTransaction\n                }, true).catch((error) => {\n                    return this._checkError(req, <Error>error, req.signedTransaction);\n                });\n\n            case \"getBlock\":\n                if (\"blockTag\" in req) {\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getBlockByNumber\",\n                        tag: req.blockTag,\n                        boolean: (req.includeTransactions ? \"true\": \"false\")\n                    });\n                }\n\n                assert(false, \"getBlock by blockHash not supported by Etherscan\", \"UNSUPPORTED_OPERATION\", {\n                    operation: \"getBlock(blockHash)\"\n                });\n\n            case \"getTransaction\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionByHash\",\n                    txhash: req.hash\n                });\n\n            case \"getTransactionReceipt\":\n                return this.fetch(\"proxy\", {\n                    action: \"eth_getTransactionReceipt\",\n                    txhash: req.hash\n                });\n\n            case \"call\": {\n                if (req.blockTag !== \"latest\") {\n                    throw new Error(\"EtherscanProvider does not support blockTag for call\");\n                }\n\n                const postData = this._getTransactionPostData(req.transaction);\n                postData.module = \"proxy\";\n                postData.action = \"eth_call\";\n\n                try {\n                    return await this.fetch(\"proxy\", postData, true);\n                } catch (error) {\n                    return this._checkError(req, <Error>error, req.transaction);\n                }\n            }\n\n            case \"estimateGas\": {\n                const postData = this._getTransactionPostData(req.transaction);\n                postData.module = \"proxy\";\n                postData.action = \"eth_estimateGas\";\n\n                try {\n                    return await this.fetch(\"proxy\", postData, true);\n                } catch (error) {\n                    return this._checkError(req, <Error>error, req.transaction);\n                }\n            }\n/*\n            case \"getLogs\": {\n                // Needs to complain if more than one address is passed in\n                const args: Record<string, any> = { action: \"getLogs\" }\n\n                if (params.filter.fromBlock) {\n                    args.fromBlock = checkLogTag(params.filter.fromBlock);\n                }\n\n                if (params.filter.toBlock) {\n                    args.toBlock = checkLogTag(params.filter.toBlock);\n                }\n\n                if (params.filter.address) {\n                    args.address = params.filter.address;\n                }\n\n                // @TODO: We can handle slightly more complicated logs using the logs API\n                if (params.filter.topics && params.filter.topics.length > 0) {\n                    if (params.filter.topics.length > 1) {\n                        logger.throwError(\"unsupported topic count\", Logger.Errors.UNSUPPORTED_OPERATION, { topics: params.filter.topics });\n                    }\n                    if (params.filter.topics.length === 1) {\n                        const topic0 = params.filter.topics[0];\n                        if (typeof(topic0) !== \"string\" || topic0.length !== 66) {\n                            logger.throwError(\"unsupported topic format\", Logger.Errors.UNSUPPORTED_OPERATION, { topic0: topic0 });\n                        }\n                        args.topic0 = topic0;\n                    }\n                }\n\n                const logs: Array<any> = await this.fetch(\"logs\", args);\n\n                // Cache txHash => blockHash\n                let blocks: { [tag: string]: string } = {};\n\n                // Add any missing blockHash to the logs\n                for (let i = 0; i < logs.length; i++) {\n                    const log = logs[i];\n                    if (log.blockHash != null) { continue; }\n                    if (blocks[log.blockNumber] == null) {\n                        const block = await this.getBlock(log.blockNumber);\n                        if (block) {\n                            blocks[log.blockNumber] = block.hash;\n                        }\n                    }\n\n                    log.blockHash = blocks[log.blockNumber];\n                }\n\n                return logs;\n            }\n*/\n            default:\n                break;\n        }\n\n        return super._perform(req);\n    }\n\n    async getNetwork(): Promise<Network> {\n        return this.network;\n    }\n\n    /**\n     *  Resolves to the current price of ether.\n     *\n     *  This returns ``0`` on any network other than ``mainnet``.\n     */\n    async getEtherPrice(): Promise<number> {\n        if (this.network.name !== \"mainnet\") { return 0.0; }\n        return parseFloat((await this.fetch(\"stats\", { action: \"ethprice\" })).ethusd);\n    }\n\n    /**\n     *  Resolves to a [Contract]] for %%address%%, using the\n     *  Etherscan API to retreive the Contract ABI.\n     */\n    async getContract(_address: string): Promise<null | Contract> {\n        let address = this._getAddress(_address);\n        if (isPromise(address)) { address = await address; }\n\n        try {\n            const resp = await this.fetch(\"contract\", {\n            action: \"getabi\", address });\n            const abi = JSON.parse(resp);\n            return new Contract(address, abi, this);\n        } catch (error) {\n            return null;\n        }\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey == null);\n    }\n}\n", "/**\n *  [[link-infura]] provides a third-party service for connecting to\n *  various blockchains over JSON-RPC.\n *\n *  **Supported Networks**\n *\n *  - Ethereum Mainnet (``mainnet``)\n *  - Goerli Testnet (``goerli``)\n *  - Sepolia Testnet (``sepolia``)\n *  - Arbitrum (``arbitrum``)\n *  - Arbitrum Goerli Testnet (``arbitrum-goerli``)\n *  - Arbitrum Sepolia Testnet (``arbitrum-sepolia``)\n *  - Base (``base``)\n *  - Base Goerlia Testnet (``base-goerli``)\n *  - Base Sepolia Testnet (``base-sepolia``)\n *  - BNB Smart Chain Mainnet (``bnb``)\n *  - BNB Smart Chain Testnet (``bnbt``)\n *  - Linea (``linea``)\n *  - Linea Goerli Testnet (``linea-goerli``)\n *  - Linea Sepolia Testnet (``linea-sepolia``)\n *  - Optimism (``optimism``)\n *  - Optimism Goerli Testnet (``optimism-goerli``)\n *  - Optimism Sepolia Testnet (``optimism-sepolia``)\n *  - Polygon (``matic``)\n *  - Polygon Amoy Testnet (``matic-amoy``)\n *  - Polygon Mumbai Testnet (``matic-mumbai``)\n *\n *  @_subsection: api/providers/thirdparty:INFURA  [providers-infura]\n */\nimport {\n    defineProperties, FetchRequest, assert, assertArgument\n} from \"../utils/index.js\";\n\nimport { showThrottleMessage } from \"./community.js\";\nimport { Network } from \"./network.js\";\nimport { JsonRpcProvider } from \"./provider-jsonrpc.js\";\nimport { WebSocketProvider } from \"./provider-websocket.js\";\n\nimport type { AbstractProvider } from \"./abstract-provider.js\";\nimport type { CommunityResourcable } from \"./community.js\";\nimport type { Networkish } from \"./network.js\";\n\n\nconst defaultProjectId = \"84842078b09946638c03157f83405213\";\n\nfunction getHost(name: string): string {\n    switch(name) {\n        case \"mainnet\":\n            return \"mainnet.infura.io\";\n        case \"goerli\":\n            return \"goerli.infura.io\";\n        case \"sepolia\":\n            return \"sepolia.infura.io\";\n\n        case \"arbitrum\":\n            return \"arbitrum-mainnet.infura.io\";\n        case \"arbitrum-goerli\":\n            return \"arbitrum-goerli.infura.io\";\n        case \"arbitrum-sepolia\":\n            return \"arbitrum-sepolia.infura.io\";\n        case \"base\":\n            return \"base-mainnet.infura.io\";\n        case \"base-goerlia\": // @TODO: Remove this typo in the future!\n        case \"base-goerli\":\n            return \"base-goerli.infura.io\";\n        case \"base-sepolia\":\n            return \"base-sepolia.infura.io\";\n        case \"bnb\":\n            return \"bsc-mainnet.infura.io\";\n        case \"bnbt\":\n            return \"bsc-testnet.infura.io\";\n        case \"linea\":\n            return \"linea-mainnet.infura.io\";\n        case \"linea-goerli\":\n            return \"linea-goerli.infura.io\";\n        case \"linea-sepolia\":\n            return \"linea-sepolia.infura.io\";\n        case \"matic\":\n            return \"polygon-mainnet.infura.io\";\n        case \"matic-amoy\":\n            return \"polygon-amoy.infura.io\";\n        case \"matic-mumbai\":\n            return \"polygon-mumbai.infura.io\";\n        case \"optimism\":\n            return \"optimism-mainnet.infura.io\";\n        case \"optimism-goerli\":\n            return \"optimism-goerli.infura.io\";\n        case \"optimism-sepolia\":\n            return \"optimism-sepolia.infura.io\";\n    }\n\n    assertArgument(false, \"unsupported network\", \"network\", name);\n}\n\n/**\n *  The **InfuraWebSocketProvider** connects to the [[link-infura]]\n *  WebSocket end-points.\n *\n *  By default, a highly-throttled API key is used, which is\n *  appropriate for quick prototypes and simple scripts. To\n *  gain access to an increased rate-limit, it is highly\n *  recommended to [sign up here](link-infura-signup).\n */\nexport class InfuraWebSocketProvider extends WebSocketProvider implements CommunityResourcable {\n\n    /**\n     *  The Project ID for the INFURA connection.\n     */\n    readonly projectId!: string;\n\n    /**\n     *  The Project Secret.\n     *\n     *  If null, no authenticated requests are made. This should not\n     *  be used outside of private contexts.\n     */\n    readonly projectSecret!: null | string;\n\n    /**\n     *  Creates a new **InfuraWebSocketProvider**.\n     */\n    constructor(network?: Networkish, projectId?: string) {\n        const provider = new InfuraProvider(network, projectId);\n\n        const req = provider._getConnection();\n        assert(!req.credentials, \"INFURA WebSocket project secrets unsupported\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"InfuraProvider.getWebSocketProvider()\" });\n\n        const url = req.url.replace(/^http/i, \"ws\").replace(\"/v3/\", \"/ws/v3/\");\n        super(url, provider._network);\n\n        defineProperties<InfuraWebSocketProvider>(this, {\n            projectId: provider.projectId,\n            projectSecret: provider.projectSecret\n        });\n    }\n\n    isCommunityResource(): boolean {\n        return (this.projectId === defaultProjectId);\n    }\n}\n\n/**\n *  The **InfuraProvider** connects to the [[link-infura]]\n *  JSON-RPC end-points.\n *\n *  By default, a highly-throttled API key is used, which is\n *  appropriate for quick prototypes and simple scripts. To\n *  gain access to an increased rate-limit, it is highly\n *  recommended to [sign up here](link-infura-signup).\n */\nexport class InfuraProvider extends JsonRpcProvider implements CommunityResourcable {\n    /**\n     *  The Project ID for the INFURA connection.\n     */\n    readonly projectId!: string;\n\n    /**\n     *  The Project Secret.\n     *\n     *  If null, no authenticated requests are made. This should not\n     *  be used outside of private contexts.\n     */\n    readonly projectSecret!: null | string;\n\n    /**\n     *  Creates a new **InfuraProvider**.\n     */\n    constructor(_network?: Networkish, projectId?: null | string, projectSecret?: null | string) {\n        if (_network == null) { _network = \"mainnet\"; }\n        const network = Network.from(_network);\n        if (projectId == null) { projectId = defaultProjectId; }\n        if (projectSecret == null) { projectSecret = null; }\n\n        const request = InfuraProvider.getRequest(network, projectId, projectSecret);\n        super(request, network, { staticNetwork: network });\n\n        defineProperties<InfuraProvider>(this, { projectId, projectSecret });\n    }\n\n    _getProvider(chainId: number): AbstractProvider {\n        try {\n            return new InfuraProvider(chainId, this.projectId, this.projectSecret);\n        } catch (error) { }\n        return super._getProvider(chainId);\n    }\n\n    isCommunityResource(): boolean {\n        return (this.projectId === defaultProjectId);\n    }\n\n    /**\n     *  Creates a new **InfuraWebSocketProvider**.\n     */\n    static getWebSocketProvider(network?: Networkish, projectId?: string): InfuraWebSocketProvider {\n        return new InfuraWebSocketProvider(network, projectId);\n    }\n\n    /**\n     *  Returns a prepared request for connecting to %%network%%\n     *  with %%projectId%% and %%projectSecret%%.\n     */\n    static getRequest(network: Network, projectId?: null | string, projectSecret?: null | string): FetchRequest {\n        if (projectId == null) { projectId = defaultProjectId; }\n        if (projectSecret == null) { projectSecret = null; }\n\n        const request = new FetchRequest(`https:/\\/${ getHost(network.name) }/v3/${ projectId }`);\n        request.allowGzip = true;\n        if (projectSecret) { request.setCredentials(\"\", projectSecret); }\n\n        if (projectId === defaultProjectId) {\n            request.retryFunc = async (request, response, attempt) => {\n                showThrottleMessage(\"InfuraProvider\");\n                return true;\n            };\n        }\n\n        return request;\n    }\n}\n", "\n\nimport { WebSocket as _WebSocket } from \"./ws.js\"; /*-browser*/\n\nimport { SocketProvider } from \"./provider-socket.js\";\n\nimport type { JsonRpcApiProviderOptions} from \"./provider-jsonrpc.js\";\nimport type { Networkish } from \"./network.js\";\n\n/**\n *  A generic interface to a Websocket-like object.\n */\nexport interface WebSocketLike {\n    onopen: null | ((...args: Array<any>) => any);\n    onmessage: null | ((...args: Array<any>) => any);\n    onerror: null | ((...args: Array<any>) => any);\n\n    readyState: number;\n\n    send(payload: any): void;\n    close(code?: number, reason?: string): void;\n}\n\n/**\n *  A function which can be used to re-create a WebSocket connection\n *  on disconnect.\n */\nexport type WebSocketCreator = () => WebSocketLike;\n\n/**\n *  A JSON-RPC provider which is backed by a WebSocket.\n *\n *  WebSockets are often preferred because they retain a live connection\n *  to a server, which permits more instant access to events.\n *\n *  However, this incurs higher server infrasturture costs, so additional\n *  resources may be required to host your own WebSocket nodes and many\n *  third-party services charge additional fees for WebSocket endpoints.\n */\nexport class WebSocketProvider extends SocketProvider {\n    #connect: null | WebSocketCreator;\n\n    #websocket: null | WebSocketLike;\n    get websocket(): WebSocketLike {\n        if (this.#websocket == null) { throw new Error(\"websocket closed\"); }\n        return this.#websocket;\n    }\n\n    constructor(url: string | WebSocketLike | WebSocketCreator, network?: Networkish, options?: JsonRpcApiProviderOptions) {\n        super(network, options);\n        if (typeof(url) === \"string\") {\n            this.#connect = () => { return new _WebSocket(url); };\n            this.#websocket = this.#connect();\n        } else if (typeof(url) === \"function\") {\n            this.#connect = url;\n            this.#websocket = url();\n        } else {\n            this.#connect = null;\n            this.#websocket = url;\n        }\n\n        this.websocket.onopen = async () => {\n            try {\n                await this._start()\n                this.resume();\n            } catch (error) {\n                console.log(\"failed to start WebsocketProvider\", error);\n                // @TODO: now what? Attempt reconnect?\n            }\n        };\n\n        this.websocket.onmessage = (message: { data: string }) => {\n            this._processMessage(message.data);\n        };\n/*\n        this.websocket.onclose = (event) => {\n            // @TODO: What event.code should we reconnect on?\n            const reconnect = false;\n            if (reconnect) {\n                this.pause(true);\n                if (this.#connect) {\n                    this.#websocket = this.#connect();\n                    this.#websocket.onopen = ...\n                    // @TODO: this requires the super class to rebroadcast; move it there\n                }\n                this._reconnect();\n            }\n        };\n*/\n    }\n\n    async _write(message: string): Promise<void> {\n        this.websocket.send(message);\n    }\n\n    async destroy(): Promise<void> {\n        if (this.#websocket != null) {\n            this.#websocket.close();\n            this.#websocket = null;\n        }\n        super.destroy();\n    }\n}\n", "export { WebSocket } from \"ws\";\n\n\n", "import createWebSocketStream from './lib/stream.js';\nimport Receiver from './lib/receiver.js';\nimport Sender from './lib/sender.js';\nimport WebSocket from './lib/websocket.js';\nimport WebSocketServer from './lib/websocket-server.js';\n\nexport { createWebSocketStream, Receiver, Sender, WebSocket, WebSocketServer };\nexport default WebSocket;\n", "/**\n *  Generic long-lived socket provider.\n *\n *  Sub-classing notes\n *  - a sub-class MUST call the `_start()` method once connected\n *  - a sub-class MUST override the `_write(string)` method\n *  - a sub-class MUST call `_processMessage(string)` for each message\n *\n *  @_subsection: api/providers/abstract-provider:Socket Providers  [about-socketProvider]\n */\n\nimport { UnmanagedSubscriber } from \"./abstract-provider.js\";\nimport { assert, assertArgument, makeError } from \"../utils/index.js\";\nimport { JsonRpcApiProvider } from \"./provider-jsonrpc.js\";\n\nimport type { Subscriber, Subscription } from \"./abstract-provider.js\";\nimport type { EventFilter } from \"./provider.js\";\nimport type {\n    JsonRpcApiProviderOptions, JsonRpcError, JsonRpcPayload, JsonRpcResult\n} from \"./provider-jsonrpc.js\";\nimport type { Networkish } from \"./network.js\";\n\n\ntype JsonRpcSubscription = {\n    method: string,\n    params: {\n        result: any,\n        subscription: string\n    }\n};\n\n/**\n *  A **SocketSubscriber** uses a socket transport to handle events and\n *  should use [[_emit]] to manage the events.\n */\nexport class SocketSubscriber implements Subscriber {\n    #provider: SocketProvider;\n\n    #filter: string;\n\n    /**\n     *  The filter.\n     */\n    get filter(): Array<any> { return JSON.parse(this.#filter); }\n\n    #filterId: null | Promise<string |number>;\n    #paused: null | boolean;\n\n    #emitPromise: null | Promise<void>;\n\n    /**\n     *  Creates a new **SocketSubscriber** attached to %%provider%% listening\n     *  to %%filter%%.\n     */\n    constructor(provider: SocketProvider, filter: Array<any>) {\n        this.#provider = provider;\n        this.#filter = JSON.stringify(filter);\n        this.#filterId = null;\n        this.#paused = null;\n        this.#emitPromise = null;\n    }\n\n    start(): void {\n        this.#filterId = this.#provider.send(\"eth_subscribe\", this.filter).then((filterId) => {;\n            this.#provider._register(filterId, this);\n            return filterId;\n        });\n    }\n\n    stop(): void {\n        (<Promise<number>>(this.#filterId)).then((filterId) => {\n            if (this.#provider.destroyed) { return; }\n            this.#provider.send(\"eth_unsubscribe\", [ filterId ]);\n        });\n        this.#filterId = null;\n    }\n\n    // @TODO: pause should trap the current blockNumber, unsub, and on resume use getLogs\n    //        and resume\n    pause(dropWhilePaused?: boolean): void {\n        assert(dropWhilePaused, \"preserve logs while paused not supported by SocketSubscriber yet\",\n            \"UNSUPPORTED_OPERATION\", { operation: \"pause(false)\" });\n        this.#paused = !!dropWhilePaused;\n    }\n\n    resume(): void {\n        this.#paused = null;\n    }\n\n    /**\n     *  @_ignore:\n     */\n    _handleMessage(message: any): void {\n        if (this.#filterId == null) { return; }\n        if (this.#paused === null) {\n            let emitPromise: null | Promise<void> = this.#emitPromise;\n            if (emitPromise == null) {\n                emitPromise = this._emit(this.#provider, message);\n            } else {\n                emitPromise = emitPromise.then(async () => {\n                    await this._emit(this.#provider, message);\n                });\n            }\n            this.#emitPromise = emitPromise.then(() => {\n                if (this.#emitPromise === emitPromise) {\n                    this.#emitPromise = null;\n                }\n            });\n        }\n    }\n\n    /**\n     *  Sub-classes **must** override this to emit the events on the\n     *  provider.\n     */\n    async _emit(provider: SocketProvider, message: any): Promise<void> {\n        throw new Error(\"sub-classes must implemente this; _emit\");\n    }\n}\n\n/**\n *  A **SocketBlockSubscriber** listens for ``newHeads`` events and emits\n *  ``\"block\"`` events.\n */\nexport class SocketBlockSubscriber extends SocketSubscriber {\n    /**\n     *  @_ignore:\n     */\n    constructor(provider: SocketProvider) {\n        super(provider, [ \"newHeads\" ]);\n    }\n\n    async _emit(provider: SocketProvider, message: any): Promise<void> {\n        provider.emit(\"block\", parseInt(message.number));\n    }\n}\n\n/**\n *  A **SocketPendingSubscriber** listens for pending transacitons and emits\n *  ``\"pending\"`` events.\n */\nexport class SocketPendingSubscriber extends SocketSubscriber {\n\n    /**\n     *  @_ignore:\n     */\n    constructor(provider: SocketProvider) {\n        super(provider, [ \"newPendingTransactions\" ]);\n    }\n\n    async _emit(provider: SocketProvider, message: any): Promise<void> {\n        provider.emit(\"pending\", message);\n    }\n}\n\n/**\n *  A **SocketEventSubscriber** listens for event logs.\n */\nexport class SocketEventSubscriber extends SocketSubscriber {\n    #logFilter: string;\n\n    /**\n     *  The filter.\n     */\n    get logFilter(): EventFilter { return JSON.parse(this.#logFilter); }\n\n    /**\n     *  @_ignore:\n     */\n    constructor(provider: SocketProvider, filter: EventFilter) {\n        super(provider, [ \"logs\", filter ]);\n        this.#logFilter = JSON.stringify(filter);\n    }\n\n    async _emit(provider: SocketProvider, message: any): Promise<void> {\n        provider.emit(this.logFilter, provider._wrapLog(message, provider._network));\n    }\n}\n\n/**\n *  A **SocketProvider** is backed by a long-lived connection over a\n *  socket, which can subscribe and receive real-time messages over\n *  its communication channel.\n */\nexport class SocketProvider extends JsonRpcApiProvider {\n    #callbacks: Map<number, { payload: JsonRpcPayload, resolve: (r: any) => void, reject: (e: Error) => void }>;\n\n    // Maps each filterId to its subscriber\n    #subs: Map<number | string, SocketSubscriber>;\n\n    // If any events come in before a subscriber has finished\n    // registering, queue them\n    #pending: Map<number | string, Array<any>>;\n\n    /**\n     *  Creates a new **SocketProvider** connected to %%network%%.\n     *\n     *  If unspecified, the network will be discovered.\n     */\n    constructor(network?: Networkish, _options?: JsonRpcApiProviderOptions) {\n        // Copy the options\n        const options = Object.assign({ }, (_options != null) ? _options: { });\n\n        // Support for batches is generally not supported for\n        // connection-base providers; if this changes in the future\n        // the _send should be updated to reflect this\n        assertArgument(options.batchMaxCount == null || options.batchMaxCount === 1,\n            \"sockets-based providers do not support batches\", \"options.batchMaxCount\", _options);\n        options.batchMaxCount = 1;\n\n        // Socket-based Providers (generally) cannot change their network,\n        // since they have a long-lived connection; but let people override\n        // this if they have just cause.\n        if (options.staticNetwork == null) { options.staticNetwork = true; }\n\n        super(network, options);\n        this.#callbacks = new Map();\n        this.#subs = new Map();\n        this.#pending = new Map();\n    }\n\n    // This value is only valid after _start has been called\n    /*\n    get _network(): Network {\n        if (this.#network == null) {\n            throw new Error(\"this shouldn't happen\");\n        }\n        return this.#network.clone();\n    }\n    */\n\n    _getSubscriber(sub: Subscription): Subscriber {\n        switch (sub.type) {\n            case \"close\":\n                return new UnmanagedSubscriber(\"close\");\n            case \"block\":\n                return new SocketBlockSubscriber(this);\n            case \"pending\":\n                return new SocketPendingSubscriber(this);\n            case \"event\":\n                return new SocketEventSubscriber(this, sub.filter);\n            case \"orphan\":\n                // Handled auto-matically within AbstractProvider\n                // when the log.removed = true\n                if (sub.filter.orphan === \"drop-log\") {\n                    return new UnmanagedSubscriber(\"drop-log\");\n                }\n        }\n        return super._getSubscriber(sub);\n    }\n\n    /**\n     *  Register a new subscriber. This is used internalled by Subscribers\n     *  and generally is unecessary unless extending capabilities.\n     */\n    _register(filterId: number | string, subscriber: SocketSubscriber): void {\n        this.#subs.set(filterId, subscriber);\n        const pending = this.#pending.get(filterId);\n        if (pending) {\n            for (const message of pending) {\n                subscriber._handleMessage(message);\n            }\n            this.#pending.delete(filterId);\n        }\n    }\n\n    async _send(payload: JsonRpcPayload | Array<JsonRpcPayload>): Promise<Array<JsonRpcResult | JsonRpcError>> {\n        // WebSocket provider doesn't accept batches\n        assertArgument(!Array.isArray(payload), \"WebSocket does not support batch send\", \"payload\", payload);\n\n        // @TODO: stringify payloads here and store to prevent mutations\n\n        // Prepare a promise to respond to\n        const promise = new Promise((resolve, reject) => {\n            this.#callbacks.set(payload.id, { payload, resolve, reject });\n        });\n\n        // Wait until the socket is connected before writing to it\n        await this._waitUntilReady();\n\n        // Write the request to the socket\n        await this._write(JSON.stringify(payload));\n\n        return <Array<JsonRpcResult | JsonRpcError>>[ await promise ];\n    }\n\n    // Sub-classes must call this once they are connected\n    /*\n    async _start(): Promise<void> {\n        if (this.#ready) { return; }\n\n        for (const { payload } of this.#callbacks.values()) {\n            await this._write(JSON.stringify(payload));\n        }\n\n        this.#ready = (async function() {\n            await super._start();\n        })();\n    }\n    */\n\n    /**\n     *  Sub-classes **must** call this with messages received over their\n     *  transport to be processed and dispatched.\n     */\n    async _processMessage(message: string): Promise<void> {\n        const result = <JsonRpcResult | JsonRpcError | JsonRpcSubscription>(JSON.parse(message));\n\n        if (result && typeof(result) === \"object\" && \"id\" in result) {\n            const callback = this.#callbacks.get(result.id);\n            if (callback == null) {\n                this.emit(\"error\", makeError(\"received result for unknown id\", \"UNKNOWN_ERROR\", {\n                    reasonCode: \"UNKNOWN_ID\",\n                    result\n                }));\n                return;\n            }\n            this.#callbacks.delete(result.id);\n\n            callback.resolve(result);\n\n        } else if (result && result.method === \"eth_subscription\") {\n            const filterId = result.params.subscription;\n            const subscriber = this.#subs.get(filterId);\n            if (subscriber) {\n                subscriber._handleMessage(result.params.result);\n            } else {\n                let pending = this.#pending.get(filterId);\n                if (pending == null) {\n                    pending = [ ];\n                    this.#pending.set(filterId, pending);\n                }\n                pending.push(result.params.result);\n            }\n\n        } else {\n            this.emit(\"error\", makeError(\"received unexpected message\", \"UNKNOWN_ERROR\", {\n                reasonCode: \"UNEXPECTED_MESSAGE\",\n                result\n            }));\n            return;\n        }\n    }\n\n    /**\n     *  Sub-classes **must** override this to send %%message%% over their\n     *  transport.\n     */\n    async _write(message: string): Promise<void> {\n        throw new Error(\"sub-classes must override this\");\n    }\n}\n", "/**\n *  [[link-quicknode]] provides a third-party service for connecting to\n *  various blockchains over JSON-RPC.\n *\n *  **Supported Networks**\n *\n *  - Ethereum Mainnet (``mainnet``)\n *  - Goerli Testnet (``goerli``)\n *  - Sepolia Testnet (``sepolia``)\n *  - Holesky Testnet (``holesky``)\n *  - Arbitrum (``arbitrum``)\n *  - Arbitrum Goerli Testnet (``arbitrum-goerli``)\n *  - Arbitrum Sepolia Testnet (``arbitrum-sepolia``)\n *  - Base Mainnet (``base``);\n *  - Base Goerli Testnet (``base-goerli``);\n *  - Base Sepolia Testnet (``base-sepolia``);\n *  - BNB Smart Chain Mainnet (``bnb``)\n *  - BNB Smart Chain Testnet (``bnbt``)\n *  - Optimism (``optimism``)\n *  - Optimism Goerli Testnet (``optimism-goerli``)\n *  - Optimism Sepolia Testnet (``optimism-sepolia``)\n *  - Polygon (``matic``)\n *  - Polygon Mumbai Testnet (``matic-mumbai``)\n *\n *  @_subsection: api/providers/thirdparty:QuickNode  [providers-quicknode]\n */\n\nimport {\n    defineProperties, FetchRequest, assertArgument\n} from \"../utils/index.js\";\n\nimport { showThrottleMessage } from \"./community.js\";\nimport { Network } from \"./network.js\";\nimport { JsonRpcProvider } from \"./provider-jsonrpc.js\";\n\nimport type { AbstractProvider } from \"./abstract-provider.js\";\nimport type { CommunityResourcable } from \"./community.js\";\nimport type { Networkish } from \"./network.js\";\n\n\nconst defaultToken = \"919b412a057b5e9c9b6dce193c5a60242d6efadb\";\n\nfunction getHost(name: string): string {\n    switch(name) {\n        case \"mainnet\":\n            return \"ethers.quiknode.pro\";\n        case \"goerli\":\n            return \"ethers.ethereum-goerli.quiknode.pro\";\n        case \"sepolia\":\n            return \"ethers.ethereum-sepolia.quiknode.pro\";\n        case \"holesky\":\n            return \"ethers.ethereum-holesky.quiknode.pro\";\n\n        case \"arbitrum\":\n            return \"ethers.arbitrum-mainnet.quiknode.pro\";\n        case \"arbitrum-goerli\":\n            return \"ethers.arbitrum-goerli.quiknode.pro\";\n        case \"arbitrum-sepolia\":\n            return \"ethers.arbitrum-sepolia.quiknode.pro\";\n        case \"base\":\n            return \"ethers.base-mainnet.quiknode.pro\";\n        case \"base-goerli\":\n            return \"ethers.base-goerli.quiknode.pro\";\n        case \"base-spolia\":\n            return \"ethers.base-sepolia.quiknode.pro\";\n        case \"bnb\":\n            return \"ethers.bsc.quiknode.pro\";\n        case \"bnbt\":\n            return \"ethers.bsc-testnet.quiknode.pro\";\n        case \"matic\":\n            return \"ethers.matic.quiknode.pro\";\n        case \"matic-mumbai\":\n            return \"ethers.matic-testnet.quiknode.pro\";\n        case \"optimism\":\n            return \"ethers.optimism.quiknode.pro\";\n        case \"optimism-goerli\":\n            return \"ethers.optimism-goerli.quiknode.pro\";\n        case \"optimism-sepolia\":\n            return \"ethers.optimism-sepolia.quiknode.pro\";\n        case \"xdai\":\n            return \"ethers.xdai.quiknode.pro\";\n    }\n\n    assertArgument(false, \"unsupported network\", \"network\", name);\n}\n\n/*\n@TODO:\n  These networks are not currently present in the Network\n  default included networks. Research them and ensure they\n  are EVM compatible and work with ethers\n\n  http://ethers.matic-amoy.quiknode.pro\n\n  http://ethers.avalanche-mainnet.quiknode.pro\n  http://ethers.avalanche-testnet.quiknode.pro\n  http://ethers.blast-sepolia.quiknode.pro\n  http://ethers.celo-mainnet.quiknode.pro\n  http://ethers.fantom.quiknode.pro\n  http://ethers.imx-demo.quiknode.pro\n  http://ethers.imx-mainnet.quiknode.pro\n  http://ethers.imx-testnet.quiknode.pro\n  http://ethers.near-mainnet.quiknode.pro\n  http://ethers.near-testnet.quiknode.pro\n  http://ethers.nova-mainnet.quiknode.pro\n  http://ethers.scroll-mainnet.quiknode.pro\n  http://ethers.scroll-testnet.quiknode.pro\n  http://ethers.tron-mainnet.quiknode.pro\n  http://ethers.zkevm-mainnet.quiknode.pro\n  http://ethers.zkevm-testnet.quiknode.pro\n  http://ethers.zksync-mainnet.quiknode.pro\n  http://ethers.zksync-testnet.quiknode.pro\n*/\n\n\n\n/**\n *  The **QuickNodeProvider** connects to the [[link-quicknode]]\n *  JSON-RPC end-points.\n *\n *  By default, a highly-throttled API token is used, which is\n *  appropriate for quick prototypes and simple scripts. To\n *  gain access to an increased rate-limit, it is highly\n *  recommended to [sign up here](link-quicknode).\n */\nexport class QuickNodeProvider extends JsonRpcProvider implements CommunityResourcable {\n    /**\n     *  The API token.\n     */\n    readonly token!: string;\n\n    /**\n     *  Creates a new **QuickNodeProvider**.\n     */\n    constructor(_network?: Networkish, token?: null | string) {\n        if (_network == null) { _network = \"mainnet\"; }\n        const network = Network.from(_network);\n        if (token == null) { token = defaultToken; }\n\n        const request = QuickNodeProvider.getRequest(network, token);\n        super(request, network, { staticNetwork: network });\n\n        defineProperties<QuickNodeProvider>(this, { token });\n    }\n\n    _getProvider(chainId: number): AbstractProvider {\n        try {\n            return new QuickNodeProvider(chainId, this.token);\n        } catch (error) { }\n        return super._getProvider(chainId);\n    }\n\n    isCommunityResource(): boolean {\n        return (this.token === defaultToken);\n    }\n\n    /**\n     *  Returns a new request prepared for %%network%% and the\n     *  %%token%%.\n     */\n    static getRequest(network: Network, token?: null | string): FetchRequest {\n        if (token == null) { token = defaultToken; }\n\n        const request = new FetchRequest(`https:/\\/${ getHost(network.name) }/${ token }`);\n        request.allowGzip = true;\n        //if (projectSecret) { request.setCredentials(\"\", projectSecret); }\n\n        if (token === defaultToken) {\n            request.retryFunc = async (request, response, attempt) => {\n                showThrottleMessage(\"QuickNodeProvider\");\n                return true;\n            };\n        }\n\n        return request;\n    }\n}\n", "/**\n *  A **FallbackProvider** provides resilience, security and performance\n *  in a way that is customizable and configurable.\n *\n *  @_section: api/providers/fallback-provider:Fallback Provider [about-fallback-provider]\n */\nimport {\n    assert, assertArgument, getBigInt, getNumber, isError\n} from \"../utils/index.js\";\n\nimport { AbstractProvider } from \"./abstract-provider.js\";\nimport { Network } from \"./network.js\"\n\nimport type { PerformActionRequest } from \"./abstract-provider.js\";\nimport type { Networkish } from \"./network.js\"\n\nconst BN_1 = BigInt(\"1\");\nconst BN_2 = BigInt(\"2\");\n\nfunction shuffle<T = any>(array: Array<T>): void {\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const tmp = array[i];\n        array[i] = array[j];\n        array[j] = tmp;\n    }\n}\n\nfunction stall(duration: number): Promise<void> {\n    return new Promise((resolve) => { setTimeout(resolve, duration); });\n}\n\nfunction getTime(): number { return (new Date()).getTime(); }\n\nfunction stringify(value: any): string {\n    return JSON.stringify(value, (key, value) => {\n        if (typeof(value) === \"bigint\") {\n            return { type: \"bigint\", value: value.toString() };\n        }\n        return value;\n    });\n}\n\n/**\n *  A configuration entry for how to use a [[Provider]].\n */\nexport interface FallbackProviderConfig {\n\n    /**\n     *  The provider.\n     */\n    provider: AbstractProvider;\n\n    /**\n     *  The amount of time to wait before kicking off the next provider.\n     *\n     *  Any providers that have not responded can still respond and be\n     *  counted, but this ensures new providers start.\n     */\n    stallTimeout?: number;\n\n    /**\n     *  The priority. Lower priority providers are dispatched first.\n     */\n    priority?: number;\n\n    /**\n     *  The amount of weight a provider is given against the quorum.\n     */\n    weight?: number;\n};\n\nconst defaultConfig = { stallTimeout: 400, priority: 1, weight: 1 };\n\n// We track a bunch of extra stuff that might help debug problems or\n// optimize infrastructure later on.\n/**\n *  The statistics and state maintained for a [[Provider]].\n */\nexport interface FallbackProviderState extends Required<FallbackProviderConfig> {\n\n    /**\n     *  The most recent blockNumber this provider has reported (-2 if none).\n     */\n    blockNumber: number;\n\n    /**\n     *  The number of total requests ever sent to this provider.\n     */\n    requests: number;\n\n    /**\n     *  The number of responses that errored.\n     */\n    errorResponses: number;\n\n    /**\n     *  The number of responses that occured after the result resolved.\n     */\n    lateResponses: number;\n\n    /**\n     *  How many times syncing was required to catch up the expected block.\n     */\n    outOfSync: number;\n\n    /**\n     *  The number of requests which reported unsupported operation.\n     */\n    unsupportedEvents: number;\n\n    /**\n     *  A rolling average (5% current duration) for response time.\n     */\n    rollingDuration: number;\n\n    /**\n     *  The ratio of quorum-agreed results to total.\n     */\n    score: number;\n}\n\ninterface Config extends FallbackProviderState {\n    _updateNumber: null | Promise<any>;\n    _network: null | Network;\n    _totalTime: number;\n    _lastFatalError: null | Error;\n    _lastFatalErrorTimestamp: number;\n}\n\nconst defaultState = {\n    blockNumber: -2, requests: 0, lateResponses: 0, errorResponses: 0,\n    outOfSync: -1, unsupportedEvents: 0, rollingDuration: 0, score: 0,\n    _network: null, _updateNumber: null, _totalTime: 0,\n    _lastFatalError: null, _lastFatalErrorTimestamp: 0\n};\n\n\nasync function waitForSync(config: Config, blockNumber: number): Promise<void> {\n    while (config.blockNumber < 0 || config.blockNumber < blockNumber) {\n        if (!config._updateNumber) {\n            config._updateNumber = (async () => {\n                try {\n                    const blockNumber = await config.provider.getBlockNumber();\n                    if (blockNumber > config.blockNumber) {\n                        config.blockNumber = blockNumber;\n                    }\n                } catch (error: any) {\n                    config.blockNumber = -2;\n                    config._lastFatalError = error;\n                    config._lastFatalErrorTimestamp = getTime();\n                }\n                config._updateNumber = null;\n            })();\n        }\n        await config._updateNumber;\n        config.outOfSync++;\n        if (config._lastFatalError) { break; }\n    }\n}\n\n/**\n *  Additional options to configure a [[FallbackProvider]].\n */\nexport type FallbackProviderOptions = {\n    // How many providers must agree on a value before reporting\n    // back the response\n    quorum?: number;\n\n    // How many providers must have reported the same event\n    // for it to be emitted (currently unimplmented)\n    eventQuorum?: number;\n\n    // How many providers to dispatch each event to simultaneously.\n    // Set this to 0 to use getLog polling, which implies eventQuorum\n    // is equal to quorum. (currently unimplemented)\n    eventWorkers?: number;\n\n    cacheTimeout?: number;\n\n    pollingInterval?: number;\n};\n\ntype RunnerResult = { result: any } | { error: Error };\n\ntype RunnerState = {\n    config: Config;\n    staller: null | Promise<void>;\n    didBump: boolean;\n    perform: null | Promise<any>;\n    result: null | RunnerResult;\n}\n\nfunction _normalize(value: any): string {\n    if (value == null) { return \"null\"; }\n\n    if (Array.isArray(value)) {\n        return \"[\" + (value.map(_normalize)).join(\",\") + \"]\";\n    }\n\n    if (typeof(value) === \"object\" && typeof(value.toJSON) === \"function\") {\n        return _normalize(value.toJSON());\n    }\n\n    switch (typeof(value)) {\n        case \"boolean\": case \"symbol\":\n            return value.toString();\n        case \"bigint\": case \"number\":\n            return BigInt(value).toString();\n        case \"string\":\n            return JSON.stringify(value);\n        case \"object\": {\n            const keys = Object.keys(value);\n            keys.sort();\n            return \"{\" + keys.map((k) => `${ JSON.stringify(k) }:${ _normalize(value[k]) }`).join(\",\") + \"}\";\n        }\n    }\n\n    console.log(\"Could not serialize\", value);\n    throw new Error(\"Hmm...\");\n}\n\nfunction normalizeResult(method: string, value: RunnerResult): { tag: string, value: any } {\n\n    if (\"error\" in value) {\n        const error = value.error;\n\n        let tag: string;\n        if (isError(error, \"CALL_EXCEPTION\")) {\n            tag = _normalize(Object.assign({ }, error, {\n                shortMessage: undefined, reason: undefined, info: undefined\n            }));\n        } else {\n            tag = _normalize(error)\n        }\n\n        return { tag, value: error };\n    }\n\n    const result = value.result;\n    return { tag: _normalize(result), value: result };\n}\n\ntype TallyResult = {\n    tag: string;\n    value: any;\n    weight: number;\n};\n\n// This strategy picks the highest weight result, as long as the weight is\n// equal to or greater than quorum\nfunction checkQuorum(quorum: number, results: Array<TallyResult>): any | Error {\n    const tally: Map<string, { value: any, weight: number }> = new Map();\n    for (const { value, tag, weight } of results) {\n        const t = tally.get(tag) || { value, weight: 0 };\n        t.weight += weight;\n        tally.set(tag, t);\n    }\n\n    let best: null | { value: any, weight: number } = null;\n    for (const r of tally.values()) {\n        if (r.weight >= quorum && (!best || r.weight > best.weight)) {\n            best = r;\n        }\n    }\n\n    if (best) { return best.value; }\n\n    return undefined;\n}\n\nfunction getMedian(quorum: number, results: Array<TallyResult>): undefined | bigint | Error {\n    let resultWeight = 0;\n\n    const errorMap: Map<string, { weight: number, value: Error }> = new Map();\n    let bestError: null | { weight: number, value: Error } = null;\n\n    const values: Array<bigint> = [ ];\n    for (const { value, tag, weight } of results) {\n        if (value instanceof Error) {\n            const e = errorMap.get(tag) || { value, weight: 0 };\n            e.weight += weight;\n            errorMap.set(tag, e);\n\n            if (bestError == null || e.weight > bestError.weight) { bestError = e; }\n        } else {\n            values.push(BigInt(value));\n            resultWeight += weight;\n        }\n    }\n\n    if (resultWeight < quorum) {\n        // We have quorum for an error\n        if (bestError && bestError.weight >= quorum) { return bestError.value; }\n\n        // We do not have quorum for a result\n        return undefined;\n    }\n\n    // Get the sorted values\n    values.sort((a, b) => ((a < b) ? -1: (b > a) ? 1: 0));\n\n    const mid = Math.floor(values.length / 2);\n\n    // Odd-length; take the middle value\n    if (values.length % 2) { return values[mid]; }\n\n    // Even length; take the ceiling of the mean of the center two values\n    return (values[mid - 1] + values[mid] + BN_1) / BN_2;\n}\n\nfunction getAnyResult(quorum: number, results: Array<TallyResult>): undefined | any | Error {\n    // If any value or error meets quorum, that is our preferred result\n    const result = checkQuorum(quorum, results);\n    if (result !== undefined) { return result; }\n\n    // Otherwise, do we have any result?\n    for (const r of results) {\n        if (r.value) { return r.value; }\n    }\n\n    // Nope!\n    return undefined;\n}\n\nfunction getFuzzyMode(quorum: number, results: Array<TallyResult>): undefined | number {\n    if (quorum === 1) { return getNumber(<bigint>getMedian(quorum, results), \"%internal\"); }\n\n    const tally: Map<number, { result: number, weight: number }> = new Map();\n    const add = (result: number, weight: number) => {\n        const t = tally.get(result) || { result, weight: 0 };\n        t.weight += weight;\n        tally.set(result, t);\n    };\n\n    for (const { weight, value } of results) {\n        const r = getNumber(value);\n        add(r - 1, weight);\n        add(r, weight);\n        add(r + 1, weight);\n    }\n\n    let bestWeight = 0;\n    let bestResult: undefined | number = undefined;\n\n    for (const { weight, result } of tally.values()) {\n        // Use this result, if this result meets quorum and has either:\n        // - a better weight\n        // - or equal weight, but the result is larger\n        if (weight >= quorum && (weight > bestWeight || (bestResult != null && weight === bestWeight && result > bestResult))) {\n            bestWeight = weight;\n            bestResult = result;\n        }\n    }\n\n    return bestResult;\n}\n\n/**\n *  A **FallbackProvider** manages several [[Providers]] providing\n *  resilience by switching between slow or misbehaving nodes, security\n *  by requiring multiple backends to aggree and performance by allowing\n *  faster backends to respond earlier.\n *\n */\nexport class FallbackProvider extends AbstractProvider {\n\n    /**\n     *  The number of backends that must agree on a value before it is\n     *  accpeted.\n     */\n    readonly quorum: number;\n\n    /**\n     *  @_ignore:\n     */\n    readonly eventQuorum: number;\n\n    /**\n     *  @_ignore:\n     */\n    readonly eventWorkers: number;\n\n    readonly #configs: Array<Config>;\n\n    #height: number;\n    #initialSyncPromise: null | Promise<void>;\n\n    /**\n     *  Creates a new **FallbackProvider** with %%providers%% connected to\n     *  %%network%%.\n     *\n     *  If a [[Provider]] is included in %%providers%%, defaults are used\n     *  for the configuration.\n     */\n    constructor(providers: Array<AbstractProvider | FallbackProviderConfig>, network?: Networkish, options?: FallbackProviderOptions) {\n        super(network, options);\n\n        this.#configs = providers.map((p) => {\n            if (p instanceof AbstractProvider) {\n                return Object.assign({ provider: p }, defaultConfig, defaultState );\n            } else {\n                return Object.assign({ }, defaultConfig, p, defaultState );\n            }\n        });\n\n        this.#height = -2;\n        this.#initialSyncPromise = null;\n\n        if (options && options.quorum != null) {\n            this.quorum = options.quorum;\n        } else {\n            this.quorum = Math.ceil(this.#configs.reduce((accum, config) => {\n                accum += config.weight;\n                return accum;\n            }, 0) / 2);\n        }\n\n        this.eventQuorum = 1;\n        this.eventWorkers = 1;\n\n        assertArgument(this.quorum <= this.#configs.reduce((a, c) => (a + c.weight), 0),\n            \"quorum exceed provider weight\", \"quorum\", this.quorum);\n    }\n\n    get providerConfigs(): Array<FallbackProviderState> {\n        return this.#configs.map((c) => {\n            const result: any = Object.assign({ }, c);\n            for (const key in result) {\n                if (key[0] === \"_\") { delete result[key]; }\n            }\n            return result;\n        });\n    }\n\n    async _detectNetwork(): Promise<Network> {\n        return Network.from(getBigInt(await this._perform({ method: \"chainId\" })));\n    }\n\n    // @TODO: Add support to select providers to be the event subscriber\n    //_getSubscriber(sub: Subscription): Subscriber {\n    //    throw new Error(\"@TODO\");\n    //}\n\n    /**\n     *  Transforms a %%req%% into the correct method call on %%provider%%.\n     */\n    async _translatePerform(provider: AbstractProvider, req: PerformActionRequest): Promise<any> {\n        switch (req.method) {\n            case \"broadcastTransaction\":\n                return await provider.broadcastTransaction(req.signedTransaction);\n            case \"call\":\n                return await provider.call(Object.assign({ }, req.transaction, { blockTag: req.blockTag }));\n            case \"chainId\":\n                return (await provider.getNetwork()).chainId;\n            case \"estimateGas\":\n                return await provider.estimateGas(req.transaction);\n            case \"getBalance\":\n                return await provider.getBalance(req.address, req.blockTag);\n            case \"getBlock\": {\n                const block = (\"blockHash\" in req) ? req.blockHash: req.blockTag;\n                return await provider.getBlock(block, req.includeTransactions);\n            }\n            case \"getBlockNumber\":\n                return await provider.getBlockNumber();\n            case \"getCode\":\n                return await provider.getCode(req.address, req.blockTag);\n            case \"getGasPrice\":\n                return (await provider.getFeeData()).gasPrice;\n            case \"getPriorityFee\":\n                return (await provider.getFeeData()).maxPriorityFeePerGas;\n            case \"getLogs\":\n                return await provider.getLogs(req.filter);\n            case \"getStorage\":\n                return await provider.getStorage(req.address, req.position, req.blockTag);\n            case \"getTransaction\":\n                return await provider.getTransaction(req.hash);\n            case \"getTransactionCount\":\n                return await provider.getTransactionCount(req.address, req.blockTag);\n            case \"getTransactionReceipt\":\n                return await provider.getTransactionReceipt(req.hash);\n            case \"getTransactionResult\":\n                return await provider.getTransactionResult(req.hash);\n        }\n    }\n\n    // Grab the next (random) config that is not already part of\n    // the running set\n    #getNextConfig(running: Set<RunnerState>): null | Config {\n        // @TODO: Maybe do a check here to favour (heavily) providers that\n        //        do not require waitForSync and disfavour providers that\n        //        seem down-ish or are behaving slowly\n\n        const configs = Array.from(running).map((r) => r.config)\n\n        // Shuffle the states, sorted by priority\n        const allConfigs = this.#configs.slice();\n        shuffle(allConfigs);\n        allConfigs.sort((a, b) => (a.priority - b.priority));\n\n        for (const config of allConfigs) {\n            if (config._lastFatalError) { continue; }\n            if (configs.indexOf(config) === -1) { return config; }\n        }\n\n        return null;\n    }\n\n    // Adds a new runner (if available) to running.\n    #addRunner(running: Set<RunnerState>, req: PerformActionRequest): null | RunnerState {\n        const config = this.#getNextConfig(running);\n\n        // No runners available\n        if (config == null) { return null; }\n\n        // Create a new runner\n        const runner: RunnerState = {\n            config, result: null, didBump: false,\n            perform: null, staller: null\n        };\n\n        const now = getTime();\n\n        // Start performing this operation\n        runner.perform = (async () => {\n            try {\n                config.requests++;\n                const result = await this._translatePerform(config.provider, req);\n                runner.result = { result };\n            } catch (error: any) {\n                config.errorResponses++;\n                runner.result = { error };\n            }\n\n            const dt = (getTime() - now);\n            config._totalTime += dt;\n\n            config.rollingDuration = 0.95 * config.rollingDuration + 0.05 * dt;\n\n            runner.perform = null;\n        })();\n\n        // Start a staller; when this times out, it's time to force\n        // kicking off another runner because we are taking too long\n        runner.staller = (async () => {\n            await stall(config.stallTimeout);\n            runner.staller = null;\n        })();\n\n        running.add(runner);\n        return runner;\n    }\n\n    // Initializes the blockNumber and network for each runner and\n    // blocks until initialized\n    async #initialSync(): Promise<void> {\n        let initialSync = this.#initialSyncPromise;\n        if (!initialSync) {\n            const promises: Array<Promise<any>> = [ ];\n            this.#configs.forEach((config) => {\n                promises.push((async () => {\n                    await waitForSync(config, 0);\n                    if (!config._lastFatalError) {\n                        config._network = await config.provider.getNetwork();\n                    }\n                })());\n            });\n\n            this.#initialSyncPromise = initialSync = (async () => {\n                // Wait for all providers to have a block number and network\n                await Promise.all(promises);\n\n                // Check all the networks match\n                let chainId: null | bigint = null;\n                for (const config of this.#configs) {\n                    if (config._lastFatalError) { continue; }\n                    const network = <Network>(config._network);\n                    if (chainId == null) {\n                        chainId = network.chainId;\n                    } else if (network.chainId !== chainId) {\n                        assert(false, \"cannot mix providers on different networks\", \"UNSUPPORTED_OPERATION\", {\n                            operation: \"new FallbackProvider\"\n                        });\n                    }\n                }\n            })();\n        }\n\n        await initialSync\n    }\n\n\n    async #checkQuorum(running: Set<RunnerState>, req: PerformActionRequest): Promise<any> {\n        // Get all the result objects\n        const results: Array<TallyResult> = [ ];\n        for (const runner of running) {\n            if (runner.result != null) {\n                const { tag, value } = normalizeResult(req.method, runner.result);\n                results.push({ tag, value, weight: runner.config.weight });\n            }\n        }\n\n        // Are there enough results to event meet quorum?\n        if (results.reduce((a, r) => (a + r.weight), 0) < this.quorum) {\n            return undefined;\n        }\n\n        switch (req.method) {\n            case \"getBlockNumber\": {\n                // We need to get the bootstrap block height\n                if (this.#height === -2) {\n                    this.#height = Math.ceil(getNumber(<bigint>getMedian(this.quorum, this.#configs.filter((c) => (!c._lastFatalError)).map((c) => ({\n                        value: c.blockNumber,\n                        tag: getNumber(c.blockNumber).toString(),\n                        weight: c.weight\n                    })))));\n                }\n\n                // Find the mode across all the providers, allowing for\n                // a little drift between block heights\n                const mode = getFuzzyMode(this.quorum, results);\n                if (mode === undefined) { return undefined; }\n                if (mode > this.#height) { this.#height = mode; }\n                return this.#height;\n            }\n\n            case \"getGasPrice\":\n            case \"getPriorityFee\":\n            case \"estimateGas\":\n                return getMedian(this.quorum, results);\n\n            case \"getBlock\":\n                // Pending blocks are in the mempool and already\n                // quite untrustworthy; just grab anything\n                if (\"blockTag\" in req && req.blockTag === \"pending\") {\n                    return getAnyResult(this.quorum, results);\n                }\n                return checkQuorum(this.quorum, results);\n\n            case \"call\":\n            case \"chainId\":\n            case \"getBalance\":\n            case \"getTransactionCount\":\n            case \"getCode\":\n            case \"getStorage\":\n            case \"getTransaction\":\n            case \"getTransactionReceipt\":\n            case \"getLogs\":\n                return checkQuorum(this.quorum, results);\n\n            case \"broadcastTransaction\":\n                return getAnyResult(this.quorum, results);\n        }\n\n        assert(false, \"unsupported method\", \"UNSUPPORTED_OPERATION\", {\n            operation: `_perform(${ stringify((<any>req).method) })`\n        });\n    }\n\n    async #waitForQuorum(running: Set<RunnerState>, req: PerformActionRequest): Promise<any> {\n        if (running.size === 0) { throw new Error(\"no runners?!\"); }\n\n        // Any promises that are interesting to watch for; an expired stall\n        // or a successful perform\n        const interesting: Array<Promise<void>> = [ ];\n\n        let newRunners = 0;\n        for (const runner of running) {\n\n            // No responses, yet; keep an eye on it\n            if (runner.perform) {\n                interesting.push(runner.perform);\n            }\n\n            // Still stalling...\n            if (runner.staller) {\n                interesting.push(runner.staller);\n                continue;\n            }\n\n            // This runner has already triggered another runner\n            if (runner.didBump) { continue; }\n\n            // Got a response (result or error) or stalled; kick off another runner\n            runner.didBump = true;\n            newRunners++;\n        }\n\n        // Check if we have reached quorum on a result (or error)\n        const value = await this.#checkQuorum(running, req);\n        if (value !== undefined) {\n            if (value instanceof Error) { throw value; }\n            return value;\n        }\n\n        // Add any new runners, because a staller timed out or a result\n        // or error response came in.\n        for (let i = 0; i < newRunners; i++) {\n            this.#addRunner(running, req);\n        }\n\n        // All providers have returned, and we have no result\n\n        assert(interesting.length > 0, \"quorum not met\", \"SERVER_ERROR\", {\n            request: \"%sub-requests\",\n            info: { request: req, results: Array.from(running).map((r) => stringify(r.result)) }\n        });\n\n        // Wait for someone to either complete its perform or stall out\n        await Promise.race(interesting);\n\n        // This is recursive, but at worst case the depth is 2x the\n        // number of providers (each has a perform and a staller)\n        return await this.#waitForQuorum(running, req);\n    }\n\n    async _perform<T = any>(req: PerformActionRequest): Promise<T> {\n        // Broadcasting a transaction is rare (ish) and already incurs\n        // a cost on the user, so spamming is safe-ish. Just send it to\n        // every backend.\n        if (req.method === \"broadcastTransaction\") {\n            // Once any broadcast provides a positive result, use it. No\n            // need to wait for anyone else\n            const results: Array<null | TallyResult> = this.#configs.map((c) => null);\n            const broadcasts = this.#configs.map(async ({ provider, weight }, index) => {\n                try {\n                    const result = await provider._perform(req);\n                    results[index] = Object.assign(normalizeResult(req.method, { result }), { weight });\n                } catch (error: any) {\n                    results[index] = Object.assign(normalizeResult(req.method, { error }), { weight });\n                }\n            });\n\n            // As each promise finishes...\n            while (true) {\n                // Check for a valid broadcast result\n                const done = <Array<any>>results.filter((r) => (r != null));\n                for (const { value } of done) {\n                    if (!(value instanceof Error)) { return value; }\n                }\n\n                // Check for a legit broadcast error (one which we cannot\n                // recover from; some nodes may return the following red\n                // herring events:\n                // - alredy seend (UNKNOWN_ERROR)\n                // - NONCE_EXPIRED\n                // - REPLACEMENT_UNDERPRICED\n                const result = checkQuorum(this.quorum, <Array<any>>results.filter((r) => (r != null)));\n                if (isError(result, \"INSUFFICIENT_FUNDS\")) {\n                    throw result;\n                }\n\n                // Kick off the next provider (if any)\n                const waiting = broadcasts.filter((b, i) => (results[i] == null));\n                if (waiting.length === 0) { break; }\n                await Promise.race(waiting);\n            }\n\n            // Use standard quorum results; any result was returned above,\n            // so this will find any error that met quorum if any\n            const result = getAnyResult(this.quorum, <Array<any>>results);\n            assert(result !== undefined, \"problem multi-broadcasting\", \"SERVER_ERROR\", {\n                request: \"%sub-requests\",\n                info: { request: req, results: results.map(stringify) }\n            })\n            if (result instanceof Error) { throw result; }\n            return result;\n        }\n\n        await this.#initialSync();\n\n        // Bootstrap enough runners to meet quorum\n        const running: Set<RunnerState> = new Set();\n        let inflightQuorum = 0;\n        while (true) {\n            const runner = this.#addRunner(running, req);\n            if (runner == null) { break; }\n            inflightQuorum += runner.config.weight;\n            if (inflightQuorum >= this.quorum) { break; }\n        }\n\n        const result = await this.#waitForQuorum(running, req);\n\n        // Track requests sent to a provider that are still\n        // outstanding after quorum has been otherwise found\n        for (const runner of running) {\n            if (runner.perform && runner.result == null) {\n                runner.config.lateResponses++;\n            }\n        }\n\n        return result;\n    }\n\n    async destroy(): Promise<void> {\n        for (const { provider } of this.#configs) {\n            provider.destroy();\n        }\n        super.destroy();\n    }\n}\n", "import { defineProperties } from \"../utils/index.js\";\nimport { AbstractSigner } from \"./abstract-signer.js\";\n\nimport type { TypedDataDomain, TypedDataField } from \"../hash/index.js\";\n\nimport type {\n    BlockTag, Provider, TransactionRequest, TransactionResponse\n} from \"./provider.js\";\nimport type { Signer } from \"./signer.js\";\n\n\n/**\n *  A **NonceManager** wraps another [[Signer]] and automatically manages\n *  the nonce, ensuring serialized and sequential nonces are used during\n *  transaction.\n */\nexport class NonceManager extends AbstractSigner {\n    /**\n     *  The Signer being managed.\n     */\n    signer!: Signer;\n\n    #noncePromise: null | Promise<number>;\n    #delta: number;\n\n    /**\n     *  Creates a new **NonceManager** to manage %%signer%%.\n     */\n    constructor(signer: Signer) {\n        super(signer.provider);\n        defineProperties<NonceManager>(this, { signer });\n\n        this.#noncePromise = null;\n        this.#delta = 0;\n    }\n\n    async getAddress(): Promise<string> {\n        return this.signer.getAddress();\n    }\n\n    connect(provider: null | Provider): NonceManager {\n        return new NonceManager(this.signer.connect(provider));\n    }\n\n    async getNonce(blockTag?: BlockTag): Promise<number> {\n        if (blockTag === \"pending\") {\n            if (this.#noncePromise == null) {\n                this.#noncePromise = super.getNonce(\"pending\");\n            }\n\n            const delta = this.#delta;\n            return (await this.#noncePromise) + delta;\n        }\n\n        return super.getNonce(blockTag);\n    }\n\n    /**\n     *  Manually increment the nonce. This may be useful when managng\n     *  offline transactions.\n     */\n    increment(): void {\n        this.#delta++;\n    }\n\n    /**\n     *  Resets the nonce, causing the **NonceManager** to reload the current\n     *  nonce from the blockchain on the next transaction.\n     */\n    reset(): void {\n        this.#delta = 0;\n        this.#noncePromise = null;\n    }\n\n    async sendTransaction(tx: TransactionRequest): Promise<TransactionResponse> {\n        const noncePromise = this.getNonce(\"pending\");\n        this.increment();\n\n        tx = await this.signer.populateTransaction(tx);\n        tx.nonce = await noncePromise;\n\n        // @TODO: Maybe handle interesting/recoverable errors?\n        // Like don't increment if the tx was certainly not sent\n        return await this.signer.sendTransaction(tx);\n    }\n\n    signTransaction(tx: TransactionRequest): Promise<string> {\n        return this.signer.signTransaction(tx);\n    }\n\n    signMessage(message: string | Uint8Array): Promise<string> {\n        return this.signer.signMessage(message);\n    }\n\n    signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n        return this.signer.signTypedData(domain, types, value);\n    }\n}\n", "\nimport { assertArgument, makeError } from \"../utils/index.js\";\n\nimport { JsonRpcApiPollingProvider } from \"./provider-jsonrpc.js\";\n\nimport type {\n    JsonRpcApiProviderOptions,\n    JsonRpcError, JsonRpcPayload, JsonRpcResult,\n    JsonRpcSigner\n} from \"./provider-jsonrpc.js\";\nimport type { Network, Networkish } from \"./network.js\";\n\n/**\n *  The interface to an [[link-eip-1193]] provider, which is a standard\n *  used by most injected providers, which the [[BrowserProvider]] accepts\n *  and exposes the API of.\n */\nexport interface Eip1193Provider {\n    /**\n     *  See [[link-eip-1193]] for details on this method.\n     */\n    request(request: { method: string, params?: Array<any> | Record<string, any> }): Promise<any>;\n};\n\n/**\n *  The possible additional events dispatched when using the ``\"debug\"``\n *  event on a [[BrowserProvider]].\n */\nexport type DebugEventBrowserProvider = {\n    action: \"sendEip1193Payload\",\n    payload: { method: string, params: Array<any> }\n} | {\n    action: \"receiveEip1193Result\",\n    result: any\n} | {\n    action: \"receiveEip1193Error\",\n    error: Error\n};\n\n/**\n *  Provider info provided by the [[link-eip-6963]] discovery mechanism.\n */\nexport interface Eip6963ProviderInfo {\n    uuid: string;\n    name: string;\n    icon: string;\n    rdns: string;\n}\n\ninterface Eip6963ProviderDetail {\n    info: Eip6963ProviderInfo;\n    provider: Eip1193Provider;\n}\n\ninterface Eip6963Announcement {\n    type: \"eip6963:announceProvider\";\n    detail: Eip6963ProviderDetail\n}\n\nexport type BrowserProviderOptions = {\n    polling?: boolean;\n    staticNetwork?: null | boolean | Network;\n\n    cacheTimeout?: number;\n    pollingInterval?: number;\n\n    providerInfo?: Eip6963ProviderInfo;\n};\n\n/**\n *  Specifies how [[link-eip-6963]] discovery should proceed.\n *\n *  See: [[BrowserProvider-discover]]\n */\nexport interface BrowserDiscoverOptions {\n    /**\n     *  Override provider detection with this provider.\n     */\n    provider?: Eip1193Provider;\n\n    /**\n     *  Duration to wait to detect providers. (default: 300ms)\n     */\n    timeout?: number;\n\n    /**\n     *  Return the first detected provider. Otherwise wait for %%timeout%%\n     *  and allowing filtering before selecting the desired provider.\n     */\n    anyProvider?: boolean;\n\n    /**\n     *  Use the provided window context. Useful in non-standard\n     *  environments or to hijack where a provider comes from.\n     */\n    window?: any;\n\n    /**\n     *  Explicitly choose which provider to used once scanning is complete.\n     */\n    filter?: (found: Array<Eip6963ProviderInfo>) => null | BrowserProvider |\n      Eip6963ProviderInfo;\n}\n\n\n/**\n *  A **BrowserProvider** is intended to wrap an injected provider which\n *  adheres to the [[link-eip-1193]] standard, which most (if not all)\n *  currently do.\n */\nexport class BrowserProvider extends JsonRpcApiPollingProvider {\n    #request: (method: string, params: Array<any> | Record<string, any>) => Promise<any>;\n\n    #providerInfo: null | Eip6963ProviderInfo;\n\n    /**\n     *  Connect to the %%ethereum%% provider, optionally forcing the\n     *  %%network%%.\n     */\n    constructor(ethereum: Eip1193Provider, network?: Networkish, _options?: BrowserProviderOptions) {\n\n        // Copy the options\n        const options: JsonRpcApiProviderOptions = Object.assign({ },\n          ((_options != null) ? _options: { }),\n          { batchMaxCount: 1 });\n\n        assertArgument(ethereum && ethereum.request, \"invalid EIP-1193 provider\", \"ethereum\", ethereum);\n\n        super(network, options);\n\n        this.#providerInfo = null;\n        if (_options && _options.providerInfo) {\n            this.#providerInfo = _options.providerInfo;\n        }\n\n        this.#request = async (method: string, params: Array<any> | Record<string, any>) => {\n            const payload = { method, params };\n            this.emit(\"debug\", { action: \"sendEip1193Request\", payload });\n            try {\n                const result = await ethereum.request(payload);\n                this.emit(\"debug\", { action: \"receiveEip1193Result\", result });\n                return result;\n            } catch (e: any) {\n                const error = new Error(e.message);\n                (<any>error).code = e.code;\n                (<any>error).data = e.data;\n                (<any>error).payload = payload;\n                this.emit(\"debug\", { action: \"receiveEip1193Error\", error });\n                throw error;\n            }\n        };\n    }\n\n    get providerInfo(): null | Eip6963ProviderInfo {\n        return this.#providerInfo;\n    }\n\n    async send(method: string, params: Array<any> | Record<string, any>): Promise<any> {\n        await this._start();\n\n        return await super.send(method, params);\n    }\n\n    async _send(payload: JsonRpcPayload | Array<JsonRpcPayload>): Promise<Array<JsonRpcResult | JsonRpcError>> {\n        assertArgument(!Array.isArray(payload), \"EIP-1193 does not support batch request\", \"payload\", payload);\n\n        try {\n            const result = await this.#request(payload.method, payload.params || [ ]);\n            return [ { id: payload.id, result } ];\n        } catch (e: any) {\n            return [ {\n                id: payload.id,\n                error: { code: e.code, data: e.data, message: e.message }\n            } ];\n        }\n    }\n\n    getRpcError(payload: JsonRpcPayload, error: JsonRpcError): Error {\n\n        error = JSON.parse(JSON.stringify(error));\n\n        // EIP-1193 gives us some machine-readable error codes, so rewrite\n        // them into Ethers standard errors.\n        switch (error.error.code || -1) {\n            case 4001:\n                error.error.message = `ethers-user-denied: ${ error.error.message }`;\n                break;\n            case 4200:\n                error.error.message = `ethers-unsupported: ${ error.error.message }`;\n                break;\n        }\n\n        return super.getRpcError(payload, error);\n    }\n\n    /**\n     *  Resolves to ``true`` if the provider manages the %%address%%.\n     */\n    async hasSigner(address: number | string): Promise<boolean> {\n        if (address == null) { address = 0; }\n\n        const accounts = await this.send(\"eth_accounts\", [ ]);\n        if (typeof(address) === \"number\") {\n            return (accounts.length > address);\n        }\n\n        address = address.toLowerCase();\n        return accounts.filter((a: string) => (a.toLowerCase() === address)).length !== 0;\n    }\n\n    async getSigner(address?: number | string): Promise<JsonRpcSigner> {\n        if (address == null) { address = 0; }\n\n        if (!(await this.hasSigner(address))) {\n            try {\n                await this.#request(\"eth_requestAccounts\", [ ]);\n\n            } catch (error: any) {\n                const payload = error.payload;\n                throw this.getRpcError(payload, { id: payload.id, error });\n            }\n        }\n\n        return await super.getSigner(address);\n    }\n\n    /**\n     *  Discover and connect to a Provider in the Browser using the\n     *  [[link-eip-6963]] discovery mechanism. If no providers are\n     *  present, ``null`` is resolved.\n     */\n    static async discover(options?: BrowserDiscoverOptions): Promise<null | BrowserProvider> {\n        if (options == null) { options = { }; }\n\n        if (options.provider) {\n            return new BrowserProvider(options.provider);\n        }\n\n        const context = options.window ? options.window:\n            (typeof(window) !== \"undefined\") ? window: null;\n\n        if (context == null) { return null; }\n\n        const anyProvider = options.anyProvider;\n        if (anyProvider && context.ethereum) {\n            return new BrowserProvider(context.ethereum);\n        }\n\n        if (!(\"addEventListener\" in context && \"dispatchEvent\" in context\n          && \"removeEventListener\" in context)) {\n            return null;\n        }\n\n        const timeout = options.timeout ? options.timeout: 300;\n        if (timeout === 0) { return null; }\n\n        return await (new Promise((resolve, reject) => {\n            let found: Array<Eip6963ProviderDetail> = [ ];\n\n            const addProvider = (event: Eip6963Announcement) => {\n                found.push(event.detail);\n                if (anyProvider) { finalize(); }\n            };\n\n            const finalize = () => {\n                clearTimeout(timer);\n\n                if (found.length) {\n\n                    // If filtering is provided:\n                    if (options && options.filter) {\n\n                        // Call filter, with a copies of found provider infos\n                        const filtered = options.filter(found.map(i =>\n                          Object.assign({ }, (i.info))));\n\n                        if (filtered == null) {\n                            // No provider selected\n                            resolve(null);\n\n                        } else if (filtered instanceof BrowserProvider) {\n                            // Custom provider created\n                            resolve(filtered);\n\n                        } else {\n                            // Find the matching provider\n                            let match: null | Eip6963ProviderDetail = null;\n                            if (filtered.uuid) {\n                                const matches = found.filter(f =>\n                                  (filtered.uuid === f.info.uuid));\n                                // @TODO: What should happen if multiple values\n                                //        for the same UUID?\n                                match = matches[0];\n                            }\n\n                            if (match) {\n                                const { provider, info } = match;\n                                resolve(new BrowserProvider(provider, undefined, {\n                                    providerInfo: info\n                                }));\n                            } else {\n                                reject(makeError(\"filter returned unknown info\", \"UNSUPPORTED_OPERATION\", {\n                                    value: filtered\n                                }));\n                            }\n                        }\n\n                    } else {\n\n                        // Pick the first found provider\n                        const { provider, info } = found[0];\n                        resolve(new BrowserProvider(provider, undefined, {\n                            providerInfo: info\n                        }));\n                    }\n\n                } else {\n                    // Nothing found\n                    resolve(null);\n                }\n\n                context.removeEventListener(<any>\"eip6963:announceProvider\",\n                  addProvider);\n            };\n\n            const timer = setTimeout(() => { finalize(); }, timeout);\n\n            context.addEventListener(<any>\"eip6963:announceProvider\",\n              addProvider);\n\n            context.dispatchEvent(new Event(\"eip6963:requestProvider\"));\n        }));\n    }\n}\n", "\n/**\n *  [[link-blockscout]] provides a third-party service for connecting to\n *  various blockchains over JSON-RPC.\n *\n *  **Supported Networks**\n *\n *  - Ethereum Mainnet (``mainnet``)\n *  - Sepolia Testnet (``sepolia``)\n *  - Holesky Testnet (``holesky``)\n *  - Ethereum Classic (``classic``)\n *  - Arbitrum (``arbitrum``)\n *  - Base (``base``)\n *  - Base Sepolia Testnet (``base-sepolia``)\n *  - Gnosis (``xdai``)\n *  - Optimism (``optimism``)\n *  - Optimism Sepolia Testnet (``optimism-sepolia``)\n *  - Polygon (``matic``)\n *\n *  @_subsection: api/providers/thirdparty:Blockscout  [providers-blockscout]\n */\nimport {\n    assertArgument, defineProperties, FetchRequest, isHexString\n} from \"../utils/index.js\";\n\nimport { Network } from \"./network.js\";\nimport { JsonRpcProvider } from \"./provider-jsonrpc.js\";\n\nimport type { AbstractProvider, PerformActionRequest } from \"./abstract-provider.js\";\nimport type { CommunityResourcable } from \"./community.js\";\nimport type { Networkish } from \"./network.js\";\nimport type { JsonRpcPayload, JsonRpcError } from \"./provider-jsonrpc.js\";\n\n\nfunction getUrl(name: string): string {\n    switch(name) {\n        case \"mainnet\":\n            return \"https:/\\/eth.blockscout.com/api/eth-rpc\";\n        case \"sepolia\":\n            return \"https:/\\/eth-sepolia.blockscout.com/api/eth-rpc\";\n        case \"holesky\":\n            return \"https:/\\/eth-holesky.blockscout.com/api/eth-rpc\";\n\n        case \"classic\":\n            return \"https:/\\/etc.blockscout.com/api/eth-rpc\";\n\n        case \"arbitrum\":\n            return \"https:/\\/arbitrum.blockscout.com/api/eth-rpc\";\n\n        case \"base\":\n            return \"https:/\\/base.blockscout.com/api/eth-rpc\";\n        case \"base-sepolia\":\n            return \"https:/\\/base-sepolia.blockscout.com/api/eth-rpc\";\n\n        case \"matic\":\n            return \"https:/\\/polygon.blockscout.com/api/eth-rpc\";\n\n        case \"optimism\":\n            return \"https:/\\/optimism.blockscout.com/api/eth-rpc\";\n        case \"optimism-sepolia\":\n            return \"https:/\\/optimism-sepolia.blockscout.com/api/eth-rpc\";\n\n        case \"xdai\":\n            return \"https:/\\/gnosis.blockscout.com/api/eth-rpc\";\n    }\n\n    assertArgument(false, \"unsupported network\", \"network\", name);\n}\n\n\n/**\n *  The **BlockscoutProvider** connects to the [[link-blockscout]]\n *  JSON-RPC end-points.\n *\n *  By default, a highly-throttled API key is used, which is\n *  appropriate for quick prototypes and simple scripts. To\n *  gain access to an increased rate-limit, it is highly\n *  recommended to [sign up here](link-blockscout).\n */\nexport class BlockscoutProvider extends JsonRpcProvider implements CommunityResourcable {\n    /**\n     *  The API key.\n     */\n    readonly apiKey!: null | string;\n\n    /**\n     *  Creates a new **BlockscoutProvider**.\n     */\n    constructor(_network?: Networkish, apiKey?: null | string) {\n        if (_network == null) { _network = \"mainnet\"; }\n        const network = Network.from(_network);\n\n        if (apiKey == null) { apiKey = null; }\n\n        const request = BlockscoutProvider.getRequest(network);\n        super(request, network, { staticNetwork: network });\n\n        defineProperties<BlockscoutProvider>(this, { apiKey });\n    }\n\n    _getProvider(chainId: number): AbstractProvider {\n        try {\n            return new BlockscoutProvider(chainId, this.apiKey);\n        } catch (error) { }\n        return super._getProvider(chainId);\n    }\n\n    isCommunityResource(): boolean {\n        return (this.apiKey === null);\n    }\n\n    getRpcRequest(req: PerformActionRequest): null | { method: string, args: Array<any> } {\n        // Blockscout enforces the TAG argument for estimateGas\n        const resp = super.getRpcRequest(req);\n        if (resp && resp.method === \"eth_estimateGas\" && resp.args.length == 1) {\n            resp.args = resp.args.slice();\n            resp.args.push(\"latest\");\n        }\n        return resp;\n    }\n\n    getRpcError(payload: JsonRpcPayload, _error: JsonRpcError): Error {\n        const error = _error ? _error.error: null;\n\n        // Blockscout currently drops the VM result and replaces it with a\n        // human-readable string, so we need to make it machine-readable.\n        if (error && error.code === -32015 && !isHexString(error.data || \"\", true)) {\n            const panicCodes = <Record<string, string>>{\n                \"assert(false)\": \"01\",\n                \"arithmetic underflow or overflow\": \"11\",\n                \"division or modulo by zero\": \"12\",\n                \"out-of-bounds array access; popping on an empty array\": \"31\",\n                \"out-of-bounds access of an array or bytesN\": \"32\"\n            };\n\n            let panicCode = \"\";\n            if (error.message === \"VM execution error.\") {\n                // eth_call passes this message\n                panicCode = panicCodes[error.data] || \"\";\n            } else if (panicCodes[error.message || \"\"]) {\n                panicCode = panicCodes[error.message || \"\"];\n            }\n\n            if (panicCode) {\n                error.message += ` (reverted: ${ error.data })`;\n                error.data = \"0x4e487b7100000000000000000000000000000000000000000000000000000000000000\" + panicCode;\n            }\n\n        } else if (error && error.code === -32000) {\n            if (error.message === \"wrong transaction nonce\") {\n                error.message += \" (nonce too low)\";\n            }\n        }\n\n        return super.getRpcError(payload, _error);\n    }\n\n    /**\n     *  Returns a prepared request for connecting to %%network%%\n     *  with %%apiKey%%.\n     */\n    static getRequest(network: Network): FetchRequest {\n        const request = new FetchRequest(getUrl(network.name));\n        request.allowGzip = true;\n        return request;\n    }\n}\n", "/**\n *  [[link-pocket]] provides a third-party service for connecting to\n *  various blockchains over JSON-RPC.\n *\n *  **Supported Networks**\n *\n *  - Ethereum Mainnet (``mainnet``)\n *  - Goerli Testnet (``goerli``)\n *  - Polygon (``matic``)\n *  - Arbitrum (``arbitrum``)\n *\n *  @_subsection: api/providers/thirdparty:Pocket  [providers-pocket]\n */\nimport {\n    defineProperties, FetchRequest, assertArgument\n} from \"../utils/index.js\";\n\nimport { AbstractProvider } from \"./abstract-provider.js\";\nimport { showThrottleMessage } from \"./community.js\";\nimport { Network } from \"./network.js\";\nimport { JsonRpcProvider } from \"./provider-jsonrpc.js\";\n\nimport type { CommunityResourcable } from \"./community.js\";\nimport type { Networkish } from \"./network.js\";\n\nconst defaultApplicationId = \"62e1ad51b37b8e00394bda3b\";\n\nfunction getHost(name: string): string {\n    switch (name) {\n        case \"mainnet\":\n            return  \"eth-mainnet.gateway.pokt.network\";\n        case \"goerli\":\n            return \"eth-goerli.gateway.pokt.network\";\n\n        case \"matic\":\n            return \"poly-mainnet.gateway.pokt.network\";\n        case \"matic-mumbai\":\n            return \"polygon-mumbai-rpc.gateway.pokt.network\";\n    }\n\n    assertArgument(false, \"unsupported network\", \"network\", name);\n}\n\n\n/**\n *  The **PocketProvider** connects to the [[link-pocket]]\n *  JSON-RPC end-points.\n *\n *  By default, a highly-throttled API key is used, which is\n *  appropriate for quick prototypes and simple scripts. To\n *  gain access to an increased rate-limit, it is highly\n *  recommended to [sign up here](link-pocket-signup).\n */\nexport class PocketProvider extends JsonRpcProvider implements CommunityResourcable {\n\n    /**\n     *  The Application ID for the Pocket connection.\n     */\n    readonly applicationId!: string;\n\n    /**\n     *  The Application Secret for making authenticated requests\n     *  to the Pocket connection.\n     */\n    readonly applicationSecret!: null | string;\n\n    /**\n     *  Create a new **PocketProvider**.\n     *\n     *  By default connecting to ``mainnet`` with a highly throttled\n     *  API key.\n     */\n    constructor(_network?: Networkish, applicationId?: null | string, applicationSecret?: null | string) {\n        if (_network == null) { _network = \"mainnet\"; }\n        const network = Network.from(_network);\n        if (applicationId == null) { applicationId = defaultApplicationId; }\n        if (applicationSecret == null) { applicationSecret = null; }\n\n        const options = { staticNetwork: network };\n\n        const request = PocketProvider.getRequest(network, applicationId, applicationSecret);\n        super(request, network, options);\n\n        defineProperties<PocketProvider>(this, { applicationId, applicationSecret });\n    }\n\n    _getProvider(chainId: number): AbstractProvider {\n        try {\n            return new PocketProvider(chainId, this.applicationId, this.applicationSecret);\n        } catch (error) { }\n        return super._getProvider(chainId);\n    }\n\n    /**\n     *  Returns a prepared request for connecting to %%network%% with\n     *  %%applicationId%%.\n     */\n    static getRequest(network: Network, applicationId?: null | string, applicationSecret?: null | string): FetchRequest {\n        if (applicationId == null) { applicationId = defaultApplicationId; }\n\n        const request = new FetchRequest(`https:/\\/${ getHost(network.name) }/v1/lb/${ applicationId }`);\n        request.allowGzip = true;\n\n        if (applicationSecret) {\n            request.setCredentials(\"\", applicationSecret);\n        }\n\n        if (applicationId === defaultApplicationId) {\n            request.retryFunc = async (request, response, attempt) => {\n                showThrottleMessage(\"PocketProvider\");\n                return true;\n            };\n        }\n\n        return request;\n    }\n\n    isCommunityResource(): boolean {\n        return (this.applicationId === defaultApplicationId);\n    }\n}\n", "\nimport { connect } from \"net\";\nimport { SocketProvider } from \"./provider-socket.js\";\n\nimport type { Socket } from \"net\";\n\nimport type { JsonRpcApiProviderOptions } from \"./provider-jsonrpc.js\";\nimport type { Networkish } from \"./network.js\";\n\n\n// @TODO: Is this sufficient? Is this robust? Will newlines occur between\n// all payloads and only between payloads?\nfunction splitBuffer(data: Buffer): { messages: Array<string>, remaining: Buffer } {\n    const messages: Array<string> = [ ];\n\n    let lastStart = 0;\n    while (true) {\n        const nl = data.indexOf(10, lastStart);\n        if (nl === -1) { break; }\n        messages.push(data.subarray(lastStart, nl).toString().trim());\n        lastStart = nl + 1;\n    }\n\n    return { messages, remaining: data.subarray(lastStart) };\n}\n\n/**\n *  An **IpcSocketProvider** connects over an IPC socket on the host\n *  which provides fast access to the node, but requires the node and\n *  the script run on the same machine.\n */\nexport class IpcSocketProvider extends SocketProvider {\n    #socket: Socket;\n\n    /**\n     *  The connected socket.\n     */\n    get socket(): Socket { return this.#socket; }\n\n    constructor(path: string, network?: Networkish, options?: JsonRpcApiProviderOptions) {\n        super(network, options);\n        this.#socket = connect(path);\n\n        this.socket.on(\"ready\", async () => {\n            try {\n                await this._start();\n            } catch (error) {\n                console.log(\"failed to start IpcSocketProvider\", error);\n                // @TODO: Now what? Restart?\n            }\n        });\n\n        let response = Buffer.alloc(0);\n        this.socket.on(\"data\", (data) => {\n            response = Buffer.concat([ response, data ]);\n            const { messages, remaining } = splitBuffer(response);\n            messages.forEach((message) => {\n                this._processMessage(message);\n            });\n            response = remaining;\n        });\n\n        this.socket.on(\"end\", () => {\n            this.emit(\"close\");\n            this.socket.destroy();\n            this.socket.end();\n        });\n    }\n\n    destroy(): void {\n        this.socket.destroy();\n        this.socket.end();\n\n        super.destroy();\n    }\n\n    async _write(message: string): Promise<void> {\n        if (!message.endsWith(\"\\n\")) { message += \"\\n\"; }\n        this.socket.write(message);\n    }\n}\n", "/**\n *  When interacting with Ethereum, it is necessary to use a private\n *  key authenticate actions by signing a payload.\n *\n *  Wallets are the simplest way to expose the concept of an\n *  //Externally Owner Account// (EOA) as it wraps a private key\n *  and supports high-level methods to sign common types of interaction\n *  and send transactions.\n *\n *  The class most developers will want to use is [[Wallet]], which\n *  can load a private key directly or from any common wallet format.\n *\n *  The [[HDNodeWallet]] can be used when it is necessary to access\n *  low-level details of how an HD wallets are derived, exported\n *  or imported.\n *\n *  @_section: api/wallet:Wallets  [about-wallets]\n */\n\nexport { BaseWallet } from \"./base-wallet.js\";\n\nexport {\n    defaultPath,\n\n    getAccountPath, getIndexedAccountPath,\n\n    HDNodeWallet,\n    HDNodeVoidWallet,\n} from \"./hdwallet.js\";\n\nexport { isCrowdsaleJson, decryptCrowdsaleJson } from \"./json-crowdsale.js\";\n\nexport {\n    isKeystoreJson,\n    decryptKeystoreJsonSync, decryptKeystoreJson,\n    encryptKeystoreJson, encryptKeystoreJsonSync\n} from \"./json-keystore.js\";\n\nexport { Mnemonic } from \"./mnemonic.js\";\n\nexport { Wallet } from \"./wallet.js\";\n\n\nexport type { CrowdsaleAccount } from \"./json-crowdsale.js\";\nexport type {\n    KeystoreAccount, EncryptOptions\n} from \"./json-keystore.js\"\n", "import { getAddress, resolveAddress } from \"../address/index.js\";\nimport {\n    hashAuthorization, hashMessage, TypedDataEncoder\n} from \"../hash/index.js\";\nimport { AbstractSigner, copyRequest } from \"../providers/index.js\";\nimport { computeAddress, Transaction } from \"../transaction/index.js\";\nimport {\n    defineProperties, getBigInt, resolveProperties, assert, assertArgument\n} from \"../utils/index.js\";\n\nimport type { SigningKey } from \"../crypto/index.js\";\nimport type {\n    AuthorizationRequest, TypedDataDomain, TypedDataField\n} from \"../hash/index.js\";\nimport type { Provider, TransactionRequest } from \"../providers/index.js\";\nimport type { Authorization, TransactionLike } from \"../transaction/index.js\";\n\n\n/**\n *  The **BaseWallet** is a stream-lined implementation of a\n *  [[Signer]] that operates with a private key.\n *\n *  It is preferred to use the [[Wallet]] class, as it offers\n *  additional functionality and simplifies loading a variety\n *  of JSON formats, Mnemonic Phrases, etc.\n *\n *  This class may be of use for those attempting to implement\n *  a minimal Signer.\n */\nexport class BaseWallet extends AbstractSigner {\n    /**\n     *  The wallet address.\n     */\n    readonly address!: string;\n\n    readonly #signingKey: SigningKey;\n\n    /**\n     *  Creates a new BaseWallet for %%privateKey%%, optionally\n     *  connected to %%provider%%.\n     *\n     *  If %%provider%% is not specified, only offline methods can\n     *  be used.\n     */\n    constructor(privateKey: SigningKey, provider?: null | Provider) {\n        super(provider);\n\n        assertArgument(privateKey && typeof(privateKey.sign) === \"function\", \"invalid private key\", \"privateKey\", \"[ REDACTED ]\");\n\n        this.#signingKey = privateKey;\n\n        const address = computeAddress(this.signingKey.publicKey);\n        defineProperties<BaseWallet>(this, { address });\n    }\n\n    // Store private values behind getters to reduce visibility\n    // in console.log\n\n    /**\n     *  The [[SigningKey]] used for signing payloads.\n     */\n    get signingKey(): SigningKey { return this.#signingKey; }\n\n    /**\n     *  The private key for this wallet.\n     */\n    get privateKey(): string { return this.signingKey.privateKey; }\n\n    async getAddress(): Promise<string> { return this.address; }\n\n    connect(provider: null | Provider): BaseWallet {\n        return new BaseWallet(this.#signingKey, provider);\n    }\n\n    async signTransaction(tx: TransactionRequest): Promise<string> {\n        tx = copyRequest(tx);\n\n        // Replace any Addressable or ENS name with an address\n        const { to, from } = await resolveProperties({\n            to: (tx.to ? resolveAddress(tx.to, this): undefined),\n            from: (tx.from ? resolveAddress(tx.from, this): undefined)\n        });\n\n        if (to != null) { tx.to = to; }\n        if (from != null) { tx.from = from; }\n\n        if (tx.from != null) {\n            assertArgument(getAddress(<string>(tx.from)) === this.address,\n                \"transaction from address mismatch\", \"tx.from\", tx.from);\n            delete tx.from;\n        }\n\n        // Build the transaction\n        const btx = Transaction.from(<TransactionLike<string>>tx);\n        btx.signature = this.signingKey.sign(btx.unsignedHash);\n\n        return btx.serialized;\n    }\n\n    async signMessage(message: string | Uint8Array): Promise<string> {\n        return this.signMessageSync(message);\n    }\n\n    // @TODO: Add a secialized signTx and signTyped sync that enforces\n    // all parameters are known?\n    /**\n     *  Returns the signature for %%message%% signed with this wallet.\n     */\n    signMessageSync(message: string | Uint8Array): string {\n        return this.signingKey.sign(hashMessage(message)).serialized;\n    }\n\n    /**\n     *  Returns the Authorization for %%auth%%.\n     */\n    authorizeSync(auth: AuthorizationRequest): Authorization {\n        assertArgument(typeof(auth.address) === \"string\",\n          \"invalid address for authorizeSync\", \"auth.address\", auth);\n\n        const signature = this.signingKey.sign(hashAuthorization(auth));\n        return Object.assign({ }, {\n            address: getAddress(auth.address),\n            nonce: getBigInt(auth.nonce || 0),\n            chainId: getBigInt(auth.chainId || 0),\n        }, { signature });\n    }\n\n    /**\n     *  Resolves to the Authorization for %%auth%%.\n     */\n    async authorize(auth: AuthorizationRequest): Promise<Authorization> {\n        auth = Object.assign({ }, auth, {\n            address: await resolveAddress(auth.address, this)\n        });\n        return this.authorizeSync(await this.populateAuthorization(auth));\n    }\n\n    async signTypedData(domain: TypedDataDomain, types: Record<string, Array<TypedDataField>>, value: Record<string, any>): Promise<string> {\n\n        // Populate any ENS names\n        const populated = await TypedDataEncoder.resolveNames(domain, types, value, async (name: string) => {\n            // @TODO: this should use resolveName; addresses don't\n            //        need a provider\n\n            assert(this.provider != null, \"cannot resolve ENS names without a provider\", \"UNSUPPORTED_OPERATION\", {\n                operation: \"resolveName\",\n                info: { name }\n            });\n\n            const address = await this.provider.resolveName(name);\n            assert(address != null, \"unconfigured ENS name\", \"UNCONFIGURED_NAME\", {\n                value: name\n            });\n\n            return address;\n        });\n\n        return this.signingKey.sign(TypedDataEncoder.hash(populated.domain, types, populated.value)).serialized;\n    }\n}\n", "/**\n *  Explain HD Wallets..\n *\n *  @_subsection: api/wallet:HD Wallets  [hd-wallets]\n */\nimport { computeHmac, randomBytes, ripemd160, SigningKey, sha256 } from \"../crypto/index.js\";\nimport { VoidSigner } from \"../providers/index.js\";\nimport { computeAddress } from \"../transaction/index.js\";\nimport {\n    concat, dataSlice, decodeBase58, defineProperties, encodeBase58,\n    getBytes, hexlify, isBytesLike,\n    getNumber, toBeArray, toBigInt, toBeHex,\n    assertPrivate, assert, assertArgument\n} from \"../utils/index.js\";\nimport { LangEn } from \"../wordlists/lang-en.js\";\n\nimport { BaseWallet } from \"./base-wallet.js\";\nimport { Mnemonic } from \"./mnemonic.js\";\nimport {\n    encryptKeystoreJson, encryptKeystoreJsonSync,\n} from \"./json-keystore.js\";\n\nimport type { ProgressCallback } from \"../crypto/index.js\";\nimport type { Provider } from \"../providers/index.js\";\nimport type { BytesLike, Numeric } from \"../utils/index.js\";\nimport type { Wordlist } from \"../wordlists/index.js\";\n\nimport type { KeystoreAccount } from \"./json-keystore.js\";\n\n/**\n *  The default derivation path for Ethereum HD Nodes. (i.e. ``\"m/44'/60'/0'/0/0\"``)\n */\nexport const defaultPath: string = \"m/44'/60'/0'/0/0\";\n\n\n// \"Bitcoin seed\"\nconst MasterSecret = new Uint8Array([ 66, 105, 116, 99, 111, 105, 110, 32, 115, 101, 101, 100 ]);\n\nconst HardenedBit = 0x80000000;\n\nconst N = BigInt(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\");\n\nconst Nibbles = \"0123456789abcdef\";\nfunction zpad(value: number, length: number): string {\n    let result = \"\";\n    while (value) {\n        result = Nibbles[value % 16] + result;\n        value = Math.trunc(value / 16);\n    }\n    while (result.length < length * 2) { result = \"0\" + result; }\n    return \"0x\" + result;\n}\n\nfunction encodeBase58Check(_value: BytesLike): string {\n    const value = getBytes(_value);\n    const check = dataSlice(sha256(sha256(value)), 0, 4);\n    const bytes = concat([ value, check ]);\n    return encodeBase58(bytes);\n}\n\nconst _guard = { };\n\nfunction ser_I(index: number, chainCode: string, publicKey: string, privateKey: null | string): { IL: Uint8Array, IR: Uint8Array } {\n    const data = new Uint8Array(37);\n\n    if (index & HardenedBit) {\n        assert(privateKey != null, \"cannot derive child of neutered node\", \"UNSUPPORTED_OPERATION\", {\n            operation: \"deriveChild\"\n        });\n\n        // Data = 0x00 || ser_256(k_par)\n        data.set(getBytes(privateKey), 1);\n\n    } else {\n        // Data = ser_p(point(k_par))\n        data.set(getBytes(publicKey));\n    }\n\n    // Data += ser_32(i)\n    for (let i = 24; i >= 0; i -= 8) { data[33 + (i >> 3)] = ((index >> (24 - i)) & 0xff); }\n    const I = getBytes(computeHmac(\"sha512\", chainCode, data));\n\n    return { IL: I.slice(0, 32), IR: I.slice(32) };\n}\n\ntype HDNodeLike<T> = { depth: number, deriveChild: (i: number) => T };\nfunction derivePath<T extends HDNodeLike<T>>(node: T, path: string): T {\n    const components = path.split(\"/\");\n\n    assertArgument(components.length > 0, \"invalid path\", \"path\", path);\n\n    if (components[0] === \"m\") {\n        assertArgument(node.depth === 0, `cannot derive root path (i.e. path starting with \"m/\") for a node at non-zero depth ${ node.depth }`, \"path\", path);\n        components.shift();\n    }\n\n    let result: T = node;\n    for (let i = 0; i < components.length; i++) {\n        const component = components[i];\n\n        if (component.match(/^[0-9]+'$/)) {\n            const index = parseInt(component.substring(0, component.length - 1));\n            assertArgument(index < HardenedBit, \"invalid path index\", `path[${ i }]`, component);\n            result = result.deriveChild(HardenedBit + index);\n\n        } else if (component.match(/^[0-9]+$/)) {\n            const index = parseInt(component);\n            assertArgument(index < HardenedBit, \"invalid path index\", `path[${ i }]`, component);\n            result = result.deriveChild(index);\n\n        } else {\n            assertArgument(false, \"invalid path component\", `path[${ i }]`, component);\n        }\n    }\n\n    return result;\n}\n\n/**\n *  An **HDNodeWallet** is a [[Signer]] backed by the private key derived\n *  from an HD Node using the [[link-bip-32]] stantard.\n *\n *  An HD Node forms a hierarchal structure with each HD Node having a\n *  private key and the ability to derive child HD Nodes, defined by\n *  a path indicating the index of each child.\n */\nexport class HDNodeWallet extends BaseWallet {\n    /**\n     *  The compressed public key.\n     */\n    readonly publicKey!: string;\n\n    /**\n     *  The fingerprint.\n     *\n     *  A fingerprint allows quick qay to detect parent and child nodes,\n     *  but developers should be prepared to deal with collisions as it\n     *  is only 4 bytes.\n     */\n    readonly fingerprint!: string;\n\n    /**\n     *  The parent fingerprint.\n     */\n    readonly parentFingerprint!: string;\n\n    /**\n     *  The mnemonic used to create this HD Node, if available.\n     *\n     *  Sources such as extended keys do not encode the mnemonic, in\n     *  which case this will be ``null``.\n     */\n    readonly mnemonic!: null | Mnemonic;\n\n    /**\n     *  The chaincode, which is effectively a public key used\n     *  to derive children.\n     */\n    readonly chainCode!: string;\n\n    /**\n     *  The derivation path of this wallet.\n     *\n     *  Since extended keys do not provide full path details, this\n     *  may be ``null``, if instantiated from a source that does not\n     *  encode it.\n     */\n    readonly path!: null | string;\n\n    /**\n     *  The child index of this wallet. Values over ``2 *\\* 31`` indicate\n     *  the node is hardened.\n     */\n    readonly index!: number;\n\n    /**\n     *  The depth of this wallet, which is the number of components\n     *  in its path.\n     */\n    readonly depth!: number;\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, signingKey: SigningKey, parentFingerprint: string, chainCode: string, path: null | string, index: number, depth: number, mnemonic: null | Mnemonic, provider: null | Provider) {\n        super(signingKey, provider);\n        assertPrivate(guard, _guard, \"HDNodeWallet\");\n\n        defineProperties<HDNodeWallet>(this, { publicKey: signingKey.compressedPublicKey });\n\n        const fingerprint = dataSlice(ripemd160(sha256(this.publicKey)), 0, 4);\n        defineProperties<HDNodeWallet>(this, {\n            parentFingerprint, fingerprint,\n            chainCode, path, index, depth\n        });\n\n        defineProperties<HDNodeWallet>(this, { mnemonic });\n    }\n\n    connect(provider: null | Provider): HDNodeWallet {\n        return new HDNodeWallet(_guard, this.signingKey, this.parentFingerprint,\n            this.chainCode, this.path, this.index, this.depth, this.mnemonic, provider);\n    }\n\n    #account(): KeystoreAccount {\n        const account: KeystoreAccount = { address: this.address, privateKey: this.privateKey };\n        const m = this.mnemonic;\n        if (this.path && m && m.wordlist.locale === \"en\" && m.password === \"\") {\n            account.mnemonic = {\n                path: this.path,\n                locale: \"en\",\n                entropy: m.entropy\n            };\n        }\n\n        return account;\n    }\n\n    /**\n     *  Resolves to a [JSON Keystore Wallet](json-wallets) encrypted with\n     *  %%password%%.\n     *\n     *  If %%progressCallback%% is specified, it will receive periodic\n     *  updates as the encryption process progreses.\n     */\n    async encrypt(password: Uint8Array | string, progressCallback?: ProgressCallback): Promise<string> {\n        return await encryptKeystoreJson(this.#account(), password, { progressCallback });\n    }\n\n    /**\n     *  Returns a [JSON Keystore Wallet](json-wallets) encryped with\n     *  %%password%%.\n     *\n     *  It is preferred to use the [async version](encrypt) instead,\n     *  which allows a [[ProgressCallback]] to keep the user informed.\n     *\n     *  This method will block the event loop (freezing all UI) until\n     *  it is complete, which may be a non-trivial duration.\n     */\n    encryptSync(password: Uint8Array | string): string {\n        return encryptKeystoreJsonSync(this.#account(), password);\n    }\n\n    /**\n     *  The extended key.\n     *\n     *  This key will begin with the prefix ``xpriv`` and can be used to\n     *  reconstruct this HD Node to derive its children.\n     */\n    get extendedKey(): string {\n        // We only support the mainnet values for now, but if anyone needs\n        // testnet values, let me know. I believe current sentiment is that\n        // we should always use mainnet, and use BIP-44 to derive the network\n        //   - Mainnet: public=0x0488B21E, private=0x0488ADE4\n        //   - Testnet: public=0x043587CF, private=0x04358394\n\n        assert(this.depth < 256, \"Depth too deep\", \"UNSUPPORTED_OPERATION\", { operation: \"extendedKey\" });\n\n        return encodeBase58Check(concat([\n            \"0x0488ADE4\", zpad(this.depth, 1), this.parentFingerprint,\n            zpad(this.index, 4), this.chainCode,\n            concat([ \"0x00\", this.privateKey ])\n        ]));\n    }\n\n    /**\n     *  Returns true if this wallet has a path, providing a Type Guard\n     *  that the path is non-null.\n     */\n    hasPath(): this is { path: string } { return (this.path != null); }\n\n    /**\n     *  Returns a neutered HD Node, which removes the private details\n     *  of an HD Node.\n     *\n     *  A neutered node has no private key, but can be used to derive\n     *  child addresses and other public data about the HD Node.\n     */\n    neuter(): HDNodeVoidWallet {\n        return new HDNodeVoidWallet(_guard, this.address, this.publicKey,\n            this.parentFingerprint, this.chainCode, this.path, this.index,\n            this.depth, this.provider);\n    }\n\n    /**\n     *  Return the child for %%index%%.\n     */\n    deriveChild(_index: Numeric): HDNodeWallet {\n        const index = getNumber(_index, \"index\");\n        assertArgument(index <= 0xffffffff, \"invalid index\", \"index\", index);\n\n        // Base path\n        let path = this.path;\n        if (path) {\n            path += \"/\" + (index & ~HardenedBit);\n            if (index & HardenedBit) { path += \"'\"; }\n        }\n\n        const { IR, IL } = ser_I(index, this.chainCode, this.publicKey, this.privateKey);\n        const ki = new SigningKey(toBeHex((toBigInt(IL) + BigInt(this.privateKey)) % N, 32));\n\n        return new HDNodeWallet(_guard, ki, this.fingerprint, hexlify(IR),\n            path, index, this.depth + 1, this.mnemonic, this.provider);\n\n    }\n\n    /**\n     *  Return the HDNode for %%path%% from this node.\n     */\n    derivePath(path: string): HDNodeWallet {\n        return derivePath<HDNodeWallet>(this, path);\n    }\n\n    static #fromSeed(_seed: BytesLike, mnemonic: null | Mnemonic): HDNodeWallet {\n        assertArgument(isBytesLike(_seed), \"invalid seed\", \"seed\", \"[REDACTED]\");\n\n        const seed = getBytes(_seed, \"seed\");\n        assertArgument(seed.length >= 16 && seed.length <= 64 , \"invalid seed\", \"seed\", \"[REDACTED]\");\n\n        const I = getBytes(computeHmac(\"sha512\", MasterSecret, seed));\n        const signingKey = new SigningKey(hexlify(I.slice(0, 32)));\n\n        return new HDNodeWallet(_guard, signingKey, \"0x00000000\", hexlify(I.slice(32)),\n            \"m\", 0, 0, mnemonic, null);\n    }\n\n    /**\n     *  Creates a new HD Node from %%extendedKey%%.\n     *\n     *  If the %%extendedKey%% will either have a prefix or ``xpub`` or\n     *  ``xpriv``, returning a neutered HD Node ([[HDNodeVoidWallet]])\n     *  or full HD Node ([[HDNodeWallet) respectively.\n     */\n    static fromExtendedKey(extendedKey: string): HDNodeWallet | HDNodeVoidWallet {\n        const bytes = toBeArray(decodeBase58(extendedKey)); // @TODO: redact\n\n        assertArgument(bytes.length === 82 || encodeBase58Check(bytes.slice(0, 78)) === extendedKey,\n            \"invalid extended key\", \"extendedKey\", \"[ REDACTED ]\");\n\n        const depth = bytes[4];\n        const parentFingerprint = hexlify(bytes.slice(5, 9));\n        const index = parseInt(hexlify(bytes.slice(9, 13)).substring(2), 16);\n        const chainCode = hexlify(bytes.slice(13, 45));\n        const key = bytes.slice(45, 78);\n\n        switch (hexlify(bytes.slice(0, 4))) {\n            // Public Key\n            case \"0x0488b21e\": case \"0x043587cf\": {\n                const publicKey = hexlify(key);\n                return new HDNodeVoidWallet(_guard, computeAddress(publicKey), publicKey,\n                    parentFingerprint, chainCode, null, index, depth, null);\n            }\n\n            // Private Key\n            case \"0x0488ade4\": case \"0x04358394 \":\n                if (key[0] !== 0) { break; }\n                return new HDNodeWallet(_guard, new SigningKey(key.slice(1)),\n                    parentFingerprint, chainCode, null, index, depth, null, null);\n        }\n\n\n        assertArgument(false, \"invalid extended key prefix\", \"extendedKey\", \"[ REDACTED ]\");\n    }\n\n    /**\n     *  Creates a new random HDNode.\n     */\n    static createRandom(password?: string, path?: string, wordlist?: Wordlist): HDNodeWallet {\n        if (password == null) { password = \"\"; }\n        if (path == null) { path = defaultPath; }\n        if (wordlist == null) { wordlist = LangEn.wordlist(); }\n        const mnemonic = Mnemonic.fromEntropy(randomBytes(16), password, wordlist)\n        return HDNodeWallet.#fromSeed(mnemonic.computeSeed(), mnemonic).derivePath(path);\n    }\n\n    /**\n     *  Create an HD Node from %%mnemonic%%.\n     */\n    static fromMnemonic(mnemonic: Mnemonic, path?: string): HDNodeWallet {\n        if (!path) { path = defaultPath; }\n        return HDNodeWallet.#fromSeed(mnemonic.computeSeed(), mnemonic).derivePath(path);\n    }\n\n    /**\n     *  Creates an HD Node from a mnemonic %%phrase%%.\n     */\n    static fromPhrase(phrase: string, password?: string, path?: string, wordlist?: Wordlist): HDNodeWallet {\n        if (password == null) { password = \"\"; }\n        if (path == null) { path = defaultPath; }\n        if (wordlist == null) { wordlist = LangEn.wordlist(); }\n        const mnemonic = Mnemonic.fromPhrase(phrase, password, wordlist)\n        return HDNodeWallet.#fromSeed(mnemonic.computeSeed(), mnemonic).derivePath(path);\n    }\n\n    /**\n     *  Creates an HD Node from a %%seed%%.\n     */\n    static fromSeed(seed: BytesLike): HDNodeWallet {\n        return HDNodeWallet.#fromSeed(seed, null);\n    }\n}\n\n/**\n *  A **HDNodeVoidWallet** cannot sign, but provides access to\n *  the children nodes of a [[link-bip-32]] HD wallet addresses.\n *\n *  The can be created by using an extended ``xpub`` key to\n *  [[HDNodeWallet_fromExtendedKey]] or by \n *  [nuetering](HDNodeWallet-neuter) a [[HDNodeWallet]].\n */\nexport class HDNodeVoidWallet extends VoidSigner {\n    /**\n     *  The compressed public key.\n     */\n    readonly publicKey!: string;\n\n    /**\n     *  The fingerprint.\n     *\n     *  A fingerprint allows quick qay to detect parent and child nodes,\n     *  but developers should be prepared to deal with collisions as it\n     *  is only 4 bytes.\n     */\n    readonly fingerprint!: string;\n\n    /**\n     *  The parent node fingerprint.\n     */\n    readonly parentFingerprint!: string;\n\n    /**\n     *  The chaincode, which is effectively a public key used\n     *  to derive children.\n     */\n    readonly chainCode!: string;\n\n    /**\n     *  The derivation path of this wallet.\n     *\n     *  Since extended keys do not provider full path details, this\n     *  may be ``null``, if instantiated from a source that does not\n     *  enocde it.\n     */\n    readonly path!: null | string;\n\n    /**\n     *  The child index of this wallet. Values over ``2 *\\* 31`` indicate\n     *  the node is hardened.\n     */\n    readonly index!: number;\n\n    /**\n     *  The depth of this wallet, which is the number of components\n     *  in its path.\n     */\n    readonly depth!: number;\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, address: string, publicKey: string, parentFingerprint: string, chainCode: string, path: null | string, index: number, depth: number, provider: null | Provider) {\n        super(address, provider);\n        assertPrivate(guard, _guard, \"HDNodeVoidWallet\");\n\n        defineProperties<HDNodeVoidWallet>(this, { publicKey });\n\n        const fingerprint = dataSlice(ripemd160(sha256(publicKey)), 0, 4);\n        defineProperties<HDNodeVoidWallet>(this, {\n            publicKey, fingerprint, parentFingerprint, chainCode, path, index, depth\n        });\n    }\n\n    connect(provider: null | Provider): HDNodeVoidWallet {\n        return new HDNodeVoidWallet(_guard, this.address, this.publicKey,\n            this.parentFingerprint, this.chainCode, this.path, this.index, this.depth, provider);\n    }\n\n    /**\n     *  The extended key.\n     *\n     *  This key will begin with the prefix ``xpub`` and can be used to\n     *  reconstruct this neutered key to derive its children addresses.\n     */\n    get extendedKey(): string {\n        // We only support the mainnet values for now, but if anyone needs\n        // testnet values, let me know. I believe current sentiment is that\n        // we should always use mainnet, and use BIP-44 to derive the network\n        //   - Mainnet: public=0x0488B21E, private=0x0488ADE4\n        //   - Testnet: public=0x043587CF, private=0x04358394\n\n        assert(this.depth < 256, \"Depth too deep\", \"UNSUPPORTED_OPERATION\", { operation: \"extendedKey\" });\n\n        return encodeBase58Check(concat([\n            \"0x0488B21E\",\n            zpad(this.depth, 1),\n            this.parentFingerprint,\n            zpad(this.index, 4),\n            this.chainCode,\n            this.publicKey,\n        ]));\n    }\n\n    /**\n     *  Returns true if this wallet has a path, providing a Type Guard\n     *  that the path is non-null.\n     */\n    hasPath(): this is { path: string } { return (this.path != null); }\n\n    /**\n     *  Return the child for %%index%%.\n     */\n    deriveChild(_index: Numeric): HDNodeVoidWallet {\n        const index = getNumber(_index, \"index\");\n        assertArgument(index <= 0xffffffff, \"invalid index\", \"index\", index);\n\n        // Base path\n        let path = this.path;\n        if (path) {\n            path += \"/\" + (index & ~HardenedBit);\n            if (index & HardenedBit) { path += \"'\"; }\n        }\n\n        const { IR, IL } = ser_I(index, this.chainCode, this.publicKey, null);\n        const Ki = SigningKey.addPoints(IL, this.publicKey, true);\n\n        const address = computeAddress(Ki);\n\n        return new HDNodeVoidWallet(_guard, address, Ki, this.fingerprint, hexlify(IR),\n            path, index, this.depth + 1, this.provider);\n\n    }\n\n    /**\n     *  Return the signer for %%path%% from this node.\n     */\n    derivePath(path: string): HDNodeVoidWallet {\n        return derivePath<HDNodeVoidWallet>(this, path);\n    }\n}\n\n/*\nexport class HDNodeWalletManager {\n    #root: HDNodeWallet;\n\n    constructor(phrase: string, password?: null | string, path?: null | string, locale?: null | Wordlist) {\n        if (password == null) { password = \"\"; }\n        if (path == null) { path = \"m/44'/60'/0'/0\"; }\n        if (locale == null) { locale = LangEn.wordlist(); }\n        this.#root = HDNodeWallet.fromPhrase(phrase, password, path, locale);\n    }\n\n    getSigner(index?: number): HDNodeWallet {\n        return this.#root.deriveChild((index == null) ? 0: index);\n    }\n}\n*/\n\n/**\n *  Returns the [[link-bip-32]] path for the account at %%index%%.\n *\n *  This is the pattern used by wallets like Ledger.\n *\n *  There is also an [alternate pattern](getIndexedAccountPath) used by\n *  some software.\n */\nexport function getAccountPath(_index: Numeric): string {\n    const index = getNumber(_index, \"index\");\n    assertArgument(index >= 0 && index < HardenedBit, \"invalid account index\", \"index\", index);\n    return `m/44'/60'/${ index }'/0/0`;\n}\n\n/**\n *  Returns the path using an alternative pattern for deriving accounts,\n *  at %%index%%.\n *\n *  This derivation path uses the //index// component rather than the\n *  //account// component to derive sequential accounts.\n *\n *  This is the pattern used by wallets like MetaMask.\n */\nexport function getIndexedAccountPath(_index: Numeric): string {\n    const index = getNumber(_index, \"index\");\n    assertArgument(index >= 0 && index < HardenedBit, \"invalid account index\", \"index\", index);\n    return `m/44'/60'/0'/0/${ index}`;\n}\n\n", "import { WordlistOwl } from \"./wordlist-owl.js\";\n\nconst words = \"0erleonalorenseinceregesticitStanvetearctssi#ch2Athck&tneLl0And#Il.yLeOutO=S|S%b/ra@SurdU'0Ce[Cid|CountCu'Hie=IdOu,-Qui*Ro[TT]T%T*[Tu$0AptDD-tD*[Ju,M.UltV<)Vi)0Rob-0FairF%dRaid0A(EEntRee0Ead0MRRp%tS!_rmBumCoholErtI&LLeyLowMo,O}PhaReadySoT Ways0A>urAz(gOngOuntU'd0Aly,Ch%Ci|G G!GryIm$K!Noun)Nu$O` Sw T&naTiqueXietyY1ArtOlogyPe?P!Pro=Ril1ChCt-EaEnaGueMMedM%MyOundR<+Re,Ri=RowTTefa@Ti,Tw%k0KPe@SaultSetSi,SumeThma0H!>OmTa{T&dT.udeTra@0Ct]D.Gu,NtTh%ToTumn0Era+OcadoOid0AkeA*AyEsomeFulKw?d0Is:ByChel%C#D+GL<)Lc#y~MbooN<aNn RRelyRga(R*lSeS-SketTt!3A^AnAutyCau'ComeEfF%eG(Ha=H(dLie=LowLtN^Nef./TrayTt Twe&Y#d3Cyc!DKeNdOlogyRdR`Tt _{AdeAmeAnketA,EakE[IndOodO[omOu'UeUrUsh_rdAtDyIlMbNeNusOkO,Rd R(gRrowSsTtomUn)XY_{etA(AndA[A=EadEezeI{Id+IefIghtIngIskOccoliOk&OnzeOomO` OwnUsh2Bb!DdyD+tFf$oIldLbLkL!tNd!Nk Rd&Rg R,SS(e[SyTt Y Zz:Bba+B(B!CtusGeKe~LmM aMpNN$N)lNdyNn#NoeNvasNy#Pab!P.$Pta(RRb#RdRgoRpetRryRtSeShS(o/!Su$TT$ogT^Teg%yTt!UghtU'Ut]Ve3Il(gL yM|NsusNturyRe$Rta(_irAlkAmp]An+AosApt Ar+A'AtEapE{Ee'EfErryE,I{&IefIldIm}yOi)Oo'R#-U{!UnkUrn0G?Nnam#Rc!Tiz&TyVil_imApArifyAwAyE<ErkEv I{I|IffImbIn-IpO{OgO'O`OudOwnUbUmpU, Ut^_^A,C#utDeFfeeIlInL!@L%LumnMb(eMeMf%tM-Mm#Mp<yNc tNdu@NfirmNg*[N}@Nsid NtrolNv()OkOlPp PyR$ReRnR*@/Tt#U^UntryUp!Ur'Us(V Yo>_{Ad!AftAmA}AshAt AwlAzyEamEd.EekEwI{etImeIspIt-OpO[Ou^OwdUci$UelUi'Umb!Un^UshYY,$2BeLtu*PPbo?dRiousRr|Rta(R=Sh]/omTe3C!:DMa+MpN)Ng R(gShUght WnY3AlBa>BrisCadeCemb CideCl(eC%a>C*a'ErF&'F(eFyG*eLayLiv M<dMi'Ni$Nti,NyP?tP&dPos.P`PutyRi=ScribeS tSignSkSpair/royTailTe@VelopVi)Vo>3AgramAlAm#dAryCeE'lEtFf G.$Gn.yLemmaNn NosaurRe@RtSag*eScov Sea'ShSmi[S%d Splay/<)V tVideV%)Zzy5Ct%Cum|G~Lph(Ma(Na>NkeyN%OrSeUb!Ve_ftAg#AmaA,-AwEamE[IftIllInkIpI=OpUmY2CkMbNeR(g/T^Ty1Arf1Nam-:G G!RlyRnR`Sily/Sy1HoOlogyOnomy0GeItUca>1F%t0G1GhtTh 2BowD E@r-Eg<tEm|Eph<tEvat%I>Se0B?kBodyBra)Er+Ot]PloyPow Pty0Ab!A@DD![D%'EmyErgyF%)Ga+G(eH<)JoyLi,OughR-hRollSu*T Ti*TryVelope1Isode0U$Uip0AA'OdeOs]R%Upt0CapeSayS&)Ta>0Ern$H-s1Id&)IlOkeOl=1A@Amp!Ce[Ch<+C.eCludeCu'Ecu>Erci'Hau,Hib.I!I,ItOt-P<dPe@Pi*Pla(Po'P*[T&dTra0EEbrow:Br-CeCultyDeIntI`~L'MeMilyMousNNcyNtasyRmSh]TT$Th TigueUltV%.e3Atu*Bru?yD $EEdElMa!N)/iv$T^V W3B Ct]EldGu*LeLmLt N$NdNeNg NishReRmR,Sc$ShTT}[X_gAmeAshAtAv%EeIghtIpOatO{O%Ow UidUshY_mCusGIlLd~owOdOtR)Re,R+tRkRtu}RumRw?dSsil/ UndX_gi!AmeEqu|EshI&dIn+OgOntO,OwnOz&U.2ElNNnyRna)RyTu*:D+tInLaxy~ yMePRa+Rba+Rd&Rl-Rm|SSpTeTh U+Ze3N $NiusN*Nt!Nu(e/u*2O,0AntFtGg!Ng RaffeRlVe_dAn)A*A[IdeImp'ObeOomOryO=OwUe_tDde[LdOdO'RillaSpelSsipV nWn_bA)A(AntApeA[Av.yEatE&IdIefItOc yOupOwUnt_rdE[IdeIltIt?N3M:B.IrLfMm M, NdPpyRb%RdRshR=,TVeWkZ?d3AdAl`ArtAvyD+hogIght~oLmetLpNRo3Dd&Gh~NtPRe/%y5BbyCkeyLdLeLiday~owMeNeyOdPeRnRr%R'Sp.$/TelUrV 5BGeM<Mb!M%Nd*dNgryNtRd!RryRtSb<d3Brid:1EOn0EaEntifyLe2N%e4LLeg$L}[0A+Ita>M&'Mu}Pa@Po'Pro=Pul'0ChCludeComeC*a'DexD-a>Do%Du,ryF<tFl-tF%mHa!H .Iti$Je@JuryMa>N Noc|PutQuiryS<eSe@SideSpi*/$lTa@T e,ToVe,V.eVol=3On0L<dOla>Sue0Em1Ory:CketGu?RZz3AlousAns~yWel9BInKeUr}yY5D+I)MpNg!Ni%Nk/:Ng?oo3EnEpT^upY3CkDD}yNdNgdomSsTT^&TeTt&Wi4EeIfeO{Ow:BBelB%Dd DyKeMpNgua+PtopR+T T(UghUndryVaWWnWsu.Y Zy3Ad AfArnA=Ctu*FtGG$G&dIsu*M#NdNg`NsOp?dSs#Tt Vel3ArB tyBr?yC&'FeFtGhtKeMbM.NkOnQuid/Tt!VeZ?d5AdAnB, C$CkG-NelyNgOpTt yUdUn+VeY$5CkyGga+Mb N?N^Xury3R-s:Ch(eDG-G}tIdIlInJ%KeMm$NNa+Nda>NgoNs]Nu$P!Rb!R^Rg(R(eRketRria+SkSs/ T^T i$ThTrixTt XimumZe3AdowAnAsu*AtCh<-D$DiaLodyLtMb M%yNt]NuRcyR+R.RryShSsa+T$Thod3Dd!DnightLk~]M-NdNimumN%Nu>Rac!Rr%S ySs/akeXXedXtu*5Bi!DelDifyMM|N.%NkeyN, N`OnR$ReRn(gSqu.oTh T]T%Unta(U'VeVie5ChFf(LeLtiplySc!SeumShroomS-/Tu$3Self/ yTh:I=MePk(Rrow/yT]Tu*3ArCkEdGati=G!@I` PhewR=/TTw%kUtr$V WsXt3CeGht5B!I'M(eeOd!Rm$R`SeTab!TeTh(gTi)VelW5C!?Mb R'T:K0EyJe@Li+Scu*S =Ta(Vious0CurE<Tob 0Or1FF Fi)T&2L1Ay0DI=Ymp-0It0CeEI#L(eLy1EnEraIn]Po'T]1An+B.Ch?dD D(?yG<I|Ig($Ph<0Tr-h0H 0Tdo%T TputTside0AlEnEr0NN 0Yg&0/ 0O}:CtDd!GeIrLa)LmNdaNelN-N` P RadeR|RkRrotRtySsT^ThTi|TrolTt nU'VeYm|3A)AnutArAs<tL-<NN$tyNcilOp!Pp Rfe@Rm.Rs#T2O}OtoRa'Ys-$0AnoCn-Ctu*E)GGe#~LotNkO} Pe/olT^Zza_)A}tA,-A>AyEa'Ed+U{UgUn+2EmEtIntL?LeLi)NdNyOlPul?Rt]S.]Ssib!/TatoTt yV tyWd W _@i)Ai'Ed-tEf Epa*Es|EttyEv|I)IdeIm?yIntI%.yIs#Iva>IzeOb!mO)[Odu)Of.OgramOje@Omo>OofOp tyOsp O>@OudOvide2Bl-Dd(g~LpL'Mpk(N^PilPpyR^a'R.yRpo'R'ShTZz!3Ramid:99Al.yAntumArt E,]I{ItIzO>:Bb.Cco#CeCkD?DioIlInI'~yMpN^NdomN+PidReTeTh V&WZ%3AdyAlAs#BelBuildC$lCei=CipeC%dCyc!Du)F!@F%mFu'G]G*tGul?Je@LaxLea'LiefLyMa(Memb M(dMo=Nd NewNtOp&PairPeatPla)P%tQui*ScueSemb!Si,Sour)Sp#'SultTi*T*atTurnUn]Ve$ViewW?d2Y`m0BBb#CeChDeD+F!GhtGidNgOtPp!SkTu$V$V 5AdA,BotBu,CketM<)OfOkieOmSeTa>UghUndU>Y$5Bb DeGLeNNwayR$:DDd!D}[FeIlLadLm#L#LtLu>MeMp!NdTisfyToshiU)Usa+VeY1A!AnA*Att E}HemeHoolI&)I[%sOrp]OutRapRe&RiptRub1AAr^As#AtC#dC*tCt]Cur.yEdEkGm|Le@~M(?Ni%N'Nt&)RiesRvi)Ss]Tt!TupV&_dowAftAllowA*EdEllEriffIeldIftI}IpIv O{OeOotOpOrtOuld O=RimpRugUff!Y0Bl(gCkDeE+GhtGnL|Lk~yLv Mil?Mp!N)NgR&/ Tua>XZe1A>Et^IIllInIrtUll0AbAmEepEnd I)IdeIghtImOg<OtOwUsh0AllArtI!OkeOo`0A{AkeApIffOw0ApCc Ci$CkDaFtL?Ldi LidLut]L=Me#eNgOnRryRtUlUndUpUr)U`0A)A*Ati$AwnEakEci$EedEllEndH eI)Id IkeInIr.L.OilOns%O#OrtOtRayReadR(gY0Ua*UeezeUir*l_b!AdiumAffA+AirsAmpAndArtA>AyEakEelEmEpE*oI{IllIngO{Oma^O}OolOryO=Ra>gyReetRikeR#gRugg!Ud|UffUmb!Y!0Bje@Bm.BwayC)[ChDd&Ff G?G+,ItMm NNnyN'tP PplyP*meReRfa)R+Rpri'RroundR=ySpe@/a(1AllowAmpApArmE?EetIftImIngIt^Ord1MbolMptomRup/em:B!Ck!GIlL|LkNkPeR+tSk/eTtooXi3A^Am~NN<tNnisNtRm/Xt_nkAtEmeEnE%yE*EyIngIsOughtReeRi=RowUmbUnd 0CketDeG LtMb MeNyPRedSsueT!5A,BaccoDayDdl EGe` I!tK&MatoM%rowNeNgueNightOlO`PP-Pp!R^RnadoRtoi'SsT$Uri,W?dW WnY_{AdeAff-Ag-A(Ansf ApAshA=lAyEatEeEndI$IbeI{Igg ImIpOphyOub!U{UeUlyUmpetU,U`Y2BeIt]Mb!NaN}lRkeyRnRt!1El=EntyI)InI,O1PeP-$:5Ly5B*lla0Ab!Awa*C!Cov D DoFairFoldHappyIf%mIqueItIv 'KnownLo{TilUsu$Veil1Da>GradeHoldOnP Set1B<Ge0A+EEdEfulE![U$0Il.y:C<tCuumGueLidL!yL=NNishP%Rious/Ult3H-!L=tNd%Ntu*NueRbRifyRs]RyS'lT <3Ab!Br<tCiousCt%yDeoEw~a+Nta+Ol(Rtu$RusSaS.Su$T$Vid5C$I)IdLc<oLumeTeYa+:GeG#ItLk~LnutNtRfa*RmRri%ShSp/eT VeY3Al`Ap#ArA'lA` BDd(gEk&dIrdLcome/T_!AtEatEelEnE*IpIsp 0DeD`FeLd~NNdowNeNgNkNn Nt ReSdomSeShT}[5LfM<Nd OdOlRdRkRldRryR`_pE{E,!I,I>Ong::Rd3Ar~ow9UUngU`:3BraRo9NeO\";\nconst checksum = \"0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60\";\n\nlet wordlist: null | LangEn = null;\n\n/**\n *  The [[link-bip39-en]] for [mnemonic phrases](link-bip-39).\n *\n *  @_docloc: api/wordlists\n */\nexport class LangEn extends WordlistOwl {\n\n    /**\n     *  Creates a new instance of the English language Wordlist.\n     *\n     *  This should be unnecessary most of the time as the exported\n     *  [[langEn]] should suffice.\n     *\n     *  @_ignore:\n     */\n    constructor() { super(\"en\", words, checksum); }\n\n    /**\n     *  Returns a singleton instance of a ``LangEn``, creating it\n     *  if this is the first time being called.\n     */\n    static wordlist(): LangEn {\n        if (wordlist == null) { wordlist = new LangEn(); }\n        return wordlist;\n    }\n}\n", "\n// Use the encode-latin.js script to create the necessary\n// data files to be consumed by this class\n\nimport { id } from \"../hash/index.js\";\nimport { assertArgument } from \"../utils/index.js\";\n\nimport { decodeOwl } from \"./decode-owl.js\";\nimport { Wordlist } from \"./wordlist.js\";\n\n/**\n *  An OWL format Wordlist is an encoding method that exploits\n *  the general locality of alphabetically sorted words to\n *  achieve a simple but effective means of compression.\n *\n *  This class is generally not useful to most developers as\n *  it is used mainly internally to keep Wordlists for languages\n *  based on ASCII-7 small.\n *\n *  If necessary, there are tools within the ``generation/`` folder\n *  to create the necessary data.\n */\nexport class WordlistOwl extends Wordlist {\n    #data: string;\n    #checksum: string;\n\n    /**\n     *  Creates a new Wordlist for %%locale%% using the OWL %%data%%\n     *  and validated against the %%checksum%%.\n     */\n    constructor(locale: string, data: string, checksum: string) {\n        super(locale);\n        this.#data = data;\n        this.#checksum = checksum;\n        this.#words = null;\n    }\n\n    /**\n     *  The OWL-encoded data.\n     */\n    get _data(): string { return this.#data; }\n\n    /**\n     *  Decode all the words for the wordlist.\n     */\n    _decodeWords(): Array<string> {\n        return decodeOwl(this.#data);\n    }\n\n    #words: null | Array<string>;\n    #loadWords(): Array<string> {\n        if (this.#words == null) {\n            const words = this._decodeWords();\n\n            // Verify the computed list matches the official list\n            const checksum = id(words.join(\"\\n\") + \"\\n\");\n            /* c8 ignore start */\n            if (checksum !== this.#checksum) {\n                throw new Error(`BIP39 Wordlist for ${ this.locale } FAILED`);\n            }\n            /* c8 ignore stop */\n\n            this.#words = words;\n        }\n        return this.#words;\n    }\n\n    getWord(index: number): string {\n        const words = this.#loadWords();\n        assertArgument(index >= 0 && index < words.length, `invalid word index: ${ index }`, \"index\", index);\n        return words[index];\n    }\n\n    getWordIndex(word: string): number {\n        return this.#loadWords().indexOf(word);\n    }\n}\n", "import { assertArgument } from \"../utils/index.js\";\n\n\nconst subsChrs = \" !#$%&'()*+,-./<=>?@[]^_`{|}~\";\nconst Word = /^[a-z]*$/i;\n\nfunction unfold(words: Array<string>, sep: string): Array<string> {\n    let initial = 97;\n    return words.reduce((accum, word) => {\n        if (word === sep) {\n            initial++;\n        } else if (word.match(Word)) {\n            accum.push(String.fromCharCode(initial) + word);\n        } else {\n            initial = 97;\n            accum.push(word);\n        }\n        return accum;\n    }, <Array<string>>[]);\n}\n\n/**\n *  @_ignore\n */\nexport function decode(data: string, subs: string): Array<string> {\n\n    // Replace all the substitutions with their expanded form\n    for (let i = subsChrs.length - 1; i >= 0; i--) {\n        data = data.split(subsChrs[i]).join(subs.substring(2 * i, 2 * i + 2));\n    }\n\n    // Get all tle clumps; each suffix, first-increment and second-increment\n    const clumps: Array<string> = [ ];\n    const leftover = data.replace(/(:|([0-9])|([A-Z][a-z]*))/g, (all, item, semi, word) => {\n        if (semi) {\n            for (let i = parseInt(semi); i >= 0; i--) { clumps.push(\";\"); }\n        } else {\n            clumps.push(item.toLowerCase());\n        }\n        return \"\";\n    });\n    /* c8 ignore start */\n    if (leftover) { throw new Error(`leftovers: ${ JSON.stringify(leftover) }`); }\n    /* c8 ignore stop */\n\n    return unfold(unfold(clumps, \";\"), \":\");\n}\n\n/**\n *  @_ignore\n */\nexport function decodeOwl(data: string): Array<string> {\n    assertArgument(data[0] === \"0\", \"unsupported auwl data\", \"data\", data);\n\n    return decode(\n        data.substring(1 + 2 * subsChrs.length),\n        data.substring(1, 1 + 2 * subsChrs.length));\n}\n", "import { defineProperties } from \"../utils/index.js\";\n\n/**\n *  A Wordlist represents a collection of language-specific\n *  words used to encode and devoce [[link-bip-39]] encoded data\n *  by mapping words to 11-bit values and vice versa.\n */\nexport abstract class Wordlist {\n    locale!: string;\n\n    /**\n     *  Creates a new Wordlist instance.\n     *\n     *  Sub-classes MUST call this if they provide their own constructor,\n     *  passing in the locale string of the language.\n     *\n     *  Generally there is no need to create instances of a Wordlist,\n     *  since each language-specific Wordlist creates an instance and\n     *  there is no state kept internally, so they are safe to share.\n     */\n    constructor(locale: string) {\n        defineProperties<Wordlist>(this, { locale });\n    }\n\n    /**\n     *  Sub-classes may override this to provide a language-specific\n     *  method for spliting %%phrase%% into individual words.\n     *\n     *  By default, %%phrase%% is split using any sequences of\n     *  white-space as defined by regular expressions (i.e. ``/\\s+/``).\n     */\n    split(phrase: string): Array<string> {\n        return phrase.toLowerCase().split(/\\s+/g)\n    }\n\n    /**\n     *  Sub-classes may override this to provider a language-specific\n     *  method for joining %%words%% into a phrase.\n     *\n     *  By default, %%words%% are joined by a single space.\n     */\n    join(words: Array<string>): string {\n        return words.join(\" \");\n    }\n\n    /**\n     *  Maps an 11-bit value into its coresponding word in the list.\n     *\n     *  Sub-classes MUST override this.\n     */\n    abstract getWord(index: number): string;\n\n    /**\n     *  Maps a word to its corresponding 11-bit value.\n     *\n     *  Sub-classes MUST override this.\n     */\n    abstract getWordIndex(word: string): number;\n}\n", "import { pbkdf2, sha256 } from \"../crypto/index.js\";\nimport {\n    defineProperties, getBytes, hexlify, assertNormalize, assertPrivate, assertArgument, toUtf8Bytes\n} from \"../utils/index.js\";\nimport { LangEn } from \"../wordlists/lang-en.js\";\n\nimport type { BytesLike } from \"../utils/index.js\";\nimport type { Wordlist } from \"../wordlists/index.js\";\n\n\n// Returns a byte with the MSB bits set\nfunction getUpperMask(bits: number): number {\n   return ((1 << bits) - 1) << (8 - bits) & 0xff;\n}\n\n// Returns a byte with the LSB bits set\nfunction getLowerMask(bits: number): number {\n   return ((1 << bits) - 1) & 0xff;\n}\n\n\nfunction mnemonicToEntropy(mnemonic: string, wordlist?: null | Wordlist): string {\n    assertNormalize(\"NFKD\");\n\n    if (wordlist == null) { wordlist = LangEn.wordlist(); }\n\n    const words = wordlist.split(mnemonic);\n    assertArgument((words.length % 3) === 0 && words.length >= 12 && words.length <= 24,\n        \"invalid mnemonic length\", \"mnemonic\", \"[ REDACTED ]\");\n\n    const entropy = new Uint8Array(Math.ceil(11 * words.length / 8));\n\n    let offset = 0;\n    for (let i = 0; i < words.length; i++) {\n        let index = wordlist.getWordIndex(words[i].normalize(\"NFKD\"));\n        assertArgument(index >= 0, `invalid mnemonic word at index ${ i }`, \"mnemonic\", \"[ REDACTED ]\");\n\n        for (let bit = 0; bit < 11; bit++) {\n            if (index & (1 << (10 - bit))) {\n                entropy[offset >> 3] |= (1 << (7 - (offset % 8)));\n            }\n            offset++;\n        }\n    }\n\n    const entropyBits = 32 * words.length / 3;\n\n\n    const checksumBits = words.length / 3;\n    const checksumMask = getUpperMask(checksumBits);\n\n    const checksum = getBytes(sha256(entropy.slice(0, entropyBits / 8)))[0] & checksumMask;\n\n    assertArgument(checksum === (entropy[entropy.length - 1] & checksumMask),\n        \"invalid mnemonic checksum\", \"mnemonic\", \"[ REDACTED ]\");\n\n    return hexlify(entropy.slice(0, entropyBits / 8));\n}\n\nfunction entropyToMnemonic(entropy: Uint8Array, wordlist?: null | Wordlist): string {\n\n    assertArgument((entropy.length % 4) === 0 && entropy.length >= 16 && entropy.length <= 32,\n        \"invalid entropy size\", \"entropy\", \"[ REDACTED ]\");\n\n    if (wordlist == null) { wordlist = LangEn.wordlist(); }\n\n    const indices: Array<number> = [ 0 ];\n\n    let remainingBits = 11;\n    for (let i = 0; i < entropy.length; i++) {\n\n        // Consume the whole byte (with still more to go)\n        if (remainingBits > 8) {\n            indices[indices.length - 1] <<= 8;\n            indices[indices.length - 1] |= entropy[i];\n\n            remainingBits -= 8;\n\n        // This byte will complete an 11-bit index\n        } else {\n            indices[indices.length - 1] <<= remainingBits;\n            indices[indices.length - 1] |= entropy[i] >> (8 - remainingBits);\n\n            // Start the next word\n            indices.push(entropy[i] & getLowerMask(8 - remainingBits));\n\n            remainingBits += 3;\n        }\n    }\n\n    // Compute the checksum bits\n    const checksumBits = entropy.length / 4;\n    const checksum = parseInt(sha256(entropy).substring(2, 4), 16) & getUpperMask(checksumBits);\n\n    // Shift the checksum into the word indices\n    indices[indices.length - 1] <<= checksumBits;\n    indices[indices.length - 1] |= (checksum >> (8 - checksumBits));\n\n    return wordlist.join(indices.map((index) => (<Wordlist>wordlist).getWord(index)));\n}\n\nconst _guard = { };\n\n/**\n *  A **Mnemonic** wraps all properties required to compute [[link-bip-39]]\n *  seeds and convert between phrases and entropy.\n */\nexport class Mnemonic {\n    /**\n     *  The mnemonic phrase of 12, 15, 18, 21 or 24 words.\n     *\n     *  Use the [[wordlist]] ``split`` method to get the individual words.\n     */\n    readonly phrase!: string;\n\n    /**\n     *  The password used for this mnemonic. If no password is used this\n     *  is the empty string (i.e. ``\"\"``) as per the specification.\n     */\n    readonly password!: string;\n\n    /**\n     *  The wordlist for this mnemonic.\n     */\n    readonly wordlist!: Wordlist;\n\n    /**\n     *  The underlying entropy which the mnemonic encodes.\n     */\n    readonly entropy!: string;\n\n    /**\n     *  @private\n     */\n    constructor(guard: any, entropy: string, phrase: string, password?: null | string, wordlist?: null | Wordlist) {\n        if (password == null) { password = \"\"; }\n        if (wordlist == null) { wordlist = LangEn.wordlist(); }\n        assertPrivate(guard, _guard, \"Mnemonic\");\n        defineProperties<Mnemonic>(this, { phrase, password, wordlist, entropy });\n    }\n\n    /**\n     *  Returns the seed for the mnemonic.\n     */\n    computeSeed(): string {\n        const salt = toUtf8Bytes(\"mnemonic\" + this.password, \"NFKD\");\n        return pbkdf2(toUtf8Bytes(this.phrase, \"NFKD\"), salt, 2048, 64, \"sha512\");\n    }\n\n    /**\n     *  Creates a new Mnemonic for the %%phrase%%.\n     *\n     *  The default %%password%% is the empty string and the default\n     *  wordlist is the [English wordlists](LangEn).\n     */\n    static fromPhrase(phrase: string, password?: null | string, wordlist?: null | Wordlist): Mnemonic {\n        // Normalize the case and space; throws if invalid\n        const entropy = mnemonicToEntropy(phrase, wordlist);\n        phrase = entropyToMnemonic(getBytes(entropy), wordlist);\n        return new Mnemonic(_guard, entropy, phrase, password, wordlist);\n    }\n\n    /**\n     *  Create a new **Mnemonic** from the %%entropy%%.\n     *\n     *  The default %%password%% is the empty string and the default\n     *  wordlist is the [English wordlists](LangEn).\n     */\n    static fromEntropy(_entropy: BytesLike, password?: null | string, wordlist?: null | Wordlist): Mnemonic {\n        const entropy = getBytes(_entropy, \"entropy\");\n        const phrase = entropyToMnemonic(entropy, wordlist);\n        return new Mnemonic(_guard, hexlify(entropy), phrase, password, wordlist);\n    }\n\n    /**\n     *  Returns the phrase for %%mnemonic%%.\n     */\n    static entropyToPhrase(_entropy: BytesLike, wordlist?: null | Wordlist): string {\n        const entropy = getBytes(_entropy, \"entropy\");\n        return entropyToMnemonic(entropy, wordlist);\n    }\n\n    /**\n     *  Returns the entropy for %%phrase%%.\n     */\n    static phraseToEntropy(phrase: string, wordlist?: null | Wordlist): string {\n        return mnemonicToEntropy(phrase, wordlist);\n    }\n\n    /**\n     *  Returns true if %%phrase%% is a valid [[link-bip-39]] phrase.\n     *\n     *  This checks all the provided words belong to the %%wordlist%%,\n     *  that the length is valid and the checksum is correct.\n     */\n    static isValidMnemonic(phrase: string, wordlist?: null | Wordlist): boolean {\n        try {\n            mnemonicToEntropy(phrase, wordlist);\n            return true;\n        } catch (error) { }\n        return false;\n    }\n}\n", "/**\n *  The JSON Wallet formats allow a simple way to store the private\n *  keys needed in Ethereum along with related information and allows\n *  for extensible forms of encryption.\n *\n *  These utilities facilitate decrypting and encrypting the most common\n *  JSON Wallet formats.\n *\n *  @_subsection: api/wallet:JSON Wallets  [json-wallets]\n */\n\nimport { CTR } from \"aes-js\";\n\nimport { getAddress } from \"../address/index.js\";\nimport { keccak256, pbkdf2, randomBytes, scrypt, scryptSync } from \"../crypto/index.js\";\nimport { computeAddress } from \"../transaction/index.js\";\nimport {\n    concat, getBytes, hexlify, uuidV4, assert, assertArgument\n} from \"../utils/index.js\";\n\nimport { getPassword, spelunk, zpad } from \"./utils.js\";\n\nimport type { ProgressCallback } from \"../crypto/index.js\";\nimport type { BytesLike } from \"../utils/index.js\";\n\nimport { version } from \"../_version.js\";\n\n\nconst defaultPath = \"m/44'/60'/0'/0/0\";\n\n/**\n *  The contents of a JSON Keystore Wallet.\n */\nexport type KeystoreAccount = {\n    address: string;\n    privateKey: string;\n    mnemonic?: {\n        path?: string;\n        locale?: string;\n        entropy: string;\n    }\n};\n\n/**\n *  The parameters to use when encrypting a JSON Keystore Wallet.\n */\nexport type EncryptOptions = {\n   progressCallback?: ProgressCallback;\n   iv?: BytesLike;\n   entropy?: BytesLike;\n   client?: string;\n   salt?: BytesLike;\n   uuid?: string;\n   scrypt?: {\n       N?: number;\n       r?: number;\n       p?: number;\n   }\n}\n\n/**\n *  Returns true if %%json%% is a valid JSON Keystore Wallet.\n */\nexport function isKeystoreJson(json: string): boolean {\n    try {\n        const data = JSON.parse(json);\n        const version = ((data.version != null) ? parseInt(data.version): 0);\n        if (version === 3) { return true; }\n    } catch (error) { }\n    return false;\n}\n\nfunction decrypt(data: any, key: Uint8Array, ciphertext: Uint8Array): string {\n    const cipher = spelunk<string>(data, \"crypto.cipher:string\");\n    if (cipher === \"aes-128-ctr\") {\n        const iv = spelunk<Uint8Array>(data, \"crypto.cipherparams.iv:data!\")\n        const aesCtr = new CTR(key, iv);\n        return hexlify(aesCtr.decrypt(ciphertext));\n    }\n\n    assert(false, \"unsupported cipher\", \"UNSUPPORTED_OPERATION\", {\n        operation: \"decrypt\"\n    });\n}\n\nfunction getAccount(data: any, _key: string): KeystoreAccount {\n    const key = getBytes(_key);\n    const ciphertext = spelunk<Uint8Array>(data, \"crypto.ciphertext:data!\");\n\n    const computedMAC = hexlify(keccak256(concat([ key.slice(16, 32), ciphertext ]))).substring(2);\n    assertArgument(computedMAC === spelunk<string>(data, \"crypto.mac:string!\").toLowerCase(),\n        \"incorrect password\", \"password\", \"[ REDACTED ]\");\n\n    const privateKey = decrypt(data, key.slice(0, 16), ciphertext);\n\n    const address = computeAddress(privateKey);\n    if (data.address) {\n        let check = data.address.toLowerCase();\n        if (!check.startsWith(\"0x\")) { check = \"0x\" + check; }\n\n        assertArgument(getAddress(check) === address, \"keystore address/privateKey mismatch\", \"address\", data.address);\n    }\n\n    const account: KeystoreAccount = { address, privateKey };\n\n    // Version 0.1 x-ethers metadata must contain an encrypted mnemonic phrase\n    const version = spelunk(data, \"x-ethers.version:string\");\n    if (version === \"0.1\") {\n        const mnemonicKey = key.slice(32, 64);\n\n        const mnemonicCiphertext = spelunk<Uint8Array>(data, \"x-ethers.mnemonicCiphertext:data!\");\n        const mnemonicIv = spelunk<Uint8Array>(data, \"x-ethers.mnemonicCounter:data!\");\n\n        const mnemonicAesCtr = new CTR(mnemonicKey, mnemonicIv);\n\n        account.mnemonic = {\n            path: (spelunk<null | string>(data, \"x-ethers.path:string\") || defaultPath),\n            locale: (spelunk<null | string>(data, \"x-ethers.locale:string\") || \"en\"),\n            entropy: hexlify(getBytes(mnemonicAesCtr.decrypt(mnemonicCiphertext)))\n        };\n    }\n\n    return account;\n}\n\ntype ScryptParams = {\n    name: \"scrypt\";\n    salt: Uint8Array;\n    N: number;\n    r: number;\n    p: number;\n    dkLen: number;\n};\n\ntype KdfParams = ScryptParams | {\n    name: \"pbkdf2\";\n    salt: Uint8Array;\n    count: number;\n    dkLen: number;\n    algorithm: \"sha256\" | \"sha512\";\n};\n\nfunction getDecryptKdfParams<T>(data: any): KdfParams {\n    const kdf = spelunk(data, \"crypto.kdf:string\");\n    if (kdf && typeof(kdf) === \"string\") {\n        if (kdf.toLowerCase() === \"scrypt\") {\n            const salt = spelunk<Uint8Array>(data, \"crypto.kdfparams.salt:data!\");\n            const N = spelunk<number>(data, \"crypto.kdfparams.n:int!\");\n            const r = spelunk<number>(data, \"crypto.kdfparams.r:int!\");\n            const p = spelunk<number>(data, \"crypto.kdfparams.p:int!\");\n\n            // Make sure N is a power of 2\n            assertArgument(N > 0 && (N & (N - 1)) === 0, \"invalid kdf.N\", \"kdf.N\", N);\n            assertArgument(r > 0 && p > 0, \"invalid kdf\", \"kdf\", kdf);\n\n            const dkLen = spelunk<number>(data, \"crypto.kdfparams.dklen:int!\");\n            assertArgument(dkLen === 32, \"invalid kdf.dklen\", \"kdf.dflen\", dkLen);\n\n            return { name: \"scrypt\", salt, N, r, p, dkLen: 64 };\n\n        } else if (kdf.toLowerCase() === \"pbkdf2\") {\n\n            const salt = spelunk<Uint8Array>(data, \"crypto.kdfparams.salt:data!\");\n\n            const prf = spelunk<string>(data, \"crypto.kdfparams.prf:string!\");\n            const algorithm = prf.split(\"-\").pop();\n            assertArgument(algorithm === \"sha256\" || algorithm === \"sha512\", \"invalid kdf.pdf\", \"kdf.pdf\", prf);\n\n            const count = spelunk<number>(data, \"crypto.kdfparams.c:int!\");\n\n            const dkLen = spelunk<number>(data, \"crypto.kdfparams.dklen:int!\");\n            assertArgument(dkLen === 32, \"invalid kdf.dklen\", \"kdf.dklen\", dkLen);\n\n            return { name: \"pbkdf2\", salt, count, dkLen, algorithm };\n        }\n    }\n\n    assertArgument(false, \"unsupported key-derivation function\", \"kdf\", kdf);\n}\n\n\n/**\n *  Returns the account details for the JSON Keystore Wallet %%json%%\n *  using %%password%%.\n *\n *  It is preferred to use the [async version](decryptKeystoreJson)\n *  instead, which allows a [[ProgressCallback]] to keep the user informed\n *  as to the decryption status.\n *\n *  This method will block the event loop (freezing all UI) until decryption\n *  is complete, which can take quite some time, depending on the wallet\n *  paramters and platform.\n */\nexport function decryptKeystoreJsonSync(json: string, _password: string | Uint8Array): KeystoreAccount {\n    const data = JSON.parse(json);\n\n    const password = getPassword(_password);\n\n    const params = getDecryptKdfParams(data);\n    if (params.name === \"pbkdf2\") {\n        const { salt, count, dkLen, algorithm } = params;\n        const key = pbkdf2(password, salt, count, dkLen, algorithm);\n        return getAccount(data, key);\n    }\n\n    assert(params.name === \"scrypt\", \"cannot be reached\", \"UNKNOWN_ERROR\", { params })\n\n    const { salt, N, r, p, dkLen } = params;\n    const key = scryptSync(password, salt, N, r, p, dkLen);\n    return getAccount(data, key);\n}\n\nfunction stall(duration: number): Promise<void> {\n    return new Promise((resolve) => { setTimeout(() => { resolve(); }, duration); });\n}\n\n/**\n *  Resolves to the decrypted JSON Keystore Wallet %%json%% using the\n *  %%password%%.\n *\n *  If provided, %%progress%% will be called periodically during the\n *  decrpytion to provide feedback, and if the function returns\n *  ``false`` will halt decryption.\n *\n *  The %%progressCallback%% will **always** receive ``0`` before\n *  decryption begins and ``1`` when complete.\n */\nexport async function decryptKeystoreJson(json: string, _password: string | Uint8Array, progress?: ProgressCallback): Promise<KeystoreAccount> {\n    const data = JSON.parse(json);\n\n    const password = getPassword(_password);\n\n    const params = getDecryptKdfParams(data);\n    if (params.name === \"pbkdf2\") {\n        if (progress) {\n            progress(0);\n            await stall(0);\n        }\n        const { salt, count, dkLen, algorithm } = params;\n        const key = pbkdf2(password, salt, count, dkLen, algorithm);\n        if (progress) {\n            progress(1);\n            await stall(0);\n        }\n        return getAccount(data, key);\n    }\n\n    assert(params.name === \"scrypt\", \"cannot be reached\", \"UNKNOWN_ERROR\", { params })\n\n    const { salt, N, r, p, dkLen } = params;\n    const key = await scrypt(password, salt, N, r, p, dkLen, progress);\n    return getAccount(data, key);\n}\n\nfunction getEncryptKdfParams(options: EncryptOptions): ScryptParams {\n    // Check/generate the salt\n    const salt = (options.salt != null) ? getBytes(options.salt, \"options.salt\"): randomBytes(32);\n\n    // Override the scrypt password-based key derivation function parameters\n    let N = (1 << 17), r = 8, p = 1;\n    if (options.scrypt) {\n        if (options.scrypt.N) { N = options.scrypt.N; }\n        if (options.scrypt.r) { r = options.scrypt.r; }\n        if (options.scrypt.p) { p = options.scrypt.p; }\n    }\n    assertArgument(typeof(N) === \"number\" && N > 0 && Number.isSafeInteger(N) && (BigInt(N) & BigInt(N - 1)) === BigInt(0), \"invalid scrypt N parameter\", \"options.N\", N);\n    assertArgument(typeof(r) === \"number\" && r > 0 && Number.isSafeInteger(r), \"invalid scrypt r parameter\", \"options.r\", r);\n    assertArgument(typeof(p) === \"number\" && p > 0 && Number.isSafeInteger(p), \"invalid scrypt p parameter\", \"options.p\", p);\n\n    return { name: \"scrypt\", dkLen: 32, salt, N, r, p };\n}\n\nfunction _encryptKeystore(key: Uint8Array, kdf: ScryptParams, account: KeystoreAccount, options: EncryptOptions): any {\n\n    const privateKey = getBytes(account.privateKey, \"privateKey\");\n\n    // Override initialization vector\n    const iv = (options.iv != null) ? getBytes(options.iv, \"options.iv\"): randomBytes(16);\n    assertArgument(iv.length === 16, \"invalid options.iv length\", \"options.iv\", options.iv);\n\n    // Override the uuid\n    const uuidRandom = (options.uuid != null) ? getBytes(options.uuid, \"options.uuid\"): randomBytes(16);\n    assertArgument(uuidRandom.length === 16, \"invalid options.uuid length\", \"options.uuid\", options.iv);\n\n    // This will be used to encrypt the wallet (as per Web3 secret storage)\n    // - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)\n    // - 32 bytes   AES key to encrypt mnemonic with (required here to be Ethers Wallet)\n    const derivedKey = key.slice(0, 16);\n    const macPrefix = key.slice(16, 32);\n\n    // Encrypt the private key\n    const aesCtr = new CTR(derivedKey, iv);\n    const ciphertext = getBytes(aesCtr.encrypt(privateKey));\n\n    // Compute the message authentication code, used to check the password\n    const mac = keccak256(concat([ macPrefix, ciphertext ]))\n\n    // See: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\n    const data: { [key: string]: any } = {\n        address: account.address.substring(2).toLowerCase(),\n        id: uuidV4(uuidRandom),\n        version: 3,\n        Crypto: {\n            cipher: \"aes-128-ctr\",\n            cipherparams: {\n                iv: hexlify(iv).substring(2),\n            },\n            ciphertext: hexlify(ciphertext).substring(2),\n            kdf: \"scrypt\",\n            kdfparams: {\n                salt: hexlify(kdf.salt).substring(2),\n                n: kdf.N,\n                dklen: 32,\n                p: kdf.p,\n                r: kdf.r\n            },\n            mac: mac.substring(2)\n        }\n    };\n\n    // If we have a mnemonic, encrypt it into the JSON wallet\n    if (account.mnemonic) {\n        const client = (options.client != null) ? options.client: `ethers/${ version }`;\n\n        const path = account.mnemonic.path || defaultPath;\n        const locale = account.mnemonic.locale || \"en\";\n\n        const mnemonicKey = key.slice(32, 64);\n\n        const entropy = getBytes(account.mnemonic.entropy, \"account.mnemonic.entropy\");\n        const mnemonicIv = randomBytes(16);\n        const mnemonicAesCtr = new CTR(mnemonicKey, mnemonicIv);\n        const mnemonicCiphertext = getBytes(mnemonicAesCtr.encrypt(entropy));\n\n        const now = new Date();\n        const timestamp = (now.getUTCFullYear() + \"-\" +\n                           zpad(now.getUTCMonth() + 1, 2) + \"-\" +\n                           zpad(now.getUTCDate(), 2) + \"T\" +\n                           zpad(now.getUTCHours(), 2) + \"-\" +\n                           zpad(now.getUTCMinutes(), 2) + \"-\" +\n                           zpad(now.getUTCSeconds(), 2) + \".0Z\");\n        const gethFilename = (\"UTC--\" + timestamp + \"--\" + data.address);\n\n        data[\"x-ethers\"] = {\n            client, gethFilename, path, locale,\n            mnemonicCounter: hexlify(mnemonicIv).substring(2),\n            mnemonicCiphertext: hexlify(mnemonicCiphertext).substring(2),\n            version: \"0.1\"\n        };\n    }\n\n    return JSON.stringify(data);\n}\n\n/**\n *  Return the JSON Keystore Wallet for %%account%% encrypted with\n *  %%password%%.\n *\n *  The %%options%% can be used to tune the password-based key\n *  derivation function parameters, explicitly set the random values\n *  used. Any provided [[ProgressCallback]] is ignord.\n */\nexport function encryptKeystoreJsonSync(account: KeystoreAccount, password: string | Uint8Array, options?: EncryptOptions): string {\n    if (options == null) { options = { }; }\n\n    const passwordBytes = getPassword(password);\n    const kdf = getEncryptKdfParams(options);\n    const key = scryptSync(passwordBytes, kdf.salt, kdf.N, kdf.r, kdf.p, 64);\n    return _encryptKeystore(getBytes(key), kdf, account, options);\n}\n\n/**\n *  Resolved to the JSON Keystore Wallet for %%account%% encrypted\n *  with %%password%%.\n *\n *  The %%options%% can be used to tune the password-based key\n *  derivation function parameters, explicitly set the random values\n *  used and provide a [[ProgressCallback]] to receive periodic updates\n *  on the completion status..\n */\nexport async function encryptKeystoreJson(account: KeystoreAccount, password: string | Uint8Array, options?: EncryptOptions): Promise<string> {\n    if (options == null) { options = { }; }\n\n    const passwordBytes = getPassword(password);\n    const kdf = getEncryptKdfParams(options);\n    const key = await scrypt(passwordBytes, kdf.salt, kdf.N, kdf.r, kdf.p, 64, options.progressCallback);\n    return _encryptKeystore(getBytes(key), kdf, account, options);\n}\n\n", "export { AES } from \"./aes.js\";\n\nexport { ModeOfOperation } from \"./mode.js\";\n\nexport { CBC } from \"./mode-cbc.js\";\nexport { CFB } from \"./mode-cfb.js\";\nexport { CTR } from \"./mode-ctr.js\";\nexport { ECB } from \"./mode-ecb.js\";\nexport { OFB } from \"./mode-ofb.js\";\n\nexport { pkcs7Pad, pkcs7Strip } from \"./padding.js\";\n", "/*! MIT License. Copyright 2015-2022 Richard Moore <me@ricmoo.com>. See LICENSE.txt. */\n\n// Number of rounds by keysize\nconst numberOfRounds: Record<number, number> = { 16: 10, 24: 12, 32: 14 };\n\n// Round constant words\nconst rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];\n\n// S-box and Inverse S-box (S is for Substitution)\nconst S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\nconst Si =[0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];\n\n// Transformations for encryption\nconst T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];\nconst T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];\nconst T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];\nconst T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];\n\n// Transformations for decryption\nconst T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];\nconst T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];\nconst T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];\nconst T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];\n\n// Transformations for decryption key expansion\nconst U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];\nconst U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];\nconst U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];\nconst U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];\n\nfunction convertToInt32(bytes: Uint8Array): Array<number> {\n  const result = [ ];\n  for (let i = 0; i < bytes.length; i += 4) {\n    result.push((bytes[i] << 24) | (bytes[i + 1] << 16) | (bytes[i + 2] <<  8) | bytes[i + 3]);\n  }\n  return result;\n}\n\nexport class AES {\n  readonly #key: Uint8Array;\n  readonly #Kd: Array<Array<number>>;\n  readonly #Ke: Array<Array<number>>;\n\n  get key(): Uint8Array { return this.#key.slice(); }\n\n  constructor(key: Uint8Array) {\n    if (!(this instanceof AES)) {\n      throw Error('AES must be instanitated with `new`');\n    }\n\n    this.#key = new Uint8Array(key);\n\n    const rounds = numberOfRounds[this.key.length];\n    if (rounds == null) {\n      throw new TypeError('invalid key size (must be 16, 24 or 32 bytes)');\n    }\n\n    // encryption round keys\n    this.#Ke = [];\n\n    // decryption round keys\n    this.#Kd = [];\n\n    for (let i = 0; i <= rounds; i++) {\n      this.#Ke.push([0, 0, 0, 0]);\n      this.#Kd.push([0, 0, 0, 0]);\n    }\n\n    const roundKeyCount = (rounds + 1) * 4;\n    const KC = this.key.length / 4;\n\n    // convert the key into ints\n    const tk = convertToInt32(this.key);\n\n    // copy values into round key arrays\n    let index;\n    for (let i = 0; i < KC; i++) {\n      index = i >> 2;\n      this.#Ke[index][i % 4] = tk[i];\n      this.#Kd[rounds - index][i % 4] = tk[i];\n    }\n\n    // key expansion (fips-197 section 5.2)\n    let rconpointer = 0;\n    let t = KC, tt;\n    while (t < roundKeyCount) {\n      tt = tk[KC - 1];\n      tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^\n                (S[(tt >>  8) & 0xFF] << 16) ^\n                (S[ tt        & 0xFF] <<  8) ^\n                 S[(tt >> 24) & 0xFF]        ^\n                (rcon[rconpointer] << 24));\n      rconpointer += 1;\n\n      // key expansion (for non-256 bit)\n      if (KC != 8) {\n        for (let i = 1; i < KC; i++) {\n          tk[i] ^= tk[i - 1];\n        }\n\n      // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n      } else {\n        for (let i = 1; i < (KC / 2); i++) {\n          tk[i] ^= tk[i - 1];\n        }\n        tt = tk[(KC / 2) - 1];\n\n        tk[KC / 2] ^= (S[ tt        & 0xFF]        ^\n                      (S[(tt >>  8) & 0xFF] <<  8) ^\n                      (S[(tt >> 16) & 0xFF] << 16) ^\n                      (S[(tt >> 24) & 0xFF] << 24));\n\n        for (let i = (KC / 2) + 1; i < KC; i++) {\n          tk[i] ^= tk[i - 1];\n        }\n      }\n\n      // copy values into round key arrays\n      let i = 0, r, c;\n      while (i < KC && t < roundKeyCount) {\n        r = t >> 2;\n        c = t % 4;\n        this.#Ke[r][c] = tk[i];\n        this.#Kd[rounds - r][c] = tk[i++];\n        t++;\n      }\n    }\n\n    // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n    for (let r = 1; r < rounds; r++) {\n      for (let c = 0; c < 4; c++) {\n        tt = this.#Kd[r][c];\n        this.#Kd[r][c] = (U1[(tt >> 24) & 0xFF] ^\n                          U2[(tt >> 16) & 0xFF] ^\n                          U3[(tt >>  8) & 0xFF] ^\n                          U4[ tt        & 0xFF]);\n      }\n    }\n  }\n\n  encrypt(plaintext: Uint8Array): Uint8Array {\n    if (plaintext.length != 16) {\n      throw new TypeError('invalid plaintext size (must be 16 bytes)');\n    }\n\n    const rounds = this.#Ke.length - 1;\n    const a = [0, 0, 0, 0];\n\n    // convert plaintext to (ints ^ key)\n    let t = convertToInt32(plaintext);\n    for (let i = 0; i < 4; i++) {\n      t[i] ^= this.#Ke[0][i];\n    }\n\n    // apply round transforms\n    for (let r = 1; r < rounds; r++) {\n      for (let i = 0; i < 4; i++) {\n        a[i] = (T1[(t[ i         ] >> 24) & 0xff] ^\n                T2[(t[(i + 1) % 4] >> 16) & 0xff] ^\n                T3[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                T4[ t[(i + 3) % 4]        & 0xff] ^\n                this.#Ke[r][i]);\n      }\n      t = a.slice();\n    }\n\n    // the last round is special\n    const result = new Uint8Array(16);\n    let tt = 0;\n    for (let i = 0; i < 4; i++) {\n      tt = this.#Ke[rounds][i];\n      result[4 * i    ] = (S[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n      result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n      result[4 * i + 2] = (S[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n      result[4 * i + 3] = (S[ t[(i + 3) % 4]        & 0xff] ^  tt       ) & 0xff;\n    }\n\n    return result;\n  }\n\n  decrypt(ciphertext: Uint8Array): Uint8Array {\n    if (ciphertext.length != 16) {\n      throw new TypeError('invalid ciphertext size (must be 16 bytes)');\n    }\n\n    const rounds = this.#Kd.length - 1;\n    const a = [0, 0, 0, 0];\n\n    // convert plaintext to (ints ^ key)\n    let t = convertToInt32(ciphertext);\n    for (let i = 0; i < 4; i++) {\n      t[i] ^= this.#Kd[0][i];\n    }\n\n    // apply round transforms\n    for (let r = 1; r < rounds; r++) {\n      for (let i = 0; i < 4; i++) {\n        a[i] = (T5[(t[ i         ] >> 24) & 0xff] ^\n                T6[(t[(i + 3) % 4] >> 16) & 0xff] ^\n                T7[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                T8[ t[(i + 1) % 4]        & 0xff] ^\n                this.#Kd[r][i]);\n      }\n      t = a.slice();\n    }\n\n    // the last round is special\n    const result = new Uint8Array(16);\n    let tt = 0;\n    for (let i = 0; i < 4; i++) {\n      tt = this.#Kd[rounds][i];\n      result[4 * i    ] = (Si[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n      result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n      result[4 * i + 2] = (Si[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n      result[4 * i + 3] = (Si[ t[(i + 1) % 4]        & 0xff] ^  tt       ) & 0xff;\n    }\n\n    return result;\n  }\n}\n", "\nimport { AES } from \"./aes.js\";\n\nexport abstract class ModeOfOperation {\n  readonly aes!: AES;\n  readonly name!: string;\n\n  constructor(name: string, key: Uint8Array, cls?: any) {\n    if (cls && !(this instanceof cls)) {\n      throw new Error(`${ name } must be instantiated with \"new\"`);\n    }\n\n    Object.defineProperties(this, {\n      aes: { enumerable: true, value: new AES(key) },\n      name: { enumerable: true, value: name }\n    });\n  }\n\n  abstract encrypt(plaintext: Uint8Array): Uint8Array;\n  abstract decrypt(ciphertext: Uint8Array): Uint8Array;\n}\n", "// Cipher Block Chaining\n\nimport { ModeOfOperation } from \"./mode.js\";\n\nexport class CBC extends ModeOfOperation {\n  #iv: Uint8Array;\n  #lastBlock: Uint8Array;\n\n  constructor(key: Uint8Array, iv?: Uint8Array) {\n    super(\"ECC\", key, CBC);\n\n    if (iv) {\n      if (iv.length % 16) {\n        throw new TypeError(\"invalid iv size (must be 16 bytes)\");\n      }\n      this.#iv = new Uint8Array(iv);\n    } else {\n      this.#iv = new Uint8Array(16);\n    }\n\n    this.#lastBlock = this.iv;\n  }\n\n  get iv(): Uint8Array { return new Uint8Array(this.#iv); }\n\n  encrypt(plaintext: Uint8Array): Uint8Array {\n    if (plaintext.length % 16) {\n      throw new TypeError(\"invalid plaintext size (must be multiple of 16 bytes)\");\n    }\n\n    const ciphertext = new Uint8Array(plaintext.length);\n    for (let i = 0; i < plaintext.length; i += 16) {\n      for (let j = 0; j < 16; j++) {\n        this.#lastBlock[j] ^= plaintext[i + j];\n      }\n\n      this.#lastBlock = this.aes.encrypt(this.#lastBlock);\n      ciphertext.set(this.#lastBlock, i);\n    }\n\n    return ciphertext;\n  }\n\n  decrypt(ciphertext: Uint8Array): Uint8Array {\n    if (ciphertext.length % 16) {\n        throw new TypeError(\"invalid ciphertext size (must be multiple of 16 bytes)\");\n    }\n\n    const plaintext = new Uint8Array(ciphertext.length);\n    for (let i = 0; i < ciphertext.length; i += 16) {\n        const block = this.aes.decrypt(ciphertext.subarray(i, i + 16));\n\n        for (let j = 0; j < 16; j++) {\n          plaintext[i + j] = block[j] ^ this.#lastBlock[j];\n          this.#lastBlock[j] = ciphertext[i + j];\n        }\n    }\n\n    return plaintext;\n  }\n}\n", "// Cipher Feedback\n\nimport { ModeOfOperation } from \"./mode.js\";\n\nexport class CFB extends ModeOfOperation {\n  #iv: Uint8Array;\n  #shiftRegister: Uint8Array;\n\n  readonly segmentSize!: number;\n\n  constructor(key: Uint8Array, iv?: Uint8Array, segmentSize: number = 8) {\n    super(\"CFB\", key, CFB);\n\n    // This library currently only handles byte-aligned segmentSize\n    if (!Number.isInteger(segmentSize) || (segmentSize % 8)) {\n      throw new TypeError(\"invalid segmentSize\");\n    }\n\n    Object.defineProperties(this, {\n      segmentSize: { enumerable: true, value: segmentSize }\n    });\n\n    if (iv) {\n      if (iv.length % 16) {\n        throw new TypeError(\"invalid iv size (must be 16 bytes)\");\n      }\n      this.#iv = new Uint8Array(iv);\n    } else {\n      this.#iv = new Uint8Array(16);\n    }\n\n    this.#shiftRegister = this.iv;\n  }\n\n  get iv(): Uint8Array { return new Uint8Array(this.#iv); }\n\n  #shift(data: Uint8Array): void {\n    const segmentSize = this.segmentSize / 8;\n\n    // Shift the register\n    this.#shiftRegister.set(this.#shiftRegister.subarray(segmentSize));\n    this.#shiftRegister.set(data.subarray(0, segmentSize), 16 - segmentSize);\n  }\n\n  encrypt(plaintext: Uint8Array): Uint8Array {\n    if (8 * plaintext.length % this.segmentSize) {\n      throw new TypeError(\"invalid plaintext size (must be multiple of segmentSize bytes)\");\n    }\n\n    const segmentSize = this.segmentSize / 8;\n\n    const ciphertext = new Uint8Array(plaintext);\n\n    for (let i = 0; i < ciphertext.length; i += segmentSize) {\n      const xorSegment = this.aes.encrypt(this.#shiftRegister);\n      for (let j = 0; j < segmentSize; j++) {\n        ciphertext[i + j] ^= xorSegment[j];\n      }\n\n      this.#shift(ciphertext.subarray(i));\n    }\n\n    return ciphertext;\n  }\n\n  decrypt(ciphertext: Uint8Array): Uint8Array {\n    if (8 * ciphertext.length % this.segmentSize) {\n        throw new TypeError(\"invalid ciphertext size (must be multiple of segmentSize bytes)\");\n    }\n\n    const segmentSize = this.segmentSize / 8;\n\n    const plaintext = new Uint8Array(ciphertext);\n\n    for (let i = 0; i < plaintext.length; i += segmentSize) {\n      const xorSegment = this.aes.encrypt(this.#shiftRegister);\n      for (let j = 0; j < segmentSize; j++) {\n        plaintext[i + j] ^= xorSegment[j];\n      }\n\n      this.#shift(ciphertext.subarray(i));\n    }\n\n    return plaintext;\n  }\n}\n", "// Counter Mode\n\nimport { ModeOfOperation } from \"./mode.js\";\n\nexport class CTR extends ModeOfOperation {\n\n  // Remaining bytes for the one-time pad\n  #remaining: Uint8Array;\n  #remainingIndex: number;\n\n  // The current counter\n  #counter: Uint8Array;\n\n  constructor(key: Uint8Array, initialValue?: number | Uint8Array) {\n    super(\"CTR\", key, CTR);\n\n    this.#counter = new Uint8Array(16)\n    this.#counter.fill(0);\n\n    this.#remaining = this.#counter;  // This will be discarded immediately\n    this.#remainingIndex = 16;\n\n    if (initialValue == null) { initialValue = 1; }\n\n    if (typeof(initialValue) === \"number\") {\n      this.setCounterValue(initialValue);\n    } else {\n      this.setCounterBytes(initialValue);\n    }\n  }\n\n  get counter(): Uint8Array { return new Uint8Array(this.#counter); }\n\n  setCounterValue(value: number): void {\n    if (!Number.isInteger(value) || value < 0 || value > Number.MAX_SAFE_INTEGER) {\n      throw new TypeError(\"invalid counter initial integer value\");\n    }\n\n    for (let index = 15; index >= 0; --index) {\n      this.#counter[index] = value % 256;\n      value = Math.floor(value / 256);\n    }\n  }\n\n  setCounterBytes(value: Uint8Array): void {\n    if (value.length !== 16) {\n      throw new TypeError(\"invalid counter initial Uint8Array value length\");\n    }\n\n    this.#counter.set(value);\n  }\n\n  increment() {\n    for (let i = 15; i >= 0; i--) {\n      if (this.#counter[i] === 255) {\n        this.#counter[i] = 0;\n      } else {\n        this.#counter[i]++;\n        break;\n      }\n    }\n  }\n\n  encrypt(plaintext: Uint8Array): Uint8Array {\n    const crypttext = new Uint8Array(plaintext);\n\n    for (let i = 0; i < crypttext.length; i++) {\n      if (this.#remainingIndex === 16) {\n        this.#remaining = this.aes.encrypt(this.#counter);\n        this.#remainingIndex = 0;\n        this.increment();\n      }\n      crypttext[i] ^= this.#remaining[this.#remainingIndex++];\n    }\n\n    return crypttext;\n  }\n\n  decrypt(ciphertext: Uint8Array): Uint8Array {\n    return this.encrypt(ciphertext);\n  }\n}\n", "// Electronic Code Book\n\nimport { ModeOfOperation } from \"./mode.js\";\n\nexport class ECB extends ModeOfOperation {\n\n  constructor(key: Uint8Array) {\n    super(\"ECB\", key, ECB);\n  }\n\n  encrypt(plaintext: Uint8Array): Uint8Array {\n    if (plaintext.length % 16) {\n        throw new TypeError(\"invalid plaintext size (must be multiple of 16 bytes)\");\n    }\n\n    const crypttext = new Uint8Array(plaintext.length);\n    for (let i = 0; i < plaintext.length; i += 16) {\n        crypttext.set(this.aes.encrypt(plaintext.subarray(i, i + 16)), i);\n    }\n\n    return crypttext;\n  }\n\n  decrypt(crypttext: Uint8Array): Uint8Array {\n    if (crypttext.length % 16) {\n        throw new TypeError(\"invalid ciphertext size (must be multiple of 16 bytes)\");\n    }\n\n    const plaintext = new Uint8Array(crypttext.length);\n    for (let i = 0; i < crypttext.length; i += 16) {\n        plaintext.set(this.aes.decrypt(crypttext.subarray(i, i + 16)), i);\n    }\n\n    return plaintext;\n  }\n}\n", "// Output Feedback\n\nimport { ModeOfOperation } from \"./mode.js\";\n\nexport class OFB extends ModeOfOperation {\n  #iv: Uint8Array;\n  #lastPrecipher: Uint8Array;\n  #lastPrecipherIndex: number;\n\n  constructor(key: Uint8Array, iv?: Uint8Array) {\n    super(\"OFB\", key, OFB);\n\n    if (iv) {\n      if (iv.length % 16) {\n        throw new TypeError(\"invalid iv size (must be 16 bytes)\");\n      }\n      this.#iv = new Uint8Array(iv);\n    } else {\n      this.#iv = new Uint8Array(16);\n    }\n\n    this.#lastPrecipher = this.iv;\n    this.#lastPrecipherIndex = 16;\n  }\n\n  get iv(): Uint8Array { return new Uint8Array(this.#iv); }\n\n  encrypt(plaintext: Uint8Array): Uint8Array {\n    if (plaintext.length % 16) {\n      throw new TypeError(\"invalid plaintext size (must be multiple of 16 bytes)\");\n    }\n\n    const ciphertext = new Uint8Array(plaintext);\n    for (let i = 0; i < ciphertext.length; i++) {\n      if (this.#lastPrecipherIndex === 16) {\n          this.#lastPrecipher = this.aes.encrypt(this.#lastPrecipher);\n          this.#lastPrecipherIndex = 0;\n      }\n      ciphertext[i] ^= this.#lastPrecipher[this.#lastPrecipherIndex++];\n    }\n\n    return ciphertext;\n  }\n\n  decrypt(ciphertext: Uint8Array): Uint8Array {\n    if (ciphertext.length % 16) {\n        throw new TypeError(\"invalid ciphertext size (must be multiple of 16 bytes)\");\n    }\n    return this.encrypt(ciphertext);\n  }\n}\n", "\nexport function pkcs7Pad(data: Uint8Array): Uint8Array {\n    const padder = 16 - (data.length % 16);\n\n    const result = new Uint8Array(data.length + padder);\n    result.set(data);\n\n    for (let i = data.length; i < result.length; i++) {\n        result[i] = padder;\n    }\n\n    return result;\n}\n\nexport function pkcs7Strip(data: Uint8Array): Uint8Array {\n    if (data.length < 16) { throw new TypeError('PKCS#7 invalid length'); }\n\n    const padder = data[data.length - 1];\n    if (padder > 16) { throw new TypeError('PKCS#7 padding byte out of range'); }\n\n    const length = data.length - padder;\n    for (let i = 0; i < padder; i++) {\n        if (data[length + i] !== padder) {\n            throw new TypeError('PKCS#7 invalid padding byte');\n        }\n    }\n\n    return new Uint8Array(data.subarray(0, length));\n}\n", "/**\n *  @_ignore\n */\n\nimport {\n    getBytesCopy, assertArgument, toUtf8Bytes\n} from \"../utils/index.js\";\n\nexport function looseArrayify(hexString: string): Uint8Array {\n    if (typeof(hexString) === \"string\" && !hexString.startsWith(\"0x\")) {\n        hexString = \"0x\" + hexString;\n    }\n    return getBytesCopy(hexString);\n}\n\nexport function zpad(value: String | number, length: number): String {\n    value = String(value);\n    while (value.length < length) { value = '0' + value; }\n    return value;\n}\n\nexport function getPassword(password: string | Uint8Array): Uint8Array {\n    if (typeof(password) === 'string') {\n        return toUtf8Bytes(password, \"NFKC\");\n    }\n    return getBytesCopy(password);\n}\n\nexport function spelunk<T>(object: any, _path: string): T {\n\n    const match = _path.match(/^([a-z0-9$_.-]*)(:([a-z]+))?(!)?$/i);\n    assertArgument(match != null, \"invalid path\", \"path\", _path);\n\n    const path = match[1];\n    const type = match[3];\n    const reqd = (match[4] === \"!\");\n\n    let cur = object;\n    for (const comp of path.toLowerCase().split('.')) {\n\n        // Search for a child object with a case-insensitive matching key\n        if (Array.isArray(cur)) {\n            if (!comp.match(/^[0-9]+$/)) { break; }\n            cur = cur[parseInt(comp)];\n\n        } else if (typeof(cur) === \"object\") {\n            let found: any = null;\n            for (const key in cur) {\n                 if (key.toLowerCase() === comp) {\n                     found = cur[key];\n                     break;\n                 }\n            }\n            cur = found;\n\n        } else {\n            cur = null;\n        }\n\n        if (cur == null) { break; }\n    }\n\n    assertArgument(!reqd || cur != null, \"missing required value\", \"path\", path);\n\n    if (type && cur != null) {\n        if (type === \"int\") {\n            if (typeof(cur) === \"string\" && cur.match(/^-?[0-9]+$/)) {\n                return <T><unknown>parseInt(cur);\n            } else if (Number.isSafeInteger(cur)) {\n                return cur;\n            }\n        }\n\n        if (type === \"number\") {\n            if (typeof(cur) === \"string\" && cur.match(/^-?[0-9.]*$/)) {\n                return <T><unknown>parseFloat(cur);\n            }\n        }\n\n        if (type === \"data\") {\n            if (typeof(cur) === \"string\") { return <T><unknown>looseArrayify(cur); }\n        }\n\n        if (type === \"array\" && Array.isArray(cur)) { return <T><unknown>cur; }\n        if (type === typeof(cur)) { return cur; }\n\n        assertArgument(false, `wrong type found for ${ type } `, \"path\", path);\n    }\n\n    return cur;\n}\n/*\nexport function follow(object: any, path: string): null | string {\n    let currentChild = object;\n\n    for (const comp of path.toLowerCase().split('/')) {\n\n        // Search for a child object with a case-insensitive matching key\n        let matchingChild = null;\n        for (const key in currentChild) {\n             if (key.toLowerCase() === comp) {\n                 matchingChild = currentChild[key];\n                 break;\n             }\n        }\n\n        if (matchingChild === null) { return null; }\n\n        currentChild = matchingChild;\n    }\n\n    return currentChild;\n}\n\n// \"path/to/something:type!\"\nexport function followRequired(data: any, path: string): string {\n    const value = follow(data, path);\n    if (value != null) { return value; }\n    return logger.throwArgumentError(\"invalid value\", `data:${ path }`,\n    JSON.stringify(data));\n}\n*/\n// See: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)\n/*\nexport function uuidV4(randomBytes: BytesLike): string {\n    const bytes = getBytes(randomBytes, \"randomBytes\");\n\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n\n    const value = hexlify(bytes);\n\n    return [\n       value.substring(2, 10),\n       value.substring(10, 14),\n       value.substring(14, 18),\n       value.substring(18, 22),\n       value.substring(22, 34),\n    ].join(\"-\");\n}\n*/\n", "/**\n *  @_subsection: api/wallet:JSON Wallets  [json-wallets]\n */\n\nimport { CBC, pkcs7Strip } from \"aes-js\";\n\nimport { getAddress } from \"../address/index.js\";\nimport { pbkdf2 } from \"../crypto/index.js\";\nimport { id } from \"../hash/index.js\";\nimport { getBytes, assertArgument } from \"../utils/index.js\";\n\nimport { getPassword, looseArrayify, spelunk } from \"./utils.js\";\n\n\n/**\n *  The data stored within a JSON Crowdsale wallet is fairly\n *  minimal.\n */\nexport type CrowdsaleAccount = {\n    privateKey: string;\n    address: string;\n}\n\n/**\n *  Returns true if %%json%% is a valid JSON Crowdsale wallet.\n */\nexport function isCrowdsaleJson(json: string): boolean {\n    try {\n        const data = JSON.parse(json);\n        if (data.encseed) { return true; }\n    } catch (error) { }\n    return false;\n}\n\n// See: https://github.com/ethereum/pyethsaletool\n\n/**\n *  Before Ethereum launched, it was necessary to create a wallet\n *  format for backers to use, which would be used to receive ether\n *  as a reward for contributing to the project.\n *\n *  The [[link-crowdsale]] format is now obsolete, but it is still\n *  useful to support and the additional code is fairly trivial as\n *  all the primitives required are used through core portions of\n *  the library.\n */\nexport function decryptCrowdsaleJson(json: string, _password: string | Uint8Array): CrowdsaleAccount {\n    const data = JSON.parse(json);\n    const password = getPassword(_password);\n\n    // Ethereum Address\n    const address = getAddress(spelunk(data, \"ethaddr:string!\"));\n\n    // Encrypted Seed\n    const encseed = looseArrayify(spelunk(data, \"encseed:string!\"));\n    assertArgument(encseed && (encseed.length % 16) === 0, \"invalid encseed\", \"json\", json);\n\n    const key = getBytes(pbkdf2(password, password, 2000, 32, \"sha256\")).slice(0, 16);\n\n    const iv = encseed.slice(0, 16);\n    const encryptedSeed = encseed.slice(16);\n\n    // Decrypt the seed\n    const aesCbc = new CBC(key, iv);\n    const seed = pkcs7Strip(getBytes(aesCbc.decrypt(encryptedSeed)));\n\n    // This wallet format is weird... Convert the binary encoded hex to a string.\n    let seedHex = \"\";\n    for (let i = 0; i < seed.length; i++) {\n        seedHex += String.fromCharCode(seed[i]);\n    }\n\n    return { address, privateKey: id(seedHex) };\n}\n", "import { SigningKey } from \"../crypto/index.js\";\nimport { assertArgument } from \"../utils/index.js\";\n\nimport { BaseWallet } from \"./base-wallet.js\";\nimport { HDNodeWallet } from \"./hdwallet.js\";\nimport { decryptCrowdsaleJson, isCrowdsaleJson  } from \"./json-crowdsale.js\";\nimport {\n    decryptKeystoreJson, decryptKeystoreJsonSync,\n    encryptKeystoreJson, encryptKeystoreJsonSync,\n    isKeystoreJson\n} from \"./json-keystore.js\";\nimport { Mnemonic } from \"./mnemonic.js\";\n\nimport type { ProgressCallback } from \"../crypto/index.js\";\nimport type { Provider } from \"../providers/index.js\";\n\nimport type { CrowdsaleAccount } from \"./json-crowdsale.js\";\nimport type { KeystoreAccount } from \"./json-keystore.js\";\n\n\nfunction stall(duration: number): Promise<void> {\n    return new Promise((resolve) => { setTimeout(() => { resolve(); }, duration); });\n}\n\n/**\n *  A **Wallet** manages a single private key which is used to sign\n *  transactions, messages and other common payloads.\n *\n *  This class is generally the main entry point for developers\n *  that wish to use a private key directly, as it can create\n *  instances from a large variety of common sources, including\n *  raw private key, [[link-bip-39]] mnemonics and encrypte JSON\n *  wallets.\n */\nexport class Wallet extends BaseWallet {\n\n    /**\n     *  Create a new wallet for the private %%key%%, optionally connected\n     *  to %%provider%%.\n     */\n    constructor(key: string | SigningKey, provider?: null | Provider) {\n        if (typeof(key) === \"string\" && !key.startsWith(\"0x\")) {\n            key = \"0x\" + key;\n        }\n\n        let signingKey = (typeof(key) === \"string\") ? new SigningKey(key): key;\n        super(signingKey, provider);\n    }\n\n    connect(provider: null | Provider): Wallet {\n        return new Wallet(this.signingKey, provider);\n    }\n\n    /**\n     *  Resolves to a [JSON Keystore Wallet](json-wallets) encrypted with\n     *  %%password%%.\n     *\n     *  If %%progressCallback%% is specified, it will receive periodic\n     *  updates as the encryption process progreses.\n     */\n    async encrypt(password: Uint8Array | string, progressCallback?: ProgressCallback): Promise<string> {\n        const account = { address: this.address, privateKey: this.privateKey };\n        return await encryptKeystoreJson(account, password, { progressCallback });\n    }\n\n    /**\n     *  Returns a [JSON Keystore Wallet](json-wallets) encryped with\n     *  %%password%%.\n     *\n     *  It is preferred to use the [async version](encrypt) instead,\n     *  which allows a [[ProgressCallback]] to keep the user informed.\n     *\n     *  This method will block the event loop (freezing all UI) until\n     *  it is complete, which may be a non-trivial duration.\n     */\n    encryptSync(password: Uint8Array | string): string {\n        const account = { address: this.address, privateKey: this.privateKey };\n        return encryptKeystoreJsonSync(account, password);\n    }\n\n    static #fromAccount(account: null | CrowdsaleAccount | KeystoreAccount): HDNodeWallet | Wallet {\n        assertArgument(account, \"invalid JSON wallet\", \"json\", \"[ REDACTED ]\");\n\n        if (\"mnemonic\" in account && account.mnemonic && account.mnemonic.locale === \"en\") {\n            const mnemonic = Mnemonic.fromEntropy(account.mnemonic.entropy);\n            const wallet = HDNodeWallet.fromMnemonic(mnemonic, account.mnemonic.path);\n            if (wallet.address === account.address && wallet.privateKey === account.privateKey) {\n                return wallet;\n            }\n            console.log(\"WARNING: JSON mismatch address/privateKey != mnemonic; fallback onto private key\");\n        }\n\n        const wallet = new Wallet(account.privateKey);\n\n        assertArgument(wallet.address === account.address,\n            \"address/privateKey mismatch\", \"json\", \"[ REDACTED ]\");\n\n        return wallet;\n    }\n\n    /**\n     *  Creates (asynchronously) a **Wallet** by decrypting the %%json%%\n     *  with %%password%%.\n     *\n     *  If %%progress%% is provided, it is called periodically during\n     *  decryption so that any UI can be updated.\n     */\n    static async fromEncryptedJson(json: string, password: Uint8Array | string, progress?: ProgressCallback): Promise<HDNodeWallet | Wallet> {\n        let account: null | CrowdsaleAccount | KeystoreAccount = null;\n        if (isKeystoreJson(json)) {\n            account = await decryptKeystoreJson(json, password, progress);\n\n        } else if (isCrowdsaleJson(json)) {\n            if (progress) { progress(0); await stall(0); }\n            account = decryptCrowdsaleJson(json, password);\n            if (progress) { progress(1); await stall(0); }\n\n        }\n\n        return Wallet.#fromAccount(account);\n    }\n\n    /**\n     *  Creates a **Wallet** by decrypting the %%json%% with %%password%%.\n     *\n     *  The [[fromEncryptedJson]] method is preferred, as this method\n     *  will lock up and freeze the UI during decryption, which may take\n     *  some time.\n     */\n    static fromEncryptedJsonSync(json: string, password: Uint8Array | string): HDNodeWallet | Wallet {\n        let account: null | CrowdsaleAccount | KeystoreAccount = null;\n        if (isKeystoreJson(json)) {\n            account = decryptKeystoreJsonSync(json, password);\n        } else if (isCrowdsaleJson(json)) {\n            account = decryptCrowdsaleJson(json, password);\n        } else {\n            assertArgument(false, \"invalid JSON wallet\", \"json\", \"[ REDACTED ]\");\n        }\n\n        return Wallet.#fromAccount(account);\n    }\n\n    /**\n     *  Creates a new random [[HDNodeWallet]] using the available\n     *  [cryptographic random source](randomBytes).\n     *\n     *  If there is no crytographic random source, this will throw.\n     */\n    static createRandom(provider?: null | Provider): HDNodeWallet {\n        const wallet = HDNodeWallet.createRandom();\n        if (provider) { return wallet.connect(provider); }\n        return wallet;\n    }\n\n    /**\n     *  Creates a [[HDNodeWallet]] for %%phrase%%.\n     */\n    static fromPhrase(phrase: string, provider?: Provider): HDNodeWallet {\n        const wallet = HDNodeWallet.fromPhrase(phrase);\n        if (provider) { return wallet.connect(provider); }\n        return wallet;\n    }\n}\n", "/**\n *  A Wordlist is a set of 2048 words used to encode private keys\n *  (or other binary data) that is easier for humans to write down,\n *  transcribe and dictate.\n *\n *  The [[link-bip-39]] standard includes several checksum bits,\n *  depending on the size of the mnemonic phrase.\n *\n *  A mnemonic phrase may be 12, 15, 18, 21 or 24 words long. For\n *  most purposes 12 word mnemonics should be used, as including\n *  additional words increases the difficulty and potential for\n *  mistakes and does not offer any effective improvement on security.\n *\n *  There are a variety of [[link-bip39-wordlists]] for different\n *  languages, but for maximal compatibility, the\n *  [English Wordlist](LangEn) is recommended.\n *\n *  @_section: api/wordlists:Wordlists [about-wordlists]\n */\nexport { Wordlist } from \"./wordlist.js\";\nexport { LangEn } from \"./lang-en.js\";\n\nexport { WordlistOwl } from \"./wordlist-owl.js\";\nexport { WordlistOwlA } from \"./wordlist-owla.js\";\n\nexport { wordlists } from \"./wordlists.js\";\n", "\nimport { WordlistOwl } from \"./wordlist-owl.js\";\nimport { decodeOwlA } from \"./decode-owla.js\";\n\n/**\n *  An OWL-A format Wordlist extends the OWL format to add an\n *  overlay onto an OWL format Wordlist to support diacritic\n *  marks.\n *\n *  This class is generally not useful to most developers as\n *  it is used mainly internally to keep Wordlists for languages\n *  based on latin-1 small.\n *\n *  If necessary, there are tools within the ``generation/`` folder\n *  to create the necessary data.\n */\nexport class WordlistOwlA extends WordlistOwl {\n    #accent: string;\n\n\n    /**\n     *  Creates a new Wordlist for %%locale%% using the OWLA %%data%%\n     *  and %%accent%% data and validated against the %%checksum%%.\n     */\n    constructor(locale: string, data: string, accent: string, checksum: string) {\n        super(locale, data, checksum);\n        this.#accent = accent;\n    }\n\n    /**\n     *  The OWLA-encoded accent data.\n     */\n    get _accent(): string { return this.#accent; }\n\n    /**\n     *  Decode all the words for the wordlist.\n     */\n    _decodeWords(): Array<string> {\n        return decodeOwlA(this._data, this._accent);\n    }\n}\n", "import { assertArgument } from \"../utils/index.js\";\n\nimport { decodeBits } from \"./bit-reader.js\";\nimport { decodeOwl } from \"./decode-owl.js\";\n\n/**\n *  @_ignore\n */\nexport function decodeOwlA(data: string, accents: string): Array<string> {\n    let words = decodeOwl(data).join(\",\");\n\n    // Inject the accents\n    accents.split(/,/g).forEach((accent) => {\n\n        const match = accent.match(/^([a-z]*)([0-9]+)([0-9])(.*)$/);\n        assertArgument(match !== null, \"internal error parsing accents\", \"accents\", accents);\n\n        let posOffset = 0;\n        const positions = decodeBits(parseInt(match[3]), match[4]);\n        const charCode = parseInt(match[2]);\n        const regex = new RegExp(`([${ match[1] }])`, \"g\");\n        words = words.replace(regex, (all, letter) => {\n            const rem = --positions[posOffset];\n            if (rem === 0) {\n                letter = String.fromCharCode(letter.charCodeAt(0), charCode);\n                posOffset++;\n            }\n            return letter;\n        });\n    });\n\n    return words.split(\",\");\n}\n", "const Base64 = \")!@#$%^&*(ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_\";\n\n/**\n *  @_ignore\n */\nexport function decodeBits(width: number, data: string): Array<number> {\n    const maxValue = (1 << width) - 1;\n    const result: Array<number> = [ ];\n    let accum = 0, bits = 0, flood = 0;\n    for (let i = 0; i < data.length; i++) {\n\n        // Accumulate 6 bits of data\n        accum = ((accum << 6) | Base64.indexOf(data[i]));\n        bits += 6;\n\n        // While we have enough for a word...\n        while (bits >= width) {\n            // ...read the word\n            const value = (accum >> (bits - width));\n            accum &= (1 << (bits - width)) - 1;\n            bits -= width;\n\n            // A value of 0 indicates we exceeded maxValue, it\n            // floods over into the next value\n            if (value === 0) {\n                flood += maxValue;\n            } else {\n                result.push(value + flood);\n                flood = 0;\n            }\n        }\n    }\n\n    return result;\n}\n", "\nimport { LangCz } from \"./lang-cz.js\";\nimport { LangEn } from \"./lang-en.js\";\nimport { LangEs } from \"./lang-es.js\";\nimport { LangFr } from \"./lang-fr.js\";\nimport { LangJa } from \"./lang-ja.js\";\nimport { LangKo } from \"./lang-ko.js\";\nimport { LangIt } from \"./lang-it.js\";\nimport { LangPt } from \"./lang-pt.js\";\nimport { LangZh } from \"./lang-zh.js\";\n\nimport type { Wordlist } from \"./wordlist.js\";\n\n/**\n *  The available Wordlists by their\n *  [ISO 639-1 Language Code](link-wiki-iso639).\n *\n *  (**i.e.** [cz](LangCz), [en](LangEn), [es](LangEs), [fr](LangFr),\n *  [ja](LangJa), [ko](LangKo), [it](LangIt), [pt](LangPt),\n *  [zh_cn](LangZh), [zh_tw](LangZh))\n *\n *  The dist files (in the ``/dist`` folder) have had all languages\n *  except English stripped out, which reduces the library size by\n *  about 80kb. If required, they are available by importing the\n *  included ``wordlists-extra.min.js`` file.\n */\nexport const wordlists: Record<string, Wordlist> = {\n  cz: LangCz.wordlist(),\n  en: LangEn.wordlist(),\n  es: LangEs.wordlist(),\n  fr: LangFr.wordlist(),\n  it: LangIt.wordlist(),\n  pt: LangPt.wordlist(),\n  ja: LangJa.wordlist(),\n  ko: LangKo.wordlist(),\n  zh_cn: LangZh.wordlist(\"cn\"),\n  zh_tw: LangZh.wordlist(\"tw\"),\n};\n", "import { WordlistOwl } from \"./wordlist-owl.js\";\n\nconst words = \"0itatkastcenaovo$taouleraeki&chor*teci%enbalodaeladet'!Chn=0Di#%E%^1Resa2Rese3CeT'#0EjKohol0Pu)%0A&sDul#Ekdo)Ke)Ti#Ul|3}aOgan%0FaltI$@tPi,%TmaTronom0LasL{i#Ol0Tobus4Yl:B#}<CilCul#D!_Ge)GrHnoKterieLa^L{#LkonLon-LvanLzaMbusNkom!R[rR{RmanRokoRvaTer#TohVl&Zal#Zili#Zu#3D&RanSe^StieTonZin#ZmocZ)k3CyklD]Ft-KinyLan%Og,fO]gTvaZon2AhobytAt*/E/aEdu+EskIk!Iz&Ok|Oud Ud2B-BrDl.D~H!(JkotJ|K<ysLe$R>R'?TaUb_U/!U^U+Ur!Xer2A^v#Ambo,An#AtrEp)Ike)KoLohOnzOskevUn{#Usin#Z^Zy2Bl.Bn|})D _D#D'aF{Jar(Kv?LdokLvaN^NkrRzaTikVolZola3D+tL.T'#0Ukot:PartRev&3DrDu+J/JnLaLerLkemLn?N.Nn(N'#NtrumNz<StopisT#2AlupaAp`]Ar aA)E/t!EmieI/otIrurgL`Le[Lub M_Mu,ObotO/olOd[O+,Om=Op Oro[OvRapotRl RtRupTiv(Ud.Utn!V!Vil#V(Y[Y$!Yt 0Bu+Gare)H_&HlaNkotRkusSter&Ta%TrusZin>Z(2O&2KolivUv!4It_N(0Dn(Ke)KrPot0Ak~AlIkRkot2Kli$a:L-oRe[T_Tum1E,1B!a}'#Cib_Fic Fla%KlKr{Mokr!PreseRbyS#T-tiv3Kob,zKt|O^P]mSkSp+jV`]Vo/2AhaOuhoUhopis1Es0BroByt-C@t}ut DnesH+dHo^H,JemJn?Kl`KolaKt<Kum@tLarLevaL.MaM.ntMluv M'Nut P`PisPln PosudPr'odPu$ Raz R(RtSahSl'St!-SudSy)TazT-Tk~Uf!Utn!Voz%Z`uZn!Z<%2Aho)AkAm!ikAv>AzeDolObn(OgerieOzdSn(T Z(2B@}'noD-HaH'#S SnoT(0Oj?Or>2Nam :9O]gOnomie0EktronIpsa0AilIseO%P!ie2Izo^O/aOpejOs2EjEn%K<)Kymo0Ike)0F<ie0Olu%1Eku%KurzePed?P]zeP<tT,kt:C#Jf#Kul)N!ikN)zieRmacieV< Zo+3De,%J{onN#3Al#Gu,ntLozofLtrNan%N)Xa%0Ord1An_IrtOtila2NdSf<T[lT#Ton2Ak%Es#On)2KarNk%3Zi#:LejeRant3N{i#O]g3Lot.2Azu,Ejt2LemLfi$aTi#2AfAmofonAnu+EpIlOgOtes#2Ma:D?DrLaL@#N[NopisRfaRpu&V,n3Bk(J#lJnoJtmanK)rLmaM!omR>R&S]Zky3St<ik2Ad'#AsivkyAvaEd!EnO^v>OhOup(T!Ub.U/o)0AtO)Yz0IsOjivoOut0Bl.Boj}DinyDl!Dno)D|Jn(KejLin#L#LubMo+N [No,%RalR^RizontRkoRliv>RmonRn.RoskopR$voSpo^St.T'(U[UfUp!Us#V<2Ad[An?Av(Az^Bo+kD.D]D(N-Ob#Oma^OtOu^Oz@St#Ub(Yz!2B@(B~D[KotMrS aSto)0Ozd2Bn(D,ntGie&M&Sterik:2Yl#3Ned2O&0Uze0Un a0F-%Fla%KasoOva%Sp-%Tern{Vali^Ve$<Zer%3Onie:Blko})Ho^Kmi+K(L'>N)rRmarkRoSanSnoT#V<Zyk3Din>D+Dn!_HlanKotL@L oMn(NomP?S{erV Zd>Zero3NakNdyNo/Sk,Sto)Trn?Zva3En|1Gurt5R):Bar{B_Bin{}&D{Did]HanJakJu)KaoKtusLam aLhotyLibrLn(Me,MkolivM&Ni[lNoeNt<Pal.P_aP olaP#P+Po)PrPu$aPy[,Ram_Rot#RtonSaTa]gTed,U%UzaVa+cZaj#Ze)Ziv(2EkolivEsi0Dlub@MpRami#3No2A%kAdivoAmApotAsi#AunEcEn[Ep!Es~IdImaIs&Ob*kO#nOpaOubUb'&Us!Uzk(0EnIt!Otr0IhaOt0Al?Ber>B#BlihaBylaC*rH=J@>KosKtejlLapsLe^LizeLoMandoMe)MikMn!aMo,MpasMun aN!N%ptNd?N>NfeseNgresN.NkursN)ktNzervaPan>PieP~Pr'#Rb_R-t<Rmid]RoptevRpusRu&RytoRz{S!>St#T_T+)T*lUk!Up_&Us-Uz]VbojZaZ<oh2Ab?A/Aj.Al|AsopisAv!aEd EjcarEs[Eve)Ik{ItikIzeKav>Me+cMivoOcanOkOni#Op OupaOv#T-Uh`]Up?Ut(Vin#Y/+Yp)Y$alYt2Dlan#FrJn(KlaLaj^Li/L#Lom{Ltu,NaPodivuRtRz<Til0Al aAsin#E$<2No]gS_.Ta,T?T#T'>V`]:B,d<})nDn(IkKom>M_aMpaN'#S?SoStu,Tin#V.3B#CkdyD@Dn?D'#Dv.G@^GieG,%H%Hk(H~KtvarNo/odNtil#P@#Pid]T`]T>TmoTokruhVhartV a%Vobok3B,}ot#DojedDsk(H'.Jav>L-M{#NieN#No+umStop`T.T|5Bi$aDivodGi#GopedKal aK{Mc|P!aPu/RdSosTrU^lUhU#Usk!V>3Tiv(1Cer&CiferMpSkSt,%0I%2RaRi#S.:DamD]Gi$rHagonJ{-J _J< aKakK'?Kr_aL[L.L|Lv?Min#Nd+NkoRn(SakrSkotSopu$T?Tri#Tur aZan>ZivoZl Zur#2Lo[0}anikD a%D'.LasaL*nNtol#TlaTo^TrZe,3G,%H~Hu+K.KrofonL@>Lim{rL(Mi#Nc'&Ni[rNom{Nul(S#StrX|2Ad(HaH'.OkS!Uv 1I/Ohem0BilCn(D_#Dl [HylaKroL-ulaM@t#Nar/aNoklN$rumNt|NzunSazSkytStTiva%T<#Ty#U/aUdr(Zai#Z-Zol2Am<Av@>KevTvolaZ{Zut(0T _1DrcF]nL!MieN?S{Ta%ZeumZi#nt3Sliv>0Da:B*r!}yt!Da%Dbyt-DhozDobroDpisHlasHn!Hodi+H,d Iv aJedn*Ji$oJm=K]n Kon>Krm LevoMaz!Mluv Nom{rOkoOpakO$roP`!PevnoPln P~Pos+dPr(oRod RubyRy/]S` S-!S+poSt!TolikV@-Vr/Vzd<yZv!3Be}!CkyDa+koDb!DuhGa%H{Ho^J@JprveKlidLib(Mil(MocO/o)On#PokojR(RvSmyslS*l`Tv<UronV.Zvyk+3Co)JakKamKdyKlKte,kTro5C+hHav?M.%RaR-S _Sn(UzeVinyVo)Zd,5DaD+G{T Tn(Trie3Mfa:0AlArv AvaDivEcEhn!Ejm=Ez aHajo[Iln?Jasn J-tK]p La$L-Li[LohaLu^NosOh! Oj-OutRaz>R&Ru[RysSahSluhaS)r!UvVazVin VodVyk+Yv!_Z<0AsElEn Hl` Ho)H,&It~0BojByt}odCiz Ebr!Esl!Evzd!EzvaH`%Hod J{JinudKazK*p LivLu#Ml#Oln(P`PisPl=P<Pu$ Pyk!Raz#S*d StupSunTokTudVahaVe)Vol!V,%tZ&k1I&Sajd1LasNiskoRa^Roz Ryz-2ApEn?Li#NoOuzl OvyRasaResRs-RuhUpantUr#Us 0Ejn.Iz|0AkE+)Ez L`.L*v!LuvaYl0Ehdy1Ak|As-E,%I%Il(Is|O,Oz?RavduRoti1B al}e$rGieL?LojT_0A^}~I#IvoLavaLep Ln L' N'aO[Ol Pa+cT@T,haTu^Ty/Voj 0Epl IskOpRh!Rl(RokRubyV<1A~ArEsLivn O%1Id1Do[:}!_Ci@tD*/H<-KtLan^L>LivoLu[Mf+tMls-N@#Ni#N&N|N$voNtof+Pri#Rke)RodieR)Ru#Ry[Se#Siv aSt_#T@tTro&V*kZnehtZ*r-3C#DagogJs-K]LotonNal)Ndr-NzeRiskopRoStr(Tar^T?Tro+jVn.Xeso3Ani$aHaJav?K+KnikL.Ln(Lul#Nze)Pe)S!_Sto+Tev&Vn?V'ar2A%n)Ak!Am@Ane)A$i#At Avid]AzE/Em@oEn)EsEtivoEv_Iv!N NoO/aOd.Om[OutUkYn2Bav Byt}odC Ctiv>D!D%n Deps!Dh+dDiv Dkl`Dman DnikDo[Dpo,D,zD$!aDvodDzimEzieHan#Hnut#H'<HromaHybIn)Ji$#Jm=Kaz K+sKojKrokKu)KynLedneLib-Lk~LohaLynomMaluMi~Ml#MocM$aMys+tNe/!N<#Nur(P`!P_Pis-Pla/Pros Ps!PudR`%R%RodRu/aRyvS` SedSilaSkokSlan>S*d SpoluS)vaSud-SypTahT#nT+skTom-T,vaTupaTvo,U#zUtoUzdroVahaVidlaVlakVozVr/V$!VykVzde/Zd,vZem-Zn!-Z<Zv!2Ac|Ah<yAkti#A+sAot>Ap<-AseAv^IncipKnoObud O%ntoOdejOfeseOh,Oj-tO]m Omi+Onik!Op`OrokOs[OtonOut-OvazS#v#St@Udk(UtV-Voh<y0An>OvodTruh0Actvo0Ber)}DlKav>Kl.Kr+LtMpaNcP@SaSin#St.T|Ty#3Rami^SkT_::C-}otDia%Dn?DonFtGbyKe)K'.M@oMp*/NdeRa/R aS'&StrTo+$Zan%Zid]3Ag|Ak%CeptDakt<Fer@tF+xJnokKlamaK<dKrutKt<Pu)%VizeVmaVolverZerva3Sk|Ziko5Boti#Dokm@H'#K+KokoMan{oP'odPu/aRejsSolStl.Tmi$rTopedTun^Ub@#U/oUpU,V.Vn?Zb<Z/odZd!Zezn!Zhod%Zin#ZjezdZ#zZ]haZmarZp`Zru/ZsahZtokZumZvod5Bri#}`]Kav?Kopis3BaBol'}l(D]P`]T.Z(:Di$aH!KoM>Mizd!Mo)N #Rdin#San#T_ Z[Z@?0Or0H|1B,n#CeseD`]Dim@tD]Hn!Jm=Ke,K)Kun^KvojeM@oNoRvisS` Sho,SkokSl!St,SuvSyp!T[T.Tk!T~Trv!VerZ&m2O^R~0FonLn?R#Rot-RupTua%1AfandrAliskoAnz@AutEptikIcaL`[L@?LoLuzO[O#nOroRip)RzUp.V(Vr&0Abi#Adid]An.A$Avn(Ed|Ep>EvaEz.IbI&Izn?OnOup-OvoU/UhaUn%Up#Za0A,gdE)&Il$voL*vaOgR`RkRt#Ut-Ysl0AdAhaOb0Bo)}aD'#KolP#TvaUbojUc Ud%UhlasUl`Um,kUp,vaUsedUtokUvis{0Al'&As _IsLavOd-Oj@>OluOnz<Orn(Ou$aR/aU$ 1An^AzD%NaN>Ovn!P@StUb1An?Ar(aAti#Av[EhnoEz#OdolaO+kOpaOrnoOup!Ra/ResRh~RomRu&Ud&Upn?VolYk0Bj-tBtropy}arD(KnoNd!N=Rik!aR'.0AhAl$voEtrAt[Az-Is+It-Obo^Odid]Or#Rab2Kav#KotN-N'>P!Pk(R'(S_T(:B+t#Bu+H*nJemnoJfunJgaJ Jn(Kti#Mh+MponNc|N>NkerPe)V@.Z!_3}ni#HdyKut.LefonMno)Nd@%Ni$aN<P])P&PrveRapieRmos#Xtil3}oSkopisTu+k1Ad+cAn.0Ap#Esk!UkotUpa0El1A+)Pin#PolRzoUhaU+c2Ad?Akt<AmpAsaAverzaEf E$Ez<Hav.Hl.O/uOj?Os#Ou[P%P _Pk(Ub>U/l Uhl?UsV!2DyH~H(Nd,Ri$aR&jZemsko0ArohOr[Rd(Rz2GrKev:0Oh(OzeR!R*s-RusYt'&0HoTiv(0Iv 3R` 1Edn!I$ M=0Az!_Lidn Lon Otv Roj 0I%I)Ov 0Yv`]0Av If<maIk~1Ad~L!n Ly~Out!Rav 1AnAz 0Ed~Il|Mrt N`n N=Oud Tl!Tr~0Ah|K!Lum O~Op@>R*s 1Al Oln Oz'#3D,v ElEn.L.N!:GonL/aL*nNaN^lNil#RanRhanyR|1ElkuHod0Ova0DroGe)%J%Lbl*dL{rhL _LmocLry[Nk'Ran^RzeS_#SkrzeSn?SpoduS)Ter.Ver#3B,%}rDeoh,D.D+LaN?S{Tal aZeZ #0Ezd0L`Us0Aj#AkAs>EvoHk(IvN'#Oup!1Uc|Uk0DaDiv(Doz&kD$voJ@skyJ&JskoLantL[L LnoSk'#Zid]Z'&0Ravo1Ab>A%tAhA)Ba}o+kH!StvaTu+0Ad T*p Tup0Ip4Bav Br!}|D!D,Fot H+d!H~Hod H,d Hub Jasn J{Jm=K]p Kon!L-!Maz!Mez Miz{Mys+tNe/!Nik!Nut P`!Pl! P,v Pu$ Raz R'n!Rv!Sl' SokoS)v Su~Syp!Tas Tes!Tr! Vi~Vol!Vrh_Zdob Zn!0AduBud }op D<Du/Dy/!E$upH+demKazLyk!NikOr-P*,TahT-::993Lofon::Br!Byd+t}|DarmoDus F*k!Hlt Hod H,^Hy~J!>J{Ji$ K+p!K*p Lep Mez Mot!Mys+tNe/!Nik!Pl! Poj Ps!Raz S)v Su~Taj Temn Tk~Ujm=Val Ve+tVin Vol!Vrt!Zvon 0Av RusuUd|Yt-1A+#ArmaAtn(IvoOb RojVihYm`]0L@.ManM.Pt!Z`uZdola2At Lt~Lubo#Ot' Ru[0MaMn?0Emn 0Lam!Oum!R!#Umav#0AtoEh#O[OmO$Ozvyk0Ap|ArAt-IjeIz{Ocn Odr!Rzl.Ut|0AkAl(Am@!Ovu0B,z Tav Ub-Ufa+0Lod Omal RavaR( Rud#Rvu1A^An C`]N (NoOv&Y/l Zav(1I/aR! 0B'.Br0Ed~EnkuEs_aOnR!Uk'odYk\";\nconst checksum = \"0x25f44555f4af25b51a711136e1c7d6e50ce9f8917d39d6b1f076b2bb4d2fac1a\";\n\nlet wordlist: null | LangCz = null;\n\n/**\n *  The [[link-bip39-cz]] for [mnemonic phrases](link-bip-39).\n *\n *  @_docloc: api/wordlists\n */\nexport class LangCz extends WordlistOwl {\n\n    /**\n     *  Creates a new instance of the Czech language Wordlist.\n     *\n     *  Using the constructor should be unnecessary, instead use the\n     *  [[wordlist]] singleton method.\n     *\n     *  @_ignore:\n     */\n    constructor() { super(\"cz\", words, checksum); }\n\n    /**\n     *  Returns a singleton instance of a ``LangCz``, creating it\n     *  if this is the first time being called.\n     */\n    static wordlist(): LangCz {\n        if (wordlist == null) { wordlist = new LangCz(); }\n        return wordlist;\n    }\n}\n", "import { WordlistOwlA } from \"./wordlist-owla.js\";\n\nconst words = \"0arertoiotadonoaRteirroenaNonaLsolocoiliaralaorrenadaChoN$n0A>Dom,EjaI!#Oga&O'Or#RazoR*Ue=U<0Ab Adem@Ce<C~Ei)ElgaEn#Ept I&L  NeOg!O<TivoToTrizTu Ud*U!&Us 0Ic#Mit*Opt Or'Ua`Ul#0Reo0Ect Ic~In Irm 0IlIt On@Os#Ot Reg R$UaU&U?aUja0OgoOr+0ReSl 0Ed_zE'Us)1Ac[nAmb_ArmaBaBumCaldeDeaEg_Ej Er%E%F?!GaGo&nIa&I,#Iv$MaMejaMib T TezaTivoToTu[Um'Z 0AbleAn)Apo]ArgoAs B Bi#E'IgoIs%dOrP oPl$0|oC@'C]D D,Em@Gu=Il=ImoIsOt T,aTiguoTojoUalUl Unc$Ad*EjoO1Ag A[#Eti#IoLic O&Or)OyoR,d!Rob Ues%U+1A&A`ArBit+BolBus#|ivoCoD!D?]DuoEaI&IesM.i-esOmaPaP.Reg=RozRugaTeTis%0AA&Al#C,<Egur EoE<rI,#I=Ist*NoOmb+P!oT?]T+Tu#Um*Un#0AjoAqueArEn#EoI>Le%OmoRa!RozUn0DazD$GeLaM,#S,)T^0AlAnceA+EEl]`E`EstruzI.I<2ErU{U'0Af[nArO)Uc Uf_Ul:BaB^|eH@IleJ Lanz/c.LdeMbuN>Nd-oRb(>RnizR+Scu]S#nSu[Tal]T!@T*Tu%UlZ 3BeBid/=S SoSt@3|oEnNgo2An>OqueUsa2ABi`BoCaCi`DaDegaIn//!oLsaMb-{dNi#N}saiRdeRr SqueTeTinVe{Zal2AvoAzoEchaEveIl=In>IsaOcaOmaOnceO)UjaUs>U#2CeoCleE'EyFan{F.HoIt_L#Rbuj(l(+Sc TacaZ.:Bal=BezaBi`B[CaoDav!D,aErFeI{ImanJaJ.LLam Lc$L&Li{dLleLm/^LvoMaMb$Mel=Mi'Mp}c!Nd?Nel-gu+Nic-#N-.ObaOsPazPi%nPo)Pt Puch((b.RcelRe%Rg(i'RneRpe%R+R%SaS>S!oSpaS#rT^ceT_U{lUsaZo3Bol]D!D+Ld/eb_Lo<Lu]M,#Niz-t+Rc(&Rez(oRr R)zaSpedT+2AcalAle>AmpuAnc]ApaAr]I>Is)IvoOqueOzaUle%Up 0Cl.EgoE=EnEr#F[G +M->NeN%P_sR>Rue]SneTaU{d2Am^AnA+AseAveI,)ImaInica2B_Cc~|i'Ci`CoDigoDoF_G!He)JinJoL/ch/eg$Lg Lin/l LmoLum`Mba)M!Mi{Mo&Mpr-deNej}g-oc!Nsej}t PaPi(az.Rba%RchoR&nR.(r!S!SmosS%2AneoAt!E Ec!Ei&EmaIaIm,Ip%IsisOmoOnicaOque%U&Uz2Ad+Ar#At+BoBr*| aEl=En#Er{Es%EvaId Lebr/p/#Mb_Mpl*N-e%O%P.Pul( R$<R<RvaTis:M-z(R&T?3B!B?Ca{C*DoF,saFin*J LfinLga&Li#M^-<N%lP^)RechoR+%Sayu'SeoSf?eSnu&Sti'Sv$TalleT,!U{3AAb=AdemaAman)A`Ar$BujoCt En)E%EzFic?G'Lem/u*N!oRec#Rig*S>Se'Sf[zVaVi'5BleCeL^Ming}N Ra&Rm*R<SSis2Ag.Oga2|aDaE=E'LceOQueR Rez(o:0A'R$0H OUa&r0AdIc~Ific$I#rUc 1Ec#Icaz3EEmp=1Efan)Eg*Em,#Ev IpseI)Ix*Og$Ud*0Bu&It*Oc~Pa)Pe'PleoP_sa0A'C go|ufeC@EmigoE+Fa&F!moGa'Igm/aceOrmeRe&SayoS, T!oTr VaseV$1Oca0Uipo0Izo0Ca]C,aCol Crib*Cu&Enc@F!aFu!zoPa{PejoP@PosaPumaQuiT TeTi=Tufa0ApaEr'Ic-@1Ad*Alu En#It 1Ac#Am,Ce<CusaEn#Ig*Il$Ist*I#P!#Plic P.!T_mo:BricaBu]|a{C?C#rE`J/d/=L<Lt MaM?@Mo<Ra.Rmaci(olRsaSeTigaU`V^X3Br!o|/izORi(ozRt?Rv^Stin3AbleAnzaArB[Cc~|aDeoEb_ElE[Es%Gu[J JoL/e)L@lLt+NNc-g*Ni#Rma2A>Au%EchaOrO%U*UjoU^2B@CaGa%G.L$Lle#N&Rm(+Rtun(z SaTo2Aca<Ag?AnjaAseAudeE*E'EsaIoI#U%2EgoEn)ErzaGaM Nc~Nd(g.R@S?TbolTu+:Ce]FasI%JoL/!i/=Mb- Nch}g-<RajeRzaSoli`St ToV?an3Me=M*NN!}$N)Ran$R,)Rm,S#3Gan)M`s$R Ro2Aci OboOr@2LLfoLo<LpeM(&R?([TaTeoZ 2A{Afi>A'AsaAtisAveIe%Il=IpeIsI#O<rUaUe<UmoUpo2An)ApoArd@Er[IaI'I.I<It [Sa'St :B!B?Bl C!|aD/l Mac(i`ZZa`3B?]B[|oLa&L$Mbr(*Rma'RoeRv*3E=Er+Ga&Gi,eJoM'S#r@5Ci>G Gu!aJaMb_Ng}^Nr((mig('St?Yo5E>ElgaEr%E<EvoI{IrMa'Me&M?deM}d*RacanR#:1O'0EalIomaO=2Lesi/uUal4EgalUs~0Ag,AnIt P P!$P.!Pul<0CapazDiceEr)FielF^meG,$Ic$M,<MuneNa#Sec#S%n)T!esTimoTu*Ut?Vi!'3AIsOn@0L/o):BaliB.M.RabeRdinR[U]Zmin3FeRinga3Ne)5R`d(obaV,Ya5ErgaEvesEzGa&rGoGue)Ic$N>Ngl-$Nt Pit!R S#V,?Zg :7Lo5A]:B$C$C[DoD+nG #GrimaGu`I>M!Mi`Mp --ch-gos%NzaPizRgoRvaStimaTaTexT*U_lV Zo3AlCc~|eC#rErG~Gumb_Ja'Ngu-#NaOnOp &S~TalT[VeY,{3B!%dB+C^D!Di EnzoGaG!oMaMi)M.Mp$NceN&Ne-go)N}t!`Qui&SoS%T!aT$T+2AgaAmaAn#AveEg En Ev Or Ov!Uv@2BoC~CoCu[GicaG+MbrizM}jaTe5|aC*G J}-esPaSt+ToZ:Ce%|oD!aD_Du+Est+F@G@GoIzL{dLe%Ll/oMaMboMutN>N&Nej Ng-iquiNj N}<N%Na`PaQuin(R>Re(f?Rg,Ri&RmolR+nR)sRzoSaSc aSivoT T!@TizTrizXimoY^Z^ca3|aDal]D$Du]J?]J^L,/.M^i-^NsajeN)NuRca&R,gueRi#SS.TaT!To&T+Zc]3E&ElEmb+G/Lag+Lit Ll.M}-!}im}u#OpeR SaS!@S?SmoTadTo5|?aC~DaDe=HoJ LdeL!Li'M,#Mi- c-ed-j-#NoRad(d!Re'R*R+Rs(%lScaStr TivoV!V?Zo5|oD EbleE]Er)Est[G_J!L/e%L%N&Nec(alRoScu=SeoSgoSicaS=:C C~D IpeRanj(izRr SalTalTivoTu[lUseaValVeVi{d3C$Ct G Goc$G+OnRv$ToUt+V V!a3|oDoEb]E#NezNoTi&Vel5Bleza|eMin(i(m()TaTic@Va#Ve]V$5BeCaCleoD?=DoE[EveEzLoM!oTr@:Sis0E<IspoJe#R(!oS!v T,!V$0AA<Ea'H,%HoIoReTavoTub_Ul#Up Urr*0I IoIsea0S)0EnsaEr%Ic$Rec!0Ro1DoR0O1AEa{Fa#IvoLaMoOrVi&0Bligo0DaZa1A>C~E[In On!T TicaUes#1Ac~A&rAlBi%CaD,EjaGa'G@Gul=I,)Ig,Il]OQues%Uga0Ad@Cu+Ez'OT[0O'Ro1EjaU=1I&Ige'0En)0O':C#D_El]Gi`GoIsJ oLabr/>Le%Li&Lm/om/p NNalNi>Nt!-ue=PaPelP?]Que)R Rcel(edR*RoRpa&RqueR[foR)S SeoS~SoS%TaT$Tr@UsaU%VoYa<3A#nCa&C!a|oDalD*G IneL L{'Le/ig+LlejoLoLuc--s N.OnOrPi'Que'R(ch(d!Rez(f?Ri>Rl(mi<R+Rs.aSaScaSimoS%`Ta=T+leoZZu`3C |.EEd[Er`EzaJam/ Lo#Mi,%N}#rNz-aOjoP(a%S Sci`SoS%T.Zca2AcaAnA%AyaAzaEi#E'OmoUmaU[l2B_CoD!D$EmaEs@E%L,Lici/=LvoMa{Me=MoMp-!Rc~R%lSa{Se!SibleS)T,c@T+Zo2A&E>zEgun%Em$EnsaE<Ev$ImoIncipeIs~Iv OaOb Oce<Oduc#OezaOfe<rOg[maOleOmesaOn#Op$OximoUeba2Bli>|!oD^Eb=Er%Es#Lg/*Lm.LpoL<M-#NalNoPaP?(e:99Ed EjaEm Er!E<Ie#ImicaInceIt :Ba'B@BoC~DicalIzMaMp-ch}goPazPi&P#SgoSpaToYoZaZ.3Acc~Ali{dBa'Bo)Ca!Ce%|azoCog!C_oC#Cur<DD.&Duc*FlejoF^maF[nFug$Ga=G*G]G_<H,I'IrJ/a#LevoLieveLle'LojM Med$M}>rNd*N%P #Pet*Po<Pt?SSca)Si`Spe#S#Sum,T*oT^'T[#Un*VesVis%YZ 3CoEgoEn{EsgoFaGi&G^Nc.N.OQuezaSaTmoToZo5BleCeCi D DeoD?]ErJizoJoM!oMp!NN>N{PaP!oSaScaSt+T 5BiB^DoE{G*I&In/e%LoMboM^Ptu[TaTi`:Ba&B!B$BleC GazG[&L/&L!oL*Lm.L.Ls/#LudLv Mb-c~Ndi-e Ng_Ni{dN}#PoQueRdin()nSt_TanU`Xof.3Cc~CoC_#C%DGu*IsL=LvaMa`M?l-d-<rNalN^P  P@Qui(RieRm.Rv*S,%S~TaT,%V!oXoX#3D[Es%E)G=G'Lab/b L,c$L]Mbo=M$R,aS)maT$Tu 5B_C$D$LLap/{&Le{dLi&Lt Luc~Mbr-de}i&No+NrisaPaPl P^)R&Rp_s()oS)nTa'5AveB*Ce<D^Eg[E=E'Er)Fr*Je#L%nM P! Pl*P.!P_moRR>Re'Rg*S#T?:Ba>BiqueB]BuCoC#JoL L>L,#Ll/.Ma'Mb^Ng}quePaPe)P@P.Qu?l(deRe(if(je%RotR+R%TuajeU+ZaZ.3At+|oC]CnicaJa&J!Ji&L/efo'MaM^Mp=NazNd!N!NisN<Ori(api(>Rmi'Rnur(+rSisSo+StigoT!aX#Z3B$Bu+nEmpoEn{Er[E<G_J!/deMb_Mi&M}%OPi>PoR(.TanT!eTu=Za5Al]B?=C Ci'DoG/&M N}#P PeQueRaxR!oRm,%RneoRoRpe&R_R<RtugaSS>S!Xi>2AbajoAc#rA!Afi>AgoAjeAmoAnceA#AumaAz EbolEguaEin%EnEp EsIbuIgoIpaIs)IunfoOfeoOmpaOn>OpaO)OzoU>Ue'Ufa2B!@BoEr#MbaM^NelNic(bin(ismoR'T^:0Ic 9C!a0B[l0I{dIrIv!<OT A3Ba'BeG,)Na0ArU $0IlOp@1A:CaC$Cu`G GoI`J?l/eLi&LleL^Lvu]Mp*oR(i R.So3Ci'C#rHicu=In)JezL/!oLozN-c!Nd-e'Ng N*N%NusRRa'RboRdeRed(j(<Rt!3AAjeBr C$CtimaDaDeoDr$EjoErnesG^LLl-ag_N}e&OlinRalRgoRtudS^Sp!aS%Tami`U&VazV!oV*Vo5LcanLum,Lv!RazT ToZ5E=Lg :::C!Te3GuaM('So9DoGaGur:F*}jaPa#Rza93N(+5MoR&\";\nconst accents = \"aeiou7695@@BZWWavwUJkO@Y-Kn))YEGq#E@O)cI@#ZkMHv$e*))M!!)D**$GW!oKm*Acoh^k&It-pi^SYW)$^n!G)bO!Wkzam(jS#X)Og*^l^RW!bQ#QygBKXfzE))hti!Qm)Cng%%c)mJiI*HJWbmYniCLwNdYyY%WKO^bnT$PuGOr!IvHu&G(GKbtBuhiW&!eO@XMeoYQeCa#!MrTJCq!OW&CHG(WCcW%%)$rfrIegu$)w!G)JGmWWw)MnD%SXXWIT^LWAZuVWB^W)eTL^x&$WGHW(nKWEMA)#$F$x$Waekqs,n7715)W*HM-$WAcCiu(a))VCZ)GG%(*CWWdW%$D!UCO$M\";\nconst checksum = \"0xf74fb7092aeacdfbf8959557de22098da512207fb9f109cb526994938cf40300\";\n\nlet wordlist: null | LangEs = null;\n\n/**\n *  The [[link-bip39-es]] for [mnemonic phrases](link-bip-39).\n *\n *  @_docloc: api/wordlists\n */\nexport class LangEs extends WordlistOwlA {\n\n    /**\n     *  Creates a new instance of the Spanish language Wordlist.\n     *\n     *  This should be unnecessary most of the time as the exported\n     *  [[langEs]] should suffice.\n     *\n     *  @_ignore:\n     */\n    constructor() { super(\"es\", words, accents, checksum); }\n\n    /**\n     *  Returns a singleton instance of a ``LangEs``, creating it\n     *  if this is the first time being called.\n     */\n    static wordlist(): LangEs {\n        if (wordlist == null) { wordlist = new LangEs(); }\n        return wordlist;\n    }\n}\n\n", "import { WordlistOwlA } from \"./wordlist-owla.js\";\n\nconst words = \"0erreleontiteurinueiriet cegeanseali medenel q)eniluxaus ch0Ais}And$Diqu E`#Ol*Ord Ou%rOy RasifReuv Ri,Rog RuptS_-SoluS'@UsifYss=0A@m+AjouAr+nCab]Cep,Clam Cola@Cro~eCu}ErbeHatHe,Idu]I Omp&Qu *R$y?Te'TifT)l0Ep&EquatHesifJec%fJug Mett!M* Op,Or Ouc*Res<RoitUl&V be0R R$ef0Fai!Fec,Fi~eF!{Fub]0Ac Enc I#I,Raf Reab#Ru?1D Gu`#L>Mab#S/-0Ou,Us,1Arm Chim+Er&Geb!G)I_ I?ntLeg Lia.Lou Lum O'd*PagaTes<Veo#0A&'BiguB!Enag Ertu?Id$Ir=Orc O'Ovib#Phib+P#'Us/t0Aly<Apho!Ar~+Atom+C+nE/%rG#Gois<Gu#{Im=Nex N$-N)lOd(Om=+Ony?Orm=T_[Tido&X+{1Ai}Eri%fL/*Olog+Pa!`Pe]Por,Puy 0UariumUeduc0Bit!Bus&De'Doi<G_tLequ(Matu!Me?ntMoi!Mu!P_,Ra~ Riv Ro}S_icT +lTic#0PectPh=&P* S|tS v*S+t&Soc>S' TicotT!Tu-0El>O?RiumRo-Ta^T_%fT* Trap 0Ba(eB .Da-Dib#G' Ro!Tom[Tru~e0A]Anc Ari-En*Er<Eug#Ia&'I@I$I}O(eOu R`1I=Io?:D.Fou Ga.G)t&Igna@L/c Lc$Le(eLisa.Mb(Ncai!Nda.Nl+)Nn>eNqu>Rb>R`R$R^Rra.Ss(S%$Ta`#Te|T,+Udr>Vard 3Let&L>Lo&Nefi-R-|Rg Rl(eRmudaSa-Sog[Ta`Ur!3B $Cyc#Du#JouL/L(g)LlardNai!Olog+Ops+OtypeScuitS$Sto'iTu?Zar!2AfardAg)An~*Ess/tInd OndOqu Ous$2BardB(eI!I}Li@Nb$Nd*Nhe'Nif>NusRdu!R[T&Uc#Ue{Ug+Ul$Uqu(Ur<Usso#U%^Xe'2An~eAs>AveEbisE~eEuva.Ico]Iga@Ill/tIo~eI^O~u!Od Onz Ous<Oye'U?Us^Ut=Uy/t2Ff#Iss$L#%nRe|R(S% T( To*Vab#Vet&:B/$B(eChet&De|D!Fe(eIllouIss$Lcu]Lep(Lib!Lm Lomn+Lvai!Mara@M aMi$Mpag[N=Net$N$N%[NularPab#Por=Pri-Psu#P,Pu~eRab(eRb$eRes}RibouRna.Rot&R!|Rt$Sca@S>S^Ssu!U}U%$V=>V [Viar3D`#Intu!Les&Llu#Ndr>Ns' Ntr=Rc#Rebr=Ri<Rn Rve|S}2Agr(Ai<A#'Amb!An-Apit!Arb$As<'At$Auss$Av* Emi<En`#Equ>Er~ Ev=I_Iff!Ign$Im eIotLoru!OcolatOis*O<O)t&Ro?U&0Ga!Gog[M_,NemaNtr Rcu]R R^T [Toy_Tr$V`2A*$A?'Aqu As<Av>I_tIgn ImatIva.O~eOna.Opor&2B=tBraCas<Co% D Dif>Ff!Gn Hesi$Iff Inc L eLibriLl(eLma,L$elMbatMed+Mm/@MpactNc tNdui!Nf>N.]Nno,Ns$[NtactNvexePa(P+Ra`Rbe|Rda.Rni~eRpusR!ctR&.Smi^Stu?T$U@Upu!Ura.U&|Uvr*Yo&2AbeA(&Ava&Ay$Eatu!Edi,E?{Eu}Evet&Ib]I Ist=I,eOi!Oqu Ota#Uci=UelYp,2Bi^E`l*Il]eIs(eIv!Lm( L%v Mu]Pi@Ra%fR<'3Anu!C#L(d!Ni^:Ign M>Ng N<'Uph(3Batt!Bi,Bord Brid But/tC= Cemb!Ch* Cid Clar Cor Cri!Cup]Da#Duc%fEs<F_sifFi]Fray Gag Givr Glu%rGraf Jeun Li-Log M/d Me' Mol*Ni~ Nou N&l#Nud PartP_}Pha}Plac Po}R/g Rob Sast!S-n&S tSign Sobe*Ss( Str>Ta~ Tes,To' T!s<V/c V_*V( Vo*3Ab#Alog)Am/tC,Ff  G  Git=G[Lu M/~eM(u Oxy@Rec%fRig Scu,Spo}Ssip St/-V %rVi}5Ci#C&'G?IgtMa(eMici#Mp,Na&'Nj$Nn Pam(eRto*Ru!Sa.Se'Ss>Ta%$U/>Ub#U-'U,Y_2Ag$Ap Es}Ibb]Oitu!2P +P#xeRab#Rc*3Nas%e:0Lou*0Ar,HarpeHel#La* Lip<Lo!Lu<O#Onom+Or-Ou,Ra}Rem Riva(RouU?U!u`0If>Uqu 1Fac Fec%fFig+FortFray Fusi$0Ali}Ar 2Ec,1Abor Arg*Ectr$Eg/tEph/tEveIgib#I%s?O.Ucid Ud 0B=]Bell*Bry$Er|@Issi$M_ O%$Ouvo*P e'Ploy Por,Pri<Ulsi$0Cadr Ch eClaveCo~eDigu Dos}DroitDui!Erg+F/-F m Fou*Gag G(Glob Ig?Jamb JeuLev NemiNuye{Ri~*Roba.Seig[Tas}T_d!T>To' Trav Um  Vah*Viab#Voy Zy?0L+n0Aiss*Arg[At/tAu#Ic +I@m+I Ilog)I[Iso@ItapheO^ReuveRouv Uis/t0U !Uipe0Ig Osi$Re'Up%$0C=>Pad$Pe-P+g#Po*PritQuiv Say S_-S+uSor Ti?TomacTra@0Ag eA]An~eA%^E(d!Endo*Er[lH/olHi^Hn+Ir Off Oi#Onn/tO'd*R/.RoitU@0Phor+0Alu Asi$Enta`I@n-I,Olu%fOqu 1ActAg  Auc Cel]Cit/tClusifCu<Ecu,Emp#Erc H= Hor,I.n-I]Is,O%^Ped>Plor Po}Prim QuisT_sifTrai!Ul,:B#Bu#{Cet&Ci#Ctu!Ibl*Lai<Me{M`#R-'RfeluR(eRou~eSc( T=Tig)Uc$U%fVe'Vori3Bri#C$d D  L(M?M'Ndo*Od=Rm Ro-Rve'S%v=U`#Ut!Vr>3AscoCe]C%fDe#Gu!Latu!Leta.L>eL#ulLm LouLtr N/c N*O#R?Ssu!X 2A* Am?As^At&'E|E~eE'Exi$Oc$O!Uctu Ui@Uvi=2L+Nd +Ngib#Nta(eRc Rg $Rmu]Rtu[Ssi#Ud!Ug eU`]Ulu!Urmi2Agi#Ai<An~*App Aye'Ega&E( El$Em*E[s+E!Iab#Ic%$Iss$Ivo#OidOma.Ont=Ot,Uit2Gi%fI&Re'R+{R%fSi$T':Gn Lax+L +Mbad R/%rRd+nRn*Rrig)Zel#Z$3AntLa%[Lu#Ndar?N =N+NouN%lOlog+O?t!R/iumR?St)lY}3B>C]RafeV!2A-AiveIs}ObeOi!Or+{2Lfe'M?Nf]R.R`#Udr$Uff!UlotUp`#Urm/dUt&2Ad)lAffi%A(eAndApp(AtuitAv*EnatIffu!Il]Imp Ogn Ond Ot&OupeUg U% Uy e2EpardErr>I@Im|veIta!Sta%f3Mnas&Rostat:Bitu@Cho*L&Me|NgarN[t$RicotRm$+Rp$Sard3LiumMato?RbeRiss$Rm(eR$Si,U!{3B n BouLar/tStoi!V 5MardMma.Mo.[N['Nor N&{R@Riz$Rlo.Rm$eRrib#U#{Us<5BlotI#{Ma(Mb#Mi@Mo'R]3Dro?lG+[M[Pno<:2Yl#2Nor U/e4Lici&Lusi$0A.Bib I,M_<Mobi#Muab#PactP i=Plor Po}Prim Pu,0Carn C_d+Ci@ntCl( Colo!Dex Di-Duc%fEditEp%eExactF(iFlig Form Fusi$G  H= Hib Jec,Ju!No-ntOcu]Ond Scri!Sec&Sig[Soli&Sp* S%nctSul,TactT_<Ti?Trig)Tui%fU%#Vasi$V_,Vi,Voqu 3Oni^Rad>ReelRi,0O]2Oi!Res<:GuarIll*MbeNv>Rd(Ug U[Velot3Tab#T$UdiU[s<9Ind!N~ Ng]Ue'UissifUrn=Vi=Y|Ye{5Bi]Ge?ntNiorP$Ris&S%-Te{V_i#:Yak7M$oOs^:BelBi=Bo' C  Cto<Gu[I[Is}I% Mbe|Mel#MpeN-'Nga.N,[P(R.'R?Ur>VaboVo*3Ctu!G=G Gu?SsiveTt!V>Xi^Zard3As<B  B!C_-Cor[E.Ev!Gatu!Go,G)M Mi&M$a@Mpi@Neai!NgotOn-|Qui@S>eS,ThiumTi.Ttor=V!'5Gi^Inta(Is*MbricT +U UrdUt!UveY=5B+Ci@Cra%fE'Gub!Is/tM>eNai!NdiR$T,X){:Ch(eGas(G_taGi^Ig!Ill$In%_Ir+Is$Jor Lax Lefi-Lhe'Li-L#t&MmouthNda,Niab#Nqu/tN&|N)lRath$Rb!R~/dRdiRi%?R^'Rr$R&]Scot&SsifT +lT>eTra^Udi!Ussa@UveXim=3Ch/tC$nuDa`#Dec(Di,Du<Il#'L/.Lod+Mb!Moi!Nac N Nh*Ns$.NtorRc!diRi&R#Ssag Su!T=Teo!Tho@T>Ub#3Au]CrobeEt&Gn$Gr L+uLli$Mi^N-N =Nim=Nor Nu&Rac#Roi,Ssi#X&5Bi#D [El#{Ndi=Ni&'Nna+Not$eNst!Ntag[Nu?ntQ)'R-|Rsu!R% Te'TifU~eUf#Ul(Uss$Ut$Uv/t5L%p#Ni%$Ra`#Re[Rmu!Sc#SeumSic+nTa%$T T)l3Ria@R%l#S,eThi^:Ge'PpeRquoisRr Ta%$Ti$Tu!Ufra.U%^Vi!3Bu#{CtarFas&Ga%$Glig Goc>I.Rve{Ttoy Ur$eUtr$Veu3CheCkelTra&Ve|5B#CifCt'[Ir-'I<t&Ma@Mb!{Mm Rma%fTab#Tif>Toi!Urr*Uve|Va&'Vemb!Vi-5A.Anc I!Isib#M oP%=Q)Tri%f:0E*Jec%fLig Sc'S v Stac#T_*T' 0Casi$Cup E/Tob!Troy Tup]Ulai!0E'Or/t1F_}Fic>Fr*0Ive1Se|S`l$2Fac%fIv>0Bra.Ett!0Ct){Du]E!{Iri^1A#A^Er Ini$PortunPrim T Ti^1A.{An.Bi&D$n E`#G/eG)`Ifi-Ne?ntQ)T+0C`]Mo<Satu!0Ar+0Rag/Rs$T`Trag Vra.0A%$1Y@Y.[1O[:Isib#La-Lma!sLo'@Lp Na~eNdaNgol(Niqu N[|NoramaNt=$PayeP>Po,PyrusRadoxeR-l#Res<Rfum R]Ro#Rra(R<m Rtag Ru!Rv_*Ssi$S&^T [lT+n-Tr$V`l$Voi}Y Ysa.3Ig[Int!La.Lic/L#Lou<Lu~eNdu#Netr Nib#NsifN'+Pi&PlumRdrixRfor Rio@Rmu,Rp#xeRs`R&S Ta#TitTr*Up#2Ara$Ob+O^Ot$Ra<Ysi^0AnoCt'=E-Er!Euv!Lo&N-|Pet&Qu Rog)Sc(eSt$Vo,XelZza2AcardAf$dAis*An A^Astr$A&|E' ExusIa.OmbOng U+Uma.2Chet&Es+E&In&Ir>Iss$Iv!Lai!Lic>L#nLyg$eMma@Mp>Nct)lNd  NeyR%^Si%$S<d Stu!Tag Te|Ti$U-Ula(Um$Urp!Uss(Uvo*2A*+A%^Ec+{Edi!EfixeElu@EnomE<n-E&x&Evo*Imi%fIn-Is$Iv Ob#?O-d Odi.Of$dOg!sO+Oje,Olog)O?n Op!Osp eO&g O)s<Ov beU@n-U[|0Y~o<1BlicC $I}LpeLsarNai<Ni%fPit!Rif>Zz#3Rami@:99AsarE!l#Es%$Ietu@It,O%_t:C(eC$,D+{G$d(I@'Is(L_%rLl$.Mas}Pi@Sa.Tis}Vag V(Y$n 3Ac%fAg*Ali}Anim Cevo*Ci,Clam Col,Cru,Cu]Cyc]Dig Dou,Fai!F#xeForm Fra(Fu.G=+nGi$Gla.Gul>I, Je,Jou La%fLev L+fMar^Me@Mi<M$,Mpl*Mu NardNfortNif]N$c Ntr NvoiPl>Por,Pri<P%#Qu(S veS(e{Soud!SpectS,SultatTabl*T_*Ticu#Tomb Trac Uni$Uss*V/~eViv!Vol&Vulsif3Ches<De|E'Gi@Go]Nc Pos,Sib#S^T)lV=V>e5Che{M/-Mp!N-Nd(Se|S>Ta%fTorTu#U.U`#U#|U%[Y|?5B/BisCheEl#G){In Is<|S S%^3Th?:B]Bo,B!Co~eFariGes<Is*La@LiveL$Lu MediNc%$Ngl>Rcas?Rd(eT' Ug!nuUm$U,Uva.V/tV$n 1AlpelAnda#E]atEnarioEpt!HemaI_-Ind O!Ru%nUlp,1An-Cab#Ch Cou C!,Da%fDui!Ig['Jo'Lec%fMa(eMb]M_-M(=Na&'Nsib#N&n-Par Q)n-Re(R.ntR+{Rru!RumRvi-Sa?V*Vra.Xtup#3D =Ec#Eg Ff]G#Gn=L_-LiciumMp#Nc eNist!Ph$RopSmi^Tu 1I 3Ci=C#DiumIg[{LdatLe`Litu@Lub#Mb!M?`Mno]N@N.'N[t&No!Rc>R%rS+T%<Uc+{Udu!Uff#U#v UpapeUr-U%r Uv_*0Ac+{A%=Eci=H eIr=3Ab#A%$ErnumImulusIpu]RictUd+{Upe'Ylis&0Bli?BstratB%lBv_*C-sC!FfixeGg  Ive'Lfa&P bePpl>Rfa-Rica&R?n Rpri<Rs|tRv+Spect3LlabeMbo#Metr+Nap<NtaxeS&?:BacBl>C%#Il]L_tLism/L$n Mbo'Mi}Ngib#PisQu( Rd RifR%[S<TamiToua.UpeU!|X 3Mo(Mpo!lNa`#Nd!Ne'N*Nsi$Rm( R[Rrib#T(eX&2E?Eor+Erap+Orax0BiaE@Mi@Reli!Ro*SsuT/eT!Tub 5Bogg/L /tMa&Ni^N[|P$y?R~eRd!Rna@Rp`#R!ntR<Rt)TemU~ Urna.Us}X(e2Ac%$AficAgi^Ah*A(An~ Ava`Ef#Emp EsorEu`Ia.Ibun=Ico,Ilog+IompheIp]It' Ivi=Omb$eOncOpic=Oupe|2I#LipeMul&N[lRb(eTe'Toy Y|3Mp/Ph$Pi^R/:0Ues^9Ti?Tras$1Ani?If>I$I^Itai!Iv s3AniumBa(Tic/t0A.I[UelU!0I#Op+:Car?Cc(Gab$dG)Ill/tInc!Is<|Lab#Li<Ll$LveMpi!N`#Pe'R>Se{Ss=S&3C&'Det&Get=Hicu#InardLo-Nd!diN  Ng Ni?{Ntou<Rdu!R(Rn*RrouR}RtuSt$T /Tus&X/tX 3AducAn@Ctoi!D/.DeoG[t&G)'La(Lla.Naig!Ol$P eRe?ntRtuo<RusSa.Se'Si$S^{S)lT=Tes<Tico#Tr(eVa-Vipa!5Ca%$Gu I#Is(Itu!La`#Lc/L%g Lu?Ra-R&xT Ulo*Ya.Yel#:G$:3N$:Cht:3B!NithS&9Olog+\";\nconst accents = \"e7693&)U*o&)Ry^)*)W))))#X^))))@@)#Wf)m%)#!))AG)&IIAQIIIBIIHJNAgBIILIDJGo)))HIQIIIIA(IGgJHH(BIIxX#)Ou)@*IAAPIIIJHQJ)&QIQPYI(HYAQC%)!))QHJJ@)#)^f*^AXCJ))$%CP))%&m)u)@e^A#G#))W@!(IKK%!(I%))O@QA))@GG#e))))WHJIWh))my@IIBT^)!)HAYGETHI*))!QnUDG)))nBoKAC*HwyQh))$&)G&)UGO)G)))(BX#v**)%O,e7686)I))@)&)gdMP()))ud)p#L))I^FIHYdWG))D@DFV)QA)o%MyTh%*)Z)%)n(XANc^R)YS\";\nconst checksum = \"0x51deb7ae009149dc61a6bd18a918eb7ac78d2775726c68e598b92d002519b045\";\n\nlet wordlist: null | LangFr = null;\n\n/**\n *  The [[link-bip39-fr]] for [mnemonic phrases](link-bip-39).\n *\n *  @_docloc: api/wordlists\n */\nexport class LangFr extends WordlistOwlA {\n\n    /**\n     *  Creates a new instance of the French language Wordlist.\n     *\n     *  This should be unnecessary most of the time as the exported\n     *  [[langFr]] should suffice.\n     *\n     *  @_ignore:\n     */\n    constructor() { super(\"fr\", words, accents, checksum); }\n\n    /**\n     *  Returns a singleton instance of a ``LangFr``, creating it\n     *  if this is the first time being called.\n     */\n    static wordlist(): LangFr {\n        if (wordlist == null) { wordlist = new LangFr(); }\n        return wordlist;\n    }\n}\n", "import { id } from \"../hash/index.js\";\nimport {\n    hexlify, assertArgument, toUtf8Bytes, toUtf8String\n} from \"../utils/index.js\";\n\nimport { Wordlist } from \"./wordlist.js\";\n\n\nconst data = [\n\n    // 4-kana words\n    \"AQRASRAGBAGUAIRAHBAghAURAdBAdcAnoAMEAFBAFCBKFBQRBSFBCXBCDBCHBGFBEQBpBBpQBIkBHNBeOBgFBVCBhBBhNBmOBmRBiHBiFBUFBZDBvFBsXBkFBlcBjYBwDBMBBTBBTRBWBBWXXaQXaRXQWXSRXCFXYBXpHXOQXHRXhRXuRXmXXbRXlXXwDXTRXrCXWQXWGaBWaKcaYgasFadQalmaMBacAKaRKKBKKXKKjKQRKDRKCYKCRKIDKeVKHcKlXKjHKrYNAHNBWNaRNKcNIBNIONmXNsXNdXNnBNMBNRBNrXNWDNWMNFOQABQAHQBrQXBQXFQaRQKXQKDQKOQKFQNBQNDQQgQCXQCDQGBQGDQGdQYXQpBQpQQpHQLXQHuQgBQhBQhCQuFQmXQiDQUFQZDQsFQdRQkHQbRQlOQlmQPDQjDQwXQMBQMDQcFQTBQTHQrDDXQDNFDGBDGQDGRDpFDhFDmXDZXDbRDMYDRdDTRDrXSAhSBCSBrSGQSEQSHBSVRShYShkSyQSuFSiBSdcSoESocSlmSMBSFBSFKSFNSFdSFcCByCaRCKcCSBCSRCCrCGbCEHCYXCpBCpQCIBCIHCeNCgBCgFCVECVcCmkCmwCZXCZFCdRClOClmClFCjDCjdCnXCwBCwXCcRCFQCFjGXhGNhGDEGDMGCDGCHGIFGgBGVXGVEGVRGmXGsXGdYGoSGbRGnXGwXGwDGWRGFNGFLGFOGFdGFkEABEBDEBFEXOEaBEKSENBENDEYXEIgEIkEgBEgQEgHEhFEudEuFEiBEiHEiFEZDEvBEsXEsFEdXEdREkFEbBEbRElFEPCEfkEFNYAEYAhYBNYQdYDXYSRYCEYYoYgQYgRYuRYmCYZTYdBYbEYlXYjQYRbYWRpKXpQopQnpSFpCXpIBpISphNpdBpdRpbRpcZpFBpFNpFDpFopFrLADLBuLXQLXcLaFLCXLEhLpBLpFLHXLeVLhILdHLdRLoDLbRLrXIABIBQIBCIBsIBoIBMIBRIXaIaRIKYIKRINBINuICDIGBIIDIIkIgRIxFIyQIiHIdRIbYIbRIlHIwRIMYIcRIRVITRIFBIFNIFQOABOAFOBQOaFONBONMOQFOSFOCDOGBOEQOpBOLXOIBOIFOgQOgFOyQOycOmXOsXOdIOkHOMEOMkOWWHBNHXNHXWHNXHDuHDRHSuHSRHHoHhkHmRHdRHkQHlcHlRHwBHWcgAEgAggAkgBNgBQgBEgXOgYcgLXgHjgyQgiBgsFgdagMYgWSgFQgFEVBTVXEVKBVKNVKDVKYVKRVNBVNYVDBVDxVSBVSRVCjVGNVLXVIFVhBVhcVsXVdRVbRVlRhBYhKYhDYhGShxWhmNhdahdkhbRhjohMXhTRxAXxXSxKBxNBxEQxeNxeQxhXxsFxdbxlHxjcxFBxFNxFQxFOxFoyNYyYoybcyMYuBQuBRuBruDMuCouHBudQukkuoBulVuMXuFEmCYmCRmpRmeDmiMmjdmTFmFQiADiBOiaRiKRiNBiNRiSFiGkiGFiERipRiLFiIFihYibHijBijEiMXiWBiFBiFCUBQUXFUaRUNDUNcUNRUNFUDBUSHUCDUGBUGFUEqULNULoUIRUeEUeYUgBUhFUuRUiFUsXUdFUkHUbBUjSUjYUwXUMDUcHURdUTBUrBUrXUrQZAFZXZZaRZKFZNBZQFZCXZGBZYdZpBZLDZIFZHXZHNZeQZVRZVFZmXZiBZvFZdFZkFZbHZbFZwXZcCZcRZRBvBQvBGvBLvBWvCovMYsAFsBDsaRsKFsNFsDrsSHsSFsCXsCRsEBsEHsEfspBsLBsLDsIgsIRseGsbRsFBsFQsFSdNBdSRdCVdGHdYDdHcdVbdySduDdsXdlRdwXdWYdWcdWRkBMkXOkaRkNIkNFkSFkCFkYBkpRkeNkgBkhVkmXksFklVkMBkWDkFNoBNoaQoaFoNBoNXoNaoNEoSRoEroYXoYCoYbopRopFomXojkowXorFbBEbEIbdBbjYlaRlDElMXlFDjKjjSRjGBjYBjYkjpRjLXjIBjOFjeVjbRjwBnXQnSHnpFnLXnINnMBnTRwXBwXNwXYwNFwQFwSBwGFwLXwLDweNwgBwuHwjDwnXMBXMpFMIBMeNMTHcaQcNBcDHcSFcCXcpBcLXcLDcgFcuFcnXcwXccDcTQcrFTQErXNrCHrpFrgFrbFrTHrFcWNYWNbWEHWMXWTR\",\n\n    // 5-kana words\n    \"ABGHABIJAEAVAYJQALZJAIaRAHNXAHdcAHbRAZJMAZJRAZTRAdVJAklmAbcNAjdRAMnRAMWYAWpRAWgRAFgBAFhBAFdcBNJBBNJDBQKBBQhcBQlmBDEJBYJkBYJTBpNBBpJFBIJBBIJDBIcABOKXBOEJBOVJBOiJBOZJBepBBeLXBeIFBegBBgGJBVJXBuocBiJRBUJQBlXVBlITBwNFBMYVBcqXBTlmBWNFBWiJBWnRBFGHBFwXXKGJXNJBXNZJXDTTXSHSXSVRXSlHXCJDXGQJXEhXXYQJXYbRXOfXXeNcXVJFXhQJXhEJXdTRXjdXXMhBXcQTXRGBXTEBXTnQXFCXXFOFXFgFaBaFaBNJaBCJaBpBaBwXaNJKaNJDaQIBaDpRaEPDaHMFamDJalEJaMZJaFaFaFNBaFQJaFLDaFVHKBCYKBEBKBHDKXaFKXGdKXEJKXpHKXIBKXZDKXwXKKwLKNacKNYJKNJoKNWcKDGdKDTRKChXKGaRKGhBKGbRKEBTKEaRKEPTKLMDKLWRKOHDKVJcKdBcKlIBKlOPKFSBKFEPKFpFNBNJNJBQNBGHNBEPNBHXNBgFNBVXNBZDNBsXNBwXNNaRNNJDNNJENNJkNDCJNDVDNGJRNJiDNZJNNsCJNJFNNFSBNFCXNFEPNFLXNFIFQJBFQCaRQJEQQLJDQLJFQIaRQOqXQHaFQHHQQVJXQVJDQhNJQmEIQZJFQsJXQJrFQWbRDJABDBYJDXNFDXCXDXLXDXZDDXsJDQqXDSJFDJCXDEPkDEqXDYmQDpSJDOCkDOGQDHEIDVJDDuDuDWEBDJFgSBNDSBSFSBGHSBIBSBTQSKVYSJQNSJQiSJCXSEqXSJYVSIiJSOMYSHAHSHaQSeCFSepQSegBSHdHSHrFShSJSJuHSJUFSkNRSrSrSWEBSFaHSJFQSFCXSFGDSFYXSFODSFgBSFVXSFhBSFxFSFkFSFbBSFMFCADdCJXBCXaFCXKFCXNFCXCXCXGBCXEJCXYBCXLDCXIBCXOPCXHXCXgBCXhBCXiBCXlDCXcHCJNBCJNFCDCJCDGBCDVXCDhBCDiDCDJdCCmNCpJFCIaRCOqXCHCHCHZJCViJCuCuCmddCJiFCdNBCdHhClEJCnUJCreSCWlgCWTRCFBFCFNBCFYBCFVFCFhFCFdSCFTBCFWDGBNBGBQFGJBCGBEqGBpBGBgQGNBEGNJYGNkOGNJRGDUFGJpQGHaBGJeNGJeEGVBlGVKjGiJDGvJHGsVJGkEBGMIJGWjNGFBFGFCXGFGBGFYXGFpBGFMFEASJEAWpEJNFECJVEIXSEIQJEOqXEOcFEeNcEHEJEHlFEJgFEhlmEmDJEmZJEiMBEUqXEoSREPBFEPXFEPKFEPSFEPEFEPpFEPLXEPIBEJPdEPcFEPTBEJnXEqlHEMpREFCXEFODEFcFYASJYJAFYBaBYBVXYXpFYDhBYCJBYJGFYYbRYeNcYJeVYiIJYZJcYvJgYvJRYJsXYsJFYMYMYreVpBNHpBEJpBwXpQxFpYEJpeNDpJeDpeSFpeCHpHUJpHbBpHcHpmUJpiiJpUJrpsJuplITpFaBpFQqpFGBpFEfpFYBpFpBpFLJpFIDpFgBpFVXpFyQpFuFpFlFpFjDpFnXpFwXpJFMpFTBLXCJLXEFLXhFLXUJLXbFLalmLNJBLSJQLCLCLGJBLLDJLHaFLeNFLeSHLeCXLepFLhaRLZsJLsJDLsJrLocaLlLlLMdbLFNBLFSBLFEHLFkFIBBFIBXFIBaQIBKXIBSFIBpHIBLXIBgBIBhBIBuHIBmXIBiFIBZXIBvFIBbFIBjQIBwXIBWFIKTRIQUJIDGFICjQIYSRIINXIJeCIVaRImEkIZJFIvJRIsJXIdCJIJoRIbBQIjYBIcqXITFVIreVIFKFIFSFIFCJIFGFIFLDIFIBIJFOIFgBIFVXIJFhIFxFIFmXIFdHIFbBIJFrIJFWOBGBOQfXOOKjOUqXOfXBOqXEOcqXORVJOFIBOFlDHBIOHXiFHNTRHCJXHIaRHHJDHHEJHVbRHZJYHbIBHRsJHRkDHWlmgBKFgBSBgBCDgBGHgBpBgBIBgBVJgBuBgBvFgKDTgQVXgDUJgGSJgOqXgmUMgZIJgTUJgWIEgFBFgFNBgFDJgFSFgFGBgFYXgJFOgFgQgFVXgFhBgFbHgJFWVJABVQKcVDgFVOfXVeDFVhaRVmGdViJYVMaRVFNHhBNDhBCXhBEqhBpFhBLXhNJBhSJRheVXhhKEhxlmhZIJhdBQhkIJhbMNhMUJhMZJxNJgxQUJxDEkxDdFxSJRxplmxeSBxeCXxeGFxeYXxepQxegBxWVcxFEQxFLXxFIBxFgBxFxDxFZtxFdcxFbBxFwXyDJXyDlcuASJuDJpuDIBuCpJuGSJuIJFueEFuZIJusJXudWEuoIBuWGJuFBcuFKEuFNFuFQFuFDJuFGJuFVJuFUtuFdHuFTBmBYJmNJYmQhkmLJDmLJomIdXmiJYmvJRmsJRmklmmMBymMuCmclmmcnQiJABiJBNiJBDiBSFiBCJiBEFiBYBiBpFiBLXiBTHiJNciDEfiCZJiECJiJEqiOkHiHKFieNDiHJQieQcieDHieSFieCXieGFieEFieIHiegFihUJixNoioNXiFaBiFKFiFNDiFEPiFYXitFOitFHiFgBiFVEiFmXiFitiFbBiFMFiFrFUCXQUIoQUIJcUHQJUeCEUHwXUUJDUUqXUdWcUcqXUrnQUFNDUFSHUFCFUFEfUFLXUtFOZBXOZXSBZXpFZXVXZEQJZEJkZpDJZOqXZeNHZeCDZUqXZFBQZFEHZFLXvBAFvBKFvBCXvBEPvBpHvBIDvBgFvBuHvQNJvFNFvFGBvFIBvJFcsXCDsXLXsXsXsXlFsXcHsQqXsJQFsEqXseIFsFEHsFjDdBxOdNpRdNJRdEJbdpJRdhZJdnSJdrjNdFNJdFQHdFhNkNJDkYaRkHNRkHSRkVbRkuMRkjSJkcqDoSJFoEiJoYZJoOfXohEBoMGQocqXbBAFbBXFbBaFbBNDbBGBbBLXbBTBbBWDbGJYbIJHbFQqbFpQlDgQlOrFlVJRjGEBjZJRnXvJnXbBnEfHnOPDngJRnxfXnUJWwXEJwNpJwDpBwEfXwrEBMDCJMDGHMDIJMLJDcQGDcQpHcqXccqNFcqCXcFCJRBSBRBGBRBEJRBpQTBNFTBQJTBpBTBVXTFABTFSBTFCFTFGBTFMDrXCJrXLDrDNJrEfHrFQJrFitWNjdWNTR\",\n\n    // 6-kana words\n    \"AKLJMANOPFASNJIAEJWXAYJNRAIIbRAIcdaAeEfDAgidRAdjNYAMYEJAMIbRAFNJBAFpJFBBIJYBDZJFBSiJhBGdEBBEJfXBEJqXBEJWRBpaUJBLXrXBIYJMBOcfXBeEfFBestXBjNJRBcDJOBFEqXXNvJRXDMBhXCJNYXOAWpXONJWXHDEBXeIaRXhYJDXZJSJXMDJOXcASJXFVJXaBQqXaBZJFasXdQaFSJQaFEfXaFpJHaFOqXKBNSRKXvJBKQJhXKEJQJKEJGFKINJBKIJjNKgJNSKVElmKVhEBKiJGFKlBgJKjnUJKwsJYKMFIJKFNJDKFIJFKFOfXNJBSFNJBCXNBpJFNJBvQNJBMBNJLJXNJOqXNJeCXNJeGFNdsJCNbTKFNwXUJQNFEPQDiJcQDMSJQSFpBQGMQJQJeOcQyCJEQUJEBQJFBrQFEJqDXDJFDJXpBDJXIMDGiJhDIJGRDJeYcDHrDJDVXgFDkAWpDkIgRDjDEqDMvJRDJFNFDJFIBSKclmSJQOFSJQVHSJQjDSJGJBSJGJFSECJoSHEJqSJHTBSJVJDSViJYSZJNBSJsJDSFSJFSFEfXSJFLXCBUJVCJXSBCJXpBCXVJXCJXsXCJXdFCJNJHCLIJgCHiJFCVNJMChCJhCUHEJCsJTRCJdYcCoQJCCFEfXCFIJgCFUJxCFstFGJBaQGJBIDGQJqXGYJNRGJHKFGeQqDGHEJFGJeLXGHIiJGHdBlGUJEBGkIJTGFQPDGJFEqEAGegEJIJBEJVJXEhQJTEiJNcEJZJFEJoEqEjDEqEPDsXEPGJBEPOqXEPeQFEfDiDEJfEFEfepQEfMiJEqXNBEqDIDEqeSFEqVJXEMvJRYXNJDYXEJHYKVJcYYJEBYJeEcYJUqXYFpJFYFstXpAZJMpBSJFpNBNFpeQPDpHLJDpHIJFpHgJFpeitFpHZJFpJFADpFSJFpJFCJpFOqXpFitBpJFZJLXIJFLIJgRLVNJWLVHJMLwNpJLFGJBLFLJDLFOqXLJFUJIBDJXIBGJBIJBYQIJBIBIBOqXIBcqDIEGJFILNJTIIJEBIOiJhIJeNBIJeIBIhiJIIWoTRIJFAHIJFpBIJFuHIFUtFIJFTHOSBYJOEcqXOHEJqOvBpFOkVJrObBVJOncqDOcNJkHhNJRHuHJuHdMhBgBUqXgBsJXgONJBgHNJDgHHJQgJeitgHsJXgJyNagyDJBgZJDrgsVJQgkEJNgkjSJgJFAHgFCJDgFZtMVJXNFVXQfXVJXDJVXoQJVQVJQVDEfXVDvJHVEqNFVeQfXVHpJFVHxfXVVJSRVVmaRVlIJOhCXVJhHjYkhxCJVhWVUJhWiJcxBNJIxeEqDxfXBFxcFEPxFSJFxFYJXyBDQJydaUJyFOPDuYCJYuLvJRuHLJXuZJLDuFOPDuFZJHuFcqXmKHJdmCQJcmOsVJiJAGFitLCFieOfXiestXiZJMEikNJQirXzFiFQqXiFIJFiFZJFiFvtFUHpJFUteIcUteOcUVCJkUhdHcUbEJEUJqXQUMNJhURjYkUFitFZDGJHZJIxDZJVJXZJFDJZJFpQvBNJBvBSJFvJxBrseQqDsVFVJdFLJDkEJNBkmNJYkFLJDoQJOPoGsJRoEAHBoEJfFbBQqDbBZJHbFVJXlFIJBjYIrXjeitcjjCEBjWMNBwXQfXwXOaFwDsJXwCJTRwrCZJMDNJQcDDJFcqDOPRYiJFTBsJXTQIJBTFEfXTFLJDrXEJFrEJXMrFZJFWEJdEWYTlm\",\n\n    // 7-kana words\n    \"ABCDEFACNJTRAMBDJdAcNJVXBLNJEBXSIdWRXErNJkXYDJMBXZJCJaXMNJaYKKVJKcKDEJqXKDcNJhKVJrNYKbgJVXKFVJSBNBYBwDNJeQfXNJeEqXNhGJWENJFiJRQlIJbEQJfXxDQqXcfXQFNDEJQFwXUJDYcnUJDJIBgQDIUJTRDJFEqDSJQSJFSJQIJFSOPeZtSJFZJHCJXQfXCTDEqFGJBSJFGJBOfXGJBcqXGJHNJDGJRLiJEJfXEqEJFEJPEFpBEJYJBZJFYBwXUJYiJMEBYJZJyTYTONJXpQMFXFpeGIDdpJFstXpJFcPDLBVSJRLHQJqXLJFZJFIJBNJDIJBUqXIBkFDJIJEJPTIYJGWRIJeQPDIJeEfHIJFsJXOqGDSFHXEJqXgJCsJCgGQJqXgdQYJEgFMFNBgJFcqDVJwXUJVJFZJchIgJCCxOEJqXxOwXUJyDJBVRuscisciJBiJBieUtqXiJFDJkiFsJXQUGEZJcUJFsJXZtXIrXZDZJDrZJFNJDZJFstXvJFQqXvJFCJEsJXQJqkhkNGBbDJdTRbYJMEBlDwXUJMEFiJFcfXNJDRcNJWMTBLJXC\",\n\n    // 8-kana words\n    \"BraFUtHBFSJFdbNBLJXVJQoYJNEBSJBEJfHSJHwXUJCJdAZJMGjaFVJXEJPNJBlEJfFiJFpFbFEJqIJBVJCrIBdHiJhOPFChvJVJZJNJWxGFNIFLueIBQJqUHEJfUFstOZJDrlXEASJRlXVJXSFwVJNJWD\",\n\n    // 9-kana words\n    \"QJEJNNJDQJEJIBSFQJEJxegBQJEJfHEPSJBmXEJFSJCDEJqXLXNJFQqXIcQsFNJFIFEJqXUJgFsJXIJBUJEJfHNFvJxEqXNJnXUJFQqD\",\n\n    // 10-kana words\n    \"IJBEJqXZJ\"\n];\n\n// Maps each character into its kana value (the index)\nconst mapping = \"~~AzB~X~a~KN~Q~D~S~C~G~E~Y~p~L~I~O~eH~g~V~hxyumi~~U~~Z~~v~~s~~dkoblPjfnqwMcRTr~W~~~F~~~~~Jt\"\n\nlet _wordlist: null | Array<string> = null;\n\nfunction hex(word: string): string {\n    return hexlify(toUtf8Bytes(word));\n}\n\nconst KiYoKu = \"0xe3818de38284e3818f\";\nconst KyoKu = \"0xe3818de38283e3818f\"\n\nfunction toString(data: Array<number>): string {\n    return toUtf8String(new Uint8Array(data));\n}\n\nfunction loadWords(): Array<string> {\n    if (_wordlist !== null) { return _wordlist; }\n\n    const wordlist: Array<string> = [];\n\n    // Transforms for normalizing (sort is a not quite UTF-8)\n    const transform: { [key: string]: string | boolean } = {};\n\n    // Delete the diacritic marks\n    transform[toString([227, 130, 154])] = false;\n    transform[toString([227, 130, 153])] = false;\n\n    // Some simple transforms that sort out most of the order\n    transform[toString([227, 130, 133])] = toString([227, 130, 134]);\n    transform[toString([227, 129, 163])] = toString([227, 129, 164]);\n    transform[toString([227, 130, 131])] = toString([227, 130, 132]);\n    transform[toString([227, 130, 135])] = toString([227, 130, 136]);\n\n\n    // Normalize words using the transform\n    function normalize(word: string) {\n        let result = \"\";\n        for (let i = 0; i < word.length; i++) {\n            let kana = word[i];\n            const target = transform[kana];\n            if (target === false) { continue; }\n            if (target) { kana = <string>target; }\n            result += kana;\n        }\n        return result;\n    }\n\n    // Sort how the Japanese list is sorted\n    function sortJapanese(a: string, b: string) {\n        a = normalize(a);\n        b = normalize(b);\n        if (a < b) { return -1; }\n        if (a > b) { return 1; }\n        return 0;\n    }\n\n    // Load all the words\n    for (let length = 3; length <= 9; length++) {\n        const d = data[length - 3];\n        for (let offset = 0; offset < d.length; offset += length) {\n            const word: Array<number> = [];\n            for (let i = 0; i < length; i++) {\n                 const k = mapping.indexOf(d[offset + i]);\n                 word.push(227);\n                 word.push((k & 0x40) ? 130: 129);\n                 word.push((k & 0x3f) + 128);\n            }\n            wordlist.push(toString(word));\n        }\n    }\n    wordlist.sort(sortJapanese);\n\n    // For some reason kyoku and kiyoku are flipped in node (!!).\n    // The order SHOULD be:\n    //   - kyoku\n    //   - kiyoku\n\n    // This should ignore \"if\", but that doesn't work here??\n    /* c8 ignore start */\n    if (hex(wordlist[442]) === KiYoKu && hex(wordlist[443]) === KyoKu) {\n        const tmp = wordlist[442];\n        wordlist[442] = wordlist[443];\n        wordlist[443] = tmp;\n    }\n    /* c8 ignore stop */\n\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    const checksum = id(wordlist.join(\"\\n\") + \"\\n\");\n    /* c8 ignore start */\n    if (checksum !== \"0xcb36b09e6baa935787fd762ce65e80b0c6a8dabdfbc3a7f86ac0e2c4fd111600\") {\n        throw new Error(\"BIP39 Wordlist for ja (Japanese) FAILED\");\n    }\n    /* c8 ignore stop */\n\n    _wordlist = wordlist;\n\n    return wordlist;\n}\n\nlet wordlist: null | LangJa = null;\n\n/**\n *  The [[link-bip39-ja]] for [mnemonic phrases](link-bip-39).\n *\n *  @_docloc: api/wordlists\n */\nexport class LangJa extends Wordlist {\n\n    /**\n     *  Creates a new instance of the Japanese language Wordlist.\n     *\n     *  This should be unnecessary most of the time as the exported\n     *  [[langJa]] should suffice.\n     *\n     *  @_ignore:\n     */\n    constructor() { super(\"ja\"); }\n\n    getWord(index: number): string {\n        const words = loadWords();\n        assertArgument(index >= 0 && index < words.length,\n            `invalid word index: ${ index }`, \"index\", index);\n        return words[index];\n    }\n\n    getWordIndex(word: string): number {\n        return loadWords().indexOf(word);\n    }\n\n    split(phrase: string): Array<string> {\n        //logger.assertNormalize();\n        return phrase.split(/(?:\\u3000| )+/g);\n    }\n\n    join(words: Array<string>): string {\n        return words.join(\"\\u3000\");\n    }\n\n    /**\n     *  Returns a singleton instance of a ``LangJa``, creating it\n     *  if this is the first time being called.\n     */\n    static wordlist(): LangJa {\n        if (wordlist == null) { wordlist = new LangJa(); }\n        return wordlist;\n    }\n}\n", "import { id } from \"../hash/index.js\";\nimport { assertArgument, toUtf8String } from \"../utils/index.js\";\n\nimport { Wordlist } from \"./wordlist.js\";\n\n\nconst data = [\n    \"OYAa\",\n    \"ATAZoATBl3ATCTrATCl8ATDloATGg3ATHT8ATJT8ATJl3ATLlvATLn4ATMT8ATMX8ATMboATMgoAToLbAToMTATrHgATvHnAT3AnAT3JbAT3MTAT8DbAT8JTAT8LmAT8MYAT8MbAT#LnAUHT8AUHZvAUJXrAUJX8AULnrAXJnvAXLUoAXLgvAXMn6AXRg3AXrMbAX3JTAX3QbAYLn3AZLgvAZrSUAZvAcAZ8AaAZ8AbAZ8AnAZ8HnAZ8LgAZ8MYAZ8MgAZ8OnAaAboAaDTrAaFTrAaJTrAaJboAaLVoAaMXvAaOl8AaSeoAbAUoAbAg8AbAl4AbGnrAbMT8AbMXrAbMn4AbQb8AbSV8AbvRlAb8AUAb8AnAb8HgAb8JTAb8NTAb8RbAcGboAcLnvAcMT8AcMX8AcSToAcrAaAcrFnAc8AbAc8MgAfGgrAfHboAfJnvAfLV8AfLkoAfMT8AfMnoAfQb8AfScrAfSgrAgAZ8AgFl3AgGX8AgHZvAgHgrAgJXoAgJX8AgJboAgLZoAgLn4AgOX8AgoATAgoAnAgoCUAgoJgAgoLXAgoMYAgoSeAgrDUAgrJTAhrFnAhrLjAhrQgAjAgoAjJnrAkMX8AkOnoAlCTvAlCV8AlClvAlFg4AlFl6AlFn3AloSnAlrAXAlrAfAlrFUAlrFbAlrGgAlrOXAlvKnAlvMTAl3AbAl3MnAnATrAnAcrAnCZ3AnCl8AnDg8AnFboAnFl3AnHX4AnHbrAnHgrAnIl3AnJgvAnLXoAnLX4AnLbrAnLgrAnLhrAnMXoAnMgrAnOn3AnSbrAnSeoAnvLnAn3OnCTGgvCTSlvCTvAUCTvKnCTvNTCT3CZCT3GUCT3MTCT8HnCUCZrCULf8CULnvCU3HnCU3JUCY6NUCbDb8CbFZoCbLnrCboOTCboScCbrFnCbvLnCb8AgCb8HgCb$LnCkLfoClBn3CloDUDTHT8DTLl3DTSU8DTrAaDTrLXDTrLjDTrOYDTrOgDTvFXDTvFnDT3HUDT3LfDUCT9DUDT4DUFVoDUFV8DUFkoDUGgrDUJnrDULl8DUMT8DUMXrDUMX4DUMg8DUOUoDUOgvDUOg8DUSToDUSZ8DbDXoDbDgoDbGT8DbJn3DbLg3DbLn4DbMXrDbMg8DbOToDboJXGTClvGTDT8GTFZrGTLVoGTLlvGTLl3GTMg8GTOTvGTSlrGToCUGTrDgGTrJYGTrScGTtLnGTvAnGTvQgGUCZrGUDTvGUFZoGUHXrGULnvGUMT8GUoMgGXoLnGXrMXGXrMnGXvFnGYLnvGZOnvGZvOnGZ8LaGZ8LmGbAl3GbDYvGbDlrGbHX3GbJl4GbLV8GbLn3GbMn4GboJTGboRfGbvFUGb3GUGb4JnGgDX3GgFl$GgJlrGgLX6GgLZoGgLf8GgOXoGgrAgGgrJXGgrMYGgrScGgvATGgvOYGnAgoGnJgvGnLZoGnLg3GnLnrGnQn8GnSbrGnrMgHTClvHTDToHTFT3HTQT8HToJTHToJgHTrDUHTrMnHTvFYHTvRfHT8MnHT8SUHUAZ8HUBb4HUDTvHUoMYHXFl6HXJX6HXQlrHXrAUHXrMnHXrSbHXvFYHXvKXHX3LjHX3MeHYvQlHZrScHZvDbHbAcrHbFT3HbFl3HbJT8HbLTrHbMT8HbMXrHbMbrHbQb8HbSX3HboDbHboJTHbrFUHbrHgHbrJTHb8JTHb8MnHb8QgHgAlrHgDT3HgGgrHgHgrHgJTrHgJT8HgLX@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!Ln$CTGXMnCToLZ4CTrHT8CT3JTrCT3RZrCT#GTvCU6GgvCU8Db8CU8GZrCU8HT8CboLl3CbrGgrCbrMU8Cb8DT3Cb8GnrCb8LX4Cb8MT8Cb8ObrCgrGgvCgrKX4Cl8FZoDTrAbvDTrDboDTrGT6DTrJgrDTrMX3DTrRZrDTrRg8DTvAVvDTvFZoDT3DT8DT3Ln3DT4HZrDT4MT8DT8AlrDT8MT8DUAkGbDUDbJnDYLnQlDbDUOYDbMTAnDbMXSnDboAT3DboFn4DboLnvDj6JTrGTCgFTGTGgFnGTJTMnGTLnPlGToJT8GTrCT3GTrLVoGTrLnvGTrMX3GTrMboGTvKl3GZClFnGZrDT3GZ8DTrGZ8FZ8GZ8MXvGZ8On8GZ8ST3GbCnQXGbMbFnGboFboGboJg3GboMXoGb3JTvGb3JboGb3Mn6Gb3Qb8GgDXLjGgMnAUGgrDloGgrHX4GgrSToGgvAXrGgvAZvGgvFbrGgvLl3GgvMnvGnDnLXGnrATrGnrMboGnuLl3HTATMnHTAgCnHTCTCTHTrGTvHTrHTvHTrJX8HTrLl8HTrMT8HTrMgoHTrOTrHTuOn3HTvAZrHTvDTvHTvGboHTvJU8HTvLl3HTvMXrHTvQb4HT4GT6HT4JT8HT4Jb#HT8Al3HT8GZrHT8GgrHT8HX4HT8Jb8HT8JnoHT8LTrHT8LgvHT8SToHT8SV8HUoJUoHUoJX8HUoLnrHXrLZoHXvAl3HX3LnrHX4FkvHX4LhrHX4MXoHX4OnoHZrAZ8HZrDb8HZrGZ8HZrJnrHZvGZ8HZvLnvHZ8JnvHZ8LhrHbCXJlHbMTAnHboJl4HbpLl3HbrJX8HbrLnrHbrMnvHbvRYrHgoSTrHgrFV8HgrGZ8HgrJXoHgrRnvHgvBb!HgvGTrHgvHX4HgvHn!HgvLTrHgvSU8HnDnLbHnFbJbHnvDn8Hn6GgvHn!BTvJTCTLnJTQgFnJTrAnvJTrLX4JTrOUoJTvFn3JTvLnrJTvNToJT3AgoJT3Jn4JT3LhvJT3ObrJT8AcrJT8Al3JT8JT8JT8JnoJT8LX4JT8LnrJT8MX3JT8Rg3JT8Sc8JUoBTvJU8AToJU8GZ8JU8GgvJU8JTrJU8JXrJU8JnrJU8LnvJU8ScvJXHnJlJXrGgvJXrJU8JXrLhrJXrMT8JXrMXrJXrQUoJXvCTvJXvGZ8JXvGgrJXvQT8JX8Ab8JX8DT8JX8GZ8JX8HZvJX8LnrJX8MT8JX8MXoJX8MnvJX8ST3JYGnCTJbAkGbJbCTAnJbLTAcJboDT3JboLb6JbrAnvJbrCn3JbrDl8JbrGboJbrIZoJbrJnvJbrMnvJbrQb4Jb8RZrJeAbAnJgJnFbJgScAnJgrATrJgvHZ8JgvMn4JlJlFbJlLiQXJlLjOnJlRbOlJlvNXoJlvRl3Jl4AcrJl8AUoJl8MnrJnFnMlJnHgGbJnoDT8JnoFV8JnoGgvJnoIT8JnoQToJnoRg3JnrCZ3JnrGgrJnrHTvJnrLf8JnrOX8JnvAT3JnvFZoJnvGT8JnvJl4JnvMT8JnvMX8JnvOXrJnvPX6JnvSX3JnvSZrJn3MT8Jn3MX8Jn3RTrLTATKnLTJnLTLTMXKnLTRTQlLToGb8LTrAZ8LTrCZ8LTrDb8LTrHT8LT3PX6LT4FZoLT$CTvLT$GgrLUvHX3LVoATrLVoAgoLVoJboLVoMX3LVoRg3LV8CZ3LV8FZoLV8GTvLXrDXoLXrFbrLXvAgvLXvFlrLXvLl3LXvRn6LX4Mb8LX8GT8LYCXMnLYrMnrLZoSTvLZrAZvLZrAloLZrFToLZrJXvLZrJboLZrJl4LZrLnrLZrMT8LZrOgvLZrRnvLZrST4LZvMX8LZvSlvLZ8AgoLZ8CT3LZ8JT8LZ8LV8LZ8LZoLZ8Lg8LZ8SV8LZ8SbrLZ$HT8LZ$Mn4La6CTvLbFbMnLbRYFTLbSnFZLboJT8LbrAT9LbrGb3LbrQb8LcrJX8LcrMXrLerHTvLerJbrLerNboLgrDb8LgrGZ8LgrHTrLgrMXrLgrSU8LgvJTrLgvLl3Lg6Ll3LhrLnrLhrMT8LhvAl4LiLnQXLkoAgrLkoJT8LkoJn4LlrSU8Ll3FZoLl3HTrLl3JX8Ll3JnoLl3LToLmLeFbLnDUFbLnLVAnLnrATrLnrAZoLnrAb8LnrAlrLnrGgvLnrJU8LnrLZrLnrLhrLnrMb8LnrOXrLnrSZ8LnvAb4LnvDTrLnvDl8LnvHTrLnvHbrLnvJT8LnvJU8LnvJbrLnvLhvLnvMX8LnvMb8LnvNnoLnvSU8Ln3Al3Ln4FZoLn4GT6Ln4JgvLn4LhrLn4MT8Ln4SToMToCZrMToJX8MToLX4MToLf8MToRg3MTrEloMTvGb6MT3BTrMT3Lb6MT8AcrMT8AgrMT8GZrMT8JnoMT8LnrMT8MX3MUOUAnMXAbFnMXoAloMXoJX8MXoLf8MXoLl8MXrAb8MXrDTvMXrGT8MXrGgrMXrHTrMXrLf8MXrMU8MXrOXvMXrQb8MXvGT8MXvHTrMXvLVoMX3AX3MX3Jn3MX3LhrMX3MX3MX4AlrMX4OboMX8GTvMX8GZrMX8GgrMX8JT8MX8JX8MX8LhrMX8MT8MYDUFbMYMgDbMbGnFfMbvLX4MbvLl3Mb8Mb8Mb8ST4MgGXCnMg8ATrMg8AgoMg8CZrMg8DTrMg8DboMg8HTrMg8JgrMg8LT8MloJXoMl8AhrMl8JT8MnLgAUMnoJXrMnoLX4MnoLhrMnoMT8MnrAl4MnrDb8MnrOTvMnrOgvMnrQb8MnrSU8MnvGgrMnvHZ8Mn3MToMn4DTrMn4LTrMn4Mg8NnBXAnOTFTFnOToAToOTrGgvOTrJX8OT3JXoOT6MTrOT8GgrOT8HTpOT8MToOUoHT8OUoJT8OUoLn3OXrAgoOXrDg8OXrMT8OXvSToOX6CTvOX8CZrOX8OgrOb6HgvOb8AToOb8MT8OcvLZ8OgvAlrOgvHTvOgvJTrOgvJnrOgvLZrOgvLn4OgvMT8OgvRTrOg8AZoOg8DbvOnrOXoOnvJn4OnvLhvOnvRTrOn3GgoOn3JnvOn6JbvOn8OTrPTGYFTPbBnFnPbGnDnPgDYQTPlrAnvPlrETvPlrLnvPlrMXvPlvFX4QTMTAnQTrJU8QYCnJlQYJlQlQbGTQbQb8JnrQb8LZoQb8LnvQb8MT8Qb8Ml8Qb8ST4QloAl4QloHZvQloJX8QloMn8QnJZOlRTrAZvRTrDTrRTvJn4RTvLhvRT4Jb8RZrAZrRZ8AkrRZ8JU8RZ8LV8RZ8LnvRbJlQXRg3GboRg3MnvRg8AZ8Rg8JboRg8Jl4RnLTCbRnvFl3RnvQb8SToAl4SToCZrSToFZoSToHXrSToJU8SToJgvSToJl4SToLhrSToMX3STrAlvSTrCT9STrCgrSTrGgrSTrHXrSTrHboSTrJnoSTrNboSTvLnrST4AZoST8Ab8ST8JT8SUoJn3SU6HZ#SU6JTvSU8Db8SU8HboSU8LgrSV8JT8SZrAcrSZrAl3SZrJT8SZrJnvSZrMT8SZvLUoSZ4FZoSZ8JnoSZ8RZrScoLnrScoMT8ScoMX8ScrAT4ScrAZ8ScrLZ8ScrLkvScvDb8ScvLf8ScvNToSgrFZrShvKnrSloHUoSloLnrSlrMXoSl8HgrSmrJUoSn3BX6\",\n    \"ATFlOn3ATLgrDYAT4MTAnAT8LTMnAYJnRTrAbGgJnrAbLV8LnAbvNTAnAeFbLg3AgOYMXoAlQbFboAnDboAfAnJgoJTBToDgAnBUJbAl3BboDUAnCTDlvLnCTFTrSnCYoQTLnDTwAbAnDUDTrSnDUHgHgrDX8LXFnDbJXAcrETvLTLnGTFTQbrGTMnGToGT3DUFbGUJlPX3GbQg8LnGboJbFnGb3GgAYGgAg8ScGgMbAXrGgvAbAnGnJTLnvGnvATFgHTDT6ATHTrDlJnHYLnMn8HZrSbJTHZ8LTFnHbFTJUoHgSeMT8HgrLjAnHgvAbAnHlFUrDlHnDgvAnHnHTFT3HnQTGnrJTAaMXvJTGbCn3JTOgrAnJXvAXMnJbMg8SnJbMnRg3Jb8LTMnJnAl3OnJnGYrQlJnJlQY3LTDlCn3LTJjLg3LTLgvFXLTMg3GTLV8HUOgLXFZLg3LXNXrMnLX8QXFnLX9AlMYLYLXPXrLZAbJU8LZDUJU8LZMXrSnLZ$AgFnLaPXrDULbFYrMnLbMn8LXLboJgJgLeFbLg3LgLZrSnLgOYAgoLhrRnJlLkCTrSnLkOnLhrLnFX%AYLnFZoJXLnHTvJbLnLloAbMTATLf8MTHgJn3MTMXrAXMT3MTFnMUITvFnMXFX%AYMXMXvFbMXrFTDbMYAcMX3MbLf8SnMb8JbFnMgMXrMTMgvAXFnMgvGgCmMnAloSnMnFnJTrOXvMXSnOX8HTMnObJT8ScObLZFl3ObMXCZoPTLgrQXPUFnoQXPU3RXJlPX3RkQXPbrJXQlPlrJbFnQUAhrDbQXGnCXvQYLnHlvQbLfLnvRTOgvJbRXJYrQlRYLnrQlRbLnrQlRlFT8JlRlFnrQXSTClCn3STHTrAnSTLZQlrSTMnGTrSToHgGbSTrGTDnSTvGXCnST3HgFbSU3HXAXSbAnJn3SbFT8LnScLfLnv\",\n    \"AT3JgJX8AT8FZoSnAT8JgFV8AT8LhrDbAZ8JT8DbAb8GgLhrAb8SkLnvAe8MT8SnAlMYJXLVAl3GYDTvAl3LfLnvBUDTvLl3CTOn3HTrCT3DUGgrCU8MT8AbCbFTrJUoCgrDb8MTDTLV8JX8DTLnLXQlDT8LZrSnDUQb8FZ8DUST4JnvDb8ScOUoDj6GbJl4GTLfCYMlGToAXvFnGboAXvLnGgAcrJn3GgvFnSToGnLf8JnvGn#HTDToHTLnFXJlHTvATFToHTvHTDToHTvMTAgoHT3STClvHT4AlFl6HT8HTDToHUoDgJTrHUoScMX3HbRZrMXoHboJg8LTHgDb8JTrHgMToLf8HgvLnLnoHnHn3HT4Hn6MgvAnJTJU8ScvJT3AaQT8JT8HTrAnJXrRg8AnJbAloMXoJbrATFToJbvMnoSnJgDb6GgvJgDb8MXoJgSX3JU8JguATFToJlPYLnQlJlQkDnLbJlQlFYJlJl8Lf8OTJnCTFnLbJnLTHXMnJnLXGXCnJnoFfRg3JnrMYRg3Jn3HgFl3KT8Dg8LnLTRlFnPTLTvPbLbvLVoSbrCZLXMY6HT3LXNU7DlrLXNXDTATLX8DX8LnLZDb8JU8LZMnoLhrLZSToJU8LZrLaLnrLZvJn3SnLZ8LhrSnLaJnoMT8LbFlrHTvLbrFTLnrLbvATLlvLb6OTFn3LcLnJZOlLeAT6Mn4LeJT3ObrLg6LXFlrLhrJg8LnLhvDlPX4LhvLfLnvLj6JTFT3LnFbrMXoLnQluCTvLnrQXCY6LnvLfLnvLnvMgLnvLnvSeLf8MTMbrJn3MT3JgST3MT8AnATrMT8LULnrMUMToCZrMUScvLf8MXoDT8SnMX6ATFToMX8AXMT8MX8FkMT8MX8HTrDUMX8ScoSnMYJT6CTvMgAcrMXoMg8SToAfMlvAXLg3MnFl3AnvOT3AnFl3OUoATHT8OU3RnLXrOXrOXrSnObPbvFn6Og8HgrSnOg8OX8DbPTvAgoJgPU3RYLnrPXrDnJZrPb8CTGgvPlrLTDlvPlvFUJnoQUvFXrQlQeMnoAl3QlrQlrSnRTFTrJUoSTDlLiLXSTFg6HT3STJgoMn4STrFTJTrSTrLZFl3ST4FnMXoSUrDlHUoScvHTvSnSfLkvMXo\",\n    \"AUoAcrMXoAZ8HboAg8AbOg6ATFgAg8AloMXoAl3AT8JTrAl8MX8MXoCT3SToJU8Cl8Db8MXoDT8HgrATrDboOT8MXoGTOTrATMnGT8LhrAZ8GnvFnGnQXHToGgvAcrHTvAXvLl3HbrAZoMXoHgBlFXLg3HgMnFXrSnHgrSb8JUoHn6HT8LgvITvATrJUoJUoLZrRnvJU8HT8Jb8JXvFX8QT8JXvLToJTrJYrQnGnQXJgrJnoATrJnoJU8ScvJnvMnvMXoLTCTLgrJXLTJlRTvQlLbRnJlQYvLbrMb8LnvLbvFn3RnoLdCVSTGZrLeSTvGXCnLg3MnoLn3MToLlrETvMT8SToAl3MbrDU6GTvMb8LX4LhrPlrLXGXCnSToLf8Rg3STrDb8LTrSTvLTHXMnSb3RYLnMnSgOg6ATFg\",\n    \"HUDlGnrQXrJTrHgLnrAcJYMb8DULc8LTvFgGnCk3Mg8JbAnLX4QYvFYHnMXrRUoJnGnvFnRlvFTJlQnoSTrBXHXrLYSUJgLfoMT8Se8DTrHbDb\",\n    \"AbDl8SToJU8An3RbAb8ST8DUSTrGnrAgoLbFU6Db8LTrMg8AaHT8Jb8ObDl8SToJU8Pb3RlvFYoJl\"\n]\n\nconst codes = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*\"\n\nfunction getHangul(code: number): string {\n    if (code >= 40) {\n        code = code + 168 - 40;\n    } else if (code >= 19) {\n        code = code + 97 - 19;\n    }\n\n    return toUtf8String(new Uint8Array([ 225, (code >> 6) + 132, (code & 0x3f) + 128]));\n}\n\nlet _wordlist: null | Array<string> = null;\n\nfunction loadWords(): Array<string> {\n    if (_wordlist != null) { return _wordlist; }\n\n    const wordlist: Array<string> = [ ];\n\n    data.forEach((data, length) => {\n        length += 4;\n        for (let i = 0; i < data.length; i += length) {\n            let word = \"\";\n            for (let j = 0; j < length; j++) {\n                word += getHangul(codes.indexOf(data[i + j]));\n            }\n            wordlist.push(word)\n        }\n    });\n\n    wordlist.sort();\n\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    const checksum = id(wordlist.join(\"\\n\") + \"\\n\");\n    /* c8 ignore start */\n    if (checksum !== \"0xf9eddeace9c5d3da9c93cf7d3cd38f6a13ed3affb933259ae865714e8a3ae71a\") {\n        throw new Error(\"BIP39 Wordlist for ko (Korean) FAILED\");\n    }\n    /* c8 ignore stop */\n\n    _wordlist = wordlist;\n\n    return wordlist;\n}\n\nlet wordlist: null | LangKo = null;\n\n/**\n *  The [[link-bip39-ko]] for [mnemonic phrases](link-bip-39).\n *\n *  @_docloc: api/wordlists\n */\nexport class LangKo extends Wordlist {\n\n    /**\n     *  Creates a new instance of the Korean language Wordlist.\n     *\n     *  This should be unnecessary most of the time as the exported\n     *  [[langKo]] should suffice.\n     *\n     *  @_ignore:\n     */\n    constructor() {\n        super(\"ko\");\n    }\n\n    getWord(index: number): string {\n        const words = loadWords();\n        assertArgument(index >= 0 && index < words.length,\n            `invalid word index: ${ index }`, \"index\", index);\n        return words[index];\n    }\n\n    getWordIndex(word: string): number {\n        return loadWords().indexOf(word);\n    }\n\n    /**\n     *  Returns a singleton instance of a ``LangKo``, creating it\n     *  if this is the first time being called.\n     */\n    static wordlist(): LangKo {\n        if (wordlist == null) { wordlist = new LangKo(); }\n        return wordlist;\n    }\n}\n", "import { WordlistOwl } from \"./wordlist-owl.js\";\n\nconst words = \"0torea noica!iosorolotaleratelanena%oiadoencotivomai t ca%a0A]Bagl'Bin#E.Is(Oli!Rasi_Rog#0Cade!C[$Cus#E <Hil,I@QuaReRil>Roba+U 0Ag'Deb{DomeEgu#Eri!IpeOtt&Ul&1Fabi,Fe|Fis(F-n Oris`O(R~$0AveEn.E_,Ganc'I!It&OnismoR>*Rume Uzzo4AbardaA Bat)Ber#BoBumeCeCol>E|<FaGeb-Ian.IbiIm[ Lag#Leg)Lie_Lo@/Lusi_Me$Oge$Pa}Pest!Ta,=Ter$T%c'T)veUn$Veo*Z&0Alga`Ani+A!=B{Br#EbaEr~E^s+I]Mas(M[daMir&Mon{O!P'Pli&U, 0A}r@Ag-feAlis+Arch?At-CaCel/Co-D&D!aEl*Ge*Gol&Gus I`Neg&Nid#NoNunc'OnimoT%ipoZi1At>Ertu-OdePari!Pe^ Pogg'P)@Pun Ri,1Ab~AchideAgos+Ald~Anc'Atu-AzzoBit)Chiv'D{Eni,G[ Gi<Gu IaMon?NeseRed#RingaRos S[>SoTef%eZil*0Ciu|Col EpsiEtt>Fal I$O/Pir#P)Sagg'SeSolu Sur@TaT[u T%eT-|0Av>EismoOm>O$TesaTiv&Tor$Tr{Tua,0Sil'Str?Tis+To$moTun$0Anz#E!V[i!Vi(Volge!3Io<O ZimoZur):Be,C}$Ci$CoDessaDi/+Gn#I+L]<L@Le=L/+Lza$Mbi$Ndi!RaondaRba)R}R{$RlumeRoc]Sil>S(Tos+Ttu U,VaVosa3C]FfaLg'LvaNdaNe_,Nig$Nzi=ReRli=Ta3Bi+CiDo<Fi@GaLanc?MboNo]*O*goPedePol&Rban.R-S]|Ses S$n$Son.SturiZzar)2An@At+2Ll{Nif>R@S]Tan>T^$Zzo*2Acc'AdipoA`An}Avu-E.l/Eve|EzzaIgl?Il/n.Ind&Oc]*O@Onzi=Ul*U$2Bbo<CaDi$Ffo<IoLboO$R*<R-s}S(/S+:De|Du]La`)L]*LesseLib)LmoLor?MbusaMe-+M%?Mmi$Mo/Mpa,NapaNde/NeNi$No|N^=PacePel*P{*Pogi)Ppe)P-Psu/RapaceR}ssaR@Ris`Rova=R!|R li=Sacc'S}+Ser`SoS(<S.l*Sua,Tas+Te=T-meU Vil*3Dibi,D-+Fa*Leb!Llul&NaNo<N.simoRam~Rc&R RumeRvel*So?SpoTo2E/Ia)Ic}Iede!Ime-I=IrurgoI+r-0AoClismoFr&G$Lind)O|*R}R)siTr>T+di$UffoVet+Vi,2Ass>In~O)2C]Dar@D%eE!n.G$meLl&Lm#Lo!Lpo(L^v#LzaMaMe+M`n@Mo@Mpu.rMu<Nci(Ndur!Nfer`Ngel&NiugeN<s(Nosce!NsumoN^nuoNveg$Per P'<Pp?Pr~poRazzaRda+R%#Rn%eRol/RpoR!@Rs?R.seSm>S+n.Ttu-V#2A.!Avat+E#Ede!Emo(Esci+E+Ice I=,IsiIt>OceO=}Os++Uc?,Us}2Ci!Cu*Gi$Ll#Po/R#!R(!R_Sci$S de:DoI$L`+Meri$Nie/N$(Nz&T#Van^Vve)3Bu|C[n'Ci(Cli$Col*C! D%#Fin{FormeG$Leg&Lfi$Lir'L+M[zaNot#Nt)Pos{Rapa+Riv&RogaScri|Ser Sider'Sume!Tersi_Vo 3Amet)Cemb!Ed)Fe(Ffu(Geri!Gi+,Luv'Nam>N=nziPin P*`Po*Rad&ReRo|RupoSag'Sc! Sf&Sge*Spos S+nzaSu`$ToVa$Vel Vide!Vor#5B*<C[.Ga=,G`LceM#M[~Min&N@*NoRmi!TeT !Vu Zzi=2AgoUi@2Bb'Bit&Ca,NaOmoPl%eRatu):0A$0Ces(CoLissiO$m?0E-I]/I,I r?Uc&2Emon?LiOismoReg'4Abor#Argi!Egan.Enc#E|Ev&F>I}MoSaU(0An#B,`Es(I)O^_Oz'<Pir>U*0Dem>Du)Erg?FasiO.}Tr&Zi`1A^.I*goI(d'O},Pu!0U#!0Ar'BaBo(EdeEmi+Ige!Met>OeOsi_Ran.0Ago$AmeAnimeAudi!CaEmp'Erc{Ib{Ig[.Is.!I OfagoOrt#O(Pan(P!s(S[zaSoTe(Tim&Ton?T)(Ult&0Il>N>Rus]To0ClideoRopa0A(Id[zaIt#Olu Viva:Bbr~Cc[daChi)L]Migl?Na,Nfa-NgoN+s`ReRfal/Ri$(R`]Sc?S (Sul*T%&ToVo*(3Bb!Co/DeG#LpaLt)Mmi=Nde!Nome$Rm[ R)R^,Ssu-S^_T+U@3AbaDuc?FaGur#LoNanzaNest-Ni!O!S},S>Ume2A]<Am[]EboEm`Ori@U[.Uo)2B>Cacc?Co(Der#Gl'La+Lc*!Lgo!Nd[.Net>N?N+=Rb{Rchet+Res+Rm~R='RoR.zzaRz&Sf#S(2A}s(A=Assi$A.l*Eccet+E=+Es]IgoOlli$OndeUga,Ut+2Ci/+Cs?Gg[.Lmi<L_Man.Me|Mo(NeNz'<O]RboRgo<Ro!SoTi,:Bb?$FfeLa.oLli=LoppoMbe)M`Ranz?RboRofa$Rzo<S@|Sol'Str>T Ud'ZeboZzel/3CoLa^=L(Mel*Mm#NeN{!N='No^poRgo2Epar@Iacc'Isa0Al*LdaNep)Oc&Oiel*Or$OveR#Ro<T++Udiz'Ur#Us 2Obu*U^<1Omo0BbaLfM{Mmo<Nf'N=Ver$2Aci,A@Af>AmmoAndeAtt&A_(Az?E}EggeIfo<Ig'InzaOt+Uppo2Adag$A'An Ard&FoId&::0Ern#0O=0Ent>Ill'O*RaR>Roge$2Ie<Na)Nor#4A!Le(Log>Lude!0Bal*Bevu Boc]Bu Ma<Mer(Mol#Pac]Pe PiegoPor P)n+0Al&Arc&At^_Can C[d'Chi$Cisi_Clu(Cont)C)c'CuboDagi<D?Do,Ed{Fat^Fil&Fli|Gagg'Geg$G,seGor@G)s(Nes]O@!Oltr&Ond#Sa$Se|SiemeSonn?Suli=Tas#Te)To=]Tu{Umidi!Vali@VeceV{1Erbo,Not>O.siP~1IdeLandaOn>Rig#Ror&0Ol#O poTer>Titu Tr%e0Al?Er&:::Bb)Birin C}Cer#Cri`Cu=D@veGoMpoNcet+N.r=R@(RgaRingeSt-T[zaTi$TtugaVag=Vo)3Ga,Gge)MboN.zzaNzaO<P!Si_Ss#S T.-,VaVig#3Be)DoEv{L/Matu-Mit&Mpi@Ne&NguaQui@RaR~S}TeTig'V!a5CandaDeG~Mb&Nd-Nge_QuaceR[zoToT.r?5CeCid#Ma}Mi$(NgoPoPpo*SingaS(T :Cab)Cchi=Ce)Cin#Da`G>Gl?G<.G)Iol~LafedeLg-@Lin.(Lsa$L Lumo!NaNc?N@r/Ngi&Nifes N=)Nov-NsardaN^deNubr'PpaR#=Rci!Ret+RmoRsup'Sche-Ssa?S^$Te-s(Tr>/T <Tu)Zur}3And)C}n>Ce=.DesimoDit&GaLassaLisLod?NingeNoN(/Rcur'R[daR*Schi$SeSse!S *Tal*To@T.!3Agol&CaCel'Che,C)boDol*E,Gl'!La$Li.MosaNe-,NiNo!Ri$R^l*Sce/SsivaS Sur&TezzaTig&T-T.n.4Emon>0Del*Dif~Du*Ga$G'LeLos(Nas.)N]Ndi=Ne+r'Ni,No $N(<Nt#Nvi(RaRde!Rs%#St)Tiv#TosegaT V[zaVim[ Zzo5C}CosaFfaGhe|G='La|Li<l*L^p*Mm?N Ove!Ra,SaS]*S~Te_,To:BabboF+Nomet)Rci(R%eRr#Sce!Str&Tu-,Ut~Vigl'3Bu*saC)siGa^_Goz'Mme$Ofi+Re|R_Ssu$Ttu$Ut-,VeV)t>3Cch?NfaTi@5Bi,Ci_DoMeMi=Rd>R`,RvegeseSt-$T&Tiz?Ttur$Vel/5C,oL/Me)O_Tri!Vo/Z?,:Si0Bedi!BligoElis]L'O*So, 0Cas'<Ch'Cid[.Cor!!Cult&RaUl#0Ier$Or&1Fer+Fri!Fusc#0Ge|GiNu$4AndeseFa|I#IvaOg-m`T!0Agg'Bel>B-EgaIss'<0Do(E!IceNi_)O!_,Ta1Er#In'<Pos 1A]*AfoDi<Ecchi$Ef%eFa$Gan>Igi<Izzon.MaMegg'Na^_O*g'R[@Ribi,T[s?T~Za+Zo0A!Cur&MosiPeda,Pi.SaSid&Ta]*Te0I.ReTago$TimoTob!1A,EstI$Ipa)Oc{UnqueVi&3Io:Cche|CeCif>Del/D)<EseGaGi=Lazzi=Les&Lli@LoLudeN@)N<l*O*O=zzoPr~Rabo/Rcel/Re!Rgo*RiRl#Ro/R^!Rv[zaRz?,Ssi_St%}Tac}To*g?TtumeVo<3Cc#Dal&Do=,Gg'Lo(N&Nd%eNi(/Nnu Nomb-Ns&N /PePi+Rbe<R]r(R@n#Rfor&Rgame=R'@Rmes(R$Rp,s(Rsua(Rtug'Rva(S#!Sis+SoS^fe)Ta*T^<Tu/n.Zzo3Ace!An+At^$Cci$CozzaEgaEt-Ffe)G?`Gol'G)LaLife)L*/Lo+Mpan.Ne+N=No*Ogg?OmboRamideRet>Ri.RolisiTo<Zz>2AceboAn&As`A+$E=r'2ChezzaDe)(DismoEs?Ggi&L[+Ligo$Ll%eLmoni.Lpet+L(Lt)=Lve!M%eMo@)N.Po*(Rfi@Ro(Rpo-R!R++SaSi^_Sses(Stul#Tass'Te!2AnzoAssiAt~Eclu(Ed~Efis(Egi#Elie_Eme!E$t&Epar#Es[zaE.s Eval(I`IncipeIv#Ob,`Ocu-Odur!OfumoOge|OlungaOmessaO$meOpos+O)gaO.(OvaUd[.Ug=Ur{0Iche1Bbl>D~Gil#G$LceL{Lsan.Nt&PazzoPil/Ro:99Ad)Al]saAsiE!/O+:C]l D@pp'D~,Dun#Ff~GazzoG'<G$Mar)MingoMoNdag'N l&P#Pi=Pp!(Satu-Schi#S[.Sseg=St!l*TaVvedu 3A,Cepi!Cin Clu+Cond{Cupe)Dd{Dime!Gal#Gist)Go/G!s(Laz'<M&Mo N=Pl~Prime!Put&SaSid[.Spon(S+u)TeTi=Tor~T^f~Voc#3Assun Badi!Bel,B!zzoCar~C]Ceve!C%l#Cor@C!du D>*Dur!Fas&F,s(For`Fug'G&Gett#Ghel*Lass#Lev#Ma<!MbalzoMed'Morch'Nasci+N})NforzoN$_Nom#Nsav{N c]Nunc?Nv[i!Par#Petu Pie$Port&P!saPuli!Sa+Sch'ServaSibi,SoSpe|S )Sult#S_l Tar@Teg$Tm>T)_Un'<VaVer(Vinci+Vol Zo`5BaBot>Bus Cc?CoDagg'De!D{!G{Ll'Mant>Mpe!Nz'Sol&SpoTan.Ton@Tu/Vesc'5BizzoBr~GaLli$Mi<Mo)(O*PeSs&St>:B#Bbi&Bot#Go`Las(Ldatu-Lgem`Liv&Lmo<Lo<Lt&Lu L_Pe!Pi@Por{Race$R}smoR S((Telli.Ti-Tol*Tur$Va=V'Zi#0Adigl'AlzoAnc#Ar-At.!Av&End&Irci&Locc#Occi#Rin&Ruffo<Uff&0Ab)(Ad[zaA/Ambi&Anda*Apo/Ar(A.n&Av#El En>Ett)HedaHie=IarpaI[zaInde!IppoI)ppoI_*Ler&Odel/Olp{Ompar Onfor Opri!Or+Os(<OzzeseRibaRoll&Ru^n'Uder?Ul !Uo/U)Us&0Ebit&Ogan&0C}tu-Con@Da$Gg'/G=l#G!g#Gu{Lci#Let^_L/Lvagg'Mafo)Mbr&MeMin#Mp!N(N^!Pol Qu[zaRa+Rb#Re$R'Rp[.R-gl'Rvi!S^=To/T^`=0Ace*Ald&Am#Arzo(At%#E-IdaIl#IngeOc#Oder&OgoOl^!Orz#Ra|Rutt#Ugg{Um&U(0Abel*Arb#Onfi&Orb'Rass#Uar@1Bi*C]meEr-G/G$!L[z'L/baMbo*Mpat>Mul#Nfon?Ngo*Nist)NoN.siNu(idePar'S`S ,Tu#2It+Ogatu-Ove$0Arr{Emor#En^ E-l@IlzoOnt&Ott#Uss#0Elli!Erv#O@0BbalzoBr'C]r(C?,Da,Ffi|G$Ld#L[<Li@L/zzoLoLubi,Lv[.Mat>M`NdaNe|Nnife)Pi!Ppe(P-Rge!Rpas(Rri(R(R.gg'R_l#Spi)S+T^,0AdaAl/Arge!A /Av[ Azzo/EcieEdi!Eg<!E/tu-E-nzaEs(!Ett-,Ezz#IaIgo*(Ill#I$(I-,L[di@Or^_O(RangaRec&Ron#RuzzoUn^$0Uil*0Ad%&O l#1Abi,Ac]AffaAgn&Amp#Ant'Arnu Ase-Atu E*EppaErzoI,|I`IrpeIva,Izzo(On#Or>RappoReg#Ridu*Rozz&Ru|Ucc&UfoUp[@0B[t)C](Do!Gger{GoL+$On&PerboPpor Rgel#R)g#Ssur)Tu-0Ag&EdeseEgl'El&Enu Ez?IluppoIs+Izze-Ol+Uot&:Bac]Bul#Cci&Citur$LeLis`$Mpo<Nni$RaRdi_Rg#RiffaRp&R+rugaS Tt>Ver=Vo/+Zza3CaCn>Lefo$Me-r'MpoMu N@<Ne)Ns'<N+]*O!`RmeR-zzoRze|SiSser#St#T)T ?3F&Gel/Mb)N P>Pog-foRagg'RoTan'To*Tuban.Z'Zzo<5Cc&L,r&L Mbo/MoNfoNsil/Paz'Po*g?PpaRbaRn&R)<R -S}$Ssi!S+tu-Ta$2Aboc]AcheaAfi/Aged?Alc'Amon Ans{Apa$Ar!As*]Att#AveEcc?Emol'Espo*Ibu Iche]Ifogl'Il*InceaIoIs.zzaItur#Ivel/OmbaO$OppoO|/Ov&Ucc#2Batu-Ff#Lipa$Mul Nis?Rb&Rchi$TaTe/:0Ic#0Cel*Ci(!0I!I^_1FaF%'0Ua,4IsseTim#0A$I,Orismo0Ci<|Ge!Ghe!seI]r$If%#I($I+r'Te0Vo0Upa1Aga$G[zaLo0AnzaA C{Ig$*U-'0Ensi,IlizzoOp?:Can.Ccin#Gabon@Gli#LangaLgoL>L,t+Lo)(Lut&L_/Mpa+Ng&N{(NoN+gg'Nve-Po!Ra$Rc#R?n.S}3Det+DovaDu Ge+,I]*Lc)Li=Llu LoceN#Ndemm?N RaceRba,Rgog=Rif~RoRru}Rt~,Sc~Ssil*S+,Te-$Tri=Tus 3Andan.B-n.C[daChingoCi=nzaDim&Gil?G< Go!LeL/$MiniNc{!O/Pe-Rgo/Ro*goRu,n S](S'<SpoSsu Su-TaTel*T^`VandaVi@Zi&5CeGaLa^,Le!LpeRagi<5L}$::::Mpog=N=Pp#T.-Vor-3Fi)Lan.LoNze)Rbi$3Be|N]R]<T 5L/T>5Cche)Fo*LuPpa\";\nconst checksum = \"0x5c1362d88fd4cf614a96f3234941d29f7d37c08c5292fde03bf62c2db6ff7620\";\n\nlet wordlist: null | LangIt = null;\n\n/**\n *  The [[link-bip39-it]] for [mnemonic phrases](link-bip-39).\n *\n *  @_docloc: api/wordlists\n */\nexport class LangIt extends WordlistOwl {\n\n    /**\n     *  Creates a new instance of the Italian language Wordlist.\n     *\n     *  This should be unnecessary most of the time as the exported\n     *  [[langIt]] should suffice.\n     *\n     *  @_ignore:\n     */\n    constructor() { super(\"it\", words, checksum); }\n\n    /**\n     *  Returns a singleton instance of a ``LangIt``, creating it\n     *  if this is the first time being called.\n     */\n    static wordlist(): LangIt {\n        if (wordlist == null) { wordlist = new LangIt(); }\n        return wordlist;\n    }\n}\n", "import { WordlistOwl } from \"./wordlist-owl.js\";\n\nconst words = \"0arad!ototealirertainrasoent hoandoaR#riareha!aroele'oronul0Aca%AixoAl A%rDuz'El]Er$IsmoO$ R<g(Revi Rig Rup$S*$Solu$Sur=Ut[0Ab#Alm Amp Anh A,Ei.El( En ErvoEss E$naHa.IdezImaI}#Irr Lam LiveOlhidaOmod Opl Ord Um~ Us?0Ap.EgaEnt_Ep$Equ Er-%EsivoEusI<%ItivoJetivoJun$M' Or Qu''UboV(,Vog#0R}ave0As.Er'EtivoIn?Iv` Li$Lu-%R}.0Ach Arr As&/Enci Iliz Io)It#O+R! Res%Rup U d Ul]2O`h Ud Us.1AmedaArmeAstr Av<caB(gueB*oCat+De@EcrimEgr@Er.FaceF*e%GumHeioI Ica%I- Inh Ivi Mof^Oc Pis%T( TitudeUc* Ug UnoUsivoVo0Aci A=rA[loAss BasBi-%EixaEniz I=Is$,Iz!eOl?On$ O_,Ost+P  Pli Pola0Ag+maAlis Arqu@A$m@DaimeElExoG~ Im JoOm&@Ot#Sio,T(i|Uid!eUnci Zol1Ag?Alp Anh#EgoEli=Ert^Es Eti%I$Lau,Lic^OioOn.Os)R-dizRov 0Uec(0AmeAn]A+C^D-%E@Ej Eni$Es)Gilo,GolaMaQuivoRai&Reba%Risc Rob>um S-&T(i&TigoVo[=0F&.Il#P' S?S* So&/Sun$Tr&0Ac#Adu+Al/A[f E End(Er_EuIng'Ir?IvoOl{oRac Revi=RizU&Um0Di$rM-.R>o+TismoT|@Tu 0Ali An%Ar@Ent&Es,I?Is Ul,1Ila1Ar E=Ei%Ulejo:B BosaC&]uCh `C@GagemI<oIl I}e)Ir_Ixis)J~ Le@LizaLsaN&Nd{aN/N'Nque%Ra$Rb#R}es>+c>~/Se#S)n%Ta)Te=rTidaTomTuc Unil]3B(IjoIr^IsebolLd!eLezaLgaLisc Ndi$Ng&aNz(RimbauRl*d>_Sou_XigaZ(_3CoCu=En&Foc&Furc G|naLhe%Mest[Mo$rOlog@OmboOsf(aPol Rr-$Scoi$Sne$SpoSsex$TolaZ _2Ind#OcoOque 2A$BagemC#CejoChec]Ico.L^LetimL]LoMb{oNdeNecoNi)Rb~h>d>e&R+c]V*oXe?2AncoAsaAvezaEuIgaIl/Inc OaOchu+Onze O$Uxo2C]DismoF LeRacoScaS$Z*a:B<aB`oBideBoBri$CauCet^C/r_CiqueDast_De#Fez&IaqueIp'aIxo%J#JuLafrioLc~ Ld{aLibr Lm<%Lo)M^Mbis)MisaMomilaMp<]Mufl Navi&Nc` Ne)NguruN/$Nive%NoaNs#N.Nu=Pac/P`aP* Po.Pric/Pt?PuzRacolRb}oRde&Rec>imb Rn{oRpe%R['>)zRv&/SacoScaSeb[S%loS~oT a)Tiv UleUs?U%l V&oV(na3BolaDil]G}]Lebr L~ Nou+N,N%ioRc Rr#R%'oRvejaTimV^2Aco)Al{aAm#Ap^ArmeAticeAveEfeEg^E'oEqueIco%If[In`oOc&/Ov(UmboU.Uva0CatrizCl}eD!eD['aEn%G<aM-$N$Nz><d>cui$Rurg@T 2A[zaE_Ic OneUbe2A=Ag'Ba@B($rBr C^El/Ent_E,Gum`oIb'IfaIo%L L{aLh(Lid'Lme@L}oLunaM<=Mb* M-.MitivaMov(MplexoMumNc]N=rNec.Nfu,Ng` Nhec(Njug Nsum'Nt+$Nvi%Op( P{oPi?PoQue%lRagemRdi&Rne)R}h>p|&R[ioR%joRuj>voSs-oS%laT}e%U_UveVilZ*]2A%+AvoEcheE=rEmeErEspoI^Im*&Io~oIseItic Os)UaUz{o2B<oEcaId#JoLat+Lm* Lp Ltu+Mpr'Nh#Pi=RativoRr&Rs R$Sp'S% T`o:MascoT 3Ba%rBi.BocheB~h C&queCim&CliveCo%C[.D&Dic#Duz'FesaFum G`oG+uGus.It#Ix La$rLeg#L*e L}gaM<daMit'Moli=Ntis)P-#Pil PoisP[ssaPur Riv>+m SafioSbo.Sc<,S-/Sfi#Sgas%Sigu&SlizeSmam SovaSpesaS)queSvi T&h T-$rT} Tri$UsaV(Vi=Vot#Z-a3Ag+maAle$Da)Fu,Gi.Lat#Lu-%M*u'Nast@Nh{oOceseRe$Sc[)Sf ceSp oSque%Ssip S)n%T?UrnoV(,Vi,rV~g Z(5Br?L|i=M?M*#NativoNz`>m-%Rs&SagemUr#U$r2EnagemIbleOg @2El EndeE$PloQues><%Vi=,:1Lod'O Olog@0Ific It&Uc#1Ei$Etiv 3E.1Ab| Eg(Ei$rEncoEv?Im* Ogi 0B goBol#Br~/Buti=EndaErg'Is,rPat@P-/P*#Polg P[goPurr Ul?0CaixeC-#Ch-%C}t_Deus Doss Faix Fei%FimGaj#G-/Glob Gom#G+x Gu@Jo La.Qu<$Raiz Rol#Rug SaioSe^S*oSop#T<$Te#Tid!eT|.Tr^T~/V(g Vi#Volv(XameX($Xof[Xu$1Id(me0Uip 0E$Gui=Ra)VaVil]0B<j B`$CamaColaCri)Cu)F*geFol F[g Fum#GrimaM&%P<$P`/PigaP}jaP[i)Pum Qu(daTacaT{aTic Tof#T[laTu=Vazi 0AnolIque)0F|i>opeu0Acu Ap| AsivoEntu&Id-%Olu'1Ag(oAl Am* A$Aus$Ces,Ci.Clam Ecu.EmploIb'Ig-%On( P<d'P`'P' Pl< Pos$P[s,P~s T(noT*$T+$:Bric B~o,Ce)Ci&DaDigaIxaL L)Mili Nd<goNf +N$cheRd#R`oR*h>of>p>tu+T@T|V|i)X*aZ-da3Ch#Ijo^I+n%L*oM**oNdaNoR>i#RrugemRv(S%j T&Ud&3ApoB_seC Ch{oGur#L{aL/LmeLtr RmezaSg^Ssu+TaV`aX?Xo2AcidezAm*goAn`aEch^O+Utu Uxo2C&C*/Foc GoGue%IceLg#Lhe$Rj Rmig>noR%ScoSsa2Aga)AldaAngoAscoA%rnoE'aEn%E.IezaI,Itu+On]Ustr U%'a2G'L<oLigemNd NgoNilR?Rio,Tebol:B i$B*e%DoIa$IolaIvo)LegaL/L*]Loc]Nh RagemRfoRg&oRimpoRoup>+faSodu$S$TaTil/Ve)Z`a3L#Le@LoM^M(Mi=N(o,NgivaNi&NomaN_Ologi>?Rm* S,S$r3Nas)Nc<aNg#Raf>*o2Aci&IcoseOb&Orio,2ElaIabaLfeLpe Rdu+Rje)R_S$,T{aV(n 2AcejoAdu&Afi%Al]AmpoAn^Atui$Ave$AxaEgoElh EveIloIs&/I.@Os,O%scoUd#Unhi=U)2AcheA+niAx*imEr[ I Inc/Is#LaLo,Ru:Bi.Rm}@S%V(3C.eRd Res@Si.3A$B(n D+.EnaNoPismoPnosePo%ca5JeLofo%MemNes$Nr#Rm}&Sped 5M|#:Te2E@O,2N|#RejaU<a4E,HaUdi=Um* Ustr 0AgemEd@$En,ErsivoIn-%It?Ort&Pac$Ped'Pl<%P|Pr-saPuneUniz 0Al?Ap$AtivoC-,Ch Cid'Clu'Col|Deci,D'e$Du$rEficazEr-%F<tilFes.F*i$Flam F|m&F+$rG('Ibi=Ici&ImigoJe.Oc-%O=_Ov?OxQuie$Scri$Se$Sist'Spe$rSt& S~$Tac$Tegr&Tim Toc#TrigaVa,rV(noVic$Voc 0Gur%2Ani<oOniz Re&Rit#0CaEn$Ol#Qu{o0Ali<o:N{oNg^N)R ac>dimR_SmimToV&iZida3Jum9An*]Elh^G?I>n&Rr Vem5BaDeuDocaIzLg?L/R#Ris)RoS)::B edaB|&C[C)n%Dril/G )GoaJeMb(M-.M* MpejoNchePid P,R<j>{>gu+S<]St_T(&Ti=V<daVou+Vr?X<%Z(3Ald!eB[G#G-d Gis)IgoIlo Itu+Mb[%MeNh?Ntil]OaSmaS%TivoT['oV VezaVi.3B(&Bi=D( G G{oMi.Mo{oMp?NdaNe N]gemQuidezS)gemSu+T|&V_XaX{a5C?Cu$rJis)MboNaNgeNt+RdeT#T(@Ucu+UsaUv 5ArCidezC_Ne)St[T?Va:CacoCe%Ch#CioD{aDr*]Gna)G[zaI|IsL<d_L]Lo%LucoMiloMo{oMu%N^Nc]Nda$NequimN/,Niv`aNobr NsaN%rNuse Pe#Qu* Rc?Resi>fimRgemR*/Rmi)Ro$RquiseR[coR%loRujoSco%Sm|+SsagemStig Tag&T(noT*&Tu.Xil 3D&]DidaDusaGaf}eIgaL<c@L/rMb_M|i&N*oNosNsagemNt&Rec(Rg~/S^Scl SmoSqui)St[T!eTeo_T+gemX(Xic<o3C_G&]Gr Lag[L- Lh M#N( N/caNist_N|@OloR<%RtiloStur 5Cid!eD(noD~ EdaErIn/I)Ldu+LezaL/L*e%LuscoN)n]Quec><goRcegoR=moR-aSaicoSque%S.daT`TimToTriz5DaI$La)Lh(L.Ndi&Ni=R&h>c/Sc~ SeuSic&:Ci}&D?JaMo_R*>r#Sc(TivaTu[zaV&]Veg Vio3Bl*aB~o,GativaGoci Gri$Rvo,TaUr&VascaVo{o3N N/TidezV` 5B[zaI%IvaMe M*&Rdes%R% T Tici TurnoV`oVil/Vo5Bl#DezM(&Pci&Tr'Vem:0Cec#Edec(JetivoRig#Scu_S%t+T(Tur 0Id-%Io,Orr(Ulis)Up#2Eg<%EnsivaEr-daIc*aUsc#0Iva4Ar@Eo,H Iv{a0B_Ele%Is,It'0D~#E_,Tem1Ci}&Er?On-%OrtunoOs$1ArBi.DemD*&F<a$GasmoG~/I-t&IgemIun=LaTo=xoV&/0Cil S^SoT-.0Imismo0S!@T}oTub_Vi=0El]Ul 1Id Ig- :Ca$Ci-%Co%Ctu D @Dr*/G GodeIn`Ir IsagemLav+Lest+Lhe)Li$Lm^Lpi.Nc^N`aNfle$NquecaN)n&PagaioP`^P'oRaf*>ci&Rd&RedeRtidaSmoSs#S%lTam T-%T* T_noUl^Us 3C~i D& Dest[D@t+D+G^I$r&IxeLeLic<oNcaNdur N{aN]scoNs?N%Rceb(Rfei$Rgun)Ri$Rmit'Rn>plexoRsi<>%nceRucaSc#SquisaS,aTisc 3AdaC#Ed!eGm-$Last+Lh#Lo.M-)Nc`NguimN]No%N.On{oPocaQue%R<h>esRue)Sc S$laT<gaVe%2An)Aque)At*aEbeuUmagemUvi&1Eu0DaE'aEtisaLeg^Lici Lu-%Lvil/M MbaNd( N.@P~o,R)Ssu'St&TeUp U,Vo 2A@Anc]A$AxeEceEd?Efei$Emi Ens Ep  Esil]E%x$Ev-'Ez Ima)IncesaIsmaIv#Oces,Odu$Ofe)Oibi=Oje$Ome%rOpag OsaO%$rOv?2Blic DimL Lm} Ls{aNh&N'PiloRezaX?:99Ad+Ant@Ar$AseEbr EdaEijoEn%Eri=Im}oInaIosque:B<^BiscoCh Ci} Di&I In]IoIvaJ^L#M&Ng(Nhu+P!u+P`PidezPosaQue%Rid!eS<%Scun/Sg Sp?S%'aSur Taz<aTo{a3AlezaAnim Av(Baix B`deBol C#C-%CheioCiboC|d Cru.Cu DeDim'D}daDuzidaEnvioF* Flet'Fog F[scoFugi G&@GimeG+In#I$rJei.LativoM?M-=M|,Nov#P oP`'Ple$Pol/P[saPudi Qu((S-]Sfri Sga.Sid'Solv(Spei$SsacaS)n%Sum'T&/T(T' Tom^T+.V` Vi,rVol)3Ac/CaGidezGo_,M NgueS^ScoS}/5B&oChe=D^DeioDov@E=rLe)M<oNc S#S{aS$TaT{oT*aT~ UcoUpaXo5B_Gi=Go,IvoMoPest[S,:B|Ci ColaCud'DioF'aGaGr^Ib_L^L{oLg#LivaLpic Lsic]L.Lv?Mb Mu+iN Nf}aNgueNid!ePa$Rd>g-$Rje)Tur Ud!eXof}eZ}&3C C~ DaD-$Di#Do,Du$rGm-$G[=Gun=IvaLe$LvagemM<&M-%N?N/rNsu&Nt#P #Rei>*g>+RvoTemb_T|3GiloLhue)Lic}eMetr@Mpat@M~ N&Nc(oNg~ NopseN$ni>-eRiTu#5B(<oB+C|_G_JaLdaLetr L%'oMbrioNa)Nd Neg Nh?NoP+noQue%Rr'R%ioSsegoTaqueT(r V#Z*/5Aviz BidaBm(,B,loBt+'Ca)Ces,CoDes%FixoG?G('Jei$Lfa$M'OrP(i|Plic Pos$Prim'Rd*>fis)Rp[s>[&Rt'Sp'oS%n$:B`aBle%Bu^C/G `aLh(LoLvezM</Mb|imMpaNg-%N$P Pioc>dioRef>j>+xaTuagemUr*oXativoXis)3Atr&C(Ci=Cl#Dio,IaIm Lef}eLh#Mp(oN-%N,rN.Rm&RnoRr-oSeSou+St#ToXtu+Xugo3A+G`aJoloMbr MidezNgi=N%'oRagemT~ 5Al]C]L( LiceM^Mil/N`Ntu+Pe%R>ci=RneioRqueRr!>$S.UcaUp{aX*a2Ab&/Acej Adu$rAfeg Aje$AmaAnc ApoAs{oAt?Av E*oEm(Epid EvoIagemIboIcicloId-%Ilog@Ind!eIploItur Iunf&Oc Ombe)OvaUnfoUque2B~ C<oDoLipaPiRboRm>quesaT` T|i&:7V 3Bigo0HaId!eIf|me3Olog@SoTigaUbu0A=InaUfru':C*aDi G o,I=,LaL-%Lid!eLo[sN)gemQu{oR<d>e)Rr(Sc~ Sil]S,u+Z Zio3A=D Ge.Ic~ L{oLhiceLu=Nce=rNdav&N( Nt[Rb&Rd!eRe?Rg}h>m`/RnizRs R%n%SpaSti=T|i&3Adu$AgemAj Atu+Br?D{aDr @ElaGaG-%Gi G| L ejoNcoNhe)NilOle)R!>tudeSi.S$Tr&V{oZ*/5A=rArG&L<%LeibolL)gemLumo,Nt!e5L$Vuz`a::D[zRope3QueRe.Rife3Ng ::Ng#Rp 3BuL?9Mb Olog@5Mbi=\";\nconst checksum = \"0x2219000926df7b50d8aa0a3d495826b988287df4657fbd100e6fe596c8f737ac\";\n\nlet wordlist: null | LangPt = null;\n\n/**\n *  The [[link-bip39-pt]] for [mnemonic phrases](link-bip-39).\n *\n *  @_docloc: api/wordlists\n */\nexport class LangPt extends WordlistOwl {\n\n    /**\n     *  Creates a new instance of the Portuguese language Wordlist.\n     *\n     *  This should be unnecessary most of the time as the exported\n     *  [[langPt]] should suffice.\n     *\n     *  @_ignore:\n     */\n    constructor() { super(\"pt\", words, checksum); }\n\n    /**\n     *  Returns a singleton instance of a ``LangPt``, creating it\n     *  if this is the first time being called.\n     */\n    static wordlist(): LangPt {\n        if (wordlist == null) { wordlist = new LangPt(); }\n        return wordlist;\n    }\n}\n\n", "import { id } from \"../hash/index.js\";\nimport { assertArgument, toUtf8String } from \"../utils/index.js\";\n\nimport { Wordlist } from \"./wordlist.js\";\n\n\nconst data = \"}aE#4A=Yv&co#4N#6G=cJ&SM#66|/Z#4t&kn~46#4K~4q%b9=IR#7l,mB#7W_X2*dl}Uo~7s}Uf&Iw#9c&cw~6O&H6&wx&IG%v5=IQ~8a&Pv#47$PR&50%Ko&QM&3l#5f,D9#4L|/H&tQ;v0~6n]nN<di,AM=W5%QO&ka&ua,hM^tm=zV=JA=wR&+X]7P&NB#4J#5L|/b[dA}tJ<Do&6m&u2[U1&Kb.HM&mC=w0&MW<rY,Hq#6M}QG,13&wP}Jp]Ow%ue&Kg<HP<D9~4k~9T&I2_c6$9T#9/[C5~7O~4a=cs&O7=KK=An&l9$6U$8A&uD&QI|/Y&bg}Ux&F2#6b}E2&JN&kW&kp=U/&bb=Xl<Cj}k+~5J#6L&5z&9i}b4&Fo,ho(X0_g3~4O$Fz&QE<HN=Ww]6/%GF-Vw=tj&/D&PN#9g=YO}cL&Of&PI~5I&Ip=vU=IW#9G;0o-wU}ss&QR<BT&R9=tk$PY_dh&Pq-yh]7T,nj.Xu=EP&76=cI&Fs*Xg}z7$Gb&+I=DF,AF=cA}rL#7j=Dz&3y<Aa$52=PQ}b0(iY$Fa}oL&xV#6U=ec=WZ,xh%RY<dp#9N&Fl&44=WH*A7=sh&TB&8P=07;u+&PK}uh}J5#72)V/=xC,AB$k0&f6;1E|+5=1B,3v]6n&wR%b+&xx]7f=Ol}fl;+D^wG]7E;nB;uh^Ir&l5=JL,nS=cf=g5;u6|/Q$Gc=MH%Hg#5d%M6^86=U+$Gz,l/,ir^5y&Ba&/F-IY&FI&be%IZ#77&PW_Nu$kE(Yf&NX]7Z,Jy&FJ(Xo&Nz#/d=y7&MX<Ag}Z+;nE]Dt(iG#4D=13&Pj~4c%v8&Zo%OL&/X#4W<HR&ie~6J_1O(Y2=y5=Ad*cv_eB#6k&PX:BU#7A;uk&Ft&Fx_dD=U2;vB=U5=4F}+O&GN.HH:9s=b0%NV(jO&IH=JT}Z9=VZ<Af,Kx^4m&uJ%c6,6r;9m#+L}cf%Kh&F3~4H=vP}bu,Hz|++,1w]nv}k6;uu$jw*Kl*WX&uM[x7&Fr[m7$NO&QN]hu=JN}nR^8g#/h(ps|KC;vd}xz=V0}p6&FD$G1#7K<bG_4p~8g&cf;u4=tl}+k%5/}fz;uw<cA=u1}gU}VM=LJ=eX&+L&Pr#4U}p2:nC,2K]7H:jF&9x}uX#9O=MB<fz~8X~5m&4D&kN&u5%E/(h7(ZF&VG<de(qM|/e-Wt=3x(a+,/R]f/&ND$Ro&nU}0g=KA%kH&NK$Ke<dS}cB&IX~5g$TN]6m=Uv,Is&Py=Ef%Kz#+/%bi&+A<F4$OG&4C&FL#9V<Zk=2I_eE&6c]nw&kq$HG}y+&A8$P3}OH=XP]70%IS(AJ_gH%GZ&tY&AZ=vb~6y&/r=VI=Wv<Zi=fl=xf&eL}c8}OL=MJ=g8$F7=YT}9u=0+^xC}JH&nL^N0~4T]K2,Cy%OC#6s;vG(AC^xe^cG&MF}Br#9P;wD-7h$O/&xA}Fn^PC]6i]7G&8V$Qs;vl(TB~73~4l<mW&6V=2y&uY&+3)aP}XF;LP&kx$wU=t7;uy<FN&lz)7E=Oo*Y+;wI}9q}le;J6&Ri&4t&Qr#8B=cb&vG=J5|Ql(h5<Yy~4+}QD,Lx=wn%K/&RK=dO&Pw,Q9=co%4u;9u}g0@6a^4I%b0=zo|/c&tX=dQ=OS#+b=yz_AB&wB&Pm=W9$HP_gR=62=AO=ti=hI,oA&jr&dH=tm&b6$P2(x8=zi;nG~7F;05]0n[Ix&3m}rg=Xp=cd&uz]7t;97=cN;vV<jf&FF&F1=6Q&Ik*Kk&P4,2z=fQ]7D&3u,H0=d/}Uw<ZN<7R}Kv;0f$H7,MD]7n$F0#88~9Z%da=by;+T#/u=VF&fO&kr^kf<AB]sU,I5$Ng&Pz;0i&QD&vM=Yl:BM;nJ_xJ]U7&Kf&30,3f|Z9*dC)je_jA&Q4&Kp$NH(Yz#6S&Id%Ib=KX,AD=KV%dP}tW&Pk^+E_Ni=cq,3R}VZ(Si=b+}rv;0j}rZ]uA,/w(Sx&Jv$w9&4d&wE,NJ$Gy=J/]Ls#7k<ZQ<Y/&uj]Ov$PM;v3,2F&+u:up=On&3e,Jv;90=J+&Qm]6q}bK#+d~8Y(h2]hA;99&AS=I/}qB&dQ}yJ-VM}Vl&ui,iB&G3|Dc]7d=eQ%dX%JC_1L~4d^NP;vJ&/1)ZI#7N]9X[bQ&PL=0L(UZ,Lm&kc&IR}n7(iR<AQ<dg=33=vN}ft}au]7I,Ba=x9=dR~6R&Tq=Xi,3d$Nr&Bc}DI&ku&vf]Dn,/F&iD,Ll&Nw=0y&I7=Ls=/A&tU=Qe}Ua&uk&+F=g4=gh=Vj#+1&Qn}Uy*44#5F,Pc&Rz*Xn=oh=5W;0n_Nf(iE<Y7=vr=Zu]oz#5Z%mI=kN=Bv_Jp(T2;vt_Ml<FS&uI=L/&6P]64$M7}86<bo%QX(SI%IY&VK=Al&Ux;vv;ut*E/%uh<ZE|O3,M2(yc]yu=Wk&tp:Ex}hr,Cl&WE)+Z=8U}I2_4Q,hA_si=iw=OM=tM=yZ%Ia=U7;wT}b+;uo=Za}yS!5x}HD}fb#5O_dA;Nv%uB(yB;01(Sf}Fk;v7}Pt#8v<mZ#7L,/r&Pl~4w&f5=Ph$Fw_LF&8m,bL=yJ&BH}p/*Jn}tU~5Q;wB(h6]Df]8p^+B;E4&Wc=d+;Ea&bw$8C&FN,DM=Yf}mP~5w=fT#6V=mC=Fi=AV}jB&AN}lW}aH#/D)dZ;hl;vE}/7,CJ;31&w8,hj%u9_Js=jJ&4M~8k=TN&eC}nL&uc-wi&lX}dj=Mv=e2#6u=cr$uq$6G]8W}Jb:nm=Yg<b3(UA;vX&6n&xF=KT,jC,De&R8&oY=Zv&oB]7/=Z2&Oa}bf,hh(4h^tZ&72&Nx;D2&xL~5h~40)ZG)h+=OJ&RA]Bv$yB=Oq=df,AQ%Jn}OJ;11,3z&Tl&tj;v+^Hv,Dh(id=s+]7N&N3)9Q~8f,S4=uW=w4&uX,LX&3d]CJ&yp&8x<b2_do&lP=y/<cy_dG=Oi=7R(VH(lt_1T,Iq_AA;12^6T%k6#8K[B1{oO<AU[Bt;1b$9S&Ps<8T=St{bY,jB(Zp&63&Uv$9V,PM]6v&Af}zW[bW_oq}sm}nB&Kq&gC&ff_eq_2m&5F&TI}rf}Gf;Zr_z9;ER&jk}iz_sn<BN~+n&vo=Vi%97|ZR=Wc,WE&6t]6z%85(ly#84=KY)6m_5/=aX,N3}Tm&he&6K]tR_B2-I3;u/&hU&lH<AP=iB&IA=XL;/5&Nh=wv<BH#79=vS=zl<AA=0X_RG}Bw&9p$NW,AX&kP_Lp&/Z(Tc]Mu}hs#6I}5B&cI<bq&H9#6m=K9}vH(Y1(Y0#4B&w6,/9&gG<bE,/O=zb}I4_l8<B/;wL%Qo<HO[Mq=XX}0v&BP&F4(mG}0i}nm,EC=9u{I3,xG&/9=JY*DK&hR)BX=EI=cx=b/{6k}yX%A+&wa}Xb=la;wi^lL;0t}jo&Qb=xg=XB}iO<qo{bR=NV&8f=a0&Jy;0v=uK)HK;vN#6h&jB(h/%ud&NI%wY.X7=Pt}Cu-uL&Gs_hl%mH,tm]78=Lb^Q0#7Y=1u<Bt&+Q=Co_RH,w3;1e}ux<aU;ui}U3&Q5%bt]63&UQ|0l&uL}O7&3o,AV&dm|Nj(Xt*5+(Uu&Hh(p7(UF=VR=Bp^Jl&Hd[ix)9/=Iq]C8<67]66}mB%6f}bb}JI]8T$HA}db=YM&pa=2J}tS&Y0=PS&y4=cX$6E,hX,XP&nR;04,FQ&l0&Vm_Dv#5Y~8Z=Bi%MA]6x=JO:+p,Az&9q,Hj~6/}SD=K1:EJ}nA;Qo#/E]9R,Ie&6X%W3]61&v4=xX_MC=0q;06(Xq=fs}IG}Dv=0l}o7$iZ;9v&LH&DP-7a&OY,SZ,Kz,Cv&dh=fx|Nh,F/~7q=XF&w+;9n&Gw;0h}Z7<7O&JK(S7&LS<AD<ac=wo<Dt&zw%4B=4v#8P;9o~6p*vV=Tm,Or&I6=1q}nY=P0=gq&Bl&Uu,Ch%yb}UY=zh}dh}rl(T4_xk(YA#8R*xH,IN}Jn]7V}C4&Ty}j3]7p=cL=3h&wW%Qv<Z3=f0&RI&+S(ic_zq}oN&/Y=z1;Td=LW=0e=OI(Vc,+b^ju(UL;0r:Za%8v=Rp=zw&58&73&wK}qX]6y&8E)a2}WR=wP^ur&nQ<cH}Re=Aq&wk}Q0&+q=PP,Gc|/d^k5,Fw]8Y}Pg]p3=ju=ed}r5_yf&Cs]7z$/G<Cm&Jp&54_1G_gP_Ll}JZ;0u]k8_7k(Sg]65{9i=LN&Sx&WK,iW&fD&Lk{9a}Em-9c#8N&io=sy]8d&nT&IK(lx#7/$lW(Td<s8~49,3o<7Y=MW(T+_Jr&Wd,iL}Ct=xh&5V;v4&8n%Kx=iF&l2_0B{B+,If(J0,Lv;u8=Kx-vB=HC&vS=Z6&fU&vE^xK;3D=4h=MR#45:Jw;0d}iw=LU}I5=I0]gB*im,K9}GU,1k_4U&Tt=Vs(iX&lU(TF#7y,ZO}oA&m5#5P}PN}Uz=hM<B1&FB<aG,e6~7T<tP(UQ_ZT=wu&F8)aQ]iN,1r_Lo&/g:CD}84{J1_Ki&Na&3n$jz&FE=dc;uv;va}in}ll=fv(h1&3h}fp=Cy}BM(+E~8m}lo%v7=hC(T6$cj=BQ=Bw(DR,2j=Ks,NS|F+;00=fU=70}Mb(YU;+G&m7&hr=Sk%Co]t+(X5_Jw}0r}gC(AS-IP&QK<Z2#8Q$WC]WX}T2&pG_Ka,HC=R4&/N;Z+;ch(C7,D4$3p_Mk&B2$8D=n9%Ky#5z(CT&QJ#7B]DC]gW}nf~5M;Iw#80}Tc_1F#4Z-aC}Hl=ph=fz,/3=aW}JM}nn;DG;vm}wn,4P}T3;wx&RG$u+}zK=0b;+J_Ek{re<aZ=AS}yY#5D]7q,Cp}xN=VP*2C}GZ}aG~+m_Cs=OY#6r]6g<GS}LC(UB=3A=Bo}Jy<c4}Is;1P<AG}Op<Z1}ld}nS=1Z,yM&95&98=CJ(4t:2L$Hk=Zo}Vc;+I}np&N1}9y=iv}CO*7p=jL)px]tb^zh&GS&Vl%v/;vR=14=zJ&49|/f]hF}WG;03=8P}o/&Gg&rp;DB,Kv}Ji&Pb;aA^ll(4j%yt}+K$Ht#4y&hY]7Y<F1,eN}bG(Uh%6Z]t5%G7;+F_RE;it}tL=LS&Da=Xx(S+(4f=8G=yI}cJ}WP=37=jS}pX}hd)fp<A8=Jt~+o$HJ=M6}iX=g9}CS=dv=Cj(mP%Kd,xq|+9&LD(4/=Xm&QP=Lc}LX&fL;+K=Op(lu=Qs.qC:+e&L+=Jj#8w;SL]7S(b+#4I=c1&nG_Lf&uH;+R)ZV<bV%B/,TE&0H&Jq&Ah%OF&Ss(p2,Wv&I3=Wl}Vq;1L&lJ#9b_1H=8r=b8=JH(SZ=hD=J2#7U,/U#/X~6P,FU<eL=jx,mG=hG=CE&PU=Se(qX&LY=X6=y4&tk&QQ&tf=4g&xI}W+&mZ=Dc#7w}Lg;DA;wQ_Kb(cJ=hR%yX&Yb,hw{bX_4X;EP;1W_2M}Uc=b5(YF,CM&Tp^OJ{DD]6s=vF=Yo~8q}XH}Fu%P5(SJ=Qt;MO]s8<F3&B3&8T(Ul-BS*dw&dR<87}/8]62$PZ]Lx<Au}9Q]7c=ja=KR,Go,Us&v6(qk}pG&G2=ev^GM%w4&H4]7F&dv]J6}Ew:9w=sj-ZL}Ym$+h(Ut(Um~4n=Xs(U7%eE=Qc_JR<CA#6t<Fv|/I,IS,EG<F2(Xy$/n<Fa(h9}+9_2o&N4#7X<Zq|+f_Dp=dt&na,Ca=NJ)jY=8C=YG=s6&Q+<DO}D3=xB&R1(lw;Qn<bF(Cu|/B}HV=SS&n7,10&u0]Dm%A6^4Q=WR(TD=Xo<GH,Rj(l8)bP&n/=LM&CF,F5&ml=PJ;0k=LG=tq,Rh,D6@4i=1p&+9=YC%er_Mh;nI;0q=Fw]80=xq=FM$Gv;v6&nc;wK%H2&Kj;vs,AA=YP,66}bI(qR~5U=6q~4b$Ni=K5.X3$So&Iu(p+]8G=Cf=RY(TS_O3(iH&57=fE=Dg_Do#9z#7H;FK{qd_2k%JR}en&gh_z8;Rx}9p<cN_Ne,DO;LN_7o~/p=NF=5Y}gN<ce<C1,QE]Wv=3u<BC}GK]yq}DY&u/_hj=II(pz&rC,jV&+Z}ut=NQ;Cg-SR_ZS,+o=u/;Oy_RK_QF(Fx&xP}Wr&TA,Uh&g1=yr{ax[VF$Pg(YB;Ox=Vy;+W(Sp}XV%dd&33(l/]l4#4Y}OE=6c=bw(A7&9t%wd&N/&mo,JH&Qe)fm=Ao}fu=tH\";\nconst deltaData = \"FAZDC6BALcLZCA+GBARCW8wNCcDDZ8LVFBOqqDUiou+M42TFAyERXFb7EjhP+vmBFpFrUpfDV2F7eB+eCltCHJFWLFCED+pWTojEIHFXc3aFn4F68zqjEuKidS1QBVPDEhE7NA4mhMF7oThD49ot3FgtzHFCK0acW1x8DH1EmLoIlrWFBLE+y5+NA3Cx65wJHTaEZVaK1mWAmPGxgYCdxwOjTDIt/faOEhTl1vqNsKtJCOhJWuio2g07KLZEQsFBUpNtwEByBgxFslFheFbiEPvi61msDvApxCzB6rBCzox7joYA5UdDc+Cb4FSgIabpXFAj3bjkmFAxCZE+mD/SFf/0ELecYCt3nLoxC6WEZf2tKDB4oZvrEmqFkKk7BwILA7gtYBpsTq//D4jD0F0wEB9pyQ1BD5Ba0oYHDI+sbDFhvrHXdDHfgFEIJLi5r8qercNFBgFLC4bo5ERJtamWBDFy73KCEb6M8VpmEt330ygCTK58EIIFkYgF84gtGA9Uyh3m68iVrFbWFbcbqiCYHZ9J1jeRPbL8yswhMiDbhEhdNoSwFbZrLT740ABEqgCkO8J1BLd1VhKKR4sD1yUo0z+FF59Mvg71CFbyEhbHSFBKEIKyoQNgQppq9T0KAqePu0ZFGrXOHdKJqkoTFhYvpDNyuuznrN84thJbsCoO6Cu6Xlvntvy0QYuAExQEYtTUBf3CoCqwgGFZ4u1HJFzDVwEy3cjcpV4QvsPaBC3rCGyCF23o4K3pp2gberGgFEJEHo4nHICtyKH2ZqyxhN05KBBJIQlKh/Oujv/DH32VrlqFdIFC7Fz9Ct4kaqFME0UETLprnN9kfy+kFmtQBB0+5CFu0N9Ij8l/VvJDh2oq3hT6EzjTHKFN7ZjZwoTsAZ4Exsko6Fpa6WC+sduz8jyrLpegTv2h1EBeYpLpm2czQW0KoCcS0bCVXCmuWJDBjN1nQNLdF58SFJ0h7i3pC3oEOKy/FjBklL70XvBEEIWp2yZ04xObzAWDDJG7f+DbqBEA7LyiR95j7MDVdDViz2RE5vWlBMv5e4+VfhP3aXNPhvLSynb9O2x4uFBV+3jqu6d5pCG28/sETByvmu/+IJ0L3wb4rj9DNOLBF6XPIODr4L19U9RRofAG6Nxydi8Bki8BhGJbBAJKzbJxkZSlF9Q2Cu8oKqggB9hBArwLLqEBWEtFowy8XK8bEyw9snT+BeyFk1ZCSrdmgfEwFePTgCjELBEnIbjaDDPJm36rG9pztcEzT8dGk23SBhXBB1H4z+OWze0ooFzz8pDBYFvp9j9tvFByf9y4EFdVnz026CGR5qMr7fxMHN8UUdlyJAzlTBDRC28k+L4FB8078ljyD91tUj1ocnTs8vdEf7znbzm+GIjEZnoZE5rnLL700Xc7yHfz05nWxy03vBB9YGHYOWxgMQGBCR24CVYNE1hpfKxN0zKnfJDmmMgMmBWqNbjfSyFCBWSCGCgR8yFXiHyEj+VtD1FB3FpC1zI0kFbzifiKTLm9yq5zFmur+q8FHqjoOBWsBPiDbnCC2ErunV6cJ6TygXFYHYp7MKN9RUlSIS8/xBAGYLzeqUnBF4QbsTuUkUqGs6CaiDWKWjQK9EJkjpkTmNCPYXL\";\n\n\nconst _wordlist: Record<string, null | Array<string>> = {\n    zh_cn: null,\n    zh_tw: null\n}\n\nconst Checks: Record<string, string> = {\n    zh_cn: \"0x17bcc4d8547e5a7135e365d1ab443aaae95e76d8230c2782c67305d4f21497a1\",\n    zh_tw: \"0x51e720e90c7b87bec1d70eb6e74a21a449bd3ec9c020b01d3a40ed991b60ce5d\"\n}\n\nconst codes = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nconst style = \"~!@#$%^&*_-=[]{}|;:,.()<>?\"\n\nfunction loadWords(locale: string): Array<string> {\n    if (_wordlist[locale] != null) { return _wordlist[locale] as Array<string>; }\n\n    const wordlist: Array<string> = [];\n\n    let deltaOffset = 0;\n    for (let i = 0; i < 2048; i++) {\n        const s = style.indexOf(data[i * 3]);\n        const bytes = [\n            228 + (s >> 2),\n            128 + codes.indexOf(data[i * 3 + 1]),\n            128 + codes.indexOf(data[i * 3 + 2]),\n        ];\n\n        if (locale === \"zh_tw\") {\n            const common = s % 4;\n            for (let i = common; i < 3; i++) {\n                bytes[i] = codes.indexOf(deltaData[deltaOffset++]) + ((i == 0) ? 228: 128);\n            }\n        }\n\n        wordlist.push(toUtf8String(new Uint8Array(bytes)));\n    }\n\n    // Verify the computed list matches the official list\n    const checksum = id(wordlist.join(\"\\n\") + \"\\n\");\n    /* c8 ignore start */\n    if (checksum !== Checks[locale]) {\n        throw new Error(`BIP39 Wordlist for ${ locale } (Chinese) FAILED`);\n    }\n    /* c8 ignore stop */\n\n    _wordlist[locale] = wordlist;\n\n    return wordlist;\n}\n\nconst wordlists: Record<string, LangZh> = { };\n\n/**\n *  The [[link-bip39-zh_cn]] and [[link-bip39-zh_tw]] for\n *  [mnemonic phrases](link-bip-39).\n *\n *  @_docloc: api/wordlists\n */\nexport class LangZh extends Wordlist {\n\n    /**\n     *  Creates a new instance of the Chinese language Wordlist for\n     *  the %%dialect%%, either ``\"cn\"`` or ``\"tw\"`` for simplified\n     *  or traditional, respectively.\n     *\n     *  This should be unnecessary most of the time as the exported\n     *  [[langZhCn]] and [[langZhTw]] should suffice.\n     *\n     *  @_ignore:\n     */\n    constructor(dialect: string) { super(\"zh_\" + dialect); }\n\n    getWord(index: number): string {\n        const words = loadWords(this.locale);\n        assertArgument(index >= 0 && index < words.length,\n            `invalid word index: ${ index }`, \"index\", index);\n        return words[index];\n    }\n\n    getWordIndex(word: string): number {\n        return loadWords(this.locale).indexOf(word);\n    }\n\n    split(phrase: string): Array<string> {\n        phrase = phrase.replace(/(?:\\u3000| )+/g, \"\");\n        return phrase.split(\"\");\n    }\n\n    /**\n     *  Returns a singleton instance of a ``LangZh`` for %%dialect%%,\n     *  creating it if this is the first time being called.\n     *\n     *  Use the %%dialect%% ``\"cn\"`` or ``\"tw\"`` for simplified or\n     *  traditional, respectively.\n     */\n    static wordlist(dialect: string): LangZh {\n        if (wordlists[dialect] == null) {\n            wordlists[dialect] = new LangZh(dialect);\n        }\n        return wordlists[dialect];\n    }\n}\n"],
  "mappings": "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,eAAgB,CACd,YAAa,mBACf,EACA,aAAc,CACZ,YAAa,uBACf,EACA,eAAgB,CACd,YAAa,kBACf,EACA,YAAa,CACX,YAAa,2BACf,EACA,YAAa,CACX,YAAa,uBACf,EACA,YAAa,CACX,YAAa,gBACf,EACA,YAAa,CACX,YAAa,yBACf,EACA,YAAa,CACX,YAAa,kBACf,CACF,CACF,EAAG,CACD,GAAI,SACJ,QAAS,CACP,UAAW,mBACX,mBAAoB,+BACpB,qBAAsB,iBACtB,KAAM,SACN,kBAAmB,GACnB,aAAc,EAChB,EACA,YAAa,qBACb,QAAS,CACP,gBAAiB,CACf,YAAa,sBACf,EACA,aAAc,CACZ,YAAa,iBACf,EACA,iBAAkB,CAChB,YAAa,iBACf,CACF,CACF,EAAG,CACD,GAAI,WACJ,QAAS,CACP,UAAW,eACX,mBAAoB,2BACpB,qBAAsB,iBACtB,KAAM,WACN,kBAAmB,GACnB,aAAc,EAChB,EACA,YAAa,8BACb,QAAS,CACP,iBAAkB,CAChB,YAAa,cACf,CACF,CACF,EAAG,CACD,GAAI,UACJ,QAAS,CACP,UAAW,aACX,mBAAoB,iBACpB,qBAAsB,gBACtB,KAAM,UACN,kBAAmB,GACnB,aAAc,EAChB,EACA,YAAa,2BACb,QAAS,CACP,iBAAkB,CAChB,YAAa,uBACf,EACA,gBAAiB,CACf,YAAa,aACf,EACA,gBAAiB,CACf,YAAa,aACf,CACF,CACF,EAAG,CACD,GAAI,YACJ,QAAS,CACP,UAAW,gBACX,mBAAoB,iBACpB,qBAAsB,iBACtB,KAAM,YACN,kBAAmB,GACnB,aAAc,EAChB,EACA,YAAa,4BACb,QAAS,CACP,mBAAoB,CAClB,YAAa,yBACf,EACA,iBAAkB,CAChB,YAAa,qBACf,CACF,CACF,EAAG,CACD,GAAI,YACJ,QAAS,CACP,UAAW,iBACX,mBAAoB,yBACpB,qBAAsB,iBACtB,KAAM,YACN,kBAAmB,GACnB,aAAc,EAChB,EACA,YAAa,4BACb,QAAS,CACP,mBAAoB,CAClB,YAAa,yBACf,EACA,iBAAkB,CAChB,YAAa,cACf,CACF,CACF,EAAG,CA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AY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,UAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,UAAY,UAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,SAAU,EACpgpgpgGC,IAAK,CAAC,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,SAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,SAAY,WAAY,UAAY,WAAY,UAAY,WAAY,SAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,EAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,SAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,UAAY,UAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,SAAU,EAGpgpgpgpgGC,IAAK,CAAC,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,SAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,SAAY,WAAY,SAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,SAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,EAAY,WAAY,UAAY,UAAY,WAAY,UAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,UAAY,U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",
  "names": ["createRequire", "path", "url", "init_cjs_shim", "__esmMin", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "HttpAuthLocation", "HttpApiKeyAuthLocation", "EndpointURLScheme", "AlgorithmId", "getChecksumConfiguration", "runtimeConfig", "checksumAlgorithms", "algo", "resolveChecksumRuntimeConfig", "clientConfig", "checksumAlgorithm", "getDefaultClientConfiguration", "resolveDefaultRuntimeConfig", "config", "FieldPosition", "SMITHY_CONTEXT_KEY", "IniSectionType", "RequestHandlerProtocol", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "types", "getHttpHandlerExtensionConfiguration", "runtimeConfig", "handler", "key", "value", "resolveHttpHandlerRuntimeConfig", "httpHandlerExtensionConfiguration", "Field", "name", "kind", "values", "v", "Fields", "fields", "encoding", "field", "HttpRequest", "_HttpRequest", "options", "request", "cloned", "cloneQuery", "req", "query", "carry", "paramName", "param", "HttpResponse", "response", "resp", "isValidHostname", "hostname", "require_dist_cjs", "__commonJSMin", "exports", "module", "init_cjs_shim", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__name", "target", "value", "__export", "all", "name", "__copyProps", "to", "from", "except", "desc", "key", "__toCommonJS", "mod", "index_exports", "getHostHeaderPlugin", "hostHeaderMiddleware", "hostHeaderMiddlewareOptions", "resolveHostHeaderConfig", "import_protocol_http", "input", "options", "next", "args", "request", "handlerProtocol", "host", "clientStack", "require_dist_cjs", "__commonJSMin", "exports", "module", "init_cjs_shim", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__name", "target", "value", "__export", "all", "name", "__copyProps", "to", "from", "except", "desc", "key", "__toCommonJS", "mod", "index_exports", "getLoggerPlugin", "loggerMiddleware", "loggerMiddlewareOptions", "next", "context", "args", "response", "clientName", "commandName", "logger", "dynamoDbDocumentClientOptions", "overrideInputFilterSensitiveLog", "overrideOutputFilterSensitiveLog", "inputFilterSensitiveLog", "outputFilterSensitiveLog", "$metadata", "outputWithoutMetadata", "error", "options", "clientStack", "require_invoke_store", "__commonJSMin", "exports", "init_cjs_shim", "async_hooks_1", "noGlobalAwsLambda", "PROTECTED_KEYS", "InvokeStoreImpl", "context", "fn", "key", "value", "instance", "require_recursionDetectionMiddleware", "__commonJSMin", "exports", "init_cjs_shim", "lambda_invoke_store_1", "protocol_http_1", "TRACE_ID_HEADER_NAME", "ENV_LAMBDA_FUNCTION_NAME", "ENV_TRACE_ID", "recursionDetectionMiddleware", "next", "args", "request", "traceIdHeader", "h", "functionName", "traceIdFromEnv", "traceId", "nonEmptyString", "str", "require_dist_cjs", "__commonJSMin", "exports", "module", "init_cjs_shim", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__name", "target", "value", "__export", "all", "name", "__copyProps", "to", "from", "except", "desc", "key", "__reExport", "mod", "secondTarget", "__toCommonJS", "index_exports", "getRecursionDetectionPlugin", "recursionDetectionMiddlewareOptions", "import_recursionDetectionMiddleware", "options", "clientStack", "import_types", "getSmithyContext", "init_getSmithyContext", "__esmMin", "init_cjs_shim", "context", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "types", "getSmithyContext", "context", "normalizeProvider", "input", "promisified", "resolveAuthOptions", "init_resolveAuthOptions", "__esmMin", "init_cjs_shim", "candidateAuthOptions", "authSchemePreference", "preferredAuthOptions", "preferredSchemeName", "candidateAuthOption", "schemeId", "convertHttpAuthSchemesToMap", "httpAuthSchemes", "map", "scheme", "import_util_middleware", "httpAuthSchemeMiddleware", "init_httpAuthSchemeMiddleware", "__esmMin", "init_cjs_shim", "init_resolveAuthOptions", "config", "mwOptions", "next", "context", "args", "options", "authSchemePreference", "resolvedOptions", "resolveAuthOptions", "authSchemes", "smithyContext", "failureReasons", "option", "identityProvider", "identityProperties", "signingProperties", "httpAuthSchemeEndpointRuleSetMiddlewareOptions", "getHttpAuthSchemeEndpointRuleSetPlugin", "init_getHttpAuthSchemeEndpointRuleSetPlugin", "__esmMin", "init_cjs_shim", "init_httpAuthSchemeMiddleware", "config", "httpAuthSchemeParametersProvider", "identityProviderConfigProvider", "clientStack", "httpAuthSchemeMiddleware", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "protocolHttp", "deserializerMiddleware", "options", "deserializer", "next", "context", "args", "response", "parsed", "error", "hint", "headers", "headerEntries", "findHeader", "pattern", "k", "serializerMiddleware", "serializer", "endpointConfig", "endpoint", "request", "deserializerMiddlewareOption", "serializerMiddlewareOption", "getSerdePlugin", "config", "commandStack", "import_middleware_serde", "httpAuthSchemeMiddlewareOptions", "getHttpAuthSchemePlugin", "init_getHttpAuthSchemePlugin", "__esmMin", "init_cjs_shim", "init_httpAuthSchemeMiddleware", "config", "httpAuthSchemeParametersProvider", "identityProviderConfigProvider", "clientStack", "httpAuthSchemeMiddleware", "init_middleware_http_auth_scheme", "__esmMin", "init_cjs_shim", "init_httpAuthSchemeMiddleware", "init_getHttpAuthSchemeEndpointRuleSetPlugin", "init_getHttpAuthSchemePlugin", "import_protocol_http", "import_util_middleware", "defaultErrorHandler", "defaultSuccessHandler", "httpSigningMiddleware", "init_httpSigningMiddleware", "__esmMin", "init_cjs_shim", "signingProperties", "error", "httpResponse", "config", "next", "context", "args", "scheme", "identity", "signer", "output", "httpSigningMiddlewareOptions", "getHttpSigningPlugin", "init_getHttpSigningMiddleware", "__esmMin", "init_cjs_shim", "init_httpSigningMiddleware", "config", "clientStack", "httpSigningMiddleware", "init_middleware_http_signing", "__esmMin", "init_cjs_shim", "init_httpSigningMiddleware", "init_getHttpSigningMiddleware", "normalizeProvider", "init_normalizeProvider", "__esmMin", "init_cjs_shim", "input", "promisified", "createPaginator", "ClientCtor", "CommandCtor", "inputTokenName", "outputTokenName", "pageSizeTokenName", "config", "input", "additionalArguments", "_input", "token", "hasNext", "page", "makePagedClientRequest", "prevToken", "get", "init_createPaginator", "__esmMin", "init_cjs_shim", "client", "withCommand", "_", "args", "command", "fromObject", "path", "cursor", "pathComponents", "step", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "isArrayBuffer", "arg", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "isArrayBuffer", "buffer", "fromArrayBuffer", "input", "offset", "length", "fromString", "encoding", "require_fromBase64", "__commonJSMin", "exports", "init_cjs_shim", "util_buffer_from_1", "BASE64_REGEX", "fromBase64", "input", "buffer", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "utilBufferFrom", "fromUtf8", "input", "buf", "toUint8Array", "data", "toUtf8", "require_toBase64", "__commonJSMin", "exports", "init_cjs_shim", "util_buffer_from_1", "util_utf8_1", "toBase64", "_input", "input", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "fromBase64", "toBase64", "k", "require_ChecksumStream", "__commonJSMin", "exports", "init_cjs_shim", "util_base64_1", "stream_1", "ChecksumStream", "expectedChecksum", "checksum", "source", "checksumSourceLocation", "base64Encoder", "size", "chunk", "encoding", "callback", "e", "digest", "received", "require_stream_type_check", "__commonJSMin", "exports", "init_cjs_shim", "isReadableStream", "stream", "isBlob", "blob", "require_ChecksumStream_browser", "__commonJSMin", "exports", "init_cjs_shim", "ReadableStreamRef", "ChecksumStream", "require_createChecksumStream_browser", "__commonJSMin", "exports", "init_cjs_shim", "util_base64_1", "stream_type_check_1", "ChecksumStream_browser_1", "createChecksumStream", "expectedChecksum", "checksum", "source", "checksumSourceLocation", "base64Encoder", "encoder", "transform", "chunk", "controller", "digest", "received", "error", "readable", "require_createChecksumStream", "__commonJSMin", "exports", "init_cjs_shim", "createChecksumStream", "stream_type_check_1", "ChecksumStream_1", "createChecksumStream_browser_1", "init", "require_ByteArrayCollector", "__commonJSMin", "exports", "init_cjs_shim", "ByteArrayCollector", "allocByteArray", "byteArray", "bytes", "aggregation", "cursor", "i", "require_createBufferedReadableStream", "__commonJSMin", "exports", "init_cjs_shim", "createBufferedReadableStream", "merge", "flush", "sizeOf", "modeOf", "ByteArrayCollector_1", "upstream", "size", "logger", "reader", "streamBufferingLoggedWarning", "bytesSeen", "buffers", "mode", "pull", "controller", "value", "done", "chunk", "remainder", "chunkMode", "chunkSize", "bufferSize", "newSize", "s", "allowBuffer", "require_createBufferedReadable", "__commonJSMin", "exports", "init_cjs_shim", "createBufferedReadable", "node_stream_1", "ByteArrayCollector_1", "createBufferedReadableStream_1", "stream_type_check_1", "upstream", "size", "logger", "downstream", "streamBufferingLoggedWarning", "bytesSeen", "buffers", "mode", "chunk", "chunkMode", "chunkSize", "bufferSize", "newSize", "remainder", "require_getAwsChunkedEncodingStream", "__commonJSMin", "exports", "init_cjs_shim", "stream_1", "getAwsChunkedEncodingStream", "readableStream", "options", "base64Encoder", "bodyLengthChecker", "checksumAlgorithmFn", "checksumLocationName", "streamHasher", "checksumRequired", "digest", "awsChunkedEncodingStream", "data", "length", "checksum", "require_headStream_browser", "__commonJSMin", "exports", "init_cjs_shim", "headStream", "stream", "bytes", "byteLengthCounter", "chunks", "reader", "isDone", "done", "value", "collected", "offset", "chunk", "require_headStream", "__commonJSMin", "exports", "init_cjs_shim", "stream_1", "headStream_browser_1", "stream_type_check_1", "headStream", "stream", "bytes", "resolve", "reject", "collector", "Collector", "err", "chunk", "encoding", "callback", "excess", "tailBuffer", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "escapeUri", "uri", "hexEncode", "c", "escapeUriPath", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "utilUriEscape", "buildQueryString", "query", "parts", "key", "value", "i", "iLen", "qsEntry", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "protocolHttp", "querystringBuilder", "http", "https", "stream", "http2", "NODEJS_TIMEOUT_ERROR_CODES", "getTransformedHeaders", "headers", "transformedHeaders", "name", "headerValues", "timing", "cb", "ms", "timeoutId", "DEFER_EVENT_LISTENER_TIME$2", "setConnectionTimeout", "request", "reject", "timeoutInMs", "registerTimeout", "offset", "doWithSocket", "socket", "DEFER_EVENT_LISTENER_TIME$1", "setSocketKeepAlive", "keepAlive", "keepAliveMsecs", "deferTimeMs", "registerListener", "DEFER_EVENT_LISTENER_TIME", "setSocketTimeout", "DEFAULT_REQUEST_TIMEOUT", "timeout", "onTimeout", "MIN_WAIT_TIME", "writeRequestBody", "httpRequest", "maxContinueTimeoutMs", "expect", "sendBody", "resolve", "writeBody", "body", "uint8", "NodeHttpHandler", "_NodeHttpHandler", "instanceOrOptions", "agent", "socketWarningTimestamp", "logger", "sockets", "requests", "maxSockets", "origin", "socketsInUse", "requestsEnqueued", "options", "_options", "requestTimeout", "connectionTimeout", "socketTimeout", "socketAcquisitionWarningTimeout", "httpAgent", "httpsAgent", "abortSignal", "_resolve", "_reject", "writeRequestBodyPromise", "timeouts", "arg", "abortError", "isSSL", "queryString", "auth", "username", "password", "path", "hostname", "nodeHttpsOptions", "req", "res", "httpResponse", "err", "onAbort", "signal", "effectiveRequestTimeout", "e", "key", "value", "config", "NodeHttp2ConnectionPool", "sessions", "session", "s", "connection", "NodeHttp2ConnectionManager", "requestContext", "connectionConfiguration", "url", "existingPool", "existingSession", "destroySessionCb", "connectionPool", "authority", "existingConnectionPool", "cacheKey", "maxConcurrentStreams", "disableConcurrentStreams", "NodeHttp2Handler", "_NodeHttp2Handler", "opts", "configRequestTimeout", "fulfilled", "method", "port", "protocol", "query", "rejectWithDestroy", "timeoutError", "type", "code", "id", "Collector", "chunk", "encoding", "callback", "streamCollector", "isReadableStreamInstance", "collectReadableStream", "collector", "bytes", "chunks", "reader", "isDone", "length", "done", "collected", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "escapeUri", "uri", "hexEncode", "c", "escapeUriPath", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "utilUriEscape", "buildQueryString", "query", "parts", "key", "value", "i", "iLen", "qsEntry", "require_fromBase64", "__commonJSMin", "exports", "init_cjs_shim", "util_buffer_from_1", "BASE64_REGEX", "fromBase64", "input", "buffer", "require_toBase64", "__commonJSMin", "exports", "init_cjs_shim", "util_buffer_from_1", "util_utf8_1", "toBase64", "_input", "input", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "fromBase64", "toBase64", "k", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "protocolHttp", "querystringBuilder", "utilBase64", "createRequest", "url", "requestOptions", "requestTimeout", "timeoutInMs", "resolve", "reject", "timeoutError", "keepAliveSupport", "FetchHttpHandler", "_FetchHttpHandler", "instanceOrOptions", "options", "opts", "request", "abortSignal", "requestTimeout$1", "requestTimeoutInMs", "keepAlive", "credentials", "abortError", "path", "queryString", "auth", "username", "password", "port", "method", "body", "removeSignalEventListener", "fetchRequest", "raceOfPromises", "response", "fetchHeaders", "transformedHeaders", "pair", "onAbort", "signal", "key", "value", "config", "streamCollector", "stream", "collectBlob", "collectStream", "blob", "base64", "readToBase64", "arrayBuffer", "chunks", "reader", "isDone", "length", "done", "collected", "offset", "chunk", "result", "commaIndex", "dataOffset", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "SHORT_TO_HEX", "HEX_TO_SHORT", "i", "encodedByte", "fromHex", "encoded", "out", "toHex", "bytes", "require_sdk_stream_mixin_browser", "__commonJSMin", "exports", "init_cjs_shim", "fetch_http_handler_1", "util_base64_1", "util_hex_encoding_1", "util_utf8_1", "stream_type_check_1", "ERR_MSG_STREAM_HAS_BEEN_TRANSFORMED", "sdkStreamMixin", "stream", "isBlobInstance", "name", "transformed", "transformToByteArray", "blobToWebStream", "blob", "encoding", "buf", "require_sdk_stream_mixin", "__commonJSMin", "exports", "init_cjs_shim", "node_http_handler_1", "util_buffer_from_1", "stream_1", "sdk_stream_mixin_browser_1", "ERR_MSG_STREAM_HAS_BEEN_TRANSFORMED", "sdkStreamMixin", "stream", "name", "transformed", "transformToByteArray", "encoding", "buf", "require_splitStream_browser", "__commonJSMin", "exports", "init_cjs_shim", "splitStream", "stream", "require_splitStream", "__commonJSMin", "exports", "init_cjs_shim", "splitStream", "stream_1", "splitStream_browser_1", "stream_type_check_1", "stream", "stream1", "stream2", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "utilBase64", "utilUtf8", "ChecksumStream", "createChecksumStream", "createBufferedReadable", "getAwsChunkedEncodingStream", "headStream", "sdkStreamMixin", "splitStream", "streamTypeCheck", "transformToString", "payload", "encoding", "transformFromString", "str", "Uint8ArrayBlobAdapter", "_Uint8ArrayBlobAdapter", "source", "k", "import_util_stream", "collectBody", "init_collect_stream_body", "__esmMin", "init_cjs_shim", "streamBody", "context", "fromContext", "extendedEncodeURIComponent", "str", "c", "init_extended_encode_uri_component", "__esmMin", "init_cjs_shim", "deref", "init_deref", "__esmMin", "init_cjs_shim", "schemaRef", "import_protocol_http", "import_util_middleware", "schemaDeserializationMiddleware", "findHeader", "init_schemaDeserializationMiddleware", "__esmMin", "init_cjs_shim", "config", "next", "context", "args", "response", "operationSchema", "parsed", "error", "hint", "headers", "headerEntries", "pattern", "k", "import_util_middleware", "schemaSerializationMiddleware", "init_schemaSerializationMiddleware", "__esmMin", "init_cjs_shim", "config", "next", "context", "args", "operationSchema", "endpoint", "request", "getSchemaSerdePlugin", "config", "commandStack", "schemaSerializationMiddleware", "serializerMiddlewareOption", "schemaDeserializationMiddleware", "deserializerMiddlewareOption", "init_getSchemaSerdePlugin", "__esmMin", "init_cjs_shim", "init_schemaDeserializationMiddleware", "init_schemaSerializationMiddleware", "TypeRegistry", "init_TypeRegistry", "__esmMin", "init_cjs_shim", "_TypeRegistry", "namespace", "schemas", "exceptions", "shapeId", "schema", "qualifiedName", "id", "errorSchema", "ctor", "predicate", "Schema", "init_Schema", "__esmMin", "init_cjs_shim", "init_TypeRegistry", "instance", "values", "schema", "TypeRegistry", "lhs", "isPrototype", "ListSchema", "list", "init_ListSchema", "__esmMin", "init_cjs_shim", "init_Schema", "_ListSchema", "Schema", "namespace", "name", "traits", "valueSchema", "MapSchema", "map", "init_MapSchema", "__esmMin", "init_cjs_shim", "init_Schema", "_MapSchema", "Schema", "namespace", "name", "traits", "keySchema", "valueSchema", "OperationSchema", "op", "init_OperationSchema", "__esmMin", "init_cjs_shim", "init_Schema", "_OperationSchema", "Schema", "namespace", "name", "traits", "input", "output", "StructureSchema", "struct", "init_StructureSchema", "__esmMin", "init_cjs_shim", "init_Schema", "_StructureSchema", "Schema", "namespace", "name", "traits", "memberNames", "memberList", "ErrorSchema", "error", "init_ErrorSchema", "__esmMin", "init_cjs_shim", "init_Schema", "init_StructureSchema", "_ErrorSchema", "StructureSchema", "namespace", "name", "traits", "memberNames", "memberList", "ctor", "Schema", "translateTraits", "indicator", "traits", "i", "trait", "init_translateTraits", "__esmMin", "init_cjs_shim", "member", "memberSchema", "memberName", "NormalizedSchema", "internalCtorAccess", "init_NormalizedSchema", "__esmMin", "init_cjs_shim", "init_deref", "init_ListSchema", "init_MapSchema", "init_Schema", "init_StructureSchema", "init_translateTraits", "_NormalizedSchema", "ref", "traitStack", "_ref", "schema", "deref", "traitSet", "translateTraits", "computedMemberTraits", "Schema", "lhs", "sc", "ns", "traits", "withNamespace", "name", "ListSchema", "MapSchema", "StructureSchema", "streaming", "match", "normalizedTraits", "memberTraits", "isDoc", "isMap", "isList", "struct", "i", "buffer", "k", "v", "SimpleSchema", "sim", "init_SimpleSchema", "__esmMin", "init_cjs_shim", "init_Schema", "_SimpleSchema", "Schema", "namespace", "name", "schemaRef", "traits", "SCHEMA", "init_sentinels", "__esmMin", "init_cjs_shim", "schema_exports", "__export", "ErrorSchema", "ListSchema", "MapSchema", "NormalizedSchema", "OperationSchema", "SCHEMA", "Schema", "SimpleSchema", "StructureSchema", "TypeRegistry", "deref", "deserializerMiddlewareOption", "error", "getSchemaSerdePlugin", "list", "map", "op", "serializerMiddlewareOption", "sim", "struct", "translateTraits", "init_schema", "__esmMin", "init_cjs_shim", "init_deref", "init_getSchemaSerdePlugin", "init_ListSchema", "init_MapSchema", "init_OperationSchema", "init_ErrorSchema", "init_NormalizedSchema", "init_Schema", "init_SimpleSchema", "init_StructureSchema", "init_sentinels", "init_translateTraits", "init_TypeRegistry", "copyDocumentWithTransform", "init_copyDocumentWithTransform", "__esmMin", "init_cjs_shim", "source", "schemaRef", "transform", "_", "parseBoolean", "expectBoolean", "expectNumber", "MAX_FLOAT", "expectFloat32", "expectLong", "expectInt", "expectInt32", "expectShort", "expectByte", "expectSizedInt", "castInt", "expectNonNull", "expectObject", "expectString", "expectUnion", "strictParseDouble", "strictParseFloat", "strictParseFloat32", "NUMBER_REGEX", "parseNumber", "limitedParseDouble", "handleFloat", "limitedParseFloat", "limitedParseFloat32", "parseFloatString", "strictParseLong", "strictParseInt", "strictParseInt32", "strictParseShort", "strictParseByte", "stackTraceWarning", "logger", "init_parse_utils", "__esmMin", "init_cjs_shim", "value", "lower", "parsed", "expected", "size", "location", "receivedType", "asObject", "setKeys", "v", "k", "matches", "message", "s", "dateToUtcString", "date", "year", "month", "dayOfWeek", "dayOfMonthInt", "hoursInt", "minutesInt", "secondsInt", "dayOfMonthString", "hoursString", "minutesString", "secondsString", "DAYS", "MONTHS", "RFC3339", "parseRfc3339DateTime", "RFC3339_WITH_OFFSET", "parseRfc3339DateTimeWithOffset", "IMF_FIXDATE", "RFC_850_DATE", "ASC_TIME", "parseRfc7231DateTime", "parseEpochTimestamp", "buildDate", "parseTwoDigitYear", "FIFTY_YEARS_IN_MILLIS", "adjustRfc850Year", "parseMonthByShortName", "DAYS_IN_MONTH", "validateDayOfMonth", "isLeapYear", "parseDateValue", "parseMilliseconds", "parseOffsetToMilliseconds", "stripLeadingZeroes", "init_date_utils", "__esmMin", "init_cjs_shim", "init_parse_utils", "value", "match", "_", "yearStr", "monthStr", "dayStr", "hours", "minutes", "seconds", "fractionalMilliseconds", "strictParseShort", "day", "offsetStr", "valueAsDouble", "strictParseDouble", "time", "adjustedMonth", "thisYear", "valueInThisCentury", "input", "monthIdx", "maxDays", "type", "lower", "upper", "dateVal", "strictParseByte", "strictParseFloat32", "directionStr", "direction", "hour", "minute", "idx", "tslib_es6_exports", "__export", "__addDisposableResource", "__assign", "__asyncDelegator", "__asyncGenerator", "__asyncValues", "__await", "__awaiter", "__classPrivateFieldGet", "__classPrivateFieldIn", "__classPrivateFieldSet", "__createBinding", "__decorate", "__disposeResources", "__esDecorate", "__exportStar", "__extends", "__generator", "__importDefault", "__importStar", "__makeTemplateObject", "__metadata", "__param", "__propKey", "__read", "__rest", "__rewriteRelativeImportExtension", "__runInitializers", "__setFunctionName", "__spread", "__spreadArray", "__spreadArrays", "__values", "tslib_es6_default", "d", "b", "extendStatics", "__", "s", "t", "p", "i", "decorators", "target", "key", "desc", "c", "r", "paramIndex", "decorator", "ctor", "descriptorIn", "contextIn", "initializers", "extraInitializers", "accept", "f", "kind", "descriptor", "_", "done", "context", "result", "thisArg", "value", "useValue", "x", "name", "prefix", "metadataKey", "metadataValue", "_arguments", "P", "generator", "adopt", "resolve", "reject", "fulfilled", "step", "e", "rejected", "body", "y", "g", "verb", "n", "v", "op", "m", "o", "ar", "error", "il", "k", "a", "j", "jl", "to", "from", "pack", "l", "q", "awaitReturn", "resume", "settle", "fulfill", "cooked", "raw", "mod", "ownKeys", "__setModuleDefault", "receiver", "state", "env", "async", "dispose", "inner", "fail", "_SuppressedError", "next", "path", "preserveJsx", "tsx", "ext", "cm", "init_tslib_es6", "__esmMin", "init_cjs_shim", "k2", "suppressed", "message", "require_randomUUID", "__commonJSMin", "exports", "init_cjs_shim", "tslib_1", "crypto_1", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "randomUUID", "decimalToHex", "_", "i", "v4", "rnds", "import_uuid", "init_generateIdempotencyToken", "__esmMin", "init_cjs_shim", "LazyJsonString", "init_lazy_json", "__esmMin", "init_cjs_shim", "val", "object", "quoteHeader", "part", "init_quote_header", "__esmMin", "init_cjs_shim", "range", "v", "min", "max", "_v", "ddd", "mmm", "time", "date", "year", "RFC3339_WITH_OFFSET", "IMF_FIXDATE", "RFC_850_DATE", "ASC_TIME", "months", "_parseEpochTimestamp", "_parseRfc3339DateTimeWithOffset", "_parseRfc7231DateTime", "init_schema_date_utils", "__esmMin", "init_cjs_shim", "value", "num", "matches", "yearStr", "monthStr", "dayStr", "hours", "minutes", "seconds", "ms", "offsetStr", "sign", "offsetH", "offsetM", "scalar", "day", "month", "hour", "minute", "second", "fraction", "splitEvery", "value", "delimiter", "numDelimiters", "segments", "compoundSegments", "currentSegment", "init_split_every", "__esmMin", "init_cjs_shim", "splitHeader", "init_split_header", "__esmMin", "init_cjs_shim", "value", "z", "values", "withinQuotes", "prevChar", "anchor", "char", "v", "nv", "input", "NumericValue", "format", "init_NumericValue", "__esmMin", "init_cjs_shim", "_NumericValue", "string", "type", "object", "_nv", "serde_exports", "__export", "LazyJsonString", "NumericValue", "_parseEpochTimestamp", "_parseRfc3339DateTimeWithOffset", "_parseRfc7231DateTime", "copyDocumentWithTransform", "dateToUtcString", "expectBoolean", "expectByte", "expectFloat32", "expectInt", "expectInt32", "expectLong", "expectNonNull", "expectNumber", "expectObject", "expectShort", "expectString", "expectUnion", "generateIdempotencyToken", "handleFloat", "limitedParseDouble", "limitedParseFloat", "limitedParseFloat32", "logger", "nv", "parseBoolean", "parseEpochTimestamp", "parseRfc3339DateTime", "parseRfc3339DateTimeWithOffset", "parseRfc7231DateTime", "quoteHeader", "splitEvery", "splitHeader", "strictParseByte", "strictParseDouble", "strictParseFloat", "strictParseFloat32", "strictParseInt", "strictParseInt32", "strictParseLong", "strictParseShort", "init_serde", "__esmMin", "init_cjs_shim", "init_copyDocumentWithTransform", "init_date_utils", "init_generateIdempotencyToken", "init_lazy_json", "init_parse_utils", "init_quote_header", "init_schema_date_utils", "init_split_every", "init_split_header", "init_NumericValue", "import_util_utf8", "EventStreamSerde", "init_EventStreamSerde", "__esmMin", "init_cjs_shim", "marshaller", "serializer", "deserializer", "serdeContext", "defaultContentType", "eventStream", "requestSchema", "initialRequest", "eventStreamMember", "unionSchema", "memberSchemas", "initialRequestMarker", "eventStreamIterable", "headers", "body", "page", "event", "unionMember", "key", "additionalHeaders", "eventType", "explicitPayloadContentType", "response", "responseSchema", "initialResponseContainer", "initialResponseMarker", "asyncIterable", "dataObject", "eventStreamSchema", "asyncIterator", "firstEvent", "value", "done", "explicitPayloadMember", "isKnownSchema", "eventSchema", "memberName", "memberSchema", "eventHeader", "eventPayload", "type", "payloadSchema", "messageSerialization", "event_streams_exports", "__export", "EventStreamSerde", "init_event_streams", "__esmMin", "init_cjs_shim", "init_EventStreamSerde", "import_protocol_http", "HttpProtocol", "init_HttpProtocol", "__esmMin", "init_cjs_shim", "init_schema", "options", "serdeContext", "request", "endpoint", "k", "v", "operationSchema", "input", "operationNs", "NormalizedSchema", "inputNs", "hostPrefix", "hostLabelInputs", "member", "name", "replacement", "output", "eventStream", "requestSchema", "initialRequest", "response", "responseSchema", "initialResponseContainer", "EventStreamSerde", "schema", "context", "arg4", "arg5", "import_protocol_http", "import_util_stream", "HttpBindingProtocol", "init_HttpBindingProtocol", "__esmMin", "init_cjs_shim", "init_schema", "init_serde", "init_collect_stream_body", "init_extended_encode_uri_component", "init_HttpProtocol", "HttpProtocol", "operationSchema", "_input", "context", "input", "serializer", "query", "headers", "endpoint", "ns", "NormalizedSchema", "schema", "hasNonHttpBindingMember", "payload", "request", "opTraits", "translateTraits", "path", "search", "traitSearchParams", "memberName", "memberNs", "memberTraits", "inputMemberValue", "replacement", "extendedEncodeURIComponent", "key", "val", "amalgam", "data", "traits", "valueSchema", "sparse", "buffer", "item", "serializable", "response", "deserializer", "dataObject", "bytes", "collectBody", "header", "value", "nonHttpBindingMembers", "dataFromBody", "member", "arg4", "arg5", "memberSchema", "headerListValueSchema", "sections", "splitEvery", "splitHeader", "list", "section", "import_protocol_http", "RpcProtocol", "init_RpcProtocol", "__esmMin", "init_cjs_shim", "init_schema", "init_collect_stream_body", "init_HttpProtocol", "HttpProtocol", "operationSchema", "input", "context", "serializer", "query", "headers", "endpoint", "ns", "NormalizedSchema", "schema", "payload", "request", "_input", "eventStreamMember", "initialRequest", "memberName", "memberSchema", "response", "deserializer", "dataObject", "bytes", "collectBody", "header", "value", "resolvedPath", "init_resolve_path", "__esmMin", "init_cjs_shim", "init_extended_encode_uri_component", "input", "memberName", "labelValueProvider", "uriLabel", "isGreedyLabel", "labelValue", "segment", "extendedEncodeURIComponent", "requestBuilder", "input", "context", "RequestBuilder", "import_protocol_http", "init_requestBuilder", "__esmMin", "init_cjs_shim", "init_resolve_path", "hostname", "protocol", "port", "basePath", "resolvePath", "uriLabel", "memberName", "labelValueProvider", "isGreedyLabel", "path", "resolvedPath", "headers", "query", "body", "method", "require_fromBase64", "__commonJSMin", "exports", "init_cjs_shim", "util_buffer_from_1", "BASE64_REGEX", "fromBase64", "input", "buffer", "require_toBase64", "__commonJSMin", "exports", "init_cjs_shim", "util_buffer_from_1", "util_utf8_1", "toBase64", "_input", "input", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "fromBase64", "toBase64", "k", "determineTimestampFormat", "ns", "settings", "httpLabel", "httpPrefixHeaders", "httpHeader", "httpQuery", "init_determineTimestampFormat", "__esmMin", "init_cjs_shim", "import_util_base64", "import_util_utf8", "FromStringShapeDeserializer", "init_FromStringShapeDeserializer", "__esmMin", "init_cjs_shim", "init_schema", "init_serde", "init_determineTimestampFormat", "settings", "serdeContext", "_schema", "data", "ns", "NormalizedSchema", "splitHeader", "item", "determineTimestampFormat", "_parseRfc3339DateTimeWithOffset", "_parseRfc7231DateTime", "_parseEpochTimestamp", "mediaType", "intermediateValue", "LazyJsonString", "NumericValue", "base64String", "import_util_utf8", "HttpInterceptingShapeDeserializer", "init_HttpInterceptingShapeDeserializer", "__esmMin", "init_cjs_shim", "init_schema", "init_FromStringShapeDeserializer", "codecDeserializer", "codecSettings", "FromStringShapeDeserializer", "serdeContext", "schema", "data", "ns", "NormalizedSchema", "traits", "toString", "toBytes", "import_util_base64", "ToStringShapeSerializer", "init_ToStringShapeSerializer", "__esmMin", "init_cjs_shim", "init_schema", "init_serde", "init_determineTimestampFormat", "settings", "serdeContext", "schema", "value", "ns", "NormalizedSchema", "determineTimestampFormat", "dateToUtcString", "buffer", "item", "headerItem", "serialized", "quoteHeader", "mediaType", "intermediateValue", "LazyJsonString", "HttpInterceptingShapeSerializer", "init_HttpInterceptingShapeSerializer", "__esmMin", "init_cjs_shim", "init_schema", "init_ToStringShapeSerializer", "codecSerializer", "codecSettings", "stringSerializer", "ToStringShapeSerializer", "serdeContext", "schema", "value", "ns", "NormalizedSchema", "traits", "buffer", "protocols_exports", "__export", "FromStringShapeDeserializer", "HttpBindingProtocol", "HttpInterceptingShapeDeserializer", "HttpInterceptingShapeSerializer", "HttpProtocol", "RequestBuilder", "RpcProtocol", "ToStringShapeSerializer", "collectBody", "determineTimestampFormat", "extendedEncodeURIComponent", "requestBuilder", "resolvedPath", "init_protocols", "__esmMin", "init_cjs_shim", "init_collect_stream_body", "init_extended_encode_uri_component", "init_HttpBindingProtocol", "init_HttpProtocol", "init_RpcProtocol", "init_requestBuilder", "init_resolve_path", "init_FromStringShapeDeserializer", "init_HttpInterceptingShapeDeserializer", "init_HttpInterceptingShapeSerializer", "init_ToStringShapeSerializer", "init_determineTimestampFormat", "init_requestBuilder", "__esmMin", "init_cjs_shim", "init_protocols", "setFeature", "context", "feature", "value", "init_setFeature", "__esmMin", "init_cjs_shim", "DefaultIdentityProviderConfig", "init_DefaultIdentityProviderConfig", "__esmMin", "init_cjs_shim", "config", "key", "value", "schemeId", "import_protocol_http", "import_types", "HttpApiKeyAuthSigner", "init_httpApiKeyAuth", "__esmMin", "init_cjs_shim", "httpRequest", "identity", "signingProperties", "clonedRequest", "import_protocol_http", "HttpBearerAuthSigner", "init_httpBearerAuth", "__esmMin", "init_cjs_shim", "httpRequest", "identity", "signingProperties", "clonedRequest", "NoAuthSigner", "init_noAuth", "__esmMin", "init_cjs_shim", "httpRequest", "identity", "signingProperties", "init_httpAuthSchemes", "__esmMin", "init_cjs_shim", "init_httpApiKeyAuth", "init_httpBearerAuth", "init_noAuth", "createIsIdentityExpiredFunction", "EXPIRATION_MS", "isIdentityExpired", "doesIdentityRequireRefresh", "memoizeIdentityProvider", "init_memoizeIdentityProvider", "__esmMin", "init_cjs_shim", "expirationMs", "identity", "provider", "isExpired", "requiresRefresh", "normalizedProvider", "resolved", "pending", "hasResult", "isConstant", "coalesceProvider", "options", "init_util_identity_and_auth", "__esmMin", "init_cjs_shim", "init_DefaultIdentityProviderConfig", "init_httpAuthSchemes", "init_memoizeIdentityProvider", "dist_es_exports", "__export", "DefaultIdentityProviderConfig", "EXPIRATION_MS", "HttpApiKeyAuthSigner", "HttpBearerAuthSigner", "NoAuthSigner", "createIsIdentityExpiredFunction", "createPaginator", "doesIdentityRequireRefresh", "getHttpAuthSchemeEndpointRuleSetPlugin", "getHttpAuthSchemePlugin", "getHttpSigningPlugin", "getSmithyContext", "httpAuthSchemeEndpointRuleSetMiddlewareOptions", "httpAuthSchemeMiddleware", "httpAuthSchemeMiddlewareOptions", "httpSigningMiddleware", "httpSigningMiddlewareOptions", "isIdentityExpired", "memoizeIdentityProvider", "normalizeProvider", "requestBuilder", "setFeature", "init_dist_es", "__esmMin", "init_cjs_shim", "init_getSmithyContext", "init_middleware_http_auth_scheme", "init_middleware_http_signing", "init_normalizeProvider", "init_createPaginator", "init_requestBuilder", "init_setFeature", "init_util_identity_and_auth", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "types", "EndpointCache", "size", "params", "endpointParams", "resolver", "key", "keys", "i", "value", "done", "buffer", "parameters", "param", "val", "IP_V4_REGEX", "isIpAddress", "VALID_HOST_LABEL_REGEX", "isValidHostLabel", "allowSubDomains", "labels", "label", "customEndpointFunctions", "debugId", "toDebugString", "input", "EndpointError", "message", "booleanEquals", "value1", "value2", "getAttrPathList", "path", "parts", "pathList", "part", "squareBracketIndex", "arrayIndex", "getAttr", "acc", "index", "isSet", "not", "DEFAULT_PORTS", "parseURL", "whatwgURL", "hostname", "port", "protocol", "query", "url", "k", "v", "urlString", "host", "pathname", "search", "scheme", "isIp", "inputContainsDefaultPort", "authority", "stringEquals", "substring", "start", "stop", "reverse", "uriEncode", "c", "endpointFunctions", "evaluateTemplate", "template", "options", "evaluatedTemplateArr", "templateContext", "currentIndex", "openingBraceIndex", "closingBraceIndex", "parameterName", "refName", "attrName", "getReferenceValue", "ref", "evaluateExpression", "obj", "keyName", "callFunction", "fn", "argv", "evaluatedArgs", "arg", "fnSegments", "evaluateCondition", "assign", "fnArgs", "evaluateConditions", "conditions", "conditionsReferenceRecord", "condition", "result", "toAssign", "getEndpointHeaders", "headers", "headerKey", "headerVal", "headerValEntry", "processedExpr", "getEndpointProperty", "property", "propertyEntry", "getEndpointProperties", "properties", "propertyKey", "propertyVal", "getEndpointUrl", "endpointUrl", "expression", "error", "evaluateEndpointRule", "endpointRule", "endpoint", "referenceRecord", "endpointRuleOptions", "evaluateErrorRule", "errorRule", "evaluateTreeRule", "treeRule", "rules", "evaluateRules", "rule", "endpointOrUndefined", "resolveEndpoint", "ruleSetObject", "logger", "paramsWithDefault", "paramKey", "paramDefaultValue", "requiredParams", "requiredParam", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "parseQueryString", "querystring", "query", "pair", "key", "value", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "querystringParser", "parseUrl", "url", "hostname", "pathname", "port", "protocol", "search", "query", "require_dist_cjs", "__commonJSMin", "exports", "module", "init_cjs_shim", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__name", "target", "value", "__export", "all", "name", "__copyProps", "to", "from", "except", "desc", "key", "__toCommonJS", "mod", "index_exports", "import_util_endpoints", "awsEndpointFunctions", "getUserAgentPrefix", "partition", "resolveDefaultAwsRegionalEndpointsConfig", "setPartitionInfo", "toEndpointV1", "useDefaultPartitionInfo", "isVirtualHostableS3Bucket", "allowSubDomains", "label", "ARN_DELIMITER", "RESOURCE_DELIMITER", "parseArn", "segments", "arn", "partition2", "service", "region", "accountId", "resourcePath", "resourceId", "resource", "partitions_default", "selectedPartitionsInfo", "selectedUserAgentPrefix", "partitions", "regions", "outputs", "regionData", "regionRegex", "DEFAULT_PARTITION", "partitionsInfo", "userAgentPrefix", "import_url_parser", "input", "endpoint", "state", "emitWarningIfUnsupportedVersion", "init_emitWarningIfUnsupportedVersion", "__esmMin", "init_cjs_shim", "version", "setCredentialFeature", "credentials", "feature", "value", "init_setCredentialFeature", "__esmMin", "init_cjs_shim", "setFeature", "context", "feature", "value", "init_setFeature", "__esmMin", "init_cjs_shim", "setTokenFeature", "token", "feature", "value", "init_setTokenFeature", "__esmMin", "init_cjs_shim", "client_exports", "__export", "emitWarningIfUnsupportedVersion", "setCredentialFeature", "setFeature", "setTokenFeature", "state", "init_client", "__esmMin", "init_cjs_shim", "init_emitWarningIfUnsupportedVersion", "init_setCredentialFeature", "init_setFeature", "init_setTokenFeature", "import_protocol_http", "getDateHeader", "init_getDateHeader", "__esmMin", "init_cjs_shim", "response", "getSkewCorrectedDate", "init_getSkewCorrectedDate", "__esmMin", "init_cjs_shim", "systemClockOffset", "isClockSkewed", "init_isClockSkewed", "__esmMin", "init_cjs_shim", "init_getSkewCorrectedDate", "clockTime", "systemClockOffset", "getSkewCorrectedDate", "getUpdatedSystemClockOffset", "init_getUpdatedSystemClockOffset", "__esmMin", "init_cjs_shim", "init_isClockSkewed", "clockTime", "currentSystemClockOffset", "clockTimeInMs", "isClockSkewed", "init_utils", "__esmMin", "init_cjs_shim", "init_getDateHeader", "init_getSkewCorrectedDate", "init_getUpdatedSystemClockOffset", "import_protocol_http", "throwSigningPropertyError", "validateSigningProperties", "AwsSdkSigV4Signer", "AWSSDKSigV4Signer", "init_AwsSdkSigV4Signer", "__esmMin", "init_cjs_shim", "init_utils", "name", "property", "signingProperties", "context", "config", "authScheme", "signer", "signingRegion", "signingRegionSet", "signingName", "httpRequest", "identity", "validatedProps", "handlerExecutionContext", "first", "second", "getSkewCorrectedDate", "error", "serverTime", "getDateHeader", "initialSystemClockOffset", "getUpdatedSystemClockOffset", "httpResponse", "dateHeader", "import_protocol_http", "AwsSdkSigV4ASigner", "init_AwsSdkSigV4ASigner", "__esmMin", "init_cjs_shim", "init_utils", "init_AwsSdkSigV4Signer", "AwsSdkSigV4Signer", "httpRequest", "identity", "signingProperties", "config", "signer", "signingRegion", "signingRegionSet", "signingName", "validateSigningProperties", "multiRegionOverride", "getSkewCorrectedDate", "getArrayForCommaSeparatedString", "init_getArrayForCommaSeparatedString", "__esmMin", "init_cjs_shim", "str", "item", "getBearerTokenEnvKey", "init_getBearerTokenEnvKey", "__esmMin", "init_cjs_shim", "signingName", "NODE_AUTH_SCHEME_PREFERENCE_ENV_KEY", "NODE_AUTH_SCHEME_PREFERENCE_CONFIG_KEY", "NODE_AUTH_SCHEME_PREFERENCE_OPTIONS", "init_NODE_AUTH_SCHEME_PREFERENCE_OPTIONS", "__esmMin", "init_cjs_shim", "init_getArrayForCommaSeparatedString", "init_getBearerTokenEnvKey", "env", "options", "getBearerTokenEnvKey", "getArrayForCommaSeparatedString", "profile", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "ProviderError", "_ProviderError", "message", "options", "logger", "tryNextLink", "error", "CredentialsProviderError", "_CredentialsProviderError", "TokenProviderError", "_TokenProviderError", "chain", "providers", "lastProviderError", "provider", "err", "fromStatic", "staticValue", "memoize", "isExpired", "requiresRefresh", "resolved", "pending", "hasResult", "isConstant", "coalesceProvider", "import_property_provider", "resolveAwsSdkSigV4AConfig", "NODE_SIGV4A_CONFIG_OPTIONS", "init_resolveAwsSdkSigV4AConfig", "__esmMin", "init_cjs_shim", "init_dist_es", "config", "normalizeProvider", "env", "_", "profile", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "escapeUri", "uri", "hexEncode", "c", "escapeUriPath", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "utilHexEncoding", "utilUtf8", "isArrayBuffer", "protocolHttp", "utilMiddleware", "utilUriEscape", "ALGORITHM_QUERY_PARAM", "CREDENTIAL_QUERY_PARAM", "AMZ_DATE_QUERY_PARAM", "SIGNED_HEADERS_QUERY_PARAM", "EXPIRES_QUERY_PARAM", "SIGNATURE_QUERY_PARAM", "TOKEN_QUERY_PARAM", "REGION_SET_PARAM", "AUTH_HEADER", "AMZ_DATE_HEADER", "DATE_HEADER", "GENERATED_HEADERS", "SIGNATURE_HEADER", "SHA256_HEADER", "TOKEN_HEADER", "HOST_HEADER", "ALWAYS_UNSIGNABLE_HEADERS", "PROXY_HEADER_PATTERN", "SEC_HEADER_PATTERN", "UNSIGNABLE_PATTERNS", "ALGORITHM_IDENTIFIER", "ALGORITHM_IDENTIFIER_V4A", "EVENT_ALGORITHM_IDENTIFIER", "UNSIGNED_PAYLOAD", "MAX_CACHE_SIZE", "KEY_TYPE_IDENTIFIER", "MAX_PRESIGNED_TTL", "signingKeyCache", "cacheQueue", "createScope", "shortDate", "region", "service", "getSigningKey", "sha256Constructor", "credentials", "credsHash", "hmac", "cacheKey", "key", "signable", "clearCredentialCache", "ctor", "secret", "data", "hash", "getCanonicalHeaders", "headers", "unsignableHeaders", "signableHeaders", "canonical", "headerName", "canonicalHeaderName", "getPayloadHash", "body", "hashConstructor", "hashCtor", "HeaderFormatter", "chunks", "bytes", "out", "carry", "position", "chunk", "header", "shortView", "intView", "longBytes", "binView", "binBytes", "utf8Bytes", "strView", "strBytes", "tsBytes", "Int64", "UUID_PATTERN", "uuidBytes", "_Int64", "number", "i", "remaining", "negate", "negative", "hasHeader", "soughtHeader", "moveHeadersToQuery", "request", "options", "query", "name", "lname", "prepareRequest", "getCanonicalQuery", "keys", "serialized", "encodedKey", "value", "encoded", "iso8601", "time", "toDate", "SignatureV4Base", "applyChecksum", "sha256", "uriEscapePath", "canonicalHeaders", "payloadHash", "sortedHeaders", "longDate", "credentialScope", "canonicalRequest", "algorithmIdentifier", "hashedRequest", "path", "normalizedPathSegments", "pathSegment", "normalizedPath", "now", "SignatureV4", "originalRequest", "signingDate", "expiresIn", "unhoistableHeaders", "hoistableHeaders", "signingRegion", "signingService", "scope", "toSign", "payload", "priorSignature", "hashedPayload", "hashedHeaders", "stringToSign", "signableMessage", "signature", "requestToSign", "keyPromise", "signatureV4aContainer", "normalizeCredentialProvider", "config", "credentials", "credentialDefaultProvider", "credentialsProvider", "memoizeIdentityProvider", "isIdentityExpired", "doesIdentityRequireRefresh", "normalizeProvider", "bindCallerConfig", "fn", "options", "import_signature_v4", "resolveAwsSdkSigV4Config", "resolveAWSSDKSigV4Config", "init_resolveAwsSdkSigV4Config", "__esmMin", "init_cjs_shim", "init_client", "init_dist_es", "inputCredentials", "isUserSupplied", "resolvedCredentials", "memoizedProvider", "boundProvider", "creds", "setCredentialFeature", "signingEscapePath", "systemClockOffset", "sha256", "signer", "region", "regionInfo", "signingRegion", "signingService", "params", "SignerCtor", "authScheme", "init_aws_sdk", "__esmMin", "init_cjs_shim", "init_AwsSdkSigV4Signer", "init_AwsSdkSigV4ASigner", "init_NODE_AUTH_SCHEME_PREFERENCE_OPTIONS", "init_resolveAwsSdkSigV4AConfig", "init_resolveAwsSdkSigV4Config", "httpAuthSchemes_exports", "__export", "AWSSDKSigV4Signer", "AwsSdkSigV4ASigner", "AwsSdkSigV4Signer", "NODE_AUTH_SCHEME_PREFERENCE_OPTIONS", "NODE_SIGV4A_CONFIG_OPTIONS", "getBearerTokenEnvKey", "resolveAWSSDKSigV4Config", "resolveAwsSdkSigV4AConfig", "resolveAwsSdkSigV4Config", "validateSigningProperties", "init_httpAuthSchemes", "__esmMin", "init_cjs_shim", "init_aws_sdk", "init_getBearerTokenEnvKey", "alloc", "size", "tag", "data", "tagSymbol", "init_cbor_types", "__esmMin", "init_cjs_shim", "setPayload", "bytes", "payload", "dataView", "decode", "at", "to", "major", "minor", "unsignedInt", "offset", "countLength", "minorValueToArgumentLength", "countOffset", "countIndex", "_offset", "castBigInt", "negativeInt", "length", "decodeCount", "b", "start", "i", "decimalFraction", "exponent", "mantissa", "normalizer", "mantissaStr", "numericString", "sign", "nv", "value", "tag", "decodeUtf8StringIndefinite", "decodeMapIndefinite", "decodeListIndefinite", "decodeUnstructuredByteStringIndefinite", "decodeUtf8String", "decodeMap", "decodeList", "decodeUnstructuredByteString", "decodeSpecial", "bytesToUtf8", "USE_BUFFER", "textDecoder", "demote", "bigInteger", "num", "bytesToFloat16", "a", "fraction", "scalar", "exponentComponent", "summation", "vector", "base", "data", "alloc", "listDataLength", "list", "item", "itemOffset", "mapDataLength", "map", "key", "bigInt", "import_util_utf8", "USE_TEXT_DECODER", "init_cbor_decode", "__esmMin", "init_cjs_shim", "init_serde", "init_cbor_types", "ensureSpace", "bytes", "data", "cursor", "resize", "toUint8Array", "out", "alloc", "size", "old", "dataView", "encodeHeader", "major", "value", "encode", "_input", "encodeStack", "input", "USE_BUFFER", "nonNegative", "n", "binaryBigInt", "bigIntBytes", "b", "i", "NumericValue", "decimalIndex", "exponent", "mantissa", "tagSymbol", "keys", "key", "import_util_utf8", "initialSize", "init_cbor_encode", "__esmMin", "init_cjs_shim", "init_serde", "init_cbor_types", "cbor", "init_cbor", "__esmMin", "init_cjs_shim", "init_cbor_decode", "init_cbor_encode", "payload", "setPayload", "decode", "input", "encode", "toUint8Array", "size", "resize", "dateToTag", "loadSmithyRpcV2CborErrorCode", "init_parseCborBody", "__esmMin", "init_cjs_shim", "init_cbor_types", "date", "tag", "output", "data", "sanitizeErrorCode", "rawValue", "cleanValue", "codeKey", "key", "import_util_base64", "CborCodec", "CborShapeSerializer", "CborShapeDeserializer", "init_CborCodec", "__esmMin", "init_cjs_shim", "init_schema", "init_serde", "init_cbor", "init_parseCborBody", "serializer", "deserializer", "serdeContext", "schema", "value", "source", "ns", "NormalizedSchema", "generateIdempotencyToken", "dateToTag", "sourceObject", "sparse", "newArray", "i", "item", "newObject", "key", "memberSchema", "buffer", "cbor", "bytes", "data", "_schema", "_parseEpochTimestamp", "itemValue", "targetSchema", "import_util_middleware", "SmithyRpcV2CborProtocol", "init_SmithyRpcV2CborProtocol", "__esmMin", "init_cjs_shim", "init_protocols", "init_schema", "init_CborCodec", "init_parseCborBody", "RpcProtocol", "CborCodec", "defaultNamespace", "operationSchema", "input", "context", "request", "deref", "service", "operation", "path", "response", "dataObject", "metadata", "errorName", "loadSmithyRpcV2CborErrorCode", "namespace", "errorMetadata", "registry", "TypeRegistry", "errorSchema", "synthetic", "baseExceptionSchema", "ErrorCtor", "ns", "NormalizedSchema", "message", "exception", "output", "name", "member", "init_cbor", "__esmMin", "init_cjs_shim", "init_parseCborBody", "init_SmithyRpcV2CborProtocol", "init_CborCodec", "ProtocolLib", "init_ProtocolLib", "__esmMin", "init_cjs_shim", "init_schema", "defaultContentType", "inputSchema", "members", "httpPayloadMember", "m", "mediaType", "httpQuery", "httpQueryParams", "httpHeader", "httpLabel", "httpPrefixHeaders", "errorIdentifier", "defaultNamespace", "response", "dataObject", "metadata", "getErrorSchema", "namespace", "errorName", "errorMetadata", "registry", "TypeRegistry", "synthetic", "baseExceptionSchema", "ErrorCtor", "output", "queryErrorHeader", "Code", "Type", "entries", "Error", "k", "v", "queryCompatErrorData", "errorData", "AwsSmithyRpcV2CborProtocol", "init_AwsSmithyRpcV2CborProtocol", "__esmMin", "init_cjs_shim", "init_cbor", "init_schema", "init_ProtocolLib", "SmithyRpcV2CborProtocol", "ProtocolLib", "defaultNamespace", "awsQueryCompatible", "operationSchema", "input", "context", "request", "response", "dataObject", "metadata", "errorName", "loadSmithyRpcV2CborErrorCode", "errorSchema", "errorMetadata", "ns", "NormalizedSchema", "message", "ErrorCtor", "TypeRegistry", "exception", "output", "name", "member", "_toStr", "_toBool", "_toNum", "init_coercing_serializers", "__esmMin", "init_cjs_shim", "val", "warning", "lowercase", "num", "SerdeContextConfig", "init_ConfigurableSerdeContext", "__esmMin", "init_cjs_shim", "serdeContext", "require_fromBase64", "__commonJSMin", "exports", "init_cjs_shim", "util_buffer_from_1", "BASE64_REGEX", "fromBase64", "input", "buffer", "require_toBase64", "__commonJSMin", "exports", "init_cjs_shim", "util_buffer_from_1", "util_utf8_1", "toBase64", "_input", "input", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "fromBase64", "toBase64", "k", "jsonReviver", "key", "value", "context", "numericString", "NumericValue", "init_jsonReviver", "__esmMin", "init_cjs_shim", "init_serde", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "getAllAliases", "name", "aliases", "_aliases", "alias", "getMiddlewareNameWithAliases", "constructStack", "absoluteEntries", "relativeEntries", "identifyOnResolve", "entriesNameSet", "sort", "entries", "a", "b", "stepWeights", "priorityWeights", "removeByName", "toRemove", "isRemoved", "filterCb", "entry", "removeByReference", "cloneTo", "toStack", "stack", "expandRelativeMiddlewareList", "from", "expandedMiddlewareList", "getMiddlewareList", "debug", "normalizedAbsoluteEntries", "normalizedRelativeEntries", "normalizedEntriesNameMap", "normalizedEntry", "toMiddleware", "wholeList", "middleware", "options", "override", "toOverrideIndex", "toOverride", "plugin", "tags", "cloned", "mw", "step", "toggle", "handler", "context", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "middlewareStack", "protocols", "types", "schema", "serde", "Client", "config", "command", "optionsOrCb", "cb", "options", "callback", "useHandlerCache", "handler", "handlers", "result", "err", "SENSITIVE_STRING$1", "schemaLogFilter", "schema$1", "data", "ns", "object", "newObject", "member", "memberNs", "Command", "ClassBuilder", "clientStack", "configuration", "middlewareFn", "clientName", "commandName", "inputFilterSensitiveLog", "outputFilterSensitiveLog", "smithyContext", "additionalContext", "CommandCtor", "mw", "stack", "logger", "handlerExecutionContext", "requestHandler", "request", "endpointParameterInstructions", "middlewareSupplier", "service", "operation", "inputFilter", "_", "outputFilter", "serializer", "deserializer", "closure", "CommandRef", "input", "SENSITIVE_STRING", "createAggregatedClient", "commands", "methodImpl", "args", "methodName", "ServiceException", "_ServiceException", "value", "candidate", "instance", "decorateServiceException", "exception", "additions", "v", "k", "message", "throwDefaultError", "output", "parsedBody", "exceptionCtor", "errorCode", "$metadata", "deserializeMetadata", "statusCode", "response", "withBaseException", "ExceptionCtor", "loadConfigsForDefaultMode", "mode", "warningEmitted", "emitWarningIfUnsupportedVersion", "version", "getChecksumConfiguration", "runtimeConfig", "checksumAlgorithms", "id", "algorithmId", "algo", "resolveChecksumRuntimeConfig", "clientConfig", "checksumAlgorithm", "getRetryConfiguration", "retryStrategy", "resolveRetryRuntimeConfig", "retryStrategyConfiguration", "getDefaultExtensionConfiguration", "getDefaultClientConfiguration", "resolveDefaultRuntimeConfig", "getArrayIfSingleItem", "mayBeArray", "getValueFromTextNode", "obj", "textNodeName", "key", "isSerializableHeaderValue", "NoOpLogger", "map", "arg0", "arg1", "arg2", "target", "filter", "instructions", "mapWithFilter", "applyInstruction", "convertMap", "take", "source", "out", "_instructions", "targetKey", "instruction", "nonNullish", "valueFn", "pass", "sourceKey", "_value", "defaultFilterPassed", "customFilterPassed", "serializeFloat", "serializeDateTime", "date", "_json", "import_smithy_client", "import_util_utf8", "collectBodyString", "init_common", "__esmMin", "init_cjs_shim", "streamBody", "context", "body", "parseJsonBody", "parseJsonErrorBody", "loadRestJsonErrorCode", "init_parseJsonBody", "__esmMin", "init_cjs_shim", "init_common", "streamBody", "context", "collectBodyString", "encoded", "e", "errorBody", "value", "output", "data", "findKey", "object", "key", "k", "sanitizeErrorCode", "rawValue", "cleanValue", "headerKey", "codeKey", "import_util_base64", "JsonShapeDeserializer", "init_JsonShapeDeserializer", "__esmMin", "init_cjs_shim", "init_protocols", "init_schema", "init_serde", "init_ConfigurableSerdeContext", "init_jsonReviver", "init_parseJsonBody", "SerdeContextConfig", "settings", "schema", "data", "jsonReviver", "parseJsonBody", "value", "isObject", "ns", "NormalizedSchema", "listMember", "out", "sparse", "item", "mapMember", "_k", "_v", "memberName", "memberSchema", "fromKey", "deserializedValue", "mediaType", "LazyJsonString", "determineTimestampFormat", "parseRfc3339DateTimeWithOffset", "parseRfc7231DateTime", "parseEpochTimestamp", "NumericValue", "untyped", "k", "v", "NUMERIC_CONTROL_CHAR", "JsonReplacer", "init_jsonReplacer", "__esmMin", "init_cjs_shim", "init_serde", "key", "value", "NumericValue", "v", "s", "json", "import_util_base64", "JsonShapeSerializer", "init_JsonShapeSerializer", "__esmMin", "init_cjs_shim", "init_protocols", "init_schema", "init_serde", "init_ConfigurableSerdeContext", "init_jsonReplacer", "SerdeContextConfig", "settings", "schema", "value", "NormalizedSchema", "rootSchema", "replacer", "JsonReplacer", "container", "isObject", "ns", "listMember", "out", "sparse", "item", "mapMember", "_k", "_v", "memberName", "memberSchema", "targetKey", "serializableValue", "determineTimestampFormat", "dateToUtcString", "generateIdempotencyToken", "mediaType", "LazyJsonString", "k", "v", "NumericValue", "JsonCodec", "init_JsonCodec", "__esmMin", "init_cjs_shim", "init_ConfigurableSerdeContext", "init_JsonShapeDeserializer", "init_JsonShapeSerializer", "SerdeContextConfig", "settings", "serializer", "JsonShapeSerializer", "deserializer", "JsonShapeDeserializer", "AwsJsonRpcProtocol", "init_AwsJsonRpcProtocol", "__esmMin", "init_cjs_shim", "init_protocols", "init_schema", "init_ProtocolLib", "init_JsonCodec", "init_parseJsonBody", "RpcProtocol", "ProtocolLib", "defaultNamespace", "serviceTarget", "awsQueryCompatible", "JsonCodec", "operationSchema", "input", "context", "request", "NormalizedSchema", "deref", "response", "dataObject", "metadata", "errorIdentifier", "loadRestJsonErrorCode", "errorSchema", "errorMetadata", "ns", "message", "ErrorCtor", "TypeRegistry", "exception", "output", "name", "member", "target", "AwsJson1_0Protocol", "init_AwsJson1_0Protocol", "__esmMin", "init_cjs_shim", "init_AwsJsonRpcProtocol", "AwsJsonRpcProtocol", "defaultNamespace", "serviceTarget", "awsQueryCompatible", "AwsJson1_1Protocol", "init_AwsJson1_1Protocol", "__esmMin", "init_cjs_shim", "init_AwsJsonRpcProtocol", "AwsJsonRpcProtocol", "defaultNamespace", "serviceTarget", "awsQueryCompatible", "AwsRestJsonProtocol", "init_AwsRestJsonProtocol", "__esmMin", "init_cjs_shim", "init_protocols", "init_schema", "init_ProtocolLib", "init_JsonCodec", "init_parseJsonBody", "HttpBindingProtocol", "ProtocolLib", "defaultNamespace", "settings", "JsonCodec", "HttpInterceptingShapeSerializer", "HttpInterceptingShapeDeserializer", "serdeContext", "operationSchema", "input", "context", "request", "inputSchema", "NormalizedSchema", "contentType", "response", "dataObject", "metadata", "errorIdentifier", "loadRestJsonErrorCode", "errorSchema", "errorMetadata", "ns", "message", "ErrorCtor", "TypeRegistry", "exception", "output", "name", "member", "target", "import_smithy_client", "awsExpectUnion", "init_awsExpectUnion", "__esmMin", "init_cjs_shim", "value", "require_fxp", "__commonJSMin", "exports", "module", "init_cjs_shim", "e", "n", "i", "t", "ft", "st", "mt", "s", "r", "o", "u", "l", "x", "N", "a", "h", "d", "f", "p", "c", "b", "g", "m", "E", "v", "y", "T", "w", "C", "O", "S", "A", "P", "$", "I", "j", "D", "V", "M", "_", "k", "F", "X", "L", "B", "G", "Z", "R", "J", "q", "Y", "H", "U", "W", "z", "K", "Q", "tt", "et", "it", "nt", "rt", "ot", "at", "ut", "ht", "lt", "dt", "gt", "ct", "pt", "require_xml_parser", "__commonJSMin", "exports", "init_cjs_shim", "parseXML", "fast_xml_parser_1", "parser", "_", "val", "xmlString", "require_dist_cjs", "__commonJSMin", "exports", "module", "init_cjs_shim", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__name", "target", "value", "__export", "all", "name", "__copyProps", "to", "from", "except", "desc", "key", "__toCommonJS", "mod", "index_exports", "XmlNode", "XmlText", "import_xml_parser", "escapeAttribute", "escapeElement", "_XmlNode", "children", "childText", "withName", "node", "child", "input", "field", "listName", "memberName", "valueProvider", "nodes", "containerNode", "hasChildren", "xmlText", "attributes", "attributeName", "attribute", "c", "import_xml_builder", "import_smithy_client", "import_util_utf8", "XmlShapeDeserializer", "init_XmlShapeDeserializer", "__esmMin", "init_cjs_shim", "init_protocols", "init_schema", "init_ConfigurableSerdeContext", "SerdeContextConfig", "settings", "FromStringShapeDeserializer", "serdeContext", "schema", "bytes", "key", "ns", "NormalizedSchema", "memberSchemas", "memberNs", "output", "memberName", "xmlString", "parsedObject", "_schema", "value", "traits", "sparse", "flat", "listValue", "buffer", "sourceKey", "source", "sourceArray", "v", "keyNs", "entries", "keyProperty", "valueProperty", "entry", "memberSchema", "memberTraits", "xmlObjectKey", "xml", "parsedObj", "e", "textNodeName", "parsedObjToReturn", "import_smithy_client", "import_util_base64", "QueryShapeSerializer", "init_QueryShapeSerializer", "__esmMin", "init_cjs_shim", "init_protocols", "init_schema", "init_serde", "init_ConfigurableSerdeContext", "SerdeContextConfig", "settings", "schema", "value", "prefix", "ns", "NormalizedSchema", "generateIdempotencyToken", "NumericValue", "determineTimestampFormat", "member", "flat", "i", "item", "suffix", "key", "keySchema", "memberSchema", "k", "v", "keySuffix", "valueSuffix", "valueKey", "memberName", "str", "xmlName", "extendedEncodeURIComponent", "AwsQueryProtocol", "init_AwsQueryProtocol", "__esmMin", "init_cjs_shim", "init_protocols", "init_schema", "init_ProtocolLib", "init_XmlShapeDeserializer", "init_QueryShapeSerializer", "RpcProtocol", "ProtocolLib", "options", "settings", "QueryShapeSerializer", "XmlShapeDeserializer", "serdeContext", "operationSchema", "input", "context", "request", "deref", "action", "response", "deserializer", "ns", "NormalizedSchema", "dataObject", "bytes", "collectBody", "header", "value", "shortName", "awsQueryResultKey", "metadata", "errorIdentifier", "errorData", "message", "errorSchema", "errorMetadata", "registry", "errorName", "schema", "ErrorCtor", "TypeRegistry", "exception", "output", "name", "member", "target", "data", "code", "AwsEc2QueryProtocol", "init_AwsEc2QueryProtocol", "__esmMin", "init_cjs_shim", "init_AwsQueryProtocol", "AwsQueryProtocol", "options", "ec2Settings", "import_xml_builder", "import_smithy_client", "parseXmlBody", "parseXmlErrorBody", "loadRestXmlErrorCode", "init_parseXmlBody", "__esmMin", "init_cjs_shim", "init_common", "streamBody", "context", "collectBodyString", "encoded", "parsedObj", "e", "textNodeName", "key", "parsedObjToReturn", "errorBody", "value", "output", "data", "import_xml_builder", "import_smithy_client", "import_util_base64", "XmlShapeSerializer", "init_XmlShapeSerializer", "__esmMin", "init_cjs_shim", "init_protocols", "init_schema", "init_serde", "init_ConfigurableSerdeContext", "SerdeContextConfig", "settings", "schema", "value", "ns", "NormalizedSchema", "traits", "bytes", "str", "buffer", "parentXmlns", "name", "structXmlNode", "xmlnsAttr", "xmlns", "memberName", "memberSchema", "val", "memberNode", "listMember", "array", "container", "listTraits", "listValueSchema", "listValueTraits", "sparse", "flat", "writeItem", "struct", "listItemNode", "listNode", "mapMember", "map", "containerIsMap", "mapTraits", "mapKeySchema", "keyTag", "mapValueSchema", "mapValueTraits", "valueTag", "addKeyValue", "entry", "key", "keyNode", "keyXmlnsAttr", "keyXmlns", "valueNode", "mapNode", "_schema", "nodeContents", "determineTimestampFormat", "NumericValue", "generateIdempotencyToken", "into", "content", "prefix", "XmlCodec", "init_XmlCodec", "__esmMin", "init_cjs_shim", "init_ConfigurableSerdeContext", "init_XmlShapeDeserializer", "init_XmlShapeSerializer", "SerdeContextConfig", "settings", "serializer", "XmlShapeSerializer", "deserializer", "XmlShapeDeserializer", "AwsRestXmlProtocol", "init_AwsRestXmlProtocol", "__esmMin", "init_cjs_shim", "init_protocols", "init_schema", "init_ProtocolLib", "init_parseXmlBody", "init_XmlCodec", "HttpBindingProtocol", "ProtocolLib", "options", "settings", "XmlCodec", "HttpInterceptingShapeSerializer", "HttpInterceptingShapeDeserializer", "operationSchema", "input", "context", "request", "inputSchema", "NormalizedSchema", "contentType", "response", "dataObject", "metadata", "errorIdentifier", "loadRestXmlErrorCode", "errorSchema", "errorMetadata", "ns", "message", "ErrorCtor", "TypeRegistry", "exception", "output", "name", "member", "target", "value", "init_protocols", "__esmMin", "init_cjs_shim", "init_AwsSmithyRpcV2CborProtocol", "init_coercing_serializers", "init_AwsJson1_0Protocol", "init_AwsJson1_1Protocol", "init_AwsJsonRpcProtocol", "init_AwsRestJsonProtocol", "init_JsonCodec", "init_JsonShapeDeserializer", "init_JsonShapeSerializer", "init_awsExpectUnion", "init_parseJsonBody", "init_AwsEc2QueryProtocol", "init_AwsQueryProtocol", "init_AwsRestXmlProtocol", "init_XmlCodec", "init_XmlShapeDeserializer", "init_XmlShapeSerializer", "init_parseXmlBody", "dist_es_exports", "__export", "AWSSDKSigV4Signer", "AwsEc2QueryProtocol", "AwsJson1_0Protocol", "AwsJson1_1Protocol", "AwsJsonRpcProtocol", "AwsQueryProtocol", "AwsRestJsonProtocol", "AwsRestXmlProtocol", "AwsSdkSigV4ASigner", "AwsSdkSigV4Signer", "AwsSmithyRpcV2CborProtocol", "JsonCodec", "JsonShapeDeserializer", "JsonShapeSerializer", "NODE_AUTH_SCHEME_PREFERENCE_OPTIONS", "NODE_SIGV4A_CONFIG_OPTIONS", "XmlCodec", "XmlShapeDeserializer", "XmlShapeSerializer", "_toBool", "_toNum", "_toStr", "awsExpectUnion", "emitWarningIfUnsupportedVersion", "getBearerTokenEnvKey", "loadRestJsonErrorCode", "loadRestXmlErrorCode", "parseJsonBody", "parseJsonErrorBody", "parseXmlBody", "parseXmlErrorBody", "resolveAWSSDKSigV4Config", "resolveAwsSdkSigV4AConfig", "resolveAwsSdkSigV4Config", "setCredentialFeature", "setFeature", "setTokenFeature", "state", "validateSigningProperties", "init_dist_es", "__esmMin", "init_cjs_shim", "init_client", "init_httpAuthSchemes", "init_protocols", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "core", "utilEndpoints", "protocolHttp", "core$1", "DEFAULT_UA_APP_ID", "isValidUserAgentAppId", "appId", "resolveUserAgentConfig", "input", "normalizedAppIdProvider", "customUserAgent", "logger", "ACCOUNT_ID_ENDPOINT_REGEX", "checkFeatures", "context", "config", "args", "retryStrategy", "endpointV2", "identity", "credentials", "key", "value", "USER_AGENT", "X_AMZ_USER_AGENT", "SPACE", "UA_NAME_SEPARATOR", "UA_NAME_ESCAPE_REGEX", "UA_VALUE_ESCAPE_REGEX", "UA_ESCAPE_CHAR", "BYTE_LIMIT", "encodeFeatures", "features", "buffer", "val", "userAgentMiddleware", "options", "next", "request", "headers", "userAgent", "escapeUserAgent", "defaultUserAgent", "awsContext", "prefix", "sdkUserAgentValue", "normalUAValue", "section", "userAgentPair", "name", "part", "version", "prefixSeparatorIndex", "uaName", "item", "acc", "index", "getUserAgentMiddlewareOptions", "getUserAgentPlugin", "clientStack", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "booleanSelector", "obj", "key", "type", "numberSelector", "numberValue", "SelectorType", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "utilConfigProvider", "utilMiddleware", "ENV_USE_DUALSTACK_ENDPOINT", "CONFIG_USE_DUALSTACK_ENDPOINT", "DEFAULT_USE_DUALSTACK_ENDPOINT", "NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS", "env", "profile", "ENV_USE_FIPS_ENDPOINT", "CONFIG_USE_FIPS_ENDPOINT", "DEFAULT_USE_FIPS_ENDPOINT", "NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS", "resolveCustomEndpointsConfig", "input", "tls", "endpoint", "urlParser", "useDualstackEndpoint", "getEndpointFromRegion", "region", "useFipsEndpoint", "hostname", "resolveEndpointsConfig", "REGION_ENV_NAME", "REGION_INI_NAME", "NODE_REGION_CONFIG_OPTIONS", "NODE_REGION_CONFIG_FILE_OPTIONS", "isFipsRegion", "getRealRegion", "resolveRegionConfig", "providedRegion", "getHostnameFromVariants", "variants", "tags", "getResolvedHostname", "resolvedRegion", "regionHostname", "partitionHostname", "getResolvedPartition", "partitionHash", "key", "getResolvedSigningRegion", "signingRegion", "regionRegex", "regionRegexJs", "regionRegexmatchArray", "getRegionInfo", "signingService", "regionHash", "partition", "hostnameOptions", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "protocolHttp", "CONTENT_LENGTH_HEADER", "contentLengthMiddleware", "bodyLengthChecker", "next", "args", "request", "body", "headers", "str", "length", "contentLengthMiddlewareOptions", "getContentLengthPlugin", "options", "clientStack", "require_getHomeDir", "__commonJSMin", "exports", "init_cjs_shim", "os_1", "path_1", "homeDirCache", "getHomeDirCacheKey", "getHomeDir", "HOME", "USERPROFILE", "HOMEPATH", "HOMEDRIVE", "homeDirCacheKey", "require_getSSOTokenFilepath", "__commonJSMin", "exports", "init_cjs_shim", "crypto_1", "path_1", "getHomeDir_1", "getSSOTokenFilepath", "id", "cacheName", "require_getSSOTokenFromFile", "__commonJSMin", "exports", "init_cjs_shim", "fs_1", "getSSOTokenFilepath_1", "readFile", "getSSOTokenFromFile", "id", "ssoTokenFilepath", "ssoTokenText", "require_slurpFile", "__commonJSMin", "exports", "init_cjs_shim", "fs_1", "readFile", "slurpFile", "path", "options", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "getHomeDir", "getSSOTokenFilepath", "getSSOTokenFromFile", "path", "types", "slurpFile", "ENV_PROFILE", "DEFAULT_PROFILE", "getProfileName", "init", "getConfigData", "data", "key", "indexOfSeparator", "CONFIG_PREFIX_SEPARATOR", "acc", "value", "updatedKey", "ENV_CONFIG_PATH", "getConfigFilepath", "ENV_CREDENTIALS_PATH", "getCredentialsFilepath", "prefixKeyRegex", "profileNameBlockList", "parseIni", "iniData", "map", "currentSection", "currentSubSection", "iniLine", "trimmedLine", "sectionName", "matches", "prefix", "name", "indexOfEqualsSign", "swallowError$1", "loadSharedConfigFiles", "filepath", "configFilepath", "homeDir", "relativeHomeDirPrefix", "resolvedFilepath", "resolvedConfigFilepath", "parsedFiles", "getSsoSessionData", "swallowError", "loadSsoSessionData", "mergeConfigFiles", "files", "merged", "file", "values", "parseKnownFiles", "externalDataInterceptor", "contents", "id", "k", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "propertyProvider", "sharedIniFileLoader", "getSelectorName", "functionString", "constants", "fromEnv", "envVarSelector", "options", "config", "e", "fromSharedConfigFiles", "configSelector", "preferredFile", "init", "profile", "configFile", "credentialsFile", "profileFromCredentials", "profileFromConfig", "mergedProfile", "configValue", "isFunction", "func", "fromStatic", "defaultValue", "loadConfig", "environmentVariableSelector", "configFileSelector", "configuration", "signingName", "logger", "envOptions", "require_getEndpointUrlConfig", "__commonJSMin", "exports", "init_cjs_shim", "shared_ini_file_loader_1", "ENV_ENDPOINT_URL", "CONFIG_ENDPOINT_URL", "getEndpointUrlConfig", "serviceId", "env", "serviceSuffixParts", "w", "serviceEndpointUrl", "endpointUrl", "profile", "config", "servicesSection", "servicePrefixParts", "require_getEndpointFromConfig", "__commonJSMin", "exports", "init_cjs_shim", "node_config_provider_1", "getEndpointUrlConfig_1", "getEndpointFromConfig", "serviceId", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "getEndpointFromConfig", "urlParser", "core", "utilMiddleware", "middlewareSerde", "resolveParamsForS3", "endpointParams", "bucket", "isArnBucketName", "isDnsCompatibleBucketName", "DOMAIN_PATTERN", "IP_ADDRESS_PATTERN", "DOTS_PATTERN", "bucketName", "arn", "partition", "service", "isArn", "isValidArn", "createConfigValueProvider", "configKey", "canonicalEndpointParamKey", "config", "configProvider", "configValue", "credentials", "endpoint", "protocol", "hostname", "port", "path", "toEndpointV1", "getEndpointFromInstructions", "commandInput", "instructionsSupplier", "clientConfig", "context", "endpointFromConfig", "resolveParams", "instructions", "name", "instruction", "endpointMiddleware", "next", "args", "authScheme", "httpAuthOption", "endpointMiddlewareOptions", "getEndpointPlugin", "clientStack", "resolveEndpointConfig", "input", "tls", "useDualstackEndpoint", "useFipsEndpoint", "customEndpointProvider", "resolvedConfig", "configuredEndpointPromise", "resolveEndpointRequiredConfig", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "CLOCK_SKEW_ERROR_CODES", "THROTTLING_ERROR_CODES", "TRANSIENT_ERROR_CODES", "TRANSIENT_ERROR_STATUS_CODES", "NODEJS_TIMEOUT_ERROR_CODES", "NODEJS_NETWORK_ERROR_CODES", "isRetryableByTrait", "error", "isClockSkewError", "isClockSkewCorrectedError", "isBrowserNetworkError", "errorMessages", "isThrottlingError", "isTransientError", "depth", "isServerError", "statusCode", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "serviceErrorClassification", "RETRY_MODES", "DEFAULT_MAX_ATTEMPTS", "DEFAULT_RETRY_MODE", "DefaultRateLimiter", "_DefaultRateLimiter", "options", "currentTimeInSeconds", "amount", "delay", "resolve", "timestamp", "fillAmount", "response", "calculatedRate", "rateToUse", "newRate", "t", "timeBucket", "currentRate", "num", "DEFAULT_RETRY_DELAY_BASE", "MAXIMUM_RETRY_DELAY", "THROTTLING_RETRY_DELAY_BASE", "INITIAL_RETRY_TOKENS", "RETRY_COST", "TIMEOUT_RETRY_COST", "NO_RETRY_INCREMENT", "INVOCATION_ID_HEADER", "REQUEST_HEADER", "getDefaultRetryBackoffStrategy", "delayBase", "attempts", "createDefaultRetryToken", "retryDelay", "retryCount", "retryCost", "StandardRetryStrategy", "maxAttempts", "retryTokenScope", "token", "errorInfo", "errorType", "delayFromErrorType", "capacityCost", "tokenToRenew", "AdaptiveRetryStrategy", "maxAttemptsProvider", "rateLimiter", "ConfiguredRetryStrategy", "computeNextBackoffDelay", "require_isStreamingPayload", "__commonJSMin", "exports", "init_cjs_shim", "stream_1", "isStreamingPayload", "request", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "utilRetry", "protocolHttp", "serviceErrorClassification", "uuid", "utilMiddleware", "smithyClient", "isStreamingPayload", "getDefaultRetryQuota", "initialRetryTokens", "options", "MAX_CAPACITY", "noRetryIncrement", "retryCost", "timeoutRetryCost", "availableCapacity", "getCapacityAmount", "error", "hasRetryTokens", "capacityAmount", "capacityReleaseAmount", "defaultDelayDecider", "delayBase", "attempts", "defaultRetryDecider", "asSdkError", "StandardRetryStrategy", "maxAttemptsProvider", "maxAttempts", "next", "args", "retryTokenAmount", "totalDelay", "request", "response", "output", "e", "err", "delayFromDecider", "delayFromResponse", "getDelayFromRetryAfterHeader", "delay", "resolve", "retryAfterHeaderName", "key", "retryAfter", "retryAfterSeconds", "AdaptiveRetryStrategy", "rateLimiter", "superOptions", "ENV_MAX_ATTEMPTS", "CONFIG_MAX_ATTEMPTS", "NODE_MAX_ATTEMPT_CONFIG_OPTIONS", "env", "value", "maxAttempt", "profile", "resolveRetryConfig", "input", "retryStrategy", "_retryMode", "_maxAttempts", "ENV_RETRY_MODE", "CONFIG_RETRY_MODE", "NODE_RETRY_MODE_CONFIG_OPTIONS", "omitRetryHeadersMiddleware", "omitRetryHeadersMiddlewareOptions", "getOmitRetryHeadersPlugin", "clientStack", "retryMiddleware", "context", "isRetryStrategyV2", "retryToken", "lastError", "totalRetryDelay", "isRequest", "retryErrorInfo", "getRetryErrorInfo", "errorInfo", "getRetryErrorType", "retryAfterHint", "getRetryAfterHint", "retryMiddlewareOptions", "getRetryPlugin", "require_httpAuthSchemeProvider", "__commonJSMin", "exports", "init_cjs_shim", "core_1", "util_middleware_1", "defaultKMSHttpAuthSchemeParametersProvider", "config", "context", "input", "createAwsAuthSigv4HttpAuthOption", "authParameters", "defaultKMSHttpAuthSchemeProvider", "options", "resolveHttpAuthSchemeConfig", "config_0", "require_package", "__commonJSMin", "exports", "module", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "client", "propertyProvider", "ENV_KEY", "ENV_SECRET", "ENV_SESSION", "ENV_EXPIRATION", "ENV_CREDENTIAL_SCOPE", "ENV_ACCOUNT_ID", "fromEnv", "init", "accessKeyId", "secretAccessKey", "sessionToken", "expiry", "credentialScope", "accountId", "credentials", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "propertyProvider", "url", "buffer", "http", "nodeConfigProvider", "urlParser", "httpRequest", "options", "resolve", "reject", "req", "err", "res", "statusCode", "chunks", "chunk", "isImdsCredentials", "arg", "fromImdsCredentials", "creds", "DEFAULT_TIMEOUT", "DEFAULT_MAX_RETRIES", "providerConfigFromInit", "maxRetries", "timeout", "retry", "toRetry", "promise", "i", "ENV_CMDS_FULL_URI", "ENV_CMDS_RELATIVE_URI", "ENV_CMDS_AUTH_TOKEN", "fromContainerMetadata", "init", "requestOptions", "getCmdsUri", "credsResponse", "requestFromEcsImds", "CMDS_IP", "GREENGRASS_HOSTS", "GREENGRASS_PROTOCOLS", "logger", "parsed", "InstanceMetadataV1FallbackError", "_InstanceMetadataV1FallbackError", "message", "tryNextLink", "Endpoint", "ENV_ENDPOINT_NAME", "CONFIG_ENDPOINT_NAME", "ENDPOINT_CONFIG_OPTIONS", "env", "profile", "EndpointMode", "ENV_ENDPOINT_MODE_NAME", "CONFIG_ENDPOINT_MODE_NAME", "ENDPOINT_MODE_CONFIG_OPTIONS", "getInstanceMetadataEndpoint", "getFromEndpointConfig", "getFromEndpointModeConfig", "endpointMode", "STATIC_STABILITY_REFRESH_INTERVAL_SECONDS", "STATIC_STABILITY_REFRESH_INTERVAL_JITTER_WINDOW_SECONDS", "STATIC_STABILITY_DOC_URL", "getExtendedInstanceMetadataCredentials", "credentials", "refreshInterval", "newExpiration", "originalExpiration", "staticStabilityProvider", "provider", "pastCredentials", "e", "IMDS_PATH", "IMDS_TOKEN_PATH", "AWS_EC2_METADATA_V1_DISABLED", "PROFILE_AWS_EC2_METADATA_V1_DISABLED", "X_AWS_EC2_METADATA_TOKEN", "fromInstanceMetadata", "getInstanceMetadataProvider", "disableFetchToken", "getCredentials", "fallbackBlockedFromProfile", "fallbackBlockedFromProcessEnv", "configValue", "envValue", "profileValue", "causes", "imdsProfile", "getProfile", "getCredentialsFromProfile", "endpoint", "token", "getMetadataToken", "error", "credentialsResponse", "require_checkUrl", "__commonJSMin", "exports", "init_cjs_shim", "property_provider_1", "ECS_CONTAINER_HOST", "EKS_CONTAINER_HOST_IPv4", "EKS_CONTAINER_HOST_IPv6", "checkUrl", "url", "logger", "ipComponents", "inRange", "component", "num", "require_requestHelpers", "__commonJSMin", "exports", "init_cjs_shim", "createGetRequest", "getCredentials", "property_provider_1", "protocol_http_1", "smithy_client_1", "util_stream_1", "url", "acc", "k", "v", "response", "logger", "str", "parsed", "parsedBody", "require_retry_wrapper", "__commonJSMin", "exports", "init_cjs_shim", "retryWrapper", "toRetry", "maxRetries", "delayMs", "i", "resolve", "require_fromHttp", "__commonJSMin", "exports", "init_cjs_shim", "tslib_1", "client_1", "node_http_handler_1", "property_provider_1", "promises_1", "checkUrl_1", "requestHelpers_1", "retry_wrapper_1", "AWS_CONTAINER_CREDENTIALS_RELATIVE_URI", "DEFAULT_LINK_LOCAL_HOST", "AWS_CONTAINER_CREDENTIALS_FULL_URI", "AWS_CONTAINER_AUTHORIZATION_TOKEN_FILE", "AWS_CONTAINER_AUTHORIZATION_TOKEN", "fromHttp", "options", "host", "relative", "full", "token", "tokenFile", "warn", "url", "requestHandler", "request", "result", "creds", "e", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "fromHttp_1", "createAwsAuthSigv4HttpAuthOption", "authParameters", "config", "context", "createSmithyApiNoAuthHttpAuthOption", "import_util_middleware", "defaultSSOOIDCHttpAuthSchemeParametersProvider", "defaultSSOOIDCHttpAuthSchemeProvider", "resolveHttpAuthSchemeConfig", "init_httpAuthSchemeProvider", "__esmMin", "init_cjs_shim", "init_dist_es", "input", "options", "config_0", "resolveAwsSdkSigV4Config", "resolveClientEndpointParameters", "commonParams", "init_EndpointParameters", "__esmMin", "init_cjs_shim", "options", "package_default", "init_package", "__esmMin", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "os", "process", "middlewareUserAgent", "crtAvailability", "isCrtAvailable", "createDefaultUserAgentProvider", "serviceId", "clientVersion", "config", "sections", "crtAvailable", "appId", "defaultUserAgent", "UA_APP_ID_ENV_NAME", "UA_APP_ID_INI_NAME", "UA_APP_ID_INI_NAME_DEPRECATED", "NODE_APP_ID_CONFIG_OPTIONS", "env", "profile", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "utilBufferFrom", "utilUtf8", "buffer", "crypto", "Hash", "algorithmIdentifier", "secret", "toHash", "encoding", "castSourceData", "toCast", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "node_fs", "calculateBodyLength", "body", "require_fromBase64", "__commonJSMin", "exports", "init_cjs_shim", "util_buffer_from_1", "BASE64_REGEX", "fromBase64", "input", "buffer", "require_toBase64", "__commonJSMin", "exports", "init_cjs_shim", "util_buffer_from_1", "util_utf8_1", "toBase64", "_input", "input", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "fromBase64", "toBase64", "k", "u", "w", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "_data", "ruleSet", "init_ruleset", "__esmMin", "init_cjs_shim", "import_util_endpoints", "cache", "defaultEndpointResolver", "init_endpointResolver", "__esmMin", "init_cjs_shim", "init_ruleset", "endpointParams", "context", "ruleSet", "import_smithy_client", "import_url_parser", "import_util_base64", "import_util_utf8", "getRuntimeConfig", "init_runtimeConfig_shared", "__esmMin", "init_cjs_shim", "init_dist_es", "init_httpAuthSchemeProvider", "init_endpointResolver", "config", "defaultEndpointResolver", "defaultSSOOIDCHttpAuthSchemeProvider", "ipc", "AwsSdkSigV4Signer", "NoAuthSigner", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "configResolver", "nodeConfigProvider", "propertyProvider", "AWS_EXECUTION_ENV", "AWS_REGION_ENV", "AWS_DEFAULT_REGION_ENV", "ENV_IMDS_DISABLED", "DEFAULTS_MODE_OPTIONS", "IMDS_REGION_PATH", "AWS_DEFAULTS_MODE_ENV", "AWS_DEFAULTS_MODE_CONFIG", "NODE_DEFAULTS_MODE_CONFIG_OPTIONS", "env", "profile", "resolveDefaultsModeConfig", "region", "defaultsMode", "mode", "resolveNodeDefaultsModeAuto", "clientRegion", "resolvedRegion", "inferredRegion", "inferPhysicalRegion", "getInstanceMetadataEndpoint", "httpRequest", "endpoint", "import_util_user_agent_node", "import_config_resolver", "import_hash_node", "import_middleware_retry", "import_node_config_provider", "import_node_http_handler", "import_util_body_length_node", "import_util_retry", "import_smithy_client", "import_util_defaults_mode_node", "getRuntimeConfig", "init_runtimeConfig", "__esmMin", "init_cjs_shim", "init_package", "init_dist_es", "init_runtimeConfig_shared", "config", "defaultsMode", "defaultConfigProvider", "clientSharedValues", "emitWarningIfUnsupportedVersion", "loaderConfig", "loadNodeConfig", "NODE_AUTH_SCHEME_PREFERENCE_OPTIONS", "package_default", "RequestHandler", "require_dist_cjs", "__commonJSMin", "exports", "module", "init_cjs_shim", "__defProp", "__getOwnPropDesc", "__getOwnPropNames", "__hasOwnProp", "__name", "target", "value", "__export", "all", "name", "__copyProps", "to", "from", "except", "desc", "key", "__toCommonJS", "mod", "index_exports", "NODE_REGION_CONFIG_FILE_OPTIONS", "NODE_REGION_CONFIG_OPTIONS", "REGION_ENV_NAME", "REGION_INI_NAME", "getAwsRegionExtensionConfiguration", "resolveAwsRegionExtensionConfiguration", "resolveRegionConfig", "runtimeConfig", "region", "awsRegionExtensionConfiguration", "env", "profile", "isFipsRegion", "getRealRegion", "input", "useFipsEndpoint", "providedRegion", "getHttpAuthExtensionConfiguration", "resolveHttpAuthRuntimeConfig", "init_httpAuthExtensionConfiguration", "__esmMin", "init_cjs_shim", "runtimeConfig", "_httpAuthSchemes", "_httpAuthSchemeProvider", "_credentials", "httpAuthScheme", "index", "scheme", "httpAuthSchemeProvider", "credentials", "config", "import_region_config_resolver", "import_protocol_http", "import_smithy_client", "resolveRuntimeExtensions", "init_runtimeExtensions", "__esmMin", "init_cjs_shim", "init_httpAuthExtensionConfiguration", "runtimeConfig", "extensions", "extensionConfiguration", "getHttpAuthExtensionConfiguration", "extension", "resolveHttpAuthRuntimeConfig", "import_middleware_host_header", "import_middleware_logger", "import_middleware_recursion_detection", "import_middleware_user_agent", "import_config_resolver", "import_middleware_content_length", "import_middleware_endpoint", "import_middleware_retry", "import_smithy_client", "SSOOIDCClient", "init_SSOOIDCClient", "__esmMin", "init_cjs_shim", "init_dist_es", "init_httpAuthSchemeProvider", "init_EndpointParameters", "init_runtimeConfig", "init_runtimeExtensions", "__Client", "configuration", "_config_0", "getRuntimeConfig", "_config_1", "resolveClientEndpointParameters", "_config_2", "_config_3", "_config_4", "_config_5", "_config_6", "_config_7", "resolveHttpAuthSchemeConfig", "_config_8", "resolveRuntimeExtensions", "getHttpAuthSchemeEndpointRuleSetPlugin", "defaultSSOOIDCHttpAuthSchemeParametersProvider", "config", "DefaultIdentityProviderConfig", "getHttpSigningPlugin", "import_smithy_client", "SSOOIDCServiceException", "init_SSOOIDCServiceException", "__esmMin", "init_cjs_shim", "_SSOOIDCServiceException", "__ServiceException", "options", "import_smithy_client", "AccessDeniedExceptionReason", "AccessDeniedException", "AuthorizationPendingException", "CreateTokenRequestFilterSensitiveLog", "CreateTokenResponseFilterSensitiveLog", "ExpiredTokenException", "InternalServerException", "InvalidClientException", "InvalidGrantException", "InvalidRequestExceptionReason", "InvalidRequestException", "InvalidScopeException", "SlowDownException", "UnauthorizedClientException", "UnsupportedGrantTypeException", "init_models_0", "__esmMin", "init_cjs_shim", "init_SSOOIDCServiceException", "_AccessDeniedException", "SSOOIDCServiceException", "opts", "_AuthorizationPendingException", "obj", "_ExpiredTokenException", "_InternalServerException", "_InvalidClientException", "_InvalidGrantException", "_InvalidRequestException", "_InvalidScopeException", "_SlowDownException", "_UnauthorizedClientException", "_UnsupportedGrantTypeException", "import_smithy_client", "se_CreateTokenCommand", "de_CreateTokenCommand", "de_CommandError", "throwDefaultError", "de_AccessDeniedExceptionRes", "de_AuthorizationPendingExceptionRes", "de_ExpiredTokenExceptionRes", "de_InternalServerExceptionRes", "de_InvalidClientExceptionRes", "de_InvalidGrantExceptionRes", "de_InvalidRequestExceptionRes", "de_InvalidScopeExceptionRes", "de_SlowDownExceptionRes", "de_UnauthorizedClientExceptionRes", "de_UnsupportedGrantTypeExceptionRes", "deserializeMetadata", "init_Aws_restJson1", "__esmMin", "init_cjs_shim", "init_dist_es", "init_models_0", "init_SSOOIDCServiceException", "input", "context", "b", "requestBuilder", "headers", "body", "_", "output", "contents", "data", "__expectNonNull", "__expectObject", "parseJsonBody", "doc", "__expectString", "__expectInt32", "parsedOutput", "parseJsonErrorBody", "errorCode", "loadRestJsonErrorCode", "parsedBody", "SSOOIDCServiceException", "exception", "AccessDeniedException", "__decorateServiceException", "AuthorizationPendingException", "ExpiredTokenException", "InternalServerException", "InvalidClientException", "InvalidGrantException", "InvalidRequestException", "InvalidScopeException", "SlowDownException", "UnauthorizedClientException", "UnsupportedGrantTypeException", "import_middleware_endpoint", "import_middleware_serde", "import_smithy_client", "CreateTokenCommand", "init_CreateTokenCommand", "__esmMin", "init_cjs_shim", "init_EndpointParameters", "init_models_0", "init_Aws_restJson1", "$Command", "commonParams", "Command", "cs", "config", "o", "CreateTokenRequestFilterSensitiveLog", "CreateTokenResponseFilterSensitiveLog", "se_CreateTokenCommand", "de_CreateTokenCommand", "import_smithy_client", "commands", "SSOOIDC", "init_SSOOIDC", "__esmMin", "init_cjs_shim", "init_CreateTokenCommand", "init_SSOOIDCClient", "CreateTokenCommand", "SSOOIDCClient", "init_commands", "__esmMin", "init_cjs_shim", "init_CreateTokenCommand", "init_models", "__esmMin", "init_cjs_shim", "init_models_0", "sso_oidc_exports", "__export", "$Command", "AccessDeniedException", "AccessDeniedExceptionReason", "AuthorizationPendingException", "CreateTokenCommand", "CreateTokenRequestFilterSensitiveLog", "CreateTokenResponseFilterSensitiveLog", "ExpiredTokenException", "InternalServerException", "InvalidClientException", "InvalidGrantException", "InvalidRequestException", "InvalidRequestExceptionReason", "InvalidScopeException", "SSOOIDC", "SSOOIDCClient", "SSOOIDCServiceException", "SlowDownException", "UnauthorizedClientException", "UnsupportedGrantTypeException", "__Client", "init_sso_oidc", "__esmMin", "init_cjs_shim", "init_SSOOIDCClient", "init_SSOOIDC", "init_commands", "init_models", "init_SSOOIDCServiceException", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "client", "httpAuthSchemes", "propertyProvider", "sharedIniFileLoader", "fs", "fromEnvSigningName", "logger", "signingName", "bearerTokenKey", "token", "EXPIRE_WINDOW_MS", "REFRESH_MESSAGE", "getSsoOidcClient", "ssoRegion", "init", "SSOOIDCClient", "getNewSsoOidcToken", "ssoToken", "CreateTokenCommand", "validateTokenExpiry", "validateTokenKey", "key", "value", "forRefresh", "writeFile", "writeSSOTokenToFile", "id", "tokenFilepath", "tokenString", "lastRefreshAttemptTime", "fromSso", "_init", "callerClientConfig", "profiles", "profileName", "profile", "ssoSessionName", "ssoSession", "ssoSessionRequiredKey", "accessToken", "expiresAt", "existingToken", "newSsoOidcToken", "newTokenExpiration", "fromStatic", "nodeProvider", "require_httpAuthSchemeProvider", "__commonJSMin", "exports", "init_cjs_shim", "core_1", "util_middleware_1", "defaultSSOHttpAuthSchemeParametersProvider", "config", "context", "input", "createAwsAuthSigv4HttpAuthOption", "authParameters", "createSmithyApiNoAuthHttpAuthOption", "defaultSSOHttpAuthSchemeProvider", "options", "resolveHttpAuthSchemeConfig", "config_0", "require_package", "__commonJSMin", "exports", "module", "require_fromBase64", "__commonJSMin", "exports", "init_cjs_shim", "util_buffer_from_1", "BASE64_REGEX", "fromBase64", "input", "buffer", "require_toBase64", "__commonJSMin", "exports", "init_cjs_shim", "util_buffer_from_1", "util_utf8_1", "toBase64", "_input", "input", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "fromBase64", "toBase64", "k", "require_ruleset", "__commonJSMin", "exports", "init_cjs_shim", "u", "v", "w", "x", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "_data", "require_endpointResolver", "__commonJSMin", "exports", "init_cjs_shim", "util_endpoints_1", "util_endpoints_2", "ruleset_1", "cache", "defaultEndpointResolver", "endpointParams", "context", "require_runtimeConfig_shared", "__commonJSMin", "exports", "init_cjs_shim", "core_1", "core_2", "smithy_client_1", "url_parser_1", "util_base64_1", "util_utf8_1", "httpAuthSchemeProvider_1", "endpointResolver_1", "getRuntimeConfig", "config", "ipc", "require_runtimeConfig", "__commonJSMin", "exports", "init_cjs_shim", "tslib_1", "package_json_1", "core_1", "util_user_agent_node_1", "config_resolver_1", "hash_node_1", "middleware_retry_1", "node_config_provider_1", "node_http_handler_1", "util_body_length_node_1", "util_retry_1", "runtimeConfig_shared_1", "smithy_client_1", "util_defaults_mode_node_1", "smithy_client_2", "getRuntimeConfig", "config", "defaultsMode", "defaultConfigProvider", "clientSharedValues", "loaderConfig", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "middlewareHostHeader", "middlewareLogger", "middlewareRecursionDetection", "middlewareUserAgent", "configResolver", "core", "middlewareContentLength", "middlewareEndpoint", "middlewareRetry", "smithyClient", "httpAuthSchemeProvider", "runtimeConfig", "regionConfigResolver", "protocolHttp", "middlewareSerde", "core$1", "resolveClientEndpointParameters", "options", "commonParams", "getHttpAuthExtensionConfiguration", "_httpAuthSchemes", "_httpAuthSchemeProvider", "_credentials", "httpAuthScheme", "index", "scheme", "credentials", "resolveHttpAuthRuntimeConfig", "config", "resolveRuntimeExtensions", "extensions", "extensionConfiguration", "extension", "SSOClient", "configuration", "_config_0", "_config_1", "_config_2", "_config_3", "_config_4", "_config_5", "_config_6", "_config_7", "_config_8", "SSOServiceException", "_SSOServiceException", "InvalidRequestException", "_InvalidRequestException", "opts", "ResourceNotFoundException", "_ResourceNotFoundException", "TooManyRequestsException", "_TooManyRequestsException", "UnauthorizedException", "_UnauthorizedException", "GetRoleCredentialsRequestFilterSensitiveLog", "obj", "RoleCredentialsFilterSensitiveLog", "GetRoleCredentialsResponseFilterSensitiveLog", "ListAccountRolesRequestFilterSensitiveLog", "ListAccountsRequestFilterSensitiveLog", "LogoutRequestFilterSensitiveLog", "se_GetRoleCredentialsCommand", "input", "context", "b", "headers", "_xasbt", "_aT", "query", "_rn", "_rN", "_ai", "_aI", "se_ListAccountRolesCommand", "_nt", "_nT", "_mr", "_mR", "se_ListAccountsCommand", "se_LogoutCommand", "de_GetRoleCredentialsCommand", "output", "de_CommandError", "contents", "deserializeMetadata", "data", "doc", "de_ListAccountRolesCommand", "de_ListAccountsCommand", "de_LogoutCommand", "parsedOutput", "errorCode", "de_InvalidRequestExceptionRes", "de_ResourceNotFoundExceptionRes", "de_TooManyRequestsExceptionRes", "de_UnauthorizedExceptionRes", "parsedBody", "throwDefaultError", "exception", "GetRoleCredentialsCommand", "Command", "cs", "o", "ListAccountRolesCommand", "ListAccountsCommand", "LogoutCommand", "commands", "SSO", "paginateListAccountRoles", "paginateListAccounts", "require_loadSso_CVy8iqsZ", "__commonJSMin", "exports", "init_cjs_shim", "clientSso", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "propertyProvider", "sharedIniFileLoader", "client", "tokenProviders", "isSsoProfile", "arg", "SHOULD_FAIL_CREDENTIAL_CHAIN", "resolveSSOCredentials", "ssoStartUrl", "ssoSession", "ssoAccountId", "ssoRegion", "ssoRoleName", "ssoClient", "clientConfig", "parentClientConfig", "profile", "filepath", "configFilepath", "ignoreCache", "logger", "token", "refreshMessage", "_token", "e", "accessToken", "SSOClient", "GetRoleCredentialsCommand", "sso", "ssoResp", "accessKeyId", "secretAccessKey", "sessionToken", "expiration", "credentialScope", "accountId", "credentials", "validateSsoProfile", "sso_start_url", "sso_account_id", "sso_region", "sso_role_name", "fromSSO", "init", "callerClientConfig", "profileName", "session", "conflictMsg", "sso_session", "createAwsAuthSigv4HttpAuthOption", "authParameters", "config", "context", "createSmithyApiNoAuthHttpAuthOption", "import_util_middleware", "defaultSTSHttpAuthSchemeParametersProvider", "defaultSTSHttpAuthSchemeProvider", "resolveStsAuthConfig", "resolveHttpAuthSchemeConfig", "init_httpAuthSchemeProvider", "__esmMin", "init_cjs_shim", "init_dist_es", "init_STSClient", "input", "options", "STSClient", "config_0", "config_1", "resolveAwsSdkSigV4Config", "resolveClientEndpointParameters", "commonParams", "init_EndpointParameters", "__esmMin", "init_cjs_shim", "options", "F", "G", "I", "c", "d", "e", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "A", "B", "C", "D", "E", "_data", "ruleSet", "init_ruleset", "__esmMin", "init_cjs_shim", "import_util_endpoints", "cache", "defaultEndpointResolver", "init_endpointResolver", "__esmMin", "init_cjs_shim", "init_ruleset", "endpointParams", "context", "ruleSet", "import_smithy_client", "import_url_parser", "import_util_base64", "import_util_utf8", "getRuntimeConfig", "init_runtimeConfig_shared", "__esmMin", "init_cjs_shim", "init_dist_es", "init_httpAuthSchemeProvider", "init_endpointResolver", "config", "defaultEndpointResolver", "defaultSTSHttpAuthSchemeProvider", "ipc", "AwsSdkSigV4Signer", "NoAuthSigner", "import_util_user_agent_node", "import_config_resolver", "import_hash_node", "import_middleware_retry", "import_node_config_provider", "import_node_http_handler", "import_util_body_length_node", "import_util_retry", "import_smithy_client", "import_util_defaults_mode_node", "getRuntimeConfig", "init_runtimeConfig", "__esmMin", "init_cjs_shim", "init_package", "init_dist_es", "init_runtimeConfig_shared", "config", "defaultsMode", "defaultConfigProvider", "clientSharedValues", "emitWarningIfUnsupportedVersion", "loaderConfig", "loadNodeConfig", "NODE_AUTH_SCHEME_PREFERENCE_OPTIONS", "package_default", "ipc", "idProps", "AwsSdkSigV4Signer", "NoAuthSigner", "RequestHandler", "getHttpAuthExtensionConfiguration", "resolveHttpAuthRuntimeConfig", "init_httpAuthExtensionConfiguration", "__esmMin", "init_cjs_shim", "runtimeConfig", "_httpAuthSchemes", "_httpAuthSchemeProvider", "_credentials", "httpAuthScheme", "index", "scheme", "httpAuthSchemeProvider", "credentials", "config", "import_region_config_resolver", "import_protocol_http", "import_smithy_client", "resolveRuntimeExtensions", "init_runtimeExtensions", "__esmMin", "init_cjs_shim", "init_httpAuthExtensionConfiguration", "runtimeConfig", "extensions", "extensionConfiguration", "getHttpAuthExtensionConfiguration", "extension", "resolveHttpAuthRuntimeConfig", "import_middleware_host_header", "import_middleware_logger", "import_middleware_recursion_detection", "import_middleware_user_agent", "import_config_resolver", "import_middleware_content_length", "import_middleware_endpoint", "import_middleware_retry", "import_smithy_client", "STSClient", "init_STSClient", "__esmMin", "init_cjs_shim", "init_dist_es", "init_httpAuthSchemeProvider", "init_EndpointParameters", "init_runtimeConfig", "init_runtimeExtensions", "__Client", "configuration", "_config_0", "getRuntimeConfig", "_config_1", "resolveClientEndpointParameters", "_config_2", "_config_3", "_config_4", "_config_5", "_config_6", "_config_7", "resolveHttpAuthSchemeConfig", "_config_8", "resolveRuntimeExtensions", "getHttpAuthSchemeEndpointRuleSetPlugin", "defaultSTSHttpAuthSchemeParametersProvider", "config", "DefaultIdentityProviderConfig", "getHttpSigningPlugin", "import_smithy_client", "STSServiceException", "init_STSServiceException", "__esmMin", "init_cjs_shim", "_STSServiceException", "__ServiceException", "options", "import_smithy_client", "CredentialsFilterSensitiveLog", "AssumeRoleResponseFilterSensitiveLog", "ExpiredTokenException", "MalformedPolicyDocumentException", "PackedPolicyTooLargeException", "RegionDisabledException", "IDPRejectedClaimException", "InvalidIdentityTokenException", "AssumeRoleWithWebIdentityRequestFilterSensitiveLog", "AssumeRoleWithWebIdentityResponseFilterSensitiveLog", "IDPCommunicationErrorException", "init_models_0", "__esmMin", "init_cjs_shim", "init_STSServiceException", "obj", "_ExpiredTokenException", "STSServiceException", "opts", "_MalformedPolicyDocumentException", "_PackedPolicyTooLargeException", "_RegionDisabledException", "_IDPRejectedClaimException", "_InvalidIdentityTokenException", "_IDPCommunicationErrorException", "import_protocol_http", "import_smithy_client", "se_AssumeRoleCommand", "se_AssumeRoleWithWebIdentityCommand", "de_AssumeRoleCommand", "de_AssumeRoleWithWebIdentityCommand", "de_CommandError", "de_ExpiredTokenExceptionRes", "de_IDPCommunicationErrorExceptionRes", "de_IDPRejectedClaimExceptionRes", "de_InvalidIdentityTokenExceptionRes", "de_MalformedPolicyDocumentExceptionRes", "de_PackedPolicyTooLargeExceptionRes", "de_RegionDisabledExceptionRes", "se_AssumeRoleRequest", "se_AssumeRoleWithWebIdentityRequest", "se_policyDescriptorListType", "se_PolicyDescriptorType", "se_ProvidedContext", "se_ProvidedContextsListType", "se_Tag", "se_tagKeyListType", "se_tagListType", "de_AssumedRoleUser", "de_AssumeRoleResponse", "de_AssumeRoleWithWebIdentityResponse", "de_Credentials", "de_ExpiredTokenException", "de_IDPCommunicationErrorException", "de_IDPRejectedClaimException", "de_InvalidIdentityTokenException", "de_MalformedPolicyDocumentException", "de_PackedPolicyTooLargeException", "de_RegionDisabledException", "deserializeMetadata", "throwDefaultError", "buildHttpRpcRequest", "SHARED_HEADERS", "_", "_A", "_AKI", "_AR", "_ARI", "_ARU", "_ARWWI", "_Ar", "_Au", "_C", "_CA", "_DS", "_E", "_EI", "_K", "_P", "_PA", "_PAr", "_PC", "_PI", "_PPS", "_Pr", "_RA", "_RSN", "_SAK", "_SFWIT", "_SI", "_SN", "_ST", "_T", "_TC", "_TTK", "_V", "_Va", "_WIT", "_a", "_m", "buildFormUrlencodedString", "loadQueryErrorCode", "init_Aws_query", "__esmMin", "init_cjs_shim", "init_dist_es", "init_models_0", "init_STSServiceException", "input", "context", "headers", "body", "output", "data", "parseXmlBody", "contents", "parsedOutput", "parseXmlErrorBody", "errorCode", "parsedBody", "deserialized", "exception", "ExpiredTokenException", "__decorateServiceException", "IDPCommunicationErrorException", "IDPRejectedClaimException", "InvalidIdentityTokenException", "MalformedPolicyDocumentException", "PackedPolicyTooLargeException", "RegionDisabledException", "entries", "memberEntries", "key", "value", "loc", "counter", "entry", "__expectString", "__strictParseInt32", "__expectNonNull", "__parseRfc3339DateTimeWithOffset", "STSServiceException", "path", "resolvedHostname", "hostname", "protocol", "port", "basePath", "__HttpRequest", "formEntries", "__extendedEncodeURIComponent", "import_middleware_endpoint", "import_middleware_serde", "import_smithy_client", "AssumeRoleCommand", "init_AssumeRoleCommand", "__esmMin", "init_cjs_shim", "init_EndpointParameters", "init_models_0", "init_Aws_query", "$Command", "commonParams", "Command", "cs", "config", "o", "AssumeRoleResponseFilterSensitiveLog", "se_AssumeRoleCommand", "de_AssumeRoleCommand", "import_middleware_endpoint", "import_middleware_serde", "import_smithy_client", "AssumeRoleWithWebIdentityCommand", "init_AssumeRoleWithWebIdentityCommand", "__esmMin", "init_cjs_shim", "init_EndpointParameters", "init_models_0", "init_Aws_query", "$Command", "commonParams", "Command", "cs", "config", "o", "AssumeRoleWithWebIdentityRequestFilterSensitiveLog", "AssumeRoleWithWebIdentityResponseFilterSensitiveLog", "se_AssumeRoleWithWebIdentityCommand", "de_AssumeRoleWithWebIdentityCommand", "import_smithy_client", "commands", "STS", "init_STS", "__esmMin", "init_cjs_shim", "init_AssumeRoleCommand", "init_AssumeRoleWithWebIdentityCommand", "init_STSClient", "AssumeRoleCommand", "AssumeRoleWithWebIdentityCommand", "STSClient", "init_commands", "__esmMin", "init_cjs_shim", "init_AssumeRoleCommand", "init_AssumeRoleWithWebIdentityCommand", "init_models", "__esmMin", "init_cjs_shim", "init_models_0", "ASSUME_ROLE_DEFAULT_REGION", "getAccountIdFromAssumedRoleUser", "resolveRegion", "getDefaultRoleAssumer", "getDefaultRoleAssumerWithWebIdentity", "isH2", "init_defaultStsRoleAssumers", "__esmMin", "init_cjs_shim", "init_client", "init_AssumeRoleCommand", "init_AssumeRoleWithWebIdentityCommand", "assumedRoleUser", "arnComponents", "_region", "_parentRegion", "credentialProviderLogger", "region", "parentRegion", "stsOptions", "STSClient", "stsClient", "closureSourceCreds", "sourceCreds", "params", "logger", "requestHandler", "resolvedRegion", "isCompatibleRequestHandler", "Credentials", "AssumedRoleUser", "AssumeRoleCommand", "accountId", "credentials", "setCredentialFeature", "AssumeRoleWithWebIdentityCommand", "getCustomizableStsClientCtor", "getDefaultRoleAssumer", "getDefaultRoleAssumerWithWebIdentity", "decorateDefaultCredentialProvider", "init_defaultRoleAssumers", "__esmMin", "init_cjs_shim", "init_defaultStsRoleAssumers", "init_STSClient", "baseCtor", "customizations", "config", "customization", "stsOptions", "stsPlugins", "STSClient", "provider", "input", "sts_exports", "__export", "AssumeRoleCommand", "AssumeRoleResponseFilterSensitiveLog", "AssumeRoleWithWebIdentityCommand", "AssumeRoleWithWebIdentityRequestFilterSensitiveLog", "AssumeRoleWithWebIdentityResponseFilterSensitiveLog", "CredentialsFilterSensitiveLog", "ExpiredTokenException", "IDPCommunicationErrorException", "IDPRejectedClaimException", "InvalidIdentityTokenException", "MalformedPolicyDocumentException", "PackedPolicyTooLargeException", "RegionDisabledException", "STS", "STSClient", "STSServiceException", "__Client", "decorateDefaultCredentialProvider", "getDefaultRoleAssumer", "getDefaultRoleAssumerWithWebIdentity", "init_sts", "__esmMin", "init_cjs_shim", "init_STSClient", "init_STS", "init_commands", "init_models", "init_defaultRoleAssumers", "init_STSServiceException", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "sharedIniFileLoader", "propertyProvider", "child_process", "util", "client", "getValidatedProcessCredentials", "profileName", "data", "profiles", "currentTime", "accountId", "credentials", "resolveProcessCredentials", "logger", "profile", "credentialProcess", "execPromise", "stdout", "error", "fromProcess", "init", "callerClientConfig", "require_fromWebToken", "__commonJSMin", "exports", "init_cjs_shim", "__createBinding", "o", "m", "k", "k2", "desc", "__setModuleDefault", "v", "__importStar", "ownKeys", "ar", "mod", "result", "i", "fromWebToken", "init", "awsIdentityProperties", "roleArn", "roleSessionName", "webIdentityToken", "providerId", "policyArns", "policy", "durationSeconds", "roleAssumerWithWebIdentity", "getDefaultRoleAssumerWithWebIdentity", "require_fromTokenFile", "__commonJSMin", "exports", "init_cjs_shim", "client_1", "property_provider_1", "shared_ini_file_loader_1", "fs_1", "fromWebToken_1", "ENV_TOKEN_FILE", "ENV_ROLE_ARN", "ENV_ROLE_SESSION_NAME", "fromTokenFile", "init", "webIdentityTokenFile", "roleArn", "roleSessionName", "credentials", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "fromTokenFile", "fromWebToken", "k", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "sharedIniFileLoader", "propertyProvider", "client", "resolveCredentialSource", "credentialSource", "profileName", "logger", "sourceProvidersMap", "options", "fromHttp", "fromContainerMetadata", "setNamedProvider", "fromInstanceMetadata", "fromEnv", "creds", "isAssumeRoleProfile", "arg", "profile", "isAssumeRoleWithSourceProfile", "isCredentialSourceProfile", "withSourceProfile", "withProviderProfile", "resolveAssumeRoleCredentials", "profiles", "visitedProfiles", "profileData", "source_profile", "region", "getDefaultRoleAssumer", "sourceCredsProvider", "resolveProfileData", "isCredentialSourceWithoutRoleArn", "params", "mfa_serial", "sourceCreds", "section", "isProcessProfile", "resolveProcessCredentials", "fromProcess", "resolveSsoCredentials", "fromSSO", "isSsoProfile", "isStaticCredsProfile", "resolveStaticCredentials", "credentials", "isWebIdentityProfile", "resolveWebIdentityCredentials", "fromTokenFile", "isAssumeRoleRecursiveCall", "data", "fromIni", "_init", "callerClientConfig", "init", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "credentialProviderEnv", "propertyProvider", "sharedIniFileLoader", "ENV_IMDS_DISABLED", "remoteProvider", "init", "ENV_CMDS_FULL_URI", "ENV_CMDS_RELATIVE_URI", "fromContainerMetadata", "fromInstanceMetadata", "fromHttp", "multipleCredentialSourceWarningEmitted", "defaultProvider", "ssoStartUrl", "ssoAccountId", "ssoRegion", "ssoRoleName", "ssoSession", "fromSSO", "fromIni", "fromProcess", "fromTokenFile", "credentialsTreatedAsExpired", "credentialsWillNeedRefresh", "credentials", "require_fromBase64", "__commonJSMin", "exports", "init_cjs_shim", "util_buffer_from_1", "BASE64_REGEX", "fromBase64", "input", "buffer", "require_toBase64", "__commonJSMin", "exports", "init_cjs_shim", "util_buffer_from_1", "util_utf8_1", "toBase64", "_input", "input", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "fromBase64", "toBase64", "k", "require_ruleset", "__commonJSMin", "exports", "init_cjs_shim", "s", "t", "u", "v", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "_data", "require_endpointResolver", "__commonJSMin", "exports", "init_cjs_shim", "util_endpoints_1", "util_endpoints_2", "ruleset_1", "cache", "defaultEndpointResolver", "endpointParams", "context", "require_runtimeConfig_shared", "__commonJSMin", "exports", "init_cjs_shim", "core_1", "smithy_client_1", "url_parser_1", "util_base64_1", "util_utf8_1", "httpAuthSchemeProvider_1", "endpointResolver_1", "getRuntimeConfig", "config", "ipc", "require_runtimeConfig", "__commonJSMin", "exports", "init_cjs_shim", "tslib_1", "package_json_1", "core_1", "credential_provider_node_1", "util_user_agent_node_1", "config_resolver_1", "hash_node_1", "middleware_retry_1", "node_config_provider_1", "node_http_handler_1", "util_body_length_node_1", "util_retry_1", "runtimeConfig_shared_1", "smithy_client_1", "util_defaults_mode_node_1", "smithy_client_2", "getRuntimeConfig", "config", "defaultsMode", "defaultConfigProvider", "clientSharedValues", "loaderConfig", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "middlewareHostHeader", "middlewareLogger", "middlewareRecursionDetection", "middlewareUserAgent", "configResolver", "core", "middlewareContentLength", "middlewareEndpoint", "middlewareRetry", "smithyClient", "httpAuthSchemeProvider", "runtimeConfig", "regionConfigResolver", "protocolHttp", "middlewareSerde", "core$1", "resolveClientEndpointParameters", "options", "commonParams", "getHttpAuthExtensionConfiguration", "_httpAuthSchemes", "_httpAuthSchemeProvider", "_credentials", "httpAuthScheme", "index", "scheme", "credentials", "resolveHttpAuthRuntimeConfig", "config", "resolveRuntimeExtensions", "extensions", "extensionConfiguration", "extension", "KMSClient", "configuration", "_config_0", "_config_1", "_config_2", "_config_3", "_config_4", "_config_5", "_config_6", "_config_7", "_config_8", "KMSServiceException", "_KMSServiceException", "AlgorithmSpec", "AlreadyExistsException", "_AlreadyExistsException", "opts", "DependencyTimeoutException", "_DependencyTimeoutException", "InvalidArnException", "_InvalidArnException", "KMSInternalException", "_KMSInternalException", "KMSInvalidStateException", "_KMSInvalidStateException", "NotFoundException", "_NotFoundException", "CloudHsmClusterInUseException", "_CloudHsmClusterInUseException", "CloudHsmClusterInvalidConfigurationException", "_CloudHsmClusterInvalidConfigurationException", "CloudHsmClusterNotActiveException", "_CloudHsmClusterNotActiveException", "CloudHsmClusterNotFoundException", "_CloudHsmClusterNotFoundException", "CloudHsmClusterNotRelatedException", "_CloudHsmClusterNotRelatedException", "ConflictException", "_ConflictException", "CustomKeyStoreInvalidStateException", "_CustomKeyStoreInvalidStateException", "CustomKeyStoreNotFoundException", "_CustomKeyStoreNotFoundException", "ConnectionErrorCodeType", "ConnectionStateType", "InvalidAliasNameException", "_InvalidAliasNameException", "LimitExceededException", "_LimitExceededException", "CustomKeyStoreType", "XksProxyConnectivityType", "CustomKeyStoreNameInUseException", "_CustomKeyStoreNameInUseException", "IncorrectTrustAnchorException", "_IncorrectTrustAnchorException", "XksProxyIncorrectAuthenticationCredentialException", "_XksProxyIncorrectAuthenticationCredentialException", "XksProxyInvalidConfigurationException", "_XksProxyInvalidConfigurationException", "XksProxyInvalidResponseException", "_XksProxyInvalidResponseException", "XksProxyUriEndpointInUseException", "_XksProxyUriEndpointInUseException", "XksProxyUriInUseException", "_XksProxyUriInUseException", "XksProxyUriUnreachableException", "_XksProxyUriUnreachableException", "XksProxyVpcEndpointServiceInUseException", "_XksProxyVpcEndpointServiceInUseException", "XksProxyVpcEndpointServiceInvalidConfigurationException", "_XksProxyVpcEndpointServiceInvalidConfigurationException", "XksProxyVpcEndpointServiceNotFoundException", "_XksProxyVpcEndpointServiceNotFoundException", "GrantOperation", "DisabledException", "_DisabledException", "DryRunOperationException", "_DryRunOperationException", "InvalidGrantTokenException", "_InvalidGrantTokenException", "CustomerMasterKeySpec", "KeySpec", "KeyUsageType", "OriginType", "EncryptionAlgorithmSpec", "ExpirationModelType", "KeyAgreementAlgorithmSpec", "KeyManagerType", "KeyState", "MacAlgorithmSpec", "MultiRegionKeyType", "SigningAlgorithmSpec", "MalformedPolicyDocumentException", "_MalformedPolicyDocumentException", "TagException", "_TagException", "UnsupportedOperationException", "_UnsupportedOperationException", "XksKeyAlreadyInUseException", "_XksKeyAlreadyInUseException", "XksKeyInvalidConfigurationException", "_XksKeyInvalidConfigurationException", "XksKeyNotFoundException", "_XksKeyNotFoundException", "CustomKeyStoreHasCMKsException", "_CustomKeyStoreHasCMKsException", "DataKeyPairSpec", "DataKeySpec", "KeyEncryptionMechanism", "IncorrectKeyException", "_IncorrectKeyException", "InvalidCiphertextException", "_InvalidCiphertextException", "InvalidKeyUsageException", "_InvalidKeyUsageException", "KeyUnavailableException", "_KeyUnavailableException", "InvalidMarkerException", "_InvalidMarkerException", "ExpiredImportTokenException", "_ExpiredImportTokenException", "WrappingKeySpec", "ImportType", "IncorrectKeyMaterialException", "_IncorrectKeyMaterialException", "InvalidImportTokenException", "_InvalidImportTokenException", "ImportState", "IncludeKeyMaterial", "InvalidGrantIdException", "_InvalidGrantIdException", "KeyMaterialState", "KMSInvalidMacException", "_KMSInvalidMacException", "KMSInvalidSignatureException", "_KMSInvalidSignatureException", "RotationType", "MessageType", "XksProxyAuthenticationCredentialTypeFilterSensitiveLog", "obj", "CreateCustomKeyStoreRequestFilterSensitiveLog", "XksProxyConfigurationTypeFilterSensitiveLog", "CustomKeyStoresListEntryFilterSensitiveLog", "DecryptResponseFilterSensitiveLog", "DeriveSharedSecretResponseFilterSensitiveLog", "DescribeCustomKeyStoresResponseFilterSensitiveLog", "item", "EncryptRequestFilterSensitiveLog", "GenerateDataKeyResponseFilterSensitiveLog", "GenerateDataKeyPairResponseFilterSensitiveLog", "GenerateMacRequestFilterSensitiveLog", "GenerateRandomResponseFilterSensitiveLog", "GetParametersForImportResponseFilterSensitiveLog", "SignRequestFilterSensitiveLog", "UpdateCustomKeyStoreRequestFilterSensitiveLog", "VerifyRequestFilterSensitiveLog", "VerifyMacRequestFilterSensitiveLog", "se_CancelKeyDeletionCommand", "input", "context", "headers", "sharedHeaders", "body", "buildHttpRpcRequest", "se_ConnectCustomKeyStoreCommand", "se_CreateAliasCommand", "se_CreateCustomKeyStoreCommand", "se_CreateGrantCommand", "se_CreateKeyCommand", "se_DecryptCommand", "se_DecryptRequest", "se_DeleteAliasCommand", "se_DeleteCustomKeyStoreCommand", "se_DeleteImportedKeyMaterialCommand", "se_DeriveSharedSecretCommand", "se_DeriveSharedSecretRequest", "se_DescribeCustomKeyStoresCommand", "se_DescribeKeyCommand", "se_DisableKeyCommand", "se_DisableKeyRotationCommand", "se_DisconnectCustomKeyStoreCommand", "se_EnableKeyCommand", "se_EnableKeyRotationCommand", "se_EncryptCommand", "se_EncryptRequest", "se_GenerateDataKeyCommand", "se_GenerateDataKeyRequest", "se_GenerateDataKeyPairCommand", "se_GenerateDataKeyPairRequest", "se_GenerateDataKeyPairWithoutPlaintextCommand", "se_GenerateDataKeyWithoutPlaintextCommand", "se_GenerateMacCommand", "se_GenerateMacRequest", "se_GenerateRandomCommand", "se_GenerateRandomRequest", "se_GetKeyPolicyCommand", "se_GetKeyRotationStatusCommand", "se_GetParametersForImportCommand", "se_GetPublicKeyCommand", "se_ImportKeyMaterialCommand", "se_ImportKeyMaterialRequest", "se_ListAliasesCommand", "se_ListGrantsCommand", "se_ListKeyPoliciesCommand", "se_ListKeyRotationsCommand", "se_ListKeysCommand", "se_ListResourceTagsCommand", "se_ListRetirableGrantsCommand", "se_PutKeyPolicyCommand", "se_ReEncryptCommand", "se_ReEncryptRequest", "se_ReplicateKeyCommand", "se_RetireGrantCommand", "se_RevokeGrantCommand", "se_RotateKeyOnDemandCommand", "se_ScheduleKeyDeletionCommand", "se_SignCommand", "se_SignRequest", "se_TagResourceCommand", "se_UntagResourceCommand", "se_UpdateAliasCommand", "se_UpdateCustomKeyStoreCommand", "se_UpdateKeyDescriptionCommand", "se_UpdatePrimaryRegionCommand", "se_VerifyCommand", "se_VerifyRequest", "se_VerifyMacCommand", "se_VerifyMacRequest", "de_CancelKeyDeletionCommand", "output", "de_CommandError", "data", "contents", "deserializeMetadata", "de_ConnectCustomKeyStoreCommand", "de_CreateAliasCommand", "de_CreateCustomKeyStoreCommand", "de_CreateGrantCommand", "de_CreateKeyCommand", "de_CreateKeyResponse", "de_DecryptCommand", "de_DecryptResponse", "de_DeleteAliasCommand", "de_DeleteCustomKeyStoreCommand", "de_DeleteImportedKeyMaterialCommand", "de_DeriveSharedSecretCommand", "de_DeriveSharedSecretResponse", "de_DescribeCustomKeyStoresCommand", "de_DescribeCustomKeyStoresResponse", "de_DescribeKeyCommand", "de_DescribeKeyResponse", "de_DisableKeyCommand", "de_DisableKeyRotationCommand", "de_DisconnectCustomKeyStoreCommand", "de_EnableKeyCommand", "de_EnableKeyRotationCommand", "de_EncryptCommand", "de_EncryptResponse", "de_GenerateDataKeyCommand", "de_GenerateDataKeyResponse", "de_GenerateDataKeyPairCommand", "de_GenerateDataKeyPairResponse", "de_GenerateDataKeyPairWithoutPlaintextCommand", "de_GenerateDataKeyPairWithoutPlaintextResponse", "de_GenerateDataKeyWithoutPlaintextCommand", "de_GenerateDataKeyWithoutPlaintextResponse", "de_GenerateMacCommand", "de_GenerateMacResponse", "de_GenerateRandomCommand", "de_GenerateRandomResponse", "de_GetKeyPolicyCommand", "de_GetKeyRotationStatusCommand", "de_GetKeyRotationStatusResponse", "de_GetParametersForImportCommand", "de_GetParametersForImportResponse", "de_GetPublicKeyCommand", "de_GetPublicKeyResponse", "de_ImportKeyMaterialCommand", "de_ListAliasesCommand", "de_ListAliasesResponse", "de_ListGrantsCommand", "de_ListGrantsResponse", "de_ListKeyPoliciesCommand", "de_ListKeyRotationsCommand", "de_ListKeyRotationsResponse", "de_ListKeysCommand", "de_ListResourceTagsCommand", "de_ListRetirableGrantsCommand", "de_PutKeyPolicyCommand", "de_ReEncryptCommand", "de_ReEncryptResponse", "de_ReplicateKeyCommand", "de_ReplicateKeyResponse", "de_RetireGrantCommand", "de_RevokeGrantCommand", "de_RotateKeyOnDemandCommand", "de_ScheduleKeyDeletionCommand", "de_ScheduleKeyDeletionResponse", "de_SignCommand", "de_SignResponse", "de_TagResourceCommand", "de_UntagResourceCommand", "de_UpdateAliasCommand", "de_UpdateCustomKeyStoreCommand", "de_UpdateKeyDescriptionCommand", "de_UpdatePrimaryRegionCommand", "de_VerifyCommand", "de_VerifyMacCommand", "parsedOutput", "errorCode", "de_DependencyTimeoutExceptionRes", "de_InvalidArnExceptionRes", "de_KMSInternalExceptionRes", "de_KMSInvalidStateExceptionRes", "de_NotFoundExceptionRes", "de_CloudHsmClusterInvalidConfigurationExceptionRes", "de_CloudHsmClusterNotActiveExceptionRes", "de_CustomKeyStoreInvalidStateExceptionRes", "de_CustomKeyStoreNotFoundExceptionRes", "de_AlreadyExistsExceptionRes", "de_InvalidAliasNameExceptionRes", "de_LimitExceededExceptionRes", "de_CloudHsmClusterInUseExceptionRes", "de_CloudHsmClusterNotFoundExceptionRes", "de_CustomKeyStoreNameInUseExceptionRes", "de_IncorrectTrustAnchorExceptionRes", "de_XksProxyIncorrectAuthenticationCredentialExceptionRes", "de_XksProxyInvalidConfigurationExceptionRes", "de_XksProxyInvalidResponseExceptionRes", "de_XksProxyUriEndpointInUseExceptionRes", "de_XksProxyUriInUseExceptionRes", "de_XksProxyUriUnreachableExceptionRes", "de_XksProxyVpcEndpointServiceInUseExceptionRes", "de_XksProxyVpcEndpointServiceInvalidConfigurationExceptionRes", "de_XksProxyVpcEndpointServiceNotFoundExceptionRes", "de_DisabledExceptionRes", "de_DryRunOperationExceptionRes", "de_InvalidGrantTokenExceptionRes", "de_MalformedPolicyDocumentExceptionRes", "de_TagExceptionRes", "de_UnsupportedOperationExceptionRes", "de_XksKeyAlreadyInUseExceptionRes", "de_XksKeyInvalidConfigurationExceptionRes", "de_XksKeyNotFoundExceptionRes", "de_IncorrectKeyExceptionRes", "de_InvalidCiphertextExceptionRes", "de_InvalidKeyUsageExceptionRes", "de_KeyUnavailableExceptionRes", "de_CustomKeyStoreHasCMKsExceptionRes", "de_InvalidMarkerExceptionRes", "de_ExpiredImportTokenExceptionRes", "de_IncorrectKeyMaterialExceptionRes", "de_InvalidImportTokenExceptionRes", "de_InvalidGrantIdExceptionRes", "de_ConflictExceptionRes", "de_CloudHsmClusterNotRelatedExceptionRes", "de_KMSInvalidSignatureExceptionRes", "de_KMSInvalidMacExceptionRes", "parsedBody", "throwDefaultError", "deserialized", "exception", "_", "se_RecipientInfo", "de_AliasList", "e", "entry", "de_AliasListEntry", "de_KeyMetadata", "de_CustomKeyStoresList", "de_CustomKeyStoresListEntry", "de_GrantList", "de_GrantListEntry", "de_RotationsList", "de_RotationsListEntry", "path", "resolvedHostname", "hostname", "protocol", "port", "basePath", "operation", "CancelKeyDeletionCommand", "Command", "cs", "o", "ConnectCustomKeyStoreCommand", "CreateAliasCommand", "CreateCustomKeyStoreCommand", "CreateGrantCommand", "CreateKeyCommand", "DecryptCommand", "DeleteAliasCommand", "DeleteCustomKeyStoreCommand", "DeleteImportedKeyMaterialCommand", "DeriveSharedSecretCommand", "DescribeCustomKeyStoresCommand", "DescribeKeyCommand", "DisableKeyCommand", "DisableKeyRotationCommand", "DisconnectCustomKeyStoreCommand", "EnableKeyCommand", "EnableKeyRotationCommand", "EncryptCommand", "GenerateDataKeyCommand", "GenerateDataKeyPairCommand", "GenerateDataKeyPairWithoutPlaintextCommand", "GenerateDataKeyWithoutPlaintextCommand", "GenerateMacCommand", "GenerateRandomCommand", "GetKeyPolicyCommand", "GetKeyRotationStatusCommand", "GetParametersForImportCommand", "GetPublicKeyCommand", "ImportKeyMaterialCommand", "ListAliasesCommand", "ListGrantsCommand", "ListKeyPoliciesCommand", "ListKeyRotationsCommand", "ListKeysCommand", "ListResourceTagsCommand", "ListRetirableGrantsCommand", "PutKeyPolicyCommand", "ReEncryptCommand", "ReplicateKeyCommand", "RetireGrantCommand", "RevokeGrantCommand", "RotateKeyOnDemandCommand", "ScheduleKeyDeletionCommand", "SignCommand", "TagResourceCommand", "UntagResourceCommand", "UpdateAliasCommand", "UpdateCustomKeyStoreCommand", "UpdateKeyDescriptionCommand", "UpdatePrimaryRegionCommand", "VerifyCommand", "VerifyMacCommand", "commands", "KMS", "paginateDescribeCustomKeyStores", "paginateListAliases", "paginateListGrants", "paginateListKeyPolicies", "paginateListKeyRotations", "paginateListKeys", "paginateListResourceTags", "paginateListRetirableGrants", "require_httpAuthSchemeProvider", "__commonJSMin", "exports", "init_cjs_shim", "core_1", "util_middleware_1", "defaultSecretsManagerHttpAuthSchemeParametersProvider", "config", "context", "input", "createAwsAuthSigv4HttpAuthOption", "authParameters", "defaultSecretsManagerHttpAuthSchemeProvider", "options", "resolveHttpAuthSchemeConfig", "config_0", "require_package", "__commonJSMin", "exports", "module", "require_fromBase64", "__commonJSMin", "exports", "init_cjs_shim", "util_buffer_from_1", "BASE64_REGEX", "fromBase64", "input", "buffer", "require_toBase64", "__commonJSMin", "exports", "init_cjs_shim", "util_buffer_from_1", "util_utf8_1", "toBase64", "_input", "input", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "fromBase64", "toBase64", "k", "require_ruleset", "__commonJSMin", "exports", "init_cjs_shim", "y", "z", "A", "B", "C", "D", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "_data", "require_endpointResolver", "__commonJSMin", "exports", "init_cjs_shim", "util_endpoints_1", "util_endpoints_2", "ruleset_1", "cache", "defaultEndpointResolver", "endpointParams", "context", "require_runtimeConfig_shared", "__commonJSMin", "exports", "init_cjs_shim", "core_1", "smithy_client_1", "url_parser_1", "util_base64_1", "util_utf8_1", "httpAuthSchemeProvider_1", "endpointResolver_1", "getRuntimeConfig", "config", "ipc", "require_runtimeConfig", "__commonJSMin", "exports", "init_cjs_shim", "tslib_1", "package_json_1", "core_1", "credential_provider_node_1", "util_user_agent_node_1", "config_resolver_1", "hash_node_1", "middleware_retry_1", "node_config_provider_1", "node_http_handler_1", "util_body_length_node_1", "util_retry_1", "runtimeConfig_shared_1", "smithy_client_1", "util_defaults_mode_node_1", "smithy_client_2", "getRuntimeConfig", "config", "defaultsMode", "defaultConfigProvider", "clientSharedValues", "loaderConfig", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "middlewareHostHeader", "middlewareLogger", "middlewareRecursionDetection", "middlewareUserAgent", "configResolver", "core", "middlewareContentLength", "middlewareEndpoint", "middlewareRetry", "smithyClient", "httpAuthSchemeProvider", "runtimeConfig", "regionConfigResolver", "protocolHttp", "middlewareSerde", "core$1", "uuid", "resolveClientEndpointParameters", "options", "commonParams", "getHttpAuthExtensionConfiguration", "_httpAuthSchemes", "_httpAuthSchemeProvider", "_credentials", "httpAuthScheme", "index", "scheme", "credentials", "resolveHttpAuthRuntimeConfig", "config", "resolveRuntimeExtensions", "extensions", "extensionConfiguration", "extension", "SecretsManagerClient", "configuration", "_config_0", "_config_1", "_config_2", "_config_3", "_config_4", "_config_5", "_config_6", "_config_7", "_config_8", "SecretsManagerServiceException", "_SecretsManagerServiceException", "FilterNameStringType", "DecryptionFailure", "_DecryptionFailure", "opts", "InternalServiceError", "_InternalServiceError", "InvalidNextTokenException", "_InvalidNextTokenException", "InvalidParameterException", "_InvalidParameterException", "InvalidRequestException", "_InvalidRequestException", "ResourceNotFoundException", "_ResourceNotFoundException", "StatusType", "EncryptionFailure", "_EncryptionFailure", "LimitExceededException", "_LimitExceededException", "MalformedPolicyDocumentException", "_MalformedPolicyDocumentException", "PreconditionNotMetException", "_PreconditionNotMetException", "ResourceExistsException", "_ResourceExistsException", "SortOrderType", "PublicPolicyException", "_PublicPolicyException", "SecretValueEntryFilterSensitiveLog", "obj", "BatchGetSecretValueResponseFilterSensitiveLog", "item", "CreateSecretRequestFilterSensitiveLog", "GetRandomPasswordResponseFilterSensitiveLog", "GetSecretValueResponseFilterSensitiveLog", "PutSecretValueRequestFilterSensitiveLog", "UpdateSecretRequestFilterSensitiveLog", "se_BatchGetSecretValueCommand", "input", "context", "headers", "sharedHeaders", "body", "buildHttpRpcRequest", "se_CancelRotateSecretCommand", "se_CreateSecretCommand", "se_CreateSecretRequest", "se_DeleteResourcePolicyCommand", "se_DeleteSecretCommand", "se_DescribeSecretCommand", "se_GetRandomPasswordCommand", "se_GetResourcePolicyCommand", "se_GetSecretValueCommand", "se_ListSecretsCommand", "se_ListSecretVersionIdsCommand", "se_PutResourcePolicyCommand", "se_PutSecretValueCommand", "se_PutSecretValueRequest", "se_RemoveRegionsFromReplicationCommand", "se_ReplicateSecretToRegionsCommand", "se_RestoreSecretCommand", "se_RotateSecretCommand", "se_RotateSecretRequest", "se_StopReplicationToReplicaCommand", "se_TagResourceCommand", "se_UntagResourceCommand", "se_UpdateSecretCommand", "se_UpdateSecretRequest", "se_UpdateSecretVersionStageCommand", "se_ValidateResourcePolicyCommand", "de_BatchGetSecretValueCommand", "output", "de_CommandError", "data", "contents", "de_BatchGetSecretValueResponse", "deserializeMetadata", "de_CancelRotateSecretCommand", "de_CreateSecretCommand", "de_CreateSecretResponse", "de_DeleteResourcePolicyCommand", "de_DeleteSecretCommand", "de_DeleteSecretResponse", "de_DescribeSecretCommand", "de_DescribeSecretResponse", "de_GetRandomPasswordCommand", "de_GetResourcePolicyCommand", "de_GetSecretValueCommand", "de_GetSecretValueResponse", "de_ListSecretsCommand", "de_ListSecretsResponse", "de_ListSecretVersionIdsCommand", "de_ListSecretVersionIdsResponse", "de_PutResourcePolicyCommand", "de_PutSecretValueCommand", "de_RemoveRegionsFromReplicationCommand", "de_RemoveRegionsFromReplicationResponse", "de_ReplicateSecretToRegionsCommand", "de_ReplicateSecretToRegionsResponse", "de_RestoreSecretCommand", "de_RotateSecretCommand", "de_StopReplicationToReplicaCommand", "de_TagResourceCommand", "de_UntagResourceCommand", "de_UpdateSecretCommand", "de_UpdateSecretVersionStageCommand", "de_ValidateResourcePolicyCommand", "parsedOutput", "errorCode", "de_DecryptionFailureRes", "de_InternalServiceErrorRes", "de_InvalidNextTokenExceptionRes", "de_InvalidParameterExceptionRes", "de_InvalidRequestExceptionRes", "de_ResourceNotFoundExceptionRes", "de_EncryptionFailureRes", "de_LimitExceededExceptionRes", "de_MalformedPolicyDocumentExceptionRes", "de_PreconditionNotMetExceptionRes", "de_ResourceExistsExceptionRes", "de_PublicPolicyExceptionRes", "parsedBody", "throwDefaultError", "deserialized", "exception", "_", "de_SecretValuesType", "de_ReplicationStatusListType", "de_SecretListType", "de_SecretVersionsListType", "e", "entry", "de_ReplicationStatusType", "de_SecretListEntry", "de_SecretValueEntry", "de_SecretVersionsListEntry", "path", "resolvedHostname", "hostname", "protocol", "port", "basePath", "operation", "BatchGetSecretValueCommand", "Command", "cs", "o", "CancelRotateSecretCommand", "CreateSecretCommand", "DeleteResourcePolicyCommand", "DeleteSecretCommand", "DescribeSecretCommand", "GetRandomPasswordCommand", "GetResourcePolicyCommand", "GetSecretValueCommand", "ListSecretsCommand", "ListSecretVersionIdsCommand", "PutResourcePolicyCommand", "PutSecretValueCommand", "RemoveRegionsFromReplicationCommand", "ReplicateSecretToRegionsCommand", "RestoreSecretCommand", "RotateSecretCommand", "StopReplicationToReplicaCommand", "TagResourceCommand", "UntagResourceCommand", "UpdateSecretCommand", "UpdateSecretVersionStageCommand", "ValidateResourcePolicyCommand", "commands", "SecretsManager", "paginateBatchGetSecretValue", "paginateListSecretVersionIds", "paginateListSecrets", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "utilConfigProvider", "core", "protocolHttp", "zlib", "utilUtf8", "util", "isArrayBuffer", "utilMiddleware", "NODE_DISABLE_REQUEST_COMPRESSION_ENV_NAME", "NODE_DISABLE_REQUEST_COMPRESSION_INI_NAME", "DEFAULT_DISABLE_REQUEST_COMPRESSION", "NODE_DISABLE_REQUEST_COMPRESSION_CONFIG_OPTIONS", "env", "profile", "NODE_REQUEST_MIN_COMPRESSION_SIZE_BYTES_ENV_NAME", "NODE_REQUEST_MIN_COMPRESSION_SIZE_BYTES_INI_NAME", "DEFAULT_NODE_REQUEST_MIN_COMPRESSION_SIZE_BYTES", "NODE_REQUEST_MIN_COMPRESSION_SIZE_BYTES_CONFIG_OPTIONS", "compressStream", "body", "gzipAsync", "compressString", "compressedBuffer", "err", "CompressionAlgorithm", "CLIENT_SUPPORTED_ALGORITHMS", "isStreaming", "compressionMiddleware", "config", "middlewareConfig", "next", "context", "args", "request", "headers", "encodings", "streamRequiresLength", "updatedBody", "updatedHeaders", "algorithm", "isRequestCompressed", "bodyLength", "requestMinCompressionSizeBytes", "compressionMiddlewareOptions", "getCompressionPlugin", "clientStack", "resolveCompressionConfig", "input", "disableRequestCompression", "_requestMinCompressionSizeBytes", "require_httpAuthSchemeProvider", "__commonJSMin", "exports", "init_cjs_shim", "core_1", "util_middleware_1", "defaultCloudWatchHttpAuthSchemeParametersProvider", "config", "context", "input", "createAwsAuthSigv4HttpAuthOption", "authParameters", "defaultCloudWatchHttpAuthSchemeProvider", "options", "resolveHttpAuthSchemeConfig", "config_0", "require_package", "__commonJSMin", "exports", "module", "require_fromBase64", "__commonJSMin", "exports", "init_cjs_shim", "util_buffer_from_1", "BASE64_REGEX", "fromBase64", "input", "buffer", "require_toBase64", "__commonJSMin", "exports", "init_cjs_shim", "util_buffer_from_1", "util_utf8_1", "toBase64", "_input", "input", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "fromBase64", "toBase64", "k", "require_ruleset", "__commonJSMin", "exports", "init_cjs_shim", "w", "x", "y", "z", "A", "B", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "_data", "require_endpointResolver", "__commonJSMin", "exports", "init_cjs_shim", "util_endpoints_1", "util_endpoints_2", "ruleset_1", "cache", "defaultEndpointResolver", "endpointParams", "context", "require_runtimeConfig_shared", "__commonJSMin", "exports", "init_cjs_shim", "core_1", "smithy_client_1", "url_parser_1", "util_base64_1", "util_utf8_1", "httpAuthSchemeProvider_1", "endpointResolver_1", "getRuntimeConfig", "config", "ipc", "require_runtimeConfig", "__commonJSMin", "exports", "init_cjs_shim", "tslib_1", "package_json_1", "core_1", "credential_provider_node_1", "util_user_agent_node_1", "config_resolver_1", "hash_node_1", "middleware_compression_1", "middleware_retry_1", "node_config_provider_1", "node_http_handler_1", "util_body_length_node_1", "util_retry_1", "runtimeConfig_shared_1", "smithy_client_1", "util_defaults_mode_node_1", "smithy_client_2", "getRuntimeConfig", "config", "defaultsMode", "defaultConfigProvider", "clientSharedValues", "loaderConfig", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "sleep", "seconds", "resolve", "waiterServiceDefaults", "WaiterState", "checkExceptions", "result", "abortError", "timeoutError", "exponentialBackoffWithJitter", "minDelay", "maxDelay", "attemptCeiling", "attempt", "delay", "randomInRange", "min", "max", "runPolling", "maxWaitTime", "abortController", "client", "abortSignal", "input", "acceptorChecks", "observedResponses", "state", "reason", "message", "createMessageFromResponse", "currentAttempt", "waitUntil", "validateWaiterOptions", "options", "abortTimeout", "onAbort", "promise", "createWaiter", "params", "exitConditions", "finalize", "aborted", "clearListener", "fn", "require_dist_cjs", "__commonJSMin", "exports", "init_cjs_shim", "middlewareHostHeader", "middlewareLogger", "middlewareRecursionDetection", "middlewareUserAgent", "configResolver", "core", "middlewareCompression", "middlewareContentLength", "middlewareEndpoint", "middlewareRetry", "smithyClient", "httpAuthSchemeProvider", "runtimeConfig", "regionConfigResolver", "protocolHttp", "middlewareSerde", "core$1", "utilWaiter", "resolveClientEndpointParameters", "options", "commonParams", "getHttpAuthExtensionConfiguration", "_httpAuthSchemes", "_httpAuthSchemeProvider", "_credentials", "httpAuthScheme", "index", "scheme", "credentials", "resolveHttpAuthRuntimeConfig", "config", "resolveRuntimeExtensions", "extensions", "extensionConfiguration", "extension", "CloudWatchClient", "configuration", "_config_0", "_config_1", "_config_2", "_config_3", "_config_4", "_config_5", "_config_6", "_config_7", "_config_8", "_config_9", "CloudWatchServiceException", "_CloudWatchServiceException", "ActionsSuppressedBy", "AlarmType", "HistoryItemType", "StandardUnit", "AnomalyDetectorStateValue", "AnomalyDetectorType", "ComparisonOperator", "StateValue", "ConcurrentModificationException", "_ConcurrentModificationException", "opts", "ConflictException", "_ConflictException", "DashboardInvalidInputError", "_DashboardInvalidInputError", "DashboardNotFoundError", "_DashboardNotFoundError", "ResourceNotFound", "_ResourceNotFound", "InternalServiceFault", "_InternalServiceFault", "InvalidParameterCombinationException", "_InvalidParameterCombinationException", "InvalidParameterValueException", "_InvalidParameterValueException", "MissingRequiredParameterException", "_MissingRequiredParameterException", "ResourceNotFoundException", "_ResourceNotFoundException", "InvalidNextToken", "_InvalidNextToken", "ScanBy", "EvaluationState", "Statistic", "LimitExceededException", "_LimitExceededException", "StatusCode", "MetricStreamOutputFormat", "RecentlyActive", "LimitExceededFault", "_LimitExceededFault", "InvalidFormatFault", "_InvalidFormatFault", "se_DeleteAlarmsCommand", "input", "context", "headers", "SHARED_HEADERS", "body", "buildFormUrlencodedString", "se_DeleteAlarmsInput", "_A", "_DA", "_V", "_", "buildHttpRpcRequest", "se_DeleteAnomalyDetectorCommand", "se_DeleteAnomalyDetectorInput", "_DAD", "se_DeleteDashboardsCommand", "se_DeleteDashboardsInput", "_DD", "se_DeleteInsightRulesCommand", "se_DeleteInsightRulesInput", "_DIR", "se_DeleteMetricStreamCommand", "se_DeleteMetricStreamInput", "_DMS", "se_DescribeAlarmContributorsCommand", "se_DescribeAlarmContributorsInput", "_DAC", "se_DescribeAlarmHistoryCommand", "se_DescribeAlarmHistoryInput", "_DAH", "se_DescribeAlarmsCommand", "se_DescribeAlarmsInput", "_DAe", "se_DescribeAlarmsForMetricCommand", "se_DescribeAlarmsForMetricInput", "_DAFM", "se_DescribeAnomalyDetectorsCommand", "se_DescribeAnomalyDetectorsInput", "_DADe", "se_DescribeInsightRulesCommand", "se_DescribeInsightRulesInput", "_DIRe", "se_DisableAlarmActionsCommand", "se_DisableAlarmActionsInput", "_DAA", "se_DisableInsightRulesCommand", "se_DisableInsightRulesInput", "_DIRi", "se_EnableAlarmActionsCommand", "se_EnableAlarmActionsInput", "_EAA", "se_EnableInsightRulesCommand", "se_EnableInsightRulesInput", "_EIR", "se_GetDashboardCommand", "se_GetDashboardInput", "_GD", "se_GetInsightRuleReportCommand", "se_GetInsightRuleReportInput", "_GIRR", "se_GetMetricDataCommand", "se_GetMetricDataInput", "_GMD", "se_GetMetricStatisticsCommand", "se_GetMetricStatisticsInput", "_GMS", "se_GetMetricStreamCommand", "se_GetMetricStreamInput", "_GMSe", "se_GetMetricWidgetImageCommand", "se_GetMetricWidgetImageInput", "_GMWI", "se_ListDashboardsCommand", "se_ListDashboardsInput", "_LD", "se_ListManagedInsightRulesCommand", "se_ListManagedInsightRulesInput", "_LMIR", "se_ListMetricsCommand", "se_ListMetricsInput", "_LM", "se_ListMetricStreamsCommand", "se_ListMetricStreamsInput", "_LMS", "se_ListTagsForResourceCommand", "se_ListTagsForResourceInput", "_LTFR", "se_PutAnomalyDetectorCommand", "se_PutAnomalyDetectorInput", "_PAD", "se_PutCompositeAlarmCommand", "se_PutCompositeAlarmInput", "_PCA", "se_PutDashboardCommand", "se_PutDashboardInput", "_PD", "se_PutInsightRuleCommand", "se_PutInsightRuleInput", "_PIR", "se_PutManagedInsightRulesCommand", "se_PutManagedInsightRulesInput", "_PMIR", "se_PutMetricAlarmCommand", "se_PutMetricAlarmInput", "_PMA", "se_PutMetricDataCommand", "se_PutMetricDataInput", "_PMD", "se_PutMetricStreamCommand", "se_PutMetricStreamInput", "_PMS", "se_SetAlarmStateCommand", "se_SetAlarmStateInput", "_SAS", "se_StartMetricStreamsCommand", "se_StartMetricStreamsInput", "_SMS", "se_StopMetricStreamsCommand", "se_StopMetricStreamsInput", "_SMSt", "se_TagResourceCommand", "se_TagResourceInput", "_TR", "se_UntagResourceCommand", "se_UntagResourceInput", "_UR", "de_DeleteAlarmsCommand", "output", "de_CommandError", "deserializeMetadata", "de_DeleteAnomalyDetectorCommand", "data", "contents", "de_DeleteAnomalyDetectorOutput", "de_DeleteDashboardsCommand", "de_DeleteDashboardsOutput", "de_DeleteInsightRulesCommand", "de_DeleteInsightRulesOutput", "de_DeleteMetricStreamCommand", "de_DeleteMetricStreamOutput", "de_DescribeAlarmContributorsCommand", "de_DescribeAlarmContributorsOutput", "de_DescribeAlarmHistoryCommand", "de_DescribeAlarmHistoryOutput", "de_DescribeAlarmsCommand", "de_DescribeAlarmsOutput", "de_DescribeAlarmsForMetricCommand", "de_DescribeAlarmsForMetricOutput", "de_DescribeAnomalyDetectorsCommand", "de_DescribeAnomalyDetectorsOutput", "de_DescribeInsightRulesCommand", "de_DescribeInsightRulesOutput", "de_DisableAlarmActionsCommand", "de_DisableInsightRulesCommand", "de_DisableInsightRulesOutput", "de_EnableAlarmActionsCommand", "de_EnableInsightRulesCommand", "de_EnableInsightRulesOutput", "de_GetDashboardCommand", "de_GetDashboardOutput", "de_GetInsightRuleReportCommand", "de_GetInsightRuleReportOutput", "de_GetMetricDataCommand", "de_GetMetricDataOutput", "de_GetMetricStatisticsCommand", "de_GetMetricStatisticsOutput", "de_GetMetricStreamCommand", "de_GetMetricStreamOutput", "de_GetMetricWidgetImageCommand", "de_GetMetricWidgetImageOutput", "de_ListDashboardsCommand", "de_ListDashboardsOutput", "de_ListManagedInsightRulesCommand", "de_ListManagedInsightRulesOutput", "de_ListMetricsCommand", "de_ListMetricsOutput", "de_ListMetricStreamsCommand", "de_ListMetricStreamsOutput", "de_ListTagsForResourceCommand", "de_ListTagsForResourceOutput", "de_PutAnomalyDetectorCommand", "de_PutAnomalyDetectorOutput", "de_PutCompositeAlarmCommand", "de_PutDashboardCommand", "de_PutDashboardOutput", "de_PutInsightRuleCommand", "de_PutInsightRuleOutput", "de_PutManagedInsightRulesCommand", "de_PutManagedInsightRulesOutput", "de_PutMetricAlarmCommand", "de_PutMetricDataCommand", "de_PutMetricStreamCommand", "de_PutMetricStreamOutput", "de_SetAlarmStateCommand", "de_StartMetricStreamsCommand", "de_StartMetricStreamsOutput", "de_StopMetricStreamsCommand", "de_StopMetricStreamsOutput", "de_TagResourceCommand", "de_TagResourceOutput", "de_UntagResourceCommand", "de_UntagResourceOutput", "parsedOutput", "errorCode", "loadQueryErrorCode", "de_ResourceNotFoundRes", "de_InternalServiceFaultRes", "de_InvalidParameterCombinationExceptionRes", "de_InvalidParameterValueExceptionRes", "de_MissingRequiredParameterExceptionRes", "de_ResourceNotFoundExceptionRes", "de_ConflictExceptionRes", "de_InvalidNextTokenRes", "de_LimitExceededExceptionRes", "de_LimitExceededFaultRes", "de_DashboardInvalidInputErrorRes", "de_ConcurrentModificationExceptionRes", "de_InvalidFormatFaultRes", "parsedBody", "throwDefaultError", "deserialized", "de_ConcurrentModificationException", "exception", "de_ConflictException", "de_DashboardInvalidInputError", "de_InternalServiceFault", "de_InvalidFormatFault", "de_InvalidNextToken", "de_InvalidParameterCombinationException", "de_InvalidParameterValueException", "de_LimitExceededException", "de_LimitExceededFault", "de_MissingRequiredParameterException", "de_ResourceNotFound", "de_ResourceNotFoundException", "se_AlarmNames", "entries", "counter", "entry", "se_AlarmTypes", "se_AnomalyDetectorConfiguration", "_ETR", "memberEntries", "se_AnomalyDetectorExcludedTimeRanges", "key", "value", "loc", "_MT", "se_Range", "se_AnomalyDetectorTypes", "se_Counts", "se_DashboardNames", "_AN", "_N", "_MN", "_D", "se_Dimensions", "_S", "_SMAD", "se_SingleMetricAnomalyDetector", "_MMAD", "se_MetricMathAnomalyDetector", "_DN", "_RN", "se_InsightRuleNames", "_Na", "_ANl", "_NT", "_ACI", "_AT", "_HIT", "_SD", "_ED", "_MR", "_SB", "_St", "_ES", "_P", "_U", "_ANP", "_COAN", "_POAN", "_SV", "_AP", "_MRa", "_ADT", "se_Dimension", "_Va", "se_DimensionFilter", "se_DimensionFilters", "se_Entity", "_KA", "se_EntityKeyAttributesMap", "_At", "se_EntityAttributesMap", "se_EntityMetricData", "_E", "_MD", "se_MetricData", "se_EntityMetricDataList", "se_ExtendedStatistics", "_DNa", "_RNu", "_ST", "_ET", "_MCC", "_M", "se_InsightRuleMetricList", "_OB", "_MDQ", "se_MetricDataQueries", "_MDa", "_LO", "se_LabelOptions", "_Sta", "se_Statistics", "_ESx", "_MW", "_OF", "_T", "_DNP", "_RARN", "_RA", "_ILA", "_OA", "se_ManagedRule", "_TN", "_Ta", "se_TagList", "se_ManagedRules", "se_Metric", "se_MetricCharacteristics", "_PS", "se_MetricDatum", "se_MetricDataQuery", "_I", "_MS", "se_MetricStat", "_Ex", "_L", "_RD", "_AI", "_Ti", "_SVt", "se_StatisticSet", "_Val", "se_Values", "_C", "_SR", "_Me", "se_MetricStreamFilter", "_MNe", "se_MetricStreamFilterMetricNames", "se_MetricStreamFilters", "se_MetricStreamNames", "se_MetricStreamStatisticsAdditionalStatistics", "se_MetricStreamStatisticsConfiguration", "_IM", "se_MetricStreamStatisticsIncludeMetrics", "_AS", "se_MetricStreamStatisticsConfigurations", "se_MetricStreamStatisticsMetric", "_Co", "_MC", "_AE", "_AA", "se_ResourceList", "_AD", "_AR", "_IDA", "_OKA", "_ASc", "_ASWP", "_ASEP", "_DB", "_RS", "_RDu", "_AOTL", "_MRan", "_EP", "_DTA", "_Th", "_CO", "_TMD", "_ELSCP", "_TMI", "_EMD", "_SEV", "_IF", "_EF", "_FA", "_RAo", "_SC", "_ILAM", "_SRt", "_SRD", "_Nam", "_SCa", "_Su", "_Mi", "_Ma", "se_Tag", "_K", "se_TagKeyList", "_TK", "de_AlarmContributor", "_CI", "_CA", "_e", "de_ContributorAttributes", "_STT", "de_AlarmContributors", "e", "de_AlarmHistoryItem", "_ATl", "_HS", "_HD", "_ACA", "de_AlarmHistoryItems", "de_AnomalyDetector", "_m", "de_Dimensions", "de_AnomalyDetectorConfiguration", "de_MetricCharacteristics", "de_SingleMetricAnomalyDetector", "de_MetricMathAnomalyDetector", "de_AnomalyDetectorExcludedTimeRanges", "de_Range", "de_AnomalyDetectors", "de_BatchFailures", "de_PartialFailure", "de_CompositeAlarm", "de_ResourceList", "_AAl", "_ACUT", "_SUT", "_ASB", "_ASR", "de_CompositeAlarms", "_Mes", "acc", "pair", "de_DashboardEntries", "de_DashboardEntry", "_DAa", "_LMa", "_Si", "_me", "_dVM", "de_DashboardValidationMessages", "de_DashboardValidationMessage", "_DP", "de_Datapoint", "_Av", "de_DatapointValueMap", "de_Datapoints", "de_DatapointValues", "_F", "_AC", "_AHI", "_MA", "de_MetricAlarms", "_CAo", "_ADn", "_IR", "de_InsightRules", "de_Dimension", "_KL", "de_InsightRuleContributorKeyLabels", "_ASg", "_AV", "_AUC", "_Con", "de_InsightRuleContributors", "_MDe", "de_InsightRuleMetricDatapoints", "_MDR", "de_MetricDataResults", "_Mess", "de_MetricDataResultMessages", "_Da", "_Ar", "de_MetricStreamFilters", "_Stat", "_CD", "_LUD", "de_MetricStreamStatisticsConfigurations", "_MWI", "de_InsightRule", "_Sc", "_De", "_MRana", "de_InsightRuleContributor", "_Ke", "de_InsightRuleContributorKeys", "_AAV", "de_InsightRuleContributorDatapoints", "de_InsightRuleContributorDatapoint", "_AVp", "de_InsightRuleMetricDatapoint", "_UC", "_MCV", "_DE", "de_ManagedRuleDescriptions", "de_Metrics", "_OAw", "de_OwningAccounts", "_En", "de_MetricStreamEntries", "de_TagList", "de_ManagedRuleDescription", "de_ManagedRuleState", "de_MessageData", "_Cod", "de_Metric", "de_MetricAlarm", "de_MetricDataQueries", "_ESv", "de_MetricDataQuery", "de_MetricStat", "de_MetricDataResult", "_Tim", "de_Timestamps", "_SCt", "de_MetricStreamEntry", "de_MetricStreamFilter", "de_MetricStreamFilterMetricNames", "de_MetricStreamStatisticsAdditionalStatistics", "de_MetricStreamStatisticsConfiguration", "de_MetricStreamStatisticsIncludeMetrics", "de_MetricStreamStatisticsMetric", "_FR", "_ETx", "_FC", "_FD", "_DVM", "_RT", "_RI", "de_Tag", "path", "resolvedHostname", "hostname", "protocol", "port", "basePath", "formEntries", "DeleteAlarmsCommand", "Command", "cs", "o", "DeleteAnomalyDetectorCommand", "DeleteDashboardsCommand", "DeleteInsightRulesCommand", "DeleteMetricStreamCommand", "DescribeAlarmContributorsCommand", "DescribeAlarmHistoryCommand", "DescribeAlarmsCommand", "DescribeAlarmsForMetricCommand", "DescribeAnomalyDetectorsCommand", "DescribeInsightRulesCommand", "DisableAlarmActionsCommand", "DisableInsightRulesCommand", "EnableAlarmActionsCommand", "EnableInsightRulesCommand", "GetDashboardCommand", "GetInsightRuleReportCommand", "GetMetricDataCommand", "GetMetricStatisticsCommand", "GetMetricStreamCommand", "GetMetricWidgetImageCommand", "ListDashboardsCommand", "ListManagedInsightRulesCommand", "ListMetricsCommand", "ListMetricStreamsCommand", "ListTagsForResourceCommand", "PutAnomalyDetectorCommand", "PutCompositeAlarmCommand", "PutDashboardCommand", "PutInsightRuleCommand", "PutManagedInsightRulesCommand", "PutMetricAlarmCommand", "PutMetricDataCommand", "PutMetricStreamCommand", "SetAlarmStateCommand", "StartMetricStreamsCommand", "StopMetricStreamsCommand", "TagResourceCommand", "UntagResourceCommand", "commands", "CloudWatch", "paginateDescribeAlarmHistory", "paginateDescribeAlarms", "paginateDescribeAnomalyDetectors", "paginateDescribeInsightRules", "paginateGetMetricData", "paginateListDashboards", "paginateListManagedInsightRules", "paginateListMetricStreams", "paginateListMetrics", "checkState$1", "client", "reason", "result", "waitForAlarmExists", "params", "serviceDefaults", "waitUntilAlarmExists", "checkState", "waitForCompositeAlarmExists", "waitUntilCompositeAlarmExists", "require_stream", "__commonJSMin", "exports", "module", "init_cjs_shim", "Duplex", "emitClose", "stream", "duplexOnEnd", "duplexOnError", "err", "createWebSocketStream", "ws", "options", "terminateOnDestroy", "duplex", "msg", "isBinary", "data", "callback", "called", "chunk", "encoding", "require_constants", "__commonJSMin", "exports", "module", "init_cjs_shim", "require_node_gyp_build", "__commonJSMin", "exports", "module", "init_cjs_shim", "fs", "path", "os", "runtimeRequire", "__require", "vars", "prebuildsOnly", "abi", "runtime", "isElectron", "isNwjs", "arch", "platform", "libc", "isAlpine", "armv", "uv", "load", "dir", "name", "release", "getFirst", "matchBuild", "debug", "prebuild", "resolve", "nearby", "target", "tuples", "readdirSync", "parseTuple", "tuple", "matchTuple", "compareTuples", "prebuilds", "parsed", "parseTags", "candidates", "matchTags", "winner", "compareTags", "filter", "files", "arr", "architectures", "a", "b", "file", "extension", "tags", "i", "tag", "runtimeAgnostic", "require_node_gyp_build", "__commonJSMin", "exports", "module", "init_cjs_shim", "runtimeRequire", "__require", "require_fallback", "__commonJSMin", "exports", "module", "init_cjs_shim", "mask", "source", "output", "offset", "length", "i", "unmask", "buffer", "require_bufferutil", "__commonJSMin", "exports", "module", "init_cjs_shim", "require_buffer_util", "__commonJSMin", "exports", "module", "init_cjs_shim", "EMPTY_BUFFER", "FastBuffer", "concat", "list", "totalLength", "target", "offset", "i", "buf", "_mask", "source", "mask", "output", "length", "_unmask", "buffer", "toArrayBuffer", "toBuffer", "data", "bufferUtil", "require_limiter", "__commonJSMin", "exports", "module", "init_cjs_shim", "kDone", "kRun", "Limiter", "concurrency", "job", "require_permessage_deflate", "__commonJSMin", "exports", "module", "init_cjs_shim", "zlib", "bufferUtil", "Limiter", "kStatusCode", "FastBuffer", "TRAILER", "kPerMessageDeflate", "kTotalLength", "kCallback", "kBuffers", "kError", "zlibLimiter", "PerMessageDeflate", "options", "isServer", "maxPayload", "concurrency", "params", "configurations", "callback", "offers", "opts", "accepted", "response", "key", "value", "num", "data", "fin", "done", "err", "result", "endpoint", "windowBits", "inflateOnError", "inflateOnData", "deflateOnData", "chunk", "require_validation", "__commonJSMin", "exports", "module", "init_cjs_shim", "isUtf8", "tokenChars", "isValidStatusCode", "code", "_isValidUTF8", "buf", "len", "i", "isValidUTF8", "require_receiver", "__commonJSMin", "exports", "module", "init_cjs_shim", "Writable", "PerMessageDeflate", "BINARY_TYPES", "EMPTY_BUFFER", "kStatusCode", "kWebSocket", "concat", "toArrayBuffer", "unmask", "isValidStatusCode", "isValidUTF8", "FastBuffer", "GET_INFO", "GET_PAYLOAD_LENGTH_16", "GET_PAYLOAD_LENGTH_64", "GET_MASK", "GET_DATA", "INFLATING", "DEFER_EVENT", "Receiver", "options", "chunk", "encoding", "cb", "n", "buf", "dst", "offset", "error", "compressed", "num", "data", "err", "messageLength", "fragments", "code", "ErrorCtor", "message", "prefix", "statusCode", "errorCode", "require_sender", "__commonJSMin", "exports", "module", "init_cjs_shim", "Duplex", "randomFillSync", "PerMessageDeflate", "EMPTY_BUFFER", "isValidStatusCode", "applyMask", "toBuffer", "kByteLength", "maskBuffer", "RANDOM_POOL_SIZE", "randomPool", "randomPoolPointer", "Sender", "_Sender", "socket", "extensions", "generateMask", "data", "options", "mask", "merge", "offset", "skipMasking", "dataLength", "payloadLength", "target", "code", "cb", "buf", "length", "byteLength", "readOnly", "perMessageDeflate", "opcode", "rsv1", "opts", "compress", "_", "err", "i", "params", "callback", "list", "require_event_target", "__commonJSMin", "exports", "module", "init_cjs_shim", "kForOnEventAttribute", "kListener", "kCode", "kData", "kError", "kMessage", "kReason", "kTarget", "kType", "kWasClean", "Event", "type", "CloseEvent", "options", "ErrorEvent", "MessageEvent", "EventTarget", "handler", "listener", "wrapper", "data", "isBinary", "event", "callListener", "code", "message", "error", "thisArg", "require_extension", "__commonJSMin", "exports", "module", "init_cjs_shim", "tokenChars", "push", "dest", "name", "elem", "parse", "header", "offers", "params", "mustUnescape", "isEscaping", "inQuotes", "extensionName", "paramName", "start", "code", "end", "i", "value", "token", "format", "extensions", "extension", "configurations", "k", "values", "v", "require_websocket", "__commonJSMin", "exports", "module", "init_cjs_shim", "EventEmitter", "https", "http", "net", "tls", "randomBytes", "createHash", "Duplex", "Readable", "URL", "PerMessageDeflate", "Receiver", "Sender", "BINARY_TYPES", "EMPTY_BUFFER", "GUID", "kForOnEventAttribute", "kListener", "kStatusCode", "kWebSocket", "NOOP", "addEventListener", "removeEventListener", "format", "parse", "toBuffer", "closeTimeout", "kAborted", "protocolVersions", "readyStates", "subprotocolRegex", "WebSocket", "_WebSocket", "address", "protocols", "options", "initAsClient", "type", "socket", "head", "receiver", "receiverOnConclude", "receiverOnDrain", "receiverOnError", "receiverOnMessage", "receiverOnPing", "receiverOnPong", "socketOnClose", "socketOnData", "socketOnEnd", "socketOnError", "code", "data", "abortHandshake", "err", "mask", "cb", "sendAfterClose", "opts", "property", "method", "listener", "handler", "websocket", "parsedUrl", "isSecure", "isIpcUrl", "invalidUrlMessage", "emitErrorAndClose", "defaultPort", "key", "request", "protocolSet", "perMessageDeflate", "tlsConnect", "netConnect", "protocol", "parts", "req", "headers", "value", "isSameHost", "res", "location", "statusCode", "addr", "upgrade", "digest", "serverProt", "protError", "secWebSocketExtensions", "extensions", "extensionNames", "stream", "message", "length", "reason", "resume", "receiverOnFinish", "isBinary", "chunk", "require_subprotocol", "__commonJSMin", "exports", "module", "init_cjs_shim", "tokenChars", "parse", "header", "protocols", "start", "end", "i", "code", "protocol", "require_websocket_server", "__commonJSMin", "exports", "module", "init_cjs_shim", "EventEmitter", "http", "Duplex", "createHash", "extension", "PerMessageDeflate", "subprotocol", "WebSocket", "GUID", "kWebSocket", "keyRegex", "RUNNING", "CLOSING", "CLOSED", "WebSocketServer", "options", "callback", "req", "res", "body", "emitConnection", "addListeners", "socket", "head", "cb", "emitClose", "server", "index", "socketOnError", "key", "upgrade", "version", "abortHandshakeOrEmitwsClientError", "abortHandshake", "secWebSocketProtocol", "protocols", "secWebSocketExtensions", "extensions", "perMessageDeflate", "offers", "info", "verified", "code", "message", "headers", "ws", "protocol", "params", "value", "map", "event", "h", "err", "init_cjs_shim", "import_client_kms", "import_client_secrets_manager", "import_client_cloudwatch", "init_cjs_shim", "ethers_exports", "__export", "AbiCoder", "AbstractProvider", "AbstractSigner", "AlchemyProvider", "AnkrProvider", "BaseContract", "BaseWallet", "Block", "BlockscoutProvider", "BrowserProvider", "ChainstackProvider", "CloudflareProvider", "ConstructorFragment", "Contract", "ContractEventPayload", "ContractFactory", "ContractTransactionReceipt", "ContractTransactionResponse", "ContractUnknownEventPayload", "EnsPlugin", "EnsResolver", "ErrorDescription", "ErrorFragment", "EtherSymbol", "EtherscanPlugin", "EtherscanProvider", "EventFragment", "EventLog", "EventPayload", "FallbackFragment", "FallbackProvider", "FeeData", "FeeDataNetworkPlugin", "FetchCancelSignal", "FetchRequest", "FetchResponse", "FetchUrlFeeDataNetworkPlugin", "FixedNumber", "Fragment", "FunctionFragment", "GasCostPlugin", "HDNodeVoidWallet", "HDNodeWallet", "Indexed", "InfuraProvider", "InfuraWebSocketProvider", "Interface", "IpcSocketProvider", "JsonRpcApiProvider", "JsonRpcProvider", "JsonRpcSigner", "LangEn", "Log", "LogDescription", "MaxInt256", "MaxUint256", "MessagePrefix", "MinInt256", "Mnemonic", "MulticoinProviderPlugin", "N", "NamedFragment", "Network", "NetworkPlugin", "NonceManager", "ParamType", "PocketProvider", "QuickNodeProvider", "Result", "Signature", "SigningKey", "SocketBlockSubscriber", "SocketEventSubscriber", "SocketPendingSubscriber", "SocketProvider", "SocketSubscriber", "StructFragment", "Transaction", "TransactionDescription", "TransactionReceipt", "TransactionResponse", "Typed", "TypedDataEncoder", "UndecodedEventLog", "UnmanagedSubscriber", "Utf8ErrorFuncs", "VoidSigner", "Wallet", "WebSocketProvider", "WeiPerEther", "Wordlist", "WordlistOwl", "WordlistOwlA", "ZeroAddress", "ZeroHash", "accessListify", "assert", "assertArgument", "assertArgumentCount", "assertNormalize", "assertPrivate", "authorizationify", "checkResultErrors", "computeAddress", "computeHmac", "concat", "copyRequest", "dataLength", "dataSlice", "decodeBase58", "decodeBase64", "decodeBytes32String", "decodeRlp", "decryptCrowdsaleJson", "decryptKeystoreJson", "decryptKeystoreJsonSync", "defaultPath", "defineProperties", "dnsEncode", "encodeBase58", "encodeBase64", "encodeBytes32String", "encodeRlp", "encryptKeystoreJson", "encryptKeystoreJsonSync", "ensNormalize", "formatEther", "formatUnits", "fromTwos", "getAccountPath", "getAddress", "getBigInt", "getBytes", "getBytesCopy", "getCreate2Address", "getCreateAddress", "getDefaultProvider", "getIcapAddress", "getIndexedAccountPath", "getNumber", "getUint", "hashAuthorization", "hashMessage", "hexlify", "id", "isAddress", "isAddressable", "isBytesLike", "isCallException", "isCrowdsaleJson", "isError", "isHexString", "isKeystoreJson", "isValidName", "keccak256", "lock", "makeError", "mask", "namehash", "parseEther", "parseUnits", "pbkdf2", "randomBytes", "recoverAddress", "resolveAddress", "resolveProperties", "ripemd160", "scrypt", "scryptSync", "sha256", "sha512", "showThrottleMessage", "solidityPacked", "solidityPackedKeccak256", "solidityPackedSha256", "stripZerosLeft", "toBeArray", "toBeHex", "toBigInt", "toNumber", "toQuantity", "toTwos", "toUtf8Bytes", "toUtf8CodePoints", "toUtf8String", "uuidV4", "verifyAuthorization", "verifyMessage", "verifyTypedData", "version", "wordlists", "zeroPadBytes", "zeroPadValue", "init_cjs_shim", "init_cjs_shim", "version", "init_cjs_shim", "init_cjs_shim", "init_cjs_shim", "init_cjs_shim", "init_cjs_shim", "init_cjs_shim", "init_cjs_shim", "checkType", "value", "type", "name", "types", "t", "i", "error", "resolveProperties", "keys", "k", "accum", "v", "index", "defineProperties", "target", "values", "key", "stringify", "value", "seen", "v", "HEX", "result", "i", "keys", "k", "isError", "error", "code", "isCallException", "makeError", "message", "info", "shortMessage", "details", "key", "version", "defineProperties", "assert", "check", "assertArgument", "name", "assertArgumentCount", "count", "expectedCount", "_normalizeForms", "accum", "form", "assertNormalize", "assertPrivate", "givenGuard", "guard", "className", "method", "operation", "_getBytes", "value", "name", "copy", "result", "offset", "i", "assertArgument", "getBytes", "getBytesCopy", "isHexString", "length", "isBytesLike", "HexCharacters", "hexlify", "data", "bytes", "v", "concat", "datas", "d", "dataLength", "dataSlice", "start", "end", "assert", "stripZerosLeft", "zeroPad", "left", "zeroPadValue", "zeroPadBytes", "init_cjs_shim", "BN_0", "BN_1", "maxValue", "fromTwos", "_value", "_width", "value", "getUint", "width", "getNumber", "assert", "mask", "toTwos", "getBigInt", "limit", "_bits", "bits", "name", "assertArgument", "e", "result", "Nibbles", "toBigInt", "v", "toNumber", "toBeHex", "toBeArray", "hex", "i", "offset", "toQuantity", "hexlify", "isBytesLike", "Alphabet", "Lookup", "getAlpha", "letter", "i", "result", "assertArgument", "BN_0", "BN_58", "encodeBase58", "_value", "bytes", "getBytes", "value", "toBigInt", "decodeBase58", "init_cjs_shim", "decodeBase64", "value", "getBytesCopy", "encodeBase64", "data", "getBytes", "init_cjs_shim", "EventPayload", "#listener", "emitter", "listener", "filter", "defineProperties", "init_cjs_shim", "init_cjs_shim", "errorFunc", "reason", "offset", "bytes", "output", "badCodepoint", "assertArgument", "ignoreFunc", "i", "o", "replaceFunc", "Utf8ErrorFuncs", "getUtf8CodePoints", "_bytes", "onError", "getBytes", "result", "c", "extraLength", "overlongMask", "res", "j", "nextChar", "toUtf8Bytes", "str", "form", "assertNormalize", "c2", "pair", "_toUtf8String", "codePoints", "codePoint", "toUtf8String", "toUtf8CodePoints", "init_cjs_shim", "http", "https", "gunzipSync", "createGetUrl", "options", "getUrl", "req", "signal", "assert", "protocol", "method", "headers", "reqOptions", "abort", "e", "request", "http", "https", "body", "resolve", "reject", "makeError", "resp", "statusCode", "statusMessage", "accum", "name", "value", "chunk", "error", "newBody", "getBytes", "gunzipSync", "defaultGetUrl", "MAX_ATTEMPTS", "SLOT_INTERVAL", "defaultGetUrlFunc", "createGetUrl", "reData", "reIpfs", "locked", "dataGatewayFunc", "url", "signal", "match", "FetchResponse", "decodeBase64", "unpercent", "FetchRequest", "getIpfsGatewayFunc", "baseUrl", "gatewayIpfs", "Gateways", "fetchSignals", "FetchCancelSignal", "#listeners", "#cancelled", "request", "listener", "assert", "checkSignal", "_FetchRequest", "#allowInsecure", "#gzip", "#headers", "#method", "#timeout", "#url", "#body", "#bodyType", "#creds", "#preflight", "#process", "#retry", "#signal", "#throttle", "#getUrlFunc", "body", "toUtf8Bytes", "method", "headers", "encodeBase64", "key", "value", "keys", "index", "username", "password", "assertArgument", "timeout", "preflight", "process", "retry", "hexlify", "params", "#send", "attempt", "expires", "delay", "_request", "_response", "getTime", "wait", "req", "scheme", "result", "response", "error", "resp", "location", "retryAfter", "current", "target", "clone", "func", "getUrl", "options", "_FetchResponse", "#statusCode", "#statusMessage", "#request", "#error", "toUtf8String", "statusCode", "statusMessage", "accum", "k", "message", "stall", "defineProperties", "requestUrl", "responseBody", "all", "code", "resolve", "init_cjs_shim", "BN_N1", "BN_0", "BN_1", "BN_5", "_guard", "Zeros", "getTens", "decimals", "result", "checkValue", "val", "format", "safeOp", "width", "limit", "assert", "fromTwos", "mask", "getFormat", "value", "signed", "match", "assertArgument", "v", "check", "key", "type", "defaultValue", "name", "toString", "negative", "str", "index", "FixedNumber", "_FixedNumber", "#format", "#val", "#tens", "guard", "assertPrivate", "_value", "defineProperties", "#checkFormat", "other", "#checkValue", "#add", "o", "#sub", "#mul", "#div", "a", "b", "delta", "bump", "tens", "_decimals", "_format", "getNumber", "getBigInt", "whole", "decimal", "toBigInt", "getBytes", "init_cjs_shim", "hexlifyByte", "value", "result", "unarrayifyInteger", "data", "offset", "length", "i", "_decodeChildren", "childOffset", "decoded", "_decode", "assert", "checkOffset", "lengthLength", "hexlify", "decodeRlp", "_data", "getBytes", "assertArgument", "init_cjs_shim", "arrayifyInteger", "value", "result", "_encode", "object", "payload", "child", "length", "data", "getBytes", "nibbles", "encodeRlp", "v", "init_cjs_shim", "names", "formatUnits", "value", "unit", "decimals", "index", "assertArgument", "getNumber", "FixedNumber", "parseUnits", "formatEther", "wei", "parseEther", "ether", "init_cjs_shim", "uuidV4", "randomBytes", "bytes", "getBytes", "value", "hexlify", "init_cjs_shim", "WordSize", "Padding", "passProperties", "_guard", "resultNames", "getNames", "result", "setNames", "names", "throwError", "name", "error", "wrapped", "toObject", "items", "deep", "item", "index", "Result", "accum", "_Result", "#names", "args", "guard", "wrap", "nameCounts", "proxy", "target", "prop", "receiver", "getNumber", "value", "assert", "start", "end", "_names", "callback", "thisArg", "i", "keys", "checkResultErrors", "errors", "checkErrors", "path", "object", "key", "childPath", "getValue", "bytes", "toBeArray", "getBytesCopy", "concat", "Coder", "type", "localName", "dynamic", "defineProperties", "message", "assertArgument", "Writer", "#data", "#dataLength", "#writeData", "data", "writer", "paddingOffset", "offset", "Reader", "_Reader", "#offset", "#bytesRead", "#parent", "#maxInflation", "allowLoose", "maxInflation", "hexlify", "#incrementBytesRead", "count", "#peekBytes", "length", "loose", "alignedLength", "reader", "toBigInt", "toNumber", "init_cjs_shim", "init_cjs_shim", "init_cjs_shim", "init_cjs_shim", "init_cjs_shim", "init_cjs_shim", "createHash", "createHmac", "pbkdf2Sync", "randomBytes", "locked", "_computeHmac", "algorithm", "key", "data", "createHmac", "__computeHmac", "computeHmac", "_key", "_data", "getBytes", "hexlify", "func", "init_cjs_shim", "init_cjs_shim", "init_cjs_shim", "number", "n", "bytes", "b", "lengths", "hash", "number", "exists", "instance", "checkFinished", "output", "out", "min", "init_cjs_shim", "U32_MASK64", "_32n", "fromBig", "n", "le", "split", "lst", "Ah", "Al", "i", "h", "l", "rotlSH", "h", "l", "s", "rotlSL", "rotlBH", "rotlBL", "init_cjs_shim", "init_cjs_shim", "nc", "crypto", "u8a", "a", "u32", "arr", "createView", "rotr", "word", "shift", "isLE", "nextTick", "asyncLoop", "iters", "tick", "cb", "ts", "i", "diff", "utf8ToBytes", "str", "toBytes", "data", "u8a", "concatBytes", "arrays", "r", "sum", "a", "pad", "Hash", "toStr", "checkOpts", "defaults", "opts", "wrapConstructor", "hashCons", "hashC", "msg", "tmp", "wrapXOFConstructorWithOpts", "hashCons", "hashC", "msg", "opts", "toBytes", "tmp", "randomBytes", "bytesLength", "crypto", "SHA3_PI", "SHA3_ROTL", "_SHA3_IOTA", "_0n", "_1n", "_2n", "_7n", "_256n", "_0x71n", "round", "R", "x", "y", "t", "j", "SHA3_IOTA_H", "SHA3_IOTA_L", "split", "rotlH", "h", "l", "s", "rotlBH", "rotlSH", "rotlL", "rotlBL", "rotlSL", "keccakP", "rounds", "B", "idx1", "idx0", "B0", "B1", "Th", "Tl", "curH", "curL", "shift", "PI", "Keccak", "_Keccak", "Hash", "blockLen", "suffix", "outputLen", "enableXOF", "number", "u32", "data", "exists", "state", "toBytes", "len", "pos", "take", "i", "out", "bytes", "bufferOut", "output", "to", "gen", "wrapConstructor", "sha3_224", "sha3_256", "sha3_384", "sha3_512", "keccak_224", "keccak_256", "keccak_384", "keccak_512", "genShake", "wrapXOFConstructorWithOpts", "opts", "shake128", "shake256", "locked", "_keccak256", "data", "keccak_256", "__keccak256", "keccak256", "_data", "getBytes", "hexlify", "func", "init_cjs_shim", "init_cjs_shim", "init_cjs_shim", "setBigUint64", "view", "byteOffset", "value", "isLE", "_32n", "_u32_max", "wh", "wl", "h", "SHA2", "Hash", "blockLen", "outputLen", "padOffset", "createView", "data", "exists", "buffer", "toBytes", "len", "pos", "take", "dataView", "out", "output", "i", "oview", "outLen", "state", "res", "to", "length", "finished", "destroyed", "Rho", "Id", "_", "i", "Pi", "idxL", "idxR", "j", "k", "shifts", "shiftsL", "idx", "shiftsR", "Kl", "Kr", "rotl", "word", "shift", "f", "group", "x", "y", "z", "BUF", "RIPEMD160", "SHA2", "h0", "h1", "h2", "h3", "h4", "view", "offset", "al", "ar", "bl", "br", "cl", "cr", "dl", "dr", "el", "er", "rGroup", "hbl", "hbr", "rl", "rr", "sl", "sr", "tl", "tr", "ripemd160", "wrapConstructor", "locked", "_ripemd160", "data", "ripemd160", "__ripemd160", "_data", "getBytes", "hexlify", "func", "init_cjs_shim", "locked", "_pbkdf2", "password", "salt", "iterations", "keylen", "algo", "pbkdf2Sync", "__pbkdf2", "pbkdf2", "_password", "_salt", "getBytes", "hexlify", "func", "init_cjs_shim", "locked", "_randomBytes", "length", "randomBytes", "__randomBytes", "func", "init_cjs_shim", "init_cjs_shim", "init_cjs_shim", "Chi", "a", "b", "c", "Maj", "SHA256_K", "IV", "SHA256_W", "SHA256", "SHA2", "A", "B", "C", "D", "E", "F", "G", "H", "view", "offset", "i", "W15", "W2", "s0", "rotr", "s1", "sigma1", "T1", "T2", "sha256", "wrapConstructor", "SHA256", "init_cjs_shim", "init_cjs_shim", "HMAC", "Hash", "hash", "_key", "key", "toBytes", "blockLen", "pad", "buf", "exists", "out", "bytes", "to", "oHash", "iHash", "finished", "destroyed", "outputLen", "hmac", "message", "pbkdf2Init", "hash", "_password", "_salt", "_opts", "opts", "checkOpts", "c", "dkLen", "asyncTick", "number", "password", "toBytes", "salt", "DK", "PRF", "hmac", "PRFSalt", "pbkdf2Output", "prfW", "u", "pbkdf2", "arr", "view", "createView", "ti", "pos", "Ti", "ui", "i", "rotl", "a", "b", "XorAndSalsa", "prev", "pi", "input", "ii", "out", "oi", "y00", "y01", "y02", "y03", "y04", "y05", "y06", "y07", "y08", "y09", "y10", "y11", "y12", "y13", "y14", "y15", "x00", "x01", "x02", "x03", "x04", "x05", "x06", "x07", "x08", "x09", "x10", "x11", "x12", "x13", "x14", "x15", "i", "BlockMix", "r", "head", "tail", "scryptInit", "password", "salt", "_opts", "opts", "checkOpts", "N", "p", "dkLen", "asyncTick", "maxmem", "onProgress", "number", "blockSize", "blockSize32", "memUsed", "B", "pbkdf2", "sha256", "B32", "u32", "V", "tmp", "blockMixCb", "totalBlockMix", "callbackPer", "blockMixCnt", "scryptOutput", "res", "scrypt", "Pi", "pos", "j", "k", "scryptAsync", "asyncLoop", "lockedSync", "lockedAsync", "_scryptAsync", "passwd", "salt", "N", "r", "p", "dkLen", "onProgress", "scryptAsync", "_scryptSync", "scrypt", "__scryptAsync", "__scryptSync", "_passwd", "_salt", "progress", "getBytes", "hexlify", "func", "scryptSync", "init_cjs_shim", "_sha256", "data", "createHash", "_sha512", "__sha256", "__sha512", "locked256", "locked512", "sha256", "_data", "getBytes", "hexlify", "func", "sha512", "init_cjs_shim", "init_cjs_shim", "init_cjs_shim", "utils_exports", "__export", "bitGet", "bitLen", "bitMask", "bitSet", "bytesToHex", "bytesToNumberBE", "bytesToNumberLE", "concatBytes", "createHmacDrbg", "ensureBytes", "equalBytes", "hexToBytes", "hexToNumber", "numberToBytesBE", "numberToBytesLE", "numberToHexUnpadded", "numberToVarBytesBE", "utf8ToBytes", "validateObject", "init_cjs_shim", "_0n", "_1n", "_2n", "u8a", "a", "hexes", "_", "i", "bytes", "hex", "num", "len", "array", "j", "hexByte", "byte", "n", "title", "expectedLength", "res", "e", "arrays", "r", "sum", "pad", "b1", "b2", "str", "pos", "value", "u8n", "data", "u8fr", "arr", "hashLen", "qByteLen", "hmacFn", "v", "k", "reset", "h", "b", "reseed", "seed", "gen", "out", "sl", "pred", "validatorFns", "val", "object", "validators", "optValidators", "checkField", "fieldName", "type", "isOptional", "checkVal", "_0n", "_1n", "_2n", "_3n", "_4n", "_5n", "_8n", "_9n", "_16n", "mod", "a", "b", "result", "pow", "num", "power", "modulo", "res", "pow2", "x", "invert", "number", "y", "u", "v", "q", "r", "m", "n", "tonelliShanks", "P", "legendreC", "Q", "S", "Z", "p1div4", "Fp", "root", "Q1div2", "g", "t2", "ge", "FpSqrt", "c1", "n2", "nv", "i", "FIELD_FIELDS", "validateField", "field", "initial", "opts", "map", "val", "validateObject", "FpPow", "f", "num", "power", "_0n", "_1n", "p", "d", "FpInvertBatch", "nums", "tmp", "lastMultiplied", "acc", "i", "inverted", "nLength", "n", "nBitLength", "_nBitLength", "nByteLength", "Field", "ORDER", "bitLen", "isLE", "redef", "_0n", "BITS", "BYTES", "sqrtP", "FpSqrt", "f", "bitMask", "_1n", "num", "mod", "lhs", "rhs", "power", "FpPow", "invert", "lst", "FpInvertBatch", "a", "b", "c", "numberToBytesLE", "numberToBytesBE", "bytes", "bytesToNumberLE", "bytesToNumberBE", "getFieldBytesLength", "fieldOrder", "bitLength", "getMinHashLength", "length", "mapHashToField", "key", "isLE", "len", "fieldLen", "minLen", "num", "bytesToNumberBE", "bytesToNumberLE", "reduced", "mod", "_1n", "numberToBytesLE", "numberToBytesBE", "init_cjs_shim", "init_cjs_shim", "_0n", "_1n", "wNAF", "c", "bits", "constTimeNegate", "condition", "item", "neg", "opts", "W", "windows", "windowSize", "elm", "n", "p", "d", "points", "base", "window", "i", "precomputes", "f", "mask", "maxNumber", "shiftBy", "offset", "wbits", "offset1", "offset2", "cond1", "cond2", "P", "precomputesMap", "transform", "comp", "validateBasic", "curve", "validateField", "validateObject", "nLength", "validatePointOpts", "curve", "opts", "validateBasic", "validateObject", "endo", "Fp", "a", "b2n", "h2b", "utils_exports", "DER", "m", "data", "E", "len", "res", "hex", "l", "r", "sBytes", "s", "rBytesLeft", "sig", "slice", "h", "num", "shl", "rhl", "sl", "rl", "_0n", "_1n", "_2n", "_3n", "_4n", "weierstrassPoints", "CURVE", "toBytes", "_c", "point", "_isCompressed", "concatBytes", "fromBytes", "bytes", "tail", "x", "y", "weierstrassEquation", "b", "x2", "x3", "isWithinCurveOrder", "assertGE", "normPrivateKeyToScalar", "key", "lengths", "nByteLength", "wrapPrivateKey", "n", "bytesToHex", "bytesToNumberBE", "ensureBytes", "mod", "pointPrecomputes", "assertPrjPoint", "other", "Point", "px", "py", "pz", "p", "is0", "i", "points", "toInv", "P", "privateKey", "windowSize", "left", "right", "X1", "Y1", "Z1", "X2", "Y2", "Z2", "U1", "U2", "b3", "X3", "Y3", "Z3", "t0", "t1", "t2", "t3", "t4", "t5", "wnaf", "comp", "I", "k1neg", "k1", "k2neg", "k2", "k1p", "k2p", "d", "scalar", "fake", "f1p", "f2p", "f", "Q", "G", "mul", "sum", "iz", "z", "ax", "ay", "zz", "cofactor", "isTorsionFree", "clearCofactor", "isCompressed", "_bits", "wNAF", "validateOpts", "weierstrass", "curveDef", "CURVE_ORDER", "compressedLen", "uncompressedLen", "isValidFieldElement", "modN", "invN", "invert", "cat", "head", "y2", "isYOdd", "numToNByteStr", "numberToBytesBE", "isBiggerThanHalfOrder", "number", "HALF", "normalizeS", "slcNum", "from", "to", "Signature", "recovery", "msgHash", "rec", "bits2int_modN", "radj", "prefix", "R", "ir", "u1", "u2", "hexToBytes", "utils", "length", "getMinHashLength", "mapHashToField", "getPublicKey", "isProbPub", "item", "arr", "str", "getSharedSecret", "privateA", "publicB", "bits2int", "delta", "ORDER_MASK", "bitMask", "int2octets", "prepSig", "defaultSigOpts", "k", "hash", "randomBytes", "lowS", "prehash", "ent", "h1int", "seedArgs", "e", "seed", "k2sig", "kBytes", "ik", "q", "normS", "defaultVerOpts", "sign", "privKey", "C", "createHmacDrbg", "verify", "signature", "publicKey", "sg", "_sig", "derError", "error", "is", "init_cjs_shim", "getHash", "hash", "key", "msgs", "hmac", "concatBytes", "randomBytes", "createCurve", "curveDef", "defHash", "create", "weierstrass", "secp256k1P", "secp256k1N", "_1n", "_2n", "divNearest", "a", "b", "sqrtMod", "y", "P", "_3n", "_6n", "_11n", "_22n", "_23n", "_44n", "_88n", "b2", "b3", "b6", "pow2", "b9", "b11", "b22", "b44", "b88", "b176", "b220", "b223", "t1", "t2", "root", "Fp", "Field", "secp256k1", "createCurve", "k", "n", "a1", "b1", "a2", "POW_2_128", "c1", "c2", "k1", "mod", "k2", "k1neg", "k2neg", "sha256", "_0n", "Point", "secp256k1", "init_cjs_shim", "init_cjs_shim", "init_cjs_shim", "ZeroAddress", "init_cjs_shim", "ZeroHash", "init_cjs_shim", "N", "WeiPerEther", "MaxUint256", "MinInt256", "MaxInt256", "init_cjs_shim", "EtherSymbol", "MessagePrefix", "BN_0", "BN_1", "BN_2", "BN_27", "BN_28", "BN_35", "_guard", "toUint256", "value", "zeroPadValue", "toBeArray", "Signature", "_Signature", "#r", "#s", "#v", "#networkV", "assertArgument", "dataLength", "hexlify", "_value", "v", "getNumber", "yParityAndS", "getBytes", "concat", "guard", "s", "assertPrivate", "clone", "networkV", "bv", "getBigInt", "chainId", "sig", "assertError", "check", "message", "ZeroHash", "bytes", "r", "_r", "isHexString", "_v", "yParity", "result", "SigningKey", "_SigningKey", "#privateKey", "privateKey", "assertArgument", "dataLength", "hexlify", "digest", "sig", "secp256k1", "getBytesCopy", "Signature", "toBeHex", "other", "pubKey", "getBytes", "key", "compressed", "bytes", "pub", "point", "signature", "secpSig", "concat", "p0", "p1", "pub0", "pub1", "lock", "computeHmac", "keccak256", "pbkdf2", "randomBytes", "ripemd160", "scrypt", "scryptSync", "sha256", "sha512", "BN_0", "BN_36", "getChecksumAddress", "address", "chars", "expanded", "i", "hashed", "getBytes", "keccak256", "ibanLookup", "safeDigits", "ibanChecksum", "c", "block", "checksum", "Base36", "result", "key", "fromBase36", "value", "getAddress", "assertArgument", "getIcapAddress", "base36", "init_cjs_shim", "getCreateAddress", "tx", "from", "getAddress", "nonceHex", "getBigInt", "dataSlice", "keccak256", "encodeRlp", "getCreate2Address", "_from", "_salt", "_initCodeHash", "salt", "getBytes", "initCodeHash", "assertArgument", "concat", "init_cjs_shim", "isAddressable", "value", "isAddress", "getAddress", "checkAddress", "target", "promise", "result", "assert", "assertArgument", "resolveAddress", "resolver", "init_cjs_shim", "_gaurd", "n", "value", "width", "signed", "Typed", "b", "size", "_typedSymbol", "_Typed", "#options", "gaurd", "type", "options", "assertPrivate", "defineProperties", "v", "dynamic", "name", "AddressCoder", "Coder", "localName", "writer", "_value", "value", "Typed", "getAddress", "error", "reader", "toBeHex", "init_cjs_shim", "init_cjs_shim", "AnonymousCoder", "Coder", "coder", "writer", "value", "reader", "pack", "writer", "coders", "values", "arrayValues", "unique", "coder", "name", "assert", "assertArgument", "staticWriter", "Writer", "dynamicWriter", "updateFuncs", "index", "value", "dynamicOffset", "updateFunc", "baseOffset", "func", "length", "unpack", "reader", "keys", "baseReader", "offset", "offsetReader", "error", "isError", "Result", "ArrayCoder", "Coder", "localName", "type", "dynamic", "defineProperties", "defaultChild", "result", "i", "_value", "Typed", "count", "assertArgumentCount", "WordSize", "AnonymousCoder", "init_cjs_shim", "BooleanCoder", "Coder", "localName", "writer", "_value", "value", "Typed", "reader", "init_cjs_shim", "DynamicBytesCoder", "Coder", "type", "localName", "writer", "value", "getBytesCopy", "length", "reader", "BytesCoder", "hexlify", "init_cjs_shim", "FixedBytesCoder", "Coder", "size", "localName", "name", "defineProperties", "writer", "_value", "data", "getBytesCopy", "Typed", "reader", "hexlify", "init_cjs_shim", "Empty", "NullCoder", "Coder", "localName", "writer", "value", "reader", "init_cjs_shim", "BN_0", "BN_1", "BN_MAX_UINT256", "NumberCoder", "Coder", "size", "signed", "localName", "name", "defineProperties", "writer", "_value", "value", "getBigInt", "Typed", "maxUintValue", "mask", "WordSize", "bounds", "toTwos", "reader", "fromTwos", "init_cjs_shim", "StringCoder", "DynamicBytesCoder", "localName", "writer", "_value", "toUtf8Bytes", "Typed", "reader", "toUtf8String", "init_cjs_shim", "TupleCoder", "Coder", "coders", "localName", "dynamic", "types", "coder", "type", "defineProperties", "values", "uniqueNames", "accum", "name", "index", "writer", "_value", "value", "Typed", "pack", "reader", "unpack", "init_cjs_shim", "init_cjs_shim", "init_cjs_shim", "init_cjs_shim", "init_cjs_shim", "accessSetify", "addr", "storageKeys", "getAddress", "storageKey", "index", "assertArgument", "isHexString", "accessListify", "value", "set", "result", "accum", "a", "b", "init_cjs_shim", "authorizationify", "auth", "getAddress", "getBigInt", "Signature", "init_cjs_shim", "computeAddress", "key", "pubkey", "SigningKey", "getAddress", "keccak256", "recoverAddress", "digest", "signature", "init_cjs_shim", "BN_0", "BN_2", "BN_27", "BN_28", "BN_35", "BN_MAX_UINT", "BLOB_SIZE", "getKzgLibrary", "kzg", "blob", "getBytes", "hexlify", "assertArgument", "commitment", "getVersionedHash", "version", "hash", "versioned", "sha256", "handleAddress", "value", "getAddress", "handleAccessList", "param", "accessListify", "error", "handleAuthorizationList", "result", "i", "auth", "handleUint", "Signature", "handleNumber", "zeroPadValue", "_value", "getNumber", "getBigInt", "formatNumber", "name", "toBeArray", "formatAccessList", "set", "formatAuthorizationList", "a", "formatHashes", "isHexString", "_parseLegacy", "data", "fields", "decodeRlp", "tx", "v", "r", "s", "chainId", "_serializeLegacy", "sig", "legacy", "encodeRlp", "_parseEipSignature", "yParity", "signature", "_parseEip1559", "_serializeEip1559", "concat", "_parseEip2930", "_serializeEip2930", "_parseEip4844", "typeName", "blobs", "fBlobs", "fCommits", "fProofs", "_serializeEip4844", "ZeroAddress", "b", "_parseEip7702", "_serializeEip7702", "Transaction", "_Transaction", "#type", "#to", "#data", "#nonce", "#gasLimit", "#gasPrice", "#maxPriorityFeePerGas", "#maxFeePerGas", "#value", "#chainId", "#sig", "#accessList", "#maxFeePerBlobGas", "#blobVersionedHashes", "#kzg", "#blobs", "#auths", "auths", "authorizationify", "_blobs", "versionedHashes", "isBytesLike", "assert", "padded", "commit", "proof", "keccak256", "#getSerialized", "recoverAddress", "SigningKey", "signed", "sidecar", "types", "hasGasPrice", "hasFee", "hasAccessList", "hasBlob", "payload", "hashAuthorization", "auth", "assertArgument", "keccak256", "concat", "encodeRlp", "toBeArray", "getAddress", "verifyAuthorization", "sig", "recoverAddress", "init_cjs_shim", "id", "value", "keccak256", "toUtf8Bytes", "init_cjs_shim", "init_cjs_shim", "COMPRESSED$1", "FENCED", "NSM_MAX", "decode_arithmetic", "bytes", "pos", "u16", "symbol_count", "total", "acc", "i", "skip", "pos_payload", "read_width", "read_buffer", "read_bit", "N", "FULL", "HALF", "QRTR", "MASK", "register", "symbols", "low", "range", "value", "start", "end", "mid", "a", "b", "offset", "x", "read_payload", "v", "read_compressed_payload", "s", "unsafe_atob", "lookup", "c", "n", "ret", "width", "carry", "signed", "read_deltas", "next", "read_sorted", "prev", "read_sorted_arrays", "read_array_while", "read_mapped", "w", "read_linear_table", "read_replacement_table", "read_transposed", "m", "j", "dx", "dy", "vN", "ys", "_", "j_dy", "y", "read_trie", "sorted", "expand", "decode", "Q", "S", "B", "cps", "saved", "br", "cp", "hex_cp", "quote_cp", "explode_cp", "len", "str_from_cps", "buf", "compare_arrays", "COMPRESSED", "S0", "L0", "V0", "T0", "L_COUNT", "V_COUNT", "T_COUNT", "N_COUNT", "S_COUNT", "S1", "L1", "V1", "T1", "unpack_cc", "packed", "unpack_cp", "SHIFTED_RANK", "EXCLUSIONS", "DECOMP", "RECOMP", "init$1", "r", "bucket", "is_hangul", "compose_pair", "recomp", "decomposed", "check_order", "add", "cc", "s_index", "l_index", "v_index", "t_index", "mapped", "prev_cc", "tmp", "composed_from_decomposed", "stack", "prev_cp", "composed", "nfd", "nfc", "HYPHEN", "STOP_CH", "FE0F", "UNIQUE_PH", "Array_from", "x", "group_has_cp", "g", "cp", "Emoji", "MAPPED", "IGNORED", "CM", "NSM", "ESCAPE", "NFC_CHECK", "GROUPS", "WHOLE_VALID", "WHOLE_MAP", "VALID", "EMOJI_LIST", "EMOJI_ROOT", "init", "r", "read_compressed_payload", "COMPRESSED$1", "read_sorted_array", "read_sorted", "read_sorted_set", "set_add_many", "set", "v", "read_mapped", "i", "chunks", "read_sorted_arrays", "unrestricted", "read_chunked", "read_array_while", "N", "R", "str_from_cps", "P", "Q", "M", "wholes", "a", "b", "d", "w", "V", "recs", "gs", "rec", "G", "union", "complement", "multi", "add_to_union", "nfd", "read_trie", "compare_arrays", "cps", "prev", "next", "node", "child", "quoted_cp", "should_escape", "bidi_qq", "safe_str_from_cps", "quote_cp", "s", "check_label_extension", "HYPHEN", "check_leading_underscore", "check_fenced", "FENCED", "error_placement", "last", "match", "max", "quoter", "buf", "is_combining_mark", "n", "ens_normalize", "name", "flatten", "split", "nfc", "filter_fe0f", "split", "name", "nf", "ef", "init", "offset", "STOP_CH", "label", "input", "explode_cp", "info", "tokens", "tokens_from_str", "token_count", "type", "norm", "check_leading_underscore", "cp", "check_label_extension", "chars", "x", "CM", "error_placement", "i", "cps", "str_from_cps", "safe_str_from_cps", "check_fenced", "unique", "Array_from", "g", "determine_group", "check_group", "check_whole", "err", "group", "maker", "shared", "whole", "WHOLE_MAP", "UNIQUE_PH", "set", "group_has_cp", "groups", "GROUPS", "gs", "error_group_member", "error_disallowed", "flatten", "error", "output", "msg", "bidi_qq", "quoted_cp", "quoted", "gg", "where", "decomposed", "nfd", "e", "NSM", "j", "k", "NSM_MAX", "ret", "emoji", "consume_emoji_reversed", "VALID", "MAPPED", "IGNORED", "filter_fe0f", "FE0F", "eaten", "node", "EMOJI_ROOT", "pos", "V", "Zeros", "checkComponent", "comp", "assertArgument", "ensNameSplit", "name", "bytes", "toUtf8Bytes", "ensNormalize", "comps", "last", "i", "ens_normalize", "error", "isValidName", "namehash", "result", "keccak256", "concat", "hexlify", "dnsEncode", "_maxLength", "length", "init_cjs_shim", "hashMessage", "message", "toUtf8Bytes", "keccak256", "concat", "MessagePrefix", "verifyMessage", "sig", "digest", "recoverAddress", "init_cjs_shim", "regexBytes", "regexNumber", "regexArray", "_pack", "type", "value", "isArray", "getBytes", "zeroPadValue", "getAddress", "toUtf8Bytes", "match", "signed", "size", "assertArgument", "toTwos", "toBeArray", "dataLength", "zeroPadBytes", "baseType", "count", "result", "concat", "solidityPacked", "types", "values", "tight", "index", "hexlify", "solidityPackedKeccak256", "keccak256", "solidityPackedSha256", "sha256", "init_cjs_shim", "padding", "BN__1", "BN_0", "BN_1", "BN_MAX_UINT256", "hexPadRight", "value", "bytes", "getBytes", "padOffset", "concat", "hexlify", "hexTrue", "toBeHex", "hexFalse", "domainFieldTypes", "domainFieldNames", "checkString", "key", "assertArgument", "domainChecks", "_value", "getBigInt", "toQuantity", "getAddress", "getBaseEncoder", "type", "match", "signed", "width", "boundsUpper", "mask", "boundsLower", "toTwos", "zeroPadValue", "keccak256", "id", "encodeType", "name", "fields", "splitArray", "TypedDataEncoder", "_TypedDataEncoder", "#types", "#fullTypes", "#encoderCache", "_types", "links", "parents", "subtypes", "types", "base", "index", "uniqueNames", "field", "baseType", "primaryTypes", "n", "t", "defineProperties", "checkCircular", "found", "child", "subtype", "set", "st", "encoder", "#getEncoder", "array", "subEncoder", "result", "encodedType", "values", "callback", "v", "accum", "domain", "domainFields", "a", "b", "resolveName", "ensCache", "isHexString", "domainValues", "domainTypes", "typesWithDomain", "verifyTypedData", "signature", "recoverAddress", "setify", "items", "result", "k", "_kwVisibDeploy", "KwVisibDeploy", "_kwVisib", "KwVisib", "_kwTypes", "KwTypes", "_kwModifiers", "KwModifiers", "_kwOther", "_keywords", "Keywords", "SimpleTokens", "regexWhitespacePrefix", "regexNumberPrefix", "regexIdPrefix", "regexId", "regexType", "TokenString", "_TokenString", "#offset", "#tokens", "tokens", "#subTokenString", "from", "to", "t", "allowed", "top", "type", "link", "i", "token", "lex", "text", "throwError", "message", "offset", "brackets", "commas", "cur", "match", "suffix", "value", "getNumber", "allowSingle", "set", "included", "key", "consumeName", "keyword", "consumeKeywords", "keywords", "consumeMutability", "modifiers", "consumeParams", "allowIndexed", "ParamType", "consumeGas", "getBigInt", "consumeEoi", "regexArrayType", "verifyBasicType", "assertArgument", "length", "size", "_guard", "internal", "ParamTypeInternal", "ErrorFragmentInternal", "EventFragmentInternal", "ConstructorFragmentInternal", "FallbackFragmentInternal", "FunctionFragmentInternal", "StructFragmentInternal", "_ParamType", "guard", "name", "baseType", "indexed", "components", "arrayLength", "arrayChildren", "assertPrivate", "defineProperties", "format", "c", "comp", "process", "_this", "v", "#walkAsync", "promises", "setValue", "childType", "index", "param", "obj", "comps", "bracket", "arrayMatch", "Fragment", "_Fragment", "inputs", "ConstructorFragment", "ErrorFragment", "EventFragment", "FallbackFragment", "FunctionFragment", "StructFragment", "assert", "NamedFragment", "joinParams", "params", "p", "_ErrorFragment", "id", "input", "_EventFragment", "anonymous", "_ConstructorFragment", "payable", "gas", "_FallbackFragment", "stateMutability", "errorObj", "topIsValid", "mutability", "outputs", "_FunctionFragment", "o", "_StructFragment", "PanicReasons", "paramTypeBytes", "paramTypeNumber", "defaultCoder", "defaultMaxInflation", "getBuiltinCallException", "action", "tx", "data", "abiCoder", "message", "reason", "invocation", "revert", "bytes", "getBytes", "hexlify", "code", "transaction", "getAddress", "makeError", "AbiCoder", "_AbiCoder", "#getCoder", "param", "ArrayCoder", "TupleCoder", "c", "AddressCoder", "BooleanCoder", "StringCoder", "BytesCoder", "NullCoder", "match", "size", "assertArgument", "NumberCoder", "FixedBytesCoder", "types", "coders", "type", "ParamType", "values", "assertArgumentCount", "coder", "writer", "Writer", "loose", "Reader", "value", "init_cjs_shim", "encodeBytes32String", "text", "bytes", "toUtf8Bytes", "zeroPadBytes", "decodeBytes32String", "_bytes", "data", "getBytes", "length", "toUtf8String", "init_cjs_shim", "LogDescription", "fragment", "topic", "args", "name", "signature", "defineProperties", "TransactionDescription", "selector", "value", "ErrorDescription", "Indexed", "hash", "PanicReasons", "BuiltinErrors", "message", "code", "reason", "Interface", "_Interface", "#errors", "#events", "#functions", "#abiCoder", "fragments", "abi", "frags", "a", "Fragment", "error", "fallback", "receive", "index", "bucket", "assertArgument", "ConstructorFragment", "minimal", "format", "f", "j", "AbiCoder", "#getFunction", "key", "values", "forceUnique", "isHexString", "matching", "lastValue", "valueLength", "allowOptions", "Typed", "i", "inputs", "lastArg", "matchStr", "m", "result", "FunctionFragment", "callback", "names", "b", "#getEvent", "eventTopic", "EventFragment", "ErrorFragment", "params", "data", "dataSlice", "concat", "bytes", "getBytesCopy", "assert", "hexlify", "_data", "tx", "getBytes", "ef", "parsed", "topics", "encodeTopic", "param", "id", "keccak256", "toBeHex", "zeroPadBytes", "zeroPadValue", "dataTypes", "dataValues", "indexed", "nonIndexed", "dynamic", "ParamType", "resultIndexed", "resultNonIndexed", "keys", "nonIndexedIndex", "indexedIndex", "Result", "getBigInt", "log", "hexData", "init_cjs_shim", "init_cjs_shim", "init_cjs_shim", "BN_0", "getValue", "value", "toJson", "FeeData", "gasPrice", "maxFeePerGas", "maxPriorityFeePerGas", "defineProperties", "copyRequest", "req", "result", "hexlify", "bigIntKeys", "key", "getBigInt", "numberKeys", "getNumber", "accessListify", "b", "isBytesLike", "Block", "#transactions", "block", "provider", "tx", "TransactionResponse", "txs", "assert", "baseFeePerGas", "difficulty", "extraData", "gasLimit", "gasUsed", "hash", "miner", "prevRandao", "nonce", "number", "parentHash", "parentBeaconBlockRoot", "stateRoot", "receiptsRoot", "timestamp", "transactions", "index", "indexOrHash", "v", "assertArgument", "createOrphanedBlockFilter", "Log", "log", "topics", "address", "blockHash", "blockNumber", "data", "removed", "transactionHash", "transactionIndex", "receipt", "createRemovedLogFilter", "TransactionReceipt", "#logs", "to", "from", "contractAddress", "logsBloom", "logs", "status", "root", "createRemovedTransactionFilter", "other", "createReorderedTransactionFilter", "_TransactionResponse", "#startBlock", "type", "signature", "accessList", "blobVersionedHashes", "resolveProperties", "_confirms", "_timeout", "confirms", "timeout", "startBlock", "nextScan", "stopScanning", "checkReplacement", "mined", "i", "reason", "checkReceipt", "resolve", "reject", "cancellers", "cancel", "c", "timer", "makeError", "txListener", "error", "replaceListener", "isError", "init_cjs_shim", "EventLog", "Log", "log", "iface", "fragment", "args", "defineProperties", "UndecodedEventLog", "error", "ContractTransactionReceipt", "TransactionReceipt", "#iface", "provider", "tx", "ContractTransactionResponse", "TransactionResponse", "confirms", "timeout", "receipt", "ContractUnknownEventPayload", "EventPayload", "contract", "listener", "filter", "ContractEventPayload", "_log", "BN_0", "canCall", "value", "canEstimate", "canResolve", "canSend", "getResolver", "PreparedTopicFilter", "#filter", "contract", "fragment", "args", "defineProperties", "runner", "getRunner", "resolver", "resolvedArgs", "param", "index", "type", "v", "resolveAddress", "feature", "getProvider", "copyOverrides", "arg", "allowed", "_overrides", "Typed", "assertArgument", "overrides", "copyRequest", "resolveArgs", "_runner", "inputs", "buildWrappedFallback", "populateTransaction", "tx", "iface", "noValue", "getBigInt", "noData", "payable", "staticCall", "assert", "error", "isCallException", "send", "provider", "ContractTransactionResponse", "estimateGas", "method", "buildWrappedMethod", "key", "getFragment", "resolveProperties", "result", "staticCallResult", "buildWrappedEvent", "internal", "internalValues", "setInternal", "values", "getInternal", "isDeferred", "getSubInfo", "event", "topics", "topicHashify", "name", "isHexString", "e", "t", "items", "tag", "hasSub", "subs", "getSub", "operation", "addr", "sub", "filter", "listener", "log", "foundFragment", "_foundFragment", "emit", "ContractEventPayload", "ContractUnknownEventPayload", "starting", "started", "lastEmit", "_emit", "payloadFunc", "count", "once", "passArgs", "resultPromise", "passProperties", "BaseContract", "_BaseContract", "target", "abi", "_deployTx", "isAddressable", "Interface", "addrPromise", "deployTx", "makeError", "filters", "prop", "receiver", "isError", "code", "resolve", "reject", "checkCode", "hash", "fromBlock", "toBlock", "address", "EventLog", "UndecodedEventLog", "Log", "total", "listeners", "stop", "CustomContract", "_ContractBase", "Contract", "init_cjs_shim", "ContractFactory", "_ContractFactory", "abi", "bytecode", "runner", "iface", "Interface", "hexlify", "getBytes", "defineProperties", "target", "BaseContract", "args", "overrides", "fragment", "copyOverrides", "resolvedArgs", "resolveArgs", "data", "concat", "tx", "assert", "sentTx", "address", "getCreateAddress", "output", "assertArgument", "init_cjs_shim", "init_cjs_shim", "init_cjs_shim", "getIpfsLink", "link", "assertArgument", "MulticoinProviderPlugin", "name", "defineProperties", "proivder", "coinType", "address", "data", "matcherIpfs", "matchers", "EnsResolver", "_EnsResolver", "#supports2544", "#resolver", "provider", "address", "name", "defineProperties", "Contract", "error", "isError", "#fetch", "funcName", "params", "iface", "namehash", "fragment", "assert", "dnsEncode", "result", "coinType", "ZeroAddress", "ethCoinType", "data", "isHexString", "getAddress", "coinPlugin", "plugin", "MulticoinProviderPlugin", "key", "ipfs", "scheme", "length", "encodeBase58", "swarm", "linkage", "avatar", "i", "match", "url", "getIpfsLink", "selector", "owner", "comps", "tokenId", "contract", "tokenOwner", "balance", "metadataUrl", "toBeHex", "metadata", "response", "FetchRequest", "bytes", "hexlify", "imageUrl", "network", "ensPlugin", "#getResolver", "ensAddr", "addr", "currentName", "resolver", "init_cjs_shim", "BN_0", "allowNull", "format", "nullValue", "value", "arrayOf", "array", "i", "object", "altNames", "result", "key", "srcKey", "altKey", "nv", "error", "message", "assert", "formatBoolean", "assertArgument", "formatData", "isHexString", "formatHash", "_formatLog", "object", "getAddress", "formatHash", "getNumber", "formatData", "allowNull", "formatBoolean", "arrayOf", "formatLog", "value", "_formatBlock", "getBigInt", "formatBlock", "result", "tx", "formatTransactionResponse", "_formatReceiptLog", "formatReceiptLog", "_formatTransactionReceipt", "hexlify", "formatTransactionReceipt", "BN_0", "accessListify", "v", "sig", "yParity", "Signature", "getCreateAddress", "chainId", "init_cjs_shim", "init_cjs_shim", "EnsAddress", "NetworkPlugin", "_NetworkPlugin", "name", "defineProperties", "GasCostPlugin", "_GasCostPlugin", "effectiveBlock", "costs", "props", "set", "nullish", "value", "assertArgument", "EnsPlugin", "_EnsPlugin", "address", "targetNetwork", "FeeDataNetworkPlugin", "_FeeDataNetworkPlugin", "#feeDataFunc", "feeDataFunc", "provider", "FetchUrlFeeDataNetworkPlugin", "#url", "#processFunc", "url", "processFunc", "Networks", "Network", "_Network", "#name", "#chainId", "#plugins", "name", "chainId", "getBigInt", "value", "other", "plugin", "basename", "p", "clone", "tx", "costs", "GasCostPlugin", "gas", "i", "accessList", "accessListify", "addr", "network", "injectCommonNetworks", "networkFunc", "assertArgument", "custom", "EnsPlugin", "nameOrChainId", "existing", "parseUnits", "_value", "decimals", "comps", "frac", "getGasStationPlugin", "url", "FetchUrlFeeDataNetworkPlugin", "fetchFeeData", "provider", "request", "response", "_response", "_feeData", "payload", "error", "assert", "injected", "registerEth", "options", "func", "init_cjs_shim", "copy", "obj", "PollingBlockSubscriber", "#provider", "#poller", "#interval", "#blockNumber", "provider", "value", "#poll", "blockNumber", "b", "dropWhilePaused", "OnBlockSubscriber", "#running", "PollingBlockTagSubscriber", "#tag", "#lastBlock", "tag", "block", "PollingOrphanSubscriber", "#filter", "filter", "copy", "PollingTransactionSubscriber", "#hash", "hash", "tx", "PollingEventSubscriber", "logs", "log", "BN_2", "MAX_CCIP_REDIRECTS", "isPromise", "value", "getTag", "prefix", "k", "v", "keys", "accum", "key", "UnmanagedSubscriber", "name", "defineProperties", "dropWhilePaused", "copy", "concisify", "items", "getSubscription", "_event", "provider", "isHexString", "hash", "event", "filter", "t", "addresses", "promises", "addAddress", "addr", "resolveAddress", "assertArgument", "getTime", "defaultOptions", "AbstractProvider", "#subs", "#plugins", "#pausedState", "#destroyed", "#networkPromise", "#anyNetwork", "#performCache", "#lastBlockNumber", "#nextTimer", "#timers", "#disableCcipRead", "#options", "_network", "options", "network", "Network", "plugin", "#perform", "req", "timeout", "tag", "perform", "tx", "calldata", "urls", "sender", "data", "errorMessages", "i", "url", "href", "request", "FetchRequest", "errorMessage", "resp", "error", "result", "assert", "m", "Block", "formatBlock", "Log", "formatLog", "TransactionReceipt", "formatTransactionReceipt", "TransactionResponse", "formatTransactionResponse", "blockNumber", "getNumber", "address", "blockTag", "toQuantity", "b", "topics", "blockHash", "resolve", "_address", "fromBlock", "toBlock", "a", "_request", "copyRequest", "detectNetwork", "networkPromise", "expected", "actual", "getFeeDataFunc", "_block", "gasPrice", "priorityFee", "resolveProperties", "#getBlock", "getBigInt", "maxFeePerGas", "maxPriorityFeePerGas", "block", "FeeData", "feeData", "_tx", "#call", "attempt", "transaction", "hexlify", "isCallException", "dataSlice", "txSender", "ccipArgs", "parseOffchainLookup", "ccipResult", "concat", "encodeBytes", "#checkNetwork", "promise", "#getAccountValue", "_blockTag", "_position", "position", "signedTx", "Transaction", "includeTransactions", "prefetchTxs", "params", "_filter", "p", "chainId", "EnsResolver", "resolver", "getAddress", "node", "namehash", "ensAddr", "Contract", "ZeroAddress", "isError", "_confirms", "confirms", "reject", "timer", "listener", "receipt", "makeError", "timerId", "_func", "func", "sub", "subscriber", "PollingBlockSubscriber", "PollingBlockTagSubscriber", "PollingEventSubscriber", "PollingTransactionSubscriber", "PollingOrphanSubscriber", "oldSub", "newSub", "#hasSub", "emitArgs", "#getSub", "subscription", "args", "count", "once", "payload", "EventPayload", "total", "listeners", "index", "started", "pause", "s", "_parseString", "start", "bytes", "_parseBytes", "toUtf8String", "offset", "length", "numPad", "toBeArray", "padded", "bytesPad", "empty", "datas", "byteCount", "getBytes", "zeros", "dataLength", "urlsOffset", "urlsLength", "urlsData", "u", "extraData", "init_cjs_shim", "checkProvider", "signer", "operation", "assert", "populate", "tx", "pop", "copyRequest", "resolveAddress", "from", "address", "assertArgument", "resolveProperties", "AbstractSigner", "provider", "defineProperties", "blockTag", "network", "chainId", "getBigInt", "hasEip1559", "feeData", "gasPrice", "_auth", "auth", "name", "txObj", "Transaction", "authorization", "VoidSigner", "_VoidSigner", "#throwUnsupported", "suffix", "message", "domain", "types", "value", "init_cjs_shim", "shown", "showThrottleMessage", "service", "init_cjs_shim", "init_cjs_shim", "init_cjs_shim", "init_cjs_shim", "copy", "obj", "FilterIdSubscriber", "#provider", "#filterIdPromise", "#poller", "#running", "#network", "#hault", "provider", "#poll", "result", "blockNumber", "filterId", "error", "isError", "network", "#teardown", "filterIdPromise", "dropWhilePaused", "FilterIdEventSubscriber", "#event", "filter", "PollingEventSubscriber", "results", "FilterIdPendingSubscriber", "Primitive", "deepCopy", "value", "accum", "key", "stall", "duration", "resolve", "getLowerCase", "isPollable", "defaultOptions", "JsonRpcSigner", "AbstractSigner", "provider", "address", "getAddress", "defineProperties", "assert", "tx", "_tx", "promises", "_from", "from", "resolveAddress", "assertArgument", "_to", "hexTx", "blockNumber", "hash", "reject", "timeouts", "invalids", "checkTx", "error", "isError", "makeError", "_message", "message", "toUtf8Bytes", "hexlify", "domain", "types", "_value", "populated", "TypedDataEncoder", "password", "JsonRpcApiProvider", "AbstractProvider", "#options", "#nextId", "#payloads", "#drainTimer", "#notReady", "#network", "#pendingDetectNetwork", "#scheduleDrain", "stallTime", "payloads", "batch", "p", "payload", "result", "resp", "r", "network", "options", "promise", "_resolve", "staticNetwork", "Network", "req", "getBigInt", "feeData", "request", "sub", "FilterIdPendingSubscriber", "PollingEventSubscriber", "FilterIdEventSubscriber", "UnmanagedSubscriber", "dstKey", "toQuantity", "accessListify", "h", "_a", "a", "authorizationify", "_error", "method", "msg", "spelunkData", "e", "AbiCoder", "spelunkMessage", "transaction", "unsupported", "params", "id", "accountsPromise", "accounts", "resolveProperties", "account", "JsonRpcApiPollingProvider", "#pollingInterval", "pollingInterval", "subscriber", "JsonRpcProvider", "#connect", "url", "FetchRequest", "response", "isHexString", "_spelunkMessage", "defaultApiKey", "getHost", "name", "assertArgument", "AnkrProvider", "_AnkrProvider", "JsonRpcProvider", "_network", "apiKey", "network", "Network", "options", "request", "defineProperties", "chainId", "FetchRequest", "response", "attempt", "showThrottleMessage", "payload", "error", "init_cjs_shim", "defaultApiKey", "getHost", "name", "assertArgument", "AlchemyProvider", "_AlchemyProvider", "JsonRpcProvider", "_network", "apiKey", "network", "Network", "request", "defineProperties", "chainId", "req", "trace", "tx", "resolveProperties", "data", "error", "assert", "FetchRequest", "response", "attempt", "showThrottleMessage", "init_cjs_shim", "getApiKey", "name", "assertArgument", "getHost", "ChainstackProvider", "_ChainstackProvider", "JsonRpcProvider", "_network", "apiKey", "network", "Network", "request", "defineProperties", "chainId", "FetchRequest", "response", "attempt", "showThrottleMessage", "init_cjs_shim", "CloudflareProvider", "JsonRpcProvider", "_network", "network", "Network", "assertArgument", "init_cjs_shim", "THROTTLE", "isPromise", "value", "EtherscanPluginId", "EtherscanPlugin", "_EtherscanPlugin", "NetworkPlugin", "baseUrl", "defineProperties", "skipKeys", "nextId", "EtherscanProvider", "AbstractProvider", "#plugin", "_network", "_apiKey", "apiKey", "network", "Network", "assertArgument", "module", "params", "query", "accum", "key", "post", "id", "url", "payload", "request", "FetchRequest", "req", "resp", "attempt", "showThrottleMessage", "response", "result", "toUtf8String", "throttle", "k", "error", "assert", "transaction", "toQuantity", "accessListify", "set", "hexlify", "message", "isError", "data", "e", "AbiCoder", "Transaction", "postData", "_address", "address", "abi", "Contract", "init_cjs_shim", "init_cjs_shim", "init_cjs_shim", "init_cjs_shim", "import_stream", "import_receiver", "import_sender", "import_websocket", "import_websocket_server", "init_cjs_shim", "SocketSubscriber", "#provider", "#filter", "#filterId", "#paused", "#emitPromise", "provider", "filter", "filterId", "dropWhilePaused", "assert", "message", "emitPromise", "SocketBlockSubscriber", "SocketPendingSubscriber", "SocketEventSubscriber", "#logFilter", "SocketProvider", "JsonRpcApiProvider", "#callbacks", "#subs", "#pending", "network", "_options", "options", "assertArgument", "sub", "UnmanagedSubscriber", "subscriber", "pending", "payload", "promise", "resolve", "reject", "result", "callback", "makeError", "WebSocketProvider", "SocketProvider", "#connect", "#websocket", "url", "network", "options", "WebSocket", "error", "message", "defaultProjectId", "getHost", "name", "assertArgument", "InfuraWebSocketProvider", "WebSocketProvider", "network", "projectId", "provider", "InfuraProvider", "req", "assert", "url", "defineProperties", "_InfuraProvider", "JsonRpcProvider", "_network", "projectSecret", "Network", "request", "chainId", "FetchRequest", "response", "attempt", "showThrottleMessage", "init_cjs_shim", "defaultToken", "getHost", "name", "assertArgument", "QuickNodeProvider", "_QuickNodeProvider", "JsonRpcProvider", "_network", "token", "network", "Network", "request", "defineProperties", "chainId", "FetchRequest", "response", "attempt", "showThrottleMessage", "init_cjs_shim", "BN_1", "BN_2", "shuffle", "array", "i", "j", "tmp", "stall", "duration", "resolve", "getTime", "stringify", "value", "key", "defaultConfig", "defaultState", "waitForSync", "config", "blockNumber", "error", "_normalize", "keys", "k", "normalizeResult", "method", "tag", "isError", "result", "checkQuorum", "quorum", "results", "tally", "weight", "t", "best", "r", "getMedian", "resultWeight", "errorMap", "bestError", "values", "e", "b", "mid", "getAnyResult", "getFuzzyMode", "getNumber", "add", "bestWeight", "bestResult", "FallbackProvider", "AbstractProvider", "#configs", "#height", "#initialSyncPromise", "providers", "network", "options", "p", "accum", "assertArgument", "a", "c", "Network", "getBigInt", "provider", "req", "block", "#getNextConfig", "running", "configs", "allConfigs", "#addRunner", "runner", "now", "dt", "#initialSync", "initialSync", "promises", "chainId", "assert", "#checkQuorum", "mode", "#waitForQuorum", "interesting", "newRunners", "broadcasts", "index", "done", "waiting", "inflightQuorum", "isWebSocketLike", "value", "Testnets", "getDefaultProvider", "network", "options", "allowService", "name", "JsonRpcProvider", "WebSocketProvider", "staticNetwork", "Network", "providers", "AlchemyProvider", "AnkrProvider", "ChainstackProvider", "CloudflareProvider", "EtherscanProvider", "projectId", "projectSecret", "InfuraProvider", "token", "QuickNodeProvider", "assert", "quorum", "FallbackProvider", "init_cjs_shim", "NonceManager", "_NonceManager", "AbstractSigner", "#noncePromise", "#delta", "signer", "defineProperties", "provider", "blockTag", "delta", "tx", "noncePromise", "message", "domain", "types", "value", "init_cjs_shim", "BrowserProvider", "_BrowserProvider", "JsonRpcApiPollingProvider", "#request", "#providerInfo", "ethereum", "network", "_options", "options", "assertArgument", "method", "params", "payload", "result", "e", "error", "address", "accounts", "a", "context", "anyProvider", "timeout", "resolve", "reject", "found", "addProvider", "event", "finalize", "timer", "filtered", "i", "match", "f", "provider", "info", "makeError", "init_cjs_shim", "getUrl", "name", "assertArgument", "BlockscoutProvider", "_BlockscoutProvider", "JsonRpcProvider", "_network", "apiKey", "network", "Network", "request", "defineProperties", "chainId", "req", "resp", "payload", "_error", "error", "isHexString", "panicCodes", "panicCode", "FetchRequest", "init_cjs_shim", "defaultApplicationId", "getHost", "name", "assertArgument", "PocketProvider", "_PocketProvider", "JsonRpcProvider", "_network", "applicationId", "applicationSecret", "network", "Network", "options", "request", "defineProperties", "chainId", "FetchRequest", "response", "attempt", "showThrottleMessage", "init_cjs_shim", "connect", "splitBuffer", "data", "messages", "lastStart", "nl", "IpcSocketProvider", "SocketProvider", "#socket", "path", "network", "options", "connect", "error", "response", "remaining", "message", "init_cjs_shim", "init_cjs_shim", "BaseWallet", "_BaseWallet", "AbstractSigner", "#signingKey", "privateKey", "provider", "assertArgument", "address", "computeAddress", "defineProperties", "tx", "copyRequest", "to", "from", "resolveProperties", "resolveAddress", "getAddress", "btx", "Transaction", "message", "hashMessage", "auth", "signature", "hashAuthorization", "getBigInt", "domain", "types", "value", "populated", "TypedDataEncoder", "name", "assert", "init_cjs_shim", "init_cjs_shim", "init_cjs_shim", "init_cjs_shim", "subsChrs", "Word", "unfold", "words", "sep", "initial", "accum", "word", "decode", "data", "subs", "i", "clumps", "leftover", "all", "item", "semi", "decodeOwl", "assertArgument", "init_cjs_shim", "Wordlist", "locale", "defineProperties", "phrase", "words", "WordlistOwl", "Wordlist", "#data", "#checksum", "locale", "data", "checksum", "#words", "decodeOwl", "#loadWords", "words", "id", "index", "assertArgument", "word", "words", "checksum", "wordlist", "LangEn", "_LangEn", "WordlistOwl", "init_cjs_shim", "getUpperMask", "bits", "getLowerMask", "mnemonicToEntropy", "mnemonic", "wordlist", "assertNormalize", "LangEn", "words", "assertArgument", "entropy", "offset", "i", "index", "bit", "entropyBits", "checksumBits", "checksumMask", "checksum", "getBytes", "sha256", "hexlify", "entropyToMnemonic", "indices", "remainingBits", "_guard", "Mnemonic", "_Mnemonic", "guard", "phrase", "password", "assertPrivate", "defineProperties", "salt", "toUtf8Bytes", "pbkdf2", "_entropy", "init_cjs_shim", "init_cjs_shim", "init_cjs_shim", "numberOfRounds", "rcon", "S", "Si", "T1", "T2", "T3", "T4", "T5", "T6", "T7", "T8", "U1", "U2", "U3", "U4", "convertToInt32", "bytes", "result", "i", "AES", "_AES", "__classPrivateFieldGet", "_AES_key", "key", "_AES_Kd", "_AES_Ke", "__classPrivateFieldSet", "rounds", "roundKeyCount", "KC", "tk", "index", "rconpointer", "t", "tt", "r", "c", "plaintext", "a", "ciphertext", "init_cjs_shim", "ModeOfOperation", "name", "key", "cls", "AES", "init_cjs_shim", "CBC", "_CBC", "ModeOfOperation", "key", "iv", "_CBC_iv", "_CBC_lastBlock", "__classPrivateFieldSet", "__classPrivateFieldGet", "plaintext", "ciphertext", "i", "j", "block", "init_cjs_shim", "data", "segmentSize", "__classPrivateFieldGet", "_CFB_shiftRegister", "init_cjs_shim", "CTR", "_CTR", "ModeOfOperation", "key", "initialValue", "_CTR_remaining", "_CTR_remainingIndex", "_CTR_counter", "__classPrivateFieldSet", "__classPrivateFieldGet", "value", "index", "i", "plaintext", "crypttext", "_b", "_a", "ciphertext", "init_cjs_shim", "init_cjs_shim", "init_cjs_shim", "pkcs7Strip", "data", "padder", "length", "i", "init_cjs_shim", "looseArrayify", "hexString", "getBytesCopy", "zpad", "value", "length", "getPassword", "password", "toUtf8Bytes", "spelunk", "object", "_path", "match", "assertArgument", "path", "type", "reqd", "cur", "comp", "found", "key", "defaultPath", "isKeystoreJson", "json", "data", "decrypt", "key", "ciphertext", "spelunk", "iv", "aesCtr", "CTR", "hexlify", "assert", "getAccount", "_key", "getBytes", "computedMAC", "keccak256", "concat", "assertArgument", "privateKey", "address", "computeAddress", "check", "getAddress", "account", "mnemonicKey", "mnemonicCiphertext", "mnemonicIv", "mnemonicAesCtr", "getDecryptKdfParams", "kdf", "salt", "N", "r", "p", "dkLen", "prf", "algorithm", "count", "decryptKeystoreJsonSync", "_password", "password", "getPassword", "params", "pbkdf2", "scryptSync", "stall", "duration", "resolve", "decryptKeystoreJson", "progress", "scrypt", "getEncryptKdfParams", "options", "randomBytes", "_encryptKeystore", "uuidRandom", "derivedKey", "macPrefix", "mac", "uuidV4", "client", "version", "path", "locale", "entropy", "now", "gethFilename", "zpad", "encryptKeystoreJsonSync", "passwordBytes", "encryptKeystoreJson", "defaultPath", "MasterSecret", "HardenedBit", "N", "Nibbles", "zpad", "value", "length", "result", "encodeBase58Check", "_value", "getBytes", "check", "dataSlice", "sha256", "bytes", "concat", "encodeBase58", "_guard", "ser_I", "index", "chainCode", "publicKey", "privateKey", "data", "assert", "I", "computeHmac", "derivePath", "node", "path", "components", "assertArgument", "i", "component", "HDNodeWallet", "_HDNodeWallet", "BaseWallet", "guard", "signingKey", "parentFingerprint", "depth", "mnemonic", "provider", "assertPrivate", "defineProperties", "fingerprint", "ripemd160", "#account", "account", "m", "password", "progressCallback", "encryptKeystoreJson", "encryptKeystoreJsonSync", "HDNodeVoidWallet", "_index", "getNumber", "IR", "IL", "ki", "SigningKey", "toBeHex", "toBigInt", "hexlify", "#fromSeed", "_seed", "isBytesLike", "seed", "extendedKey", "toBeArray", "decodeBase58", "key", "computeAddress", "wordlist", "LangEn", "Mnemonic", "randomBytes", "phrase", "_HDNodeVoidWallet", "VoidSigner", "address", "Ki", "getAccountPath", "getIndexedAccountPath", "init_cjs_shim", "isCrowdsaleJson", "json", "decryptCrowdsaleJson", "_password", "data", "password", "getPassword", "address", "getAddress", "spelunk", "encseed", "looseArrayify", "assertArgument", "key", "getBytes", "pbkdf2", "iv", "encryptedSeed", "aesCbc", "CBC", "seed", "pkcs7Strip", "seedHex", "i", "id", "init_cjs_shim", "stall", "duration", "resolve", "Wallet", "_Wallet", "BaseWallet", "key", "provider", "signingKey", "SigningKey", "password", "progressCallback", "account", "encryptKeystoreJson", "encryptKeystoreJsonSync", "#fromAccount", "assertArgument", "mnemonic", "Mnemonic", "wallet", "HDNodeWallet", "json", "progress", "isKeystoreJson", "decryptKeystoreJson", "isCrowdsaleJson", "decryptCrowdsaleJson", "decryptKeystoreJsonSync", "phrase", "init_cjs_shim", "init_cjs_shim", "init_cjs_shim", "init_cjs_shim", "Base64", "decodeBits", "width", "data", "maxValue", "result", "accum", "bits", "flood", "i", "value", "decodeOwlA", "data", "accents", "words", "decodeOwl", "accent", "match", "assertArgument", "posOffset", "positions", "decodeBits", "charCode", "regex", "all", "letter", "WordlistOwlA", "WordlistOwl", "#accent", "locale", "data", "accent", "checksum", "decodeOwlA", "init_cjs_shim", "init_cjs_shim", "words", "checksum", "wordlist", "LangCz", "_LangCz", "WordlistOwl", "init_cjs_shim", "words", "accents", "checksum", "wordlist", "LangEs", "_LangEs", "WordlistOwlA", "init_cjs_shim", "words", "accents", "checksum", "wordlist", "LangFr", "_LangFr", "WordlistOwlA", "init_cjs_shim", "data", "mapping", "_wordlist", "hex", "word", "hexlify", "toUtf8Bytes", "KiYoKu", "KyoKu", "toString", "toUtf8String", "loadWords", "wordlist", "transform", "normalize", "result", "i", "kana", "target", "sortJapanese", "a", "b", "length", "d", "offset", "k", "tmp", "id", "LangJa", "_LangJa", "Wordlist", "index", "words", "assertArgument", "phrase", "init_cjs_shim", "data", "codes", "getHangul", "code", "toUtf8String", "_wordlist", "loadWords", "wordlist", "length", "i", "word", "j", "id", "LangKo", "_LangKo", "Wordlist", "index", "words", "assertArgument", "init_cjs_shim", "words", "checksum", "wordlist", "LangIt", "_LangIt", "WordlistOwl", "init_cjs_shim", "words", "checksum", "wordlist", "LangPt", "_LangPt", "WordlistOwl", "init_cjs_shim", "data", "deltaData", "_wordlist", "Checks", "codes", "style", "loadWords", "locale", "wordlist", "deltaOffset", "i", "s", "bytes", "common", "toUtf8String", "id", "wordlists", "LangZh", "_LangZh", "Wordlist", "dialect", "index", "words", "assertArgument", "word", "phrase", "wordlists", "LangCz", "LangEn", "LangEs", "LangFr", "LangIt", "LangPt", "LangJa", "LangKo", "LangZh", "crypto", "kms", "secretsManager", "cloudWatch", "corsHeaders", "CONTRACT_ABI", "configCache", "walletCache", "AWSBlockchainService", "secretName", "response", "config", "error", "kmsKeyId", "publicKeyResponse", "publicKeyBuffer", "publicKey", "publicKeyBytes", "address", "ethers_exports", "transaction", "serializedTx", "txHash", "signResponse", "signature", "kmsSignature", "offset", "rLength", "r", "sLength", "s", "rHex", "sHex", "resumeData", "dataString", "metricName", "value", "unit", "resumeHash", "metadata", "startTime", "wallet", "provider", "balance", "balanceInMatic", "contract", "formattedHash", "verified", "timestamp", "feeData", "signedTx", "txResponse", "receipt", "duration", "verifier", "block", "transactionCount", "blockchainService", "verifyResumeHandler", "event", "result", "checkVerificationHandler", "generateHashHandler", "hash", "walletInfoHandler", "healthHandler", "handler", "path", "method"]
}
